module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // Contents of this plugin will be reset by Kite on start.
// Changes you make are not guaranteed to persist.

let child_process, CompositeDisposable, AccountManager, Logger, completions, metrics, KiteApp, KiteStatusPanel, NotificationsCenter, RollbarReporter, OverlayManager, KiteEditors, DataLoader, KSG, KSGShortcut, DisposableEvent, Disposable, KiteAPI, VirtualCursor, NodeClient, KiteConnect, BracketMarker, Snippets, Status;
const Kite = module.exports = {
  getModule(name) {
    return this.modules && this.modules[name];
  },

  hasModule(name) {
    return this.modules && !!this.modules[name];
  },

  registerModule(name, mod) {
    if (!name) {
      throw new Error('module name is mandatory');
    }

    if (this.modules && name in this.modules) {
      throw new Error(`a module with name '${name}' has already been registered`);
    }

    if (typeof mod != 'object' || !mod.init || !mod.dispose) {
      throw new Error('module must be an object with init and dispose method');
    }

    this.modules = this.modules || {};
    this.modules[name] = mod;
    this.requestModuleInit(mod);
  },

  disposeModules() {
    this.modules && Object.values(this.modules).forEach(mod => mod.dispose());
    delete this.modules;
  },

  requestModuleInit(mod) {
    this.modulesToActivate = this.modulesToActivate || [];
    this.modulesToActivate.push(mod);

    if (this.activationRequested) {
      return;
    }

    this.activationRequested = true;
    requestAnimationFrame(() => {
      this.modulesToActivate.forEach(mod => mod.init(this));
      delete this.modulesToActivate;
      delete this.activationRequested;
    });
  },

  activate() {
    // Lazy load all the things, at least all the things we need during activation
    // In terms of performance it means that all these requires won't be measured
    // in the package loading time but in the activation time.
    if (!AccountManager) {
      __webpack_require__(1);

      ({
        CompositeDisposable,
        Disposable
      } = __webpack_require__(2));
      ({
        AccountManager,
        Logger
      } = __webpack_require__(7));
      KiteApp = __webpack_require__(137);
      KiteAPI = __webpack_require__(138);
      KiteConnect = __webpack_require__(165);
      NodeClient = __webpack_require__(160);
      NotificationsCenter = __webpack_require__(172);
      RollbarReporter = __webpack_require__(178);
      metrics = __webpack_require__(180);
      DataLoader = __webpack_require__(183);
      KiteEditors = __webpack_require__(191);
      Status = __webpack_require__(201);
      KSG = __webpack_require__(203);
      KSGShortcut = __webpack_require__(222);
      BracketMarker = __webpack_require__(224);
      Snippets = __webpack_require__(227);
    }

    metrics.featureRequested('starting'); // We store all the subscriptions into a composite disposable to release
    // them on deactivation

    this.subscriptions = new CompositeDisposable();

    if (!atom.inSpecMode()) {
      this.subscriptions.add(atom.config.observe('kite.developerMode', value => {
        if (value && KiteConnect.client instanceof NodeClient) {
          KiteConnect.toggleRequestDebug();
        } else if (!value && !(KiteConnect.client instanceof NodeClient)) {
          KiteConnect.toggleRequestDebug();
        }
      }));
    }

    this.registerModule('editors', new KiteEditors());
    this.registerModule('status', new Status());
    this.registerModule('ksg', new KSG());
    this.registerModule('ksg-shortcut', new KSGShortcut());
    this.registerModule('bracket-marker', new BracketMarker()); // run "apm upgrade kite"

    this.selfUpdate();
    this.app = new KiteApp(this);
    this.notifications = new NotificationsCenter(this.app);
    this.reporter = new RollbarReporter(); // All these objects have a dispose method so we can just
    // add them to the subscription.

    this.subscriptions.add(this.app);
    this.subscriptions.add(this.notifications);
    this.subscriptions.add(this.reporter);
    this.getStatusPanel().setApp(this.app);

    const clickListener = () => {
      metrics.featureRequested('status_panel');
      this.getStatusPanel().show(this.getStatusItem()).then(() => {
        metrics.featureFulfilled('status_panel');
      });
    };

    const item = this.getStatusItem();
    item.addEventListener('click', clickListener);
    this.subscriptions.add(new Disposable(() => {
      item.removeEventListener('click', clickListener);
    })); // We listen to any opened URI to catch when the user open the settings
    // panel and pick the kite settings

    this.subscriptions.add(atom.workspace.onDidOpen(e => {
      if (e.uri === 'atom://config' && !this.settingsViewSubscription) {
        if (!DisposableEvent) {
          ({
            DisposableEvent
          } = __webpack_require__(5));
        }

        const settingsView = e.item;
        this.settingsViewSubscription = new DisposableEvent(settingsView.element, 'mouseup', () => {
          setTimeout(() => {
            const kiteSettings = settingsView.panelsByName['kite'];

            if (kiteSettings && kiteSettings.element.style.display !== 'none') {
              metrics.featureRequested('settings');
              metrics.featureFulfilled('settings');
            }
          }, 100);
        });
        this.subscriptions.add(this.settingsViewSubscription);
      }
    })); // Whenever an action is accomplished through the kite app
    // we need to check again the state of the app

    this.subscriptions.add(this.app.onDidInstall(() => this.connect('onDidInstall')));
    this.subscriptions.add(this.app.onDidStart(() => this.connect('onDidStart'))); // CONFIG
    // Removing old configuration options

    const kiteCfg = atom.config.getAll('kite');
    const validKeys = ['showGoBetaNotification', 'showWelcomeNotificationOnStartup', 'enableCompletions', 'enableHoverUI', 'enableSnippets', 'maxVisibleSuggestionsAlongSignature', 'loggingLevel', 'pollingInterval', 'developerMode', 'startKiteAtStartup'];

    if (kiteCfg.length) {
      const kiteCfgKeys = Object.keys(kiteCfg[0].value);
      kiteCfgKeys.forEach(k => {
        if (validKeys.indexOf(k) === -1) {
          atom.config.unset(`kite.${k}`);
        }
      });
    }

    this.subscriptions.add(atom.config.observe('kite.loggingLevel', level => {
      Logger.LEVEL = Logger.LEVELS[level.toUpperCase()];
    }));
    this.subscriptions.add(atom.config.observe('core.useTreeSitterParsers', using => {
      if (using) {
        const notif = atom.notifications.addWarning('Kite is not configured properly', {
          description: 'You must turn off Atom\'s tree-sitter parser for Kite to show you information on how to call functions. <a href="https://help.kite.com/article/80-why-do-i-need-to-turn-off-tree-sitter">Learn more</a>\n\nRestart will occur after a few seconds.',
          dismissable: true,
          buttons: [{
            text: 'Turn off and restart',

            onDidClick() {
              atom.config.set('core.useTreeSitterParsers', false);
              notif.dismiss();
              setTimeout(() => {
                atom.reload();
              }, 1500);
            }

          }]
        });
      }
    })); // COMMANDS

    this.subscriptions.add(atom.commands.add('atom-text-editor[data-grammar="source python"]', {
      // Allow esc key to close expand view
      // TODO: hook up to close KSG if open
      'core:cancel': () => {
        if (!OverlayManager) {
          OverlayManager = __webpack_require__(198);
        }

        OverlayManager.dismiss();
        this.closeKSG();
      },
      'kite:docs-at-cursor': () => {
        this.expandAtCursor();
      }
    }));
    this.subscriptions.add(atom.commands.add('atom-overlay kite-expand', {
      'core:cancel'() {
        this.remove();
      }

    }));
    this.subscriptions.add(atom.commands.add('atom-workspace', {
      'kite:search-stack-overflow': () => this.toggleKSG(),
      'kite:tutorial': () => this.openKiteTutorial(true),
      'kite:engine-settings': () => this.openSettings(),
      'kite:open-copilot': () => this.openCopilot(),
      'kite:package-settings': () => atom.applicationDelegate.openExternal('atom://settings-view/show-package?package=kite'),
      'kite:help': () => atom.applicationDelegate.openExternal('https://help.kite.com/category/43-atom-integration'),
      'kite:status': () => {
        metrics.featureRequested('status_panel');
        this.getStatusPanel().show(this.getStatusItem()).then(() => {
          metrics.featureFulfilled('status_panel');
        });
      }
    })); // START

    this.patchCompletions(); // onboarding handling
    //open kite onboarding if flag indicates so

    if (atom.config.get('kite.showWelcomeNotificationOnStartup')) {
      this.openKiteTutorial();
    } // Store the last expand at cursor highlight. This is necessary
    // for navigable panel to turn it red when no data comes back.


    this.lastExpandAtCursorHighlight = null; // We try to connect at startup

    this.app.connect('activation').then(state => {
      if (state !== KiteApp.STATES.UNINSTALLED) {
        this.app.saveUserID();

        if (state === KiteApp.STATES.NOT_RUNNING && atom.config.get('kite.startKiteAtStartup')) {
          this.app.start().then(() => this.app.connect('activation'));
        }
      }
    });
    metrics.featureFulfilled('starting');
  },

  connect(src) {
    return this.app.connect(src);
  },

  getEditorsForPath(path) {
    return atom.workspace.getPaneItems().filter(i => i && i.getURI && i.getURI() === path);
  },

  deactivate() {
    this.disposeModules(); // Release all subscriptions on deactivation

    metrics.featureRequested('stopping');
    this.subscriptions.dispose();
    metrics.featureFulfilled('stopping');
  },

  selfUpdate() {
    if (!child_process) {
      child_process = __webpack_require__(16);
    }

    const apm = atom.packages.getApmPath();
    child_process.spawn(apm, ['update', 'kite']);
  },

  consumeStatusBar(statusbar) {
    statusbar.addRightTile({
      item: this.getStatusItem()
    });
    statusbar.addRightTile({
      item: this.getKSGShortcut()
    });
  },

  activateAndShowItem(item) {
    if (item) {
      const dock = atom.workspace.paneContainerForURI(item.getURI());
      const pane = atom.workspace.paneForURI(item.getURI());

      if (pane && dock) {
        dock.show();
        pane.setActiveItem(item);
      }
    }
  },

  expandAtCursor(editor) {
    editor = editor || atom.workspace.getActiveTextEditor();

    if (!editor) {
      return;
    }

    const position = editor.getLastCursor().getBufferPosition();
    this.highlightWordAtPosition(editor, position);

    if (!editor.getPath()) {
      return;
    }

    DataLoader.getHoverDataAtPosition(editor, position).then(data => {
      const [symbol] = data.symbol;

      if (symbol && symbol.id) {
        atom.applicationDelegate.openExternal(`kite://docs/${symbol.id}`);
      }
    });
  },

  highlightWordAtPosition(editor, position, cls = '') {
    if (!VirtualCursor) {
      VirtualCursor = __webpack_require__(196);
    }

    const cursor = new VirtualCursor(editor, position);
    const range = cursor.getCurrentWordBufferRange({
      includeNonWordCharacters: false
    });
    const marker = editor.markBufferRange(range, {
      invalidate: 'touch'
    });
    const decoration = editor.decorateMarker(marker, {
      type: 'highlight',
      "class": `expand-at-cursor-highlight ${cls}`,
      item: this
    }); // Timed for all transition to be finished by then

    setTimeout(() => decoration.destroy(), 800);
  },

  getStatusItem() {
    return this.getModule('status').getElement();
  },

  getStatusPanel() {
    if (this.statusPanel) {
      return this.statusPanel;
    }

    if (!KiteStatusPanel) {
      KiteStatusPanel = __webpack_require__(233);
    }

    this.statusPanel = new KiteStatusPanel();
    return this.statusPanel;
  },

  getKSGShortcut() {
    return this.getModule('ksg-shortcut').getElement();
  },

  completions() {
    if (!completions) {
      completions = __webpack_require__(234);
    }

    return completions;
  },

  toggleKSG() {
    const KSGModule = this.getModule('ksg');

    if (KSGModule) {
      const editor = atom.workspace.getActiveTextEditor();

      if (!editor || editor.getGrammar().name !== 'Python') {
        this.notifications.warnKSGNotSupported();
        return;
      }

      if (KSGModule.visible) {
        KSGModule.hide();
      } else {
        // scroll to appropriate screen position
        const cursor = editor.getCursorScreenPosition();
        const [begin, end] = editor.element.getVisibleRowRange();
        cursor.row += end - (begin + 7); // 7 rows seemed to be a good buffer UI-wise in tests

        editor.scrollToScreenPosition(cursor, {
          clip: false
        });
        metrics.record('ksg', 'opened');
        KSGModule.show(editor);
      }
    }
  },

  closeKSG() {
    const KSGModule = this.getModule('ksg');
    KSGModule && KSGModule.hide();
  },

  openPermissions() {
    const url = 'kite://settings/permissions';
    atom.applicationDelegate.openExternal(url);
  },

  openSettings() {
    const url = 'kite://settings';
    atom.applicationDelegate.openExternal(url);
  },

  openKiteTutorial(fromCommand) {
    if (fromCommand) {
      KiteAPI.getOnboardingFilePath('atom').then(path => {
        atom.workspace.open(path);
      })["catch"](err => {
        this.notifications.warnOnboardingFileFailure();
      });
    } else {
      KiteAPI.isKiteLocal().then(isLocal => {
        if (isLocal) {
          // then attempt live onboarding
          KiteAPI.getKiteSetting('has_done_onboarding').then(hasDone => {
            if (!hasDone) {
              KiteAPI.getOnboardingFilePath('atom').then(path => {
                atom.workspace.open(path);
                KiteAPI.setKiteSetting('has_done_onboarding', true);
              })["catch"](err => {
                this.notifications.onboardingNotifications();
              });
            } else {
              // do welcome notification without onboarding reference
              this.notifications.onboardingNotifications();
            }
          });
        } else {
          // do welcome notification without onboarding reference
          this.notifications.onboardingNotifications();
        }
      });
    }
  },

  openCopilot() {
    const url = 'kite://home';
    atom.applicationDelegate.openExternal(url);
  },

  isSaveAll() {
    return this.saveAllTriggered;
  },

  patchCompletions() {
    atom.packages.activatePackage('autocomplete-python').then(acp => {
      const safeProvider = acp.mainModule.provider.getSuggestions;

      acp.mainModule.provider.getSuggestions = options => {
        const {
          prefix
        } = options;
        const res = safeProvider.call(acp.mainModule.provider, options);
        return res && res.then ? res.then(res => /\($/.test(prefix) ? [] : res) : /\($/.test(prefix) ? [] : res;
      };
    })["catch"](() => {});
    atom.packages.activatePackage('autocomplete-plus').then(autocompletePlus => {
      const acp = autocompletePlus.mainModule;
      const manager = acp.autocompleteManager || acp.getAutocompleteManager();
      const list = manager.suggestionList;
      const listElement = list.suggestionListElement ? list.suggestionListElement : atom.views.getView(list); // Override Atom's snippets package to trigger completions request
      // on tab stop, using autocomplete-plus's requestNewSuggestions function.

      if (atom.config.get('kite.enableSnippets')) {
        atom.packages.activatePackage('snippets').then(snippetsPkg => {
          const snippets = snippetsPkg.mainModule;
          const safeGoToNextTabStop = snippets && snippets.goToNextTabStop;
          const safeGoToPreviousTabStop = snippets && snippets.goToPreviousTabStop;
          const safeInsertSnippet = manager && manager.snippetsManager && manager.snippetsManager.insertSnippet;
          this.subscriptions.add(new Disposable(() => {
            snippets.goToNextTabStop = safeGoToNextTabStop;
            snippets.goToPreviousTabStop = safeGoToPreviousTabStop;
            manager.snippetsManager.insertSnippet = safeInsertSnippet;
          }));
          this.subscriptions.add(atom.commands.add('atom-text-editor[data-grammar="source python"]', {
            'autocomplete-plus:confirm': event => {
              // In the event that the sig panel is active,
              // but the suggestion list is not, we want to have tab and enter
              // defer to the next layer of events, i.e. next tab stop
              // and line break respectively. Without this, tab will just close
              // the sig panel.
              if (!list.items) {
                event.abortKeyBinding();
              }
            }
          })); // Almost the same as in native atom/snippets insert (since autocomplete-plus uses this directly as insertSnippet) 
          // but uses our modified SnippetExpansion to avoid indenting multiline completions.
          // snippets exposed by atom.packages.activatePackage does not expose a constructor to patch.

          manager.snippetsManager.insertSnippet = (snippet, editor, cursor, shouldNotIndent) => {
            if (editor == null) {
              editor = atom.workspace.getActiveTextEditor();
            }

            if (cursor == null) {
              cursor = editor.getLastCursor();
            }

            if (typeof snippet === 'string') {
              const bodyTree = snippets.getBodyParser().parse(snippet);
              snippet = new Snippets.Snippet({
                name: '__anonymous',
                prefix: '',
                bodyTree,
                bodyText: snippet
              });
            }

            return new Snippets.SnippetExpansion(snippet, editor, cursor, snippets, shouldNotIndent);
          }; // Fetch suggestion after the next tab stop is visited.


          snippets.goToNextTabStop = editor => {
            let nextTabStopVisited = false;
            const expansions = snippets.getExpansions(editor); // Nested snippets are added to the end of the expansions array, so process the last item

            const expansion = expansions[expansions.length - 1];

            if (expansion && expansion.goToNextTabStop()) {
              nextTabStopVisited = true;
            }

            manager.requestNewSuggestions();
            return nextTabStopVisited;
          }; // Fetch suggestion after visting the previous tab stop.


          snippets.goToPreviousTabStop = editor => {
            let previousTabStopVisited = false;
            const expansions = snippets.getExpansions(editor); // Nested snippets are added to the end of the expansions array, so process the last item

            const expansion = expansions[expansions.length - 1];

            if (expansion && expansion.goToPreviousTabStop()) {
              previousTabStopVisited = true;
            }

            manager.requestNewSuggestions();
            return previousTabStopVisited;
          };
        });
      }

      const safeUpdate = listElement && listElement.updateDescription;
      const safeDisplay = manager && manager.displaySuggestions;
      const safeShowOrHide = manager && manager.showOrHideSuggestionListForBufferChanges;
      const safeConfirm = manager && manager.confirm;
      const safeReplaceTextWithMatch = manager && manager.replaceTextWithMatch;
      const safeCursorMoved = manager && manager.cursorMoved;
      const safeHide = manager && manager.hideSuggestionList;

      if (safeDisplay) {
        const element = listElement.element ? listElement.element : listElement;
        let confirmed;
        let wasSnippetConfirmed;
        this.subscriptions.add(new Disposable(() => {
          listElement.updateDescription = safeUpdate;
          manager.displaySuggestions = safeDisplay;
          manager.showOrHideSuggestionListForBufferChanges = safeShowOrHide;
          manager.confirm = safeConfirm;
          manager.replaceTextWithMatch = safeReplaceTextWithMatch;
          manager.cursorMoved = safeCursorMoved;
          manager.hideSuggestionList = safeHide;
        }));

        manager.confirm = suggestion => {
          confirmed = true;
          wasSnippetConfirmed = suggestion.className === 'kite-completion' && typeof suggestion.snippet !== 'undefined';
          requestAnimationFrame(() => confirmed = false);

          if (atom.config.get('kite.enableSnippets')) {
            // Patch ACP's confirm so that it doesn't clear selections upon confirmation.
            // Fixes undo not re-highlighting placeholders in a snippet
            // when a suggestion is inserted directly into the buffer.
            // Based on https://github.com/atom/autocomplete-plus/blob/master/lib/autocomplete-manager.js#L538
            if (manager.editor === null || suggestion === null || !!manager.disposed) {
              return;
            }

            const apiVersion = manager.providerManager.apiVersionForProvider(suggestion.provider);
            const triggerPosition = manager.editor.getLastCursor().getBufferPosition();
            manager.hideSuggestionList();
            manager.replaceTextWithMatch(suggestion);

            if (apiVersion > 1) {
              if (suggestion.provider && suggestion.provider.onDidInsertSuggestion) {
                suggestion.provider.onDidInsertSuggestion({
                  editor: manager.editor,
                  suggestion,
                  triggerPosition
                });
              }
            } else {
              if (suggestion.onDidConfirm) {
                suggestion.onDidConfirm();
              }
            }
          } else {
            safeConfirm.call(manager, suggestion);
          }
        };

        const bracketMarker = this.getModule('bracket-marker');

        manager.replaceTextWithMatch = suggestion => {
          if (atom.config.get('kite.enableSnippets') && suggestion.className === 'kite-completion') {
            // Tweak behavior of ACP text replacement
            // Based on https://github.com/atom/autocomplete-plus/blob/master/lib/autocomplete-manager.js#L613
            const editor = manager.editor;

            if (!editor) {
              return;
            }

            const cursor = editor.getLastCursor();
            const replacementRange = suggestion.replacementRange;

            if (!cursor || !replacementRange) {
              return;
            }

            editor.transact(() => {
              // Move cursor to end position
              cursor.setBufferPosition(replacementRange.end); // Select up to and including the start position

              cursor.selection.selectToBufferPosition(replacementRange.begin);
              const cursorPosBeforeInsert = editor.getCursorBufferPosition(); // Insert suggestion

              if (suggestion.snippet && manager.snippetsManager) {
                const shouldNotIndent = suggestion && suggestion.className && suggestion.className == 'kite-completion';
                manager.snippetsManager.insertSnippet(suggestion.snippet, editor, cursor, shouldNotIndent);
                manager.requestNewSuggestions();
              } else {
                cursor.selection.insertText(suggestion.text ? suggestion.text : suggestion.snippet, {
                  autoIndentNewline: editor.shouldAutoIndent(),
                  autoDecreaseIndent: editor.shouldAutoIndent()
                });
              }

              bracketMarker.processTextForWriteThrough(suggestion.text, editor, cursorPosBeforeInsert);
            });
          } else {
            safeReplaceTextWithMatch.call(manager, suggestion);
          }
        };

        manager.hideSuggestionList = () => {
          const editor = atom.workspace.getActiveTextEditor();

          if (typeof editor !== 'undefined') {
            const position = editor.getCursorBufferPosition();

            if (completions.isSignaturePanelVisible() && (completions.isInsideFunctionCall(editor, position) || completions.isOnFunctionCallBrackets(editor, position))) {
              manager.suggestionList.changeItems(null);
              element.querySelector('.suggestion-description').style.display = 'none';
            } else {
              safeHide.call(manager);
            }
          }
        };

        manager.cursorMoved = event => {
          const editor = event.cursor.editor;
          const position = event.newBufferPosition;

          if (completions && (completions.isInsideFunctionCall(editor, position) || completions.isOnFunctionCallBrackets(editor, position)) && completions.isSignaturePanelVisible()) {
            completions.loadSignature({
              editor,
              position
            }).then(shown => {
              if (!shown) {
                safeHide.call();
              }
            }); // refresh sig
          } else {
            safeCursorMoved.call(manager, event);
          }
        };

        manager.showOrHideSuggestionListForBufferChanges = options => {
          if (confirmed) {
            // autocomplete-plus operates on the last change, so do we
            const change = options.changes[options.changes.length - 1]; // we know we have confirmed a suggestion for a 1 char entry with a
            // 1 char trigger, we cancel the new suggestion request and hide
            // the suggestions using the same routine than autocomplete-plus

            if (change.oldText.length === 1 && change.newText.length === 1 || // If a non-snippet is inserted, don't fetch suggestions post-insertion.
            // Fix case where a user wants to insert a value but then we fetch suggestions, returning the same value.
            atom.config.get('kite.enableSnippets') && !wasSnippetConfirmed) {
              manager.cancelNewSuggestionsRequest();
              manager.hideSuggestionList();
            } else {
              safeShowOrHide.call(manager, options);
            }
          } else {
            safeShowOrHide.call(manager, options);
          }
        }; // this line below is needed to update the manager's callback reference for onDidChangeText from the
        // original showOrHideSuggestionListForBufferChanges, since that was bound
        // see https://github.com/atom/autocomplete-plus/blob/master/lib/autocomplete-manager.js#L106


        manager.buffer && manager.buffer.onDidChangeText(manager.showOrHideSuggestionListForBufferChanges);

        manager.displaySuggestions = (suggestions, options) => {
          if (element.querySelector('kite-signature')) {
            const desc = element.querySelector('.suggestion-description');

            if (desc) {
              if (suggestions.length === 0) {
                desc.style.display = 'none';
              } else {
                desc.style.display = '';
              }
            } // Fix case where shouldDisplaySuggestion is ignored when suggestion hiding methods are invoked,
            // unless a snippet is confirmed. This is because cursorMoved is called after snippet confirmation
            // causing shouldDisplaySuggestions to be false when we want it to be true.


            if (atom.config.get('kite.enableSnippets') && !manager.shouldDisplaySuggestions && !wasSnippetConfirmed) {
              return;
            }

            if (parseFloat(autocompletePlus.metadata.version) >= 2.36) {
              manager.showSuggestionList(manager.getUniqueSuggestions(suggestions, s => s.text), options);
            } else {
              manager.showSuggestionList(manager.getUniqueSuggestions(suggestions), options);
            }
          } else {
            safeDisplay.call(manager, suggestions, options);
          }
        };
      }

      if (safeUpdate) {
        listElement.updateDescription = item => {
          safeUpdate.call(listElement, item);

          if (!item) {
            if (listElement.model && listElement.model.items) {
              item = listElement.model.items[listElement.selectedIndex];
            }
          }

          if (item && item.descriptionHTML) {
            listElement.descriptionContainer.classList.add('kite-completions');
            listElement.descriptionContent.innerHTML = item.descriptionHTML;

            if (typeof listElement.setDescriptionMoreLink === 'function') {
              listElement.setDescriptionMoreLink(item);
            }
          }
        };

        if (!listElement.ol) {
          listElement.renderList();
        }
      } else {
        listElement.descriptionContainer.classList.remove('kite-completions');
      }
    });
  }

};

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  CompositeDisposable,
  Emitter
} = __webpack_require__(2);

const LinkScheme = __webpack_require__(3);

let Kite;

const {
  stripLeadingSlash,
  parseRangeInPath,
  parsePositionInPath,
  parseDefinitionInPath
} = __webpack_require__(5);

class KiteLinks extends HTMLElement {
  static initClass() {
    customElements.define('kite-links', this);
    return this;
  }

  onDidClickMoreLink(listener) {
    return this.emitter.on('did-click-more-link', listener);
  }

  onDidClickActionLink(listener) {
    if (this.emitter.disposed) {
      return null;
    }

    return this.emitter.on('did-click-action-link', listener);
  }

  constructor() {
    super();
    this.emitter = new Emitter();
  }

  connectedCallback() {
    this.subscriptions = new CompositeDisposable();
    this.scheme = new LinkScheme('kite-atom-internal', this);
    this.subscriptions.add(this.scheme);
    this.subscriptions.add(this.emitter);
    this.subscriptions.add(this.scheme.onDidClickLink(({
      url,
      target
    }) => {
      if (!Kite) {
        Kite = __webpack_require__(0);
      }

      const editor = atom.workspace.getActiveTextEditor();
      const kiteEditor = Kite.getModule('editors').kiteEditorForEditor(editor);
      const emitAction = this.getAttribute('emit-action');

      switch (url.host) {
        case 'open-settings':
          emitAction && this.emitter.emit('did-click-action-link');
          atom.applicationDelegate.openExternal('atom://settings-view/show-package?package=kite');
          return;

        case 'open-copilot-settings':
          emitAction && this.emitter.emit('did-click-action-link');
          atom.applicationDelegate.openExternal('kite://settings');
          return;

        case 'open-copilot-permissions':
          emitAction && this.emitter.emit('did-click-action-link');
          atom.applicationDelegate.openExternal(`kite://settings/permissions${url.path || ''}`);
          return;

        case 'open-search-docs':
          emitAction && this.emitter.emit('did-click-action-link');
          const path = url.path ? url.path : '';
          atom.applicationDelegate.openExternal(`kite://docs${path}`);
          return;

        case 'open-kite-plugin-help':
          emitAction && this.emitter.emit('did-click-action-link');
          atom.applicationDelegate.openExternal('http://help.kite.com/category/43-atom-integration');
          return;
      }

      if (!editor || !kiteEditor) {
        return;
      }

      switch (url.host) {
        case 'goto':
          {
            const [filename, line, column] = parseDefinitionInPath(url.path);
            kiteEditor.openDefinition({
              filename,
              line,
              column
            })["catch"](err => {
              atom.notifications.addWarning('Can\'t find the definition', {
                dismissable: true
              });
            });
            break;
          }

        case 'goto-id':
          {
            const id = stripLeadingSlash(url.path);
            kiteEditor.openDefinitionForId(id)["catch"](() => {
              atom.notifications.addWarning(`Can't find a definition for id \`${id}\``, {
                dismissable: true
              });
            });
            break;
          }

        case 'goto-range':
          {
            const range = parseRangeInPath(url.path);
            kiteEditor.openDefinitionAtRange(range)["catch"](err => {
              atom.notifications.addWarning(`Can't find a definition at range \`${range}\``, {
                dismissable: true
              });
            });
            break;
          }

        case 'goto-position':
          {
            const position = parsePositionInPath(url.path);
            kiteEditor.openDefinitionAtPosition(position)["catch"](err => {
              atom.notifications.addWarning(`Can't find a definition at position \`${position}\``, {
                dismissable: true
              });
            });
            break;
          }

        case 'expand-position':
          {
            this.emitter.emit('did-click-more-link');
            const position = parsePositionInPath(url.path);
            kiteEditor.expandPosition(position);
            break;
          }

        case 'type':
        case 'expand':
          {
            this.emitter.emit('did-click-more-link');
            const id = stripLeadingSlash(url.path);
            atom.applicationDelegate.openExternal(`kite://docs/${encodeURI(id)}`);
            break;
          }
      }
    }));
  }

  disconnectedCallback() {
    this.subscriptions && this.subscriptions.dispose();
  }

}

module.exports = KiteLinks.initClass();

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("atom");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const url = __webpack_require__(4);

const {
  Emitter
} = __webpack_require__(2);

const {
  addDelegatedEventListener
} = __webpack_require__(5);

module.exports = class LinkScheme {
  constructor(scheme, container = document) {
    this.scheme = scheme;
    this.schemeRegExp = new RegExp(`^${this.scheme}://`);
    this.emitter = new Emitter();
    this.subscription = addDelegatedEventListener(container, 'click', 'a', e => {
      const {
        target
      } = e;
      const uri = target && target.getAttribute('href');

      if (uri && this.schemeRegExp.test(uri)) {
        e.stopPropagation();
        this.emitter.emit('did-click-link', {
          target,
          url: url.parse(uri)
        });
      }
    });
  }

  dispose() {
    this.subscription.dispose();
    this.emitter.dispose();
  }

  onDidClickLink(listener) {
    return this.emitter.on('did-click-link', listener);
  }

};

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("url");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const os = __webpack_require__(6);

const {
  Disposable
} = __webpack_require__(2);

const compact = a => a.filter(v => v && v !== '');

const uniq = a => a.reduce((m, v) => m.indexOf(v) === -1 ? m.concat(v) : m, []);

const flatten = a => a.reduce((m, o) => m.concat(Array.isArray(o) ? flatten(o) : o), []);

const head = a => a[0];

const last = a => a[a.length - 1];

const log = v => {
  console.log(v);
  return v;
};

const getDetails = (o, ...details) => o.detail || o.details && details.reduce((m, k) => {
  return m || o.details[k];
}, null);

const evalPath = (o, ...path) => path.reduce((m, k) => {
  if (k === '*' && m) {
    k = head(Object.keys(m));
  }

  return m && typeof m[k] !== 'undefined' ? m[k] : undefined;
}, o);

const detailLang = o => o && o.language_details ? head(Object.keys(o.language_details)).toLowerCase() : 'python';

const detailGet = (o, ...k) => evalPath(o, 'language_details', '*', ...k);

const detailExist = (o, ...k) => detailGet(o, ...k) != null;

const detailNotEmpty = (o, ...k) => {
  const v = detailGet(o, ...k);
  return v != null && v.length > 0;
};

const getFunctionDetails = o => {
  const type = head(Object.keys(o.details).filter(k => o.details[k]));

  if (type === 'function') {
    return o.details["function"];
  } else if (type === 'type') {
    return detailGet(o.details.type, 'constructor');
  }

  return null;
};

const merge = (a, b) => {
  const c = {};

  for (const k in a) {
    c[k] = a[k];
  }

  for (const k in b) {
    c[k] = b[k];
  }

  return c;
};

const truncate = (s, l) => s.length > l ? s.slice(0, l) + '…' : s;

const stripLeadingSlash = str => str.replace(/^\//, '');

const parseRangeInPath = path => stripLeadingSlash(path).split('/').map(s => s.split(':').map(Number));

const parsePositionInPath = path => stripLeadingSlash(path).split(':').map(Number);

const parseDefinitionInPath = path => (os.platform() === 'win32' ? stripLeadingSlash(path) : path).split(/:(?=\d)/).map(decodeURI).map(s => /^\d+$/.test(s) ? parseInt(s, 10) : s);

class DisposableEvent extends Disposable {
  constructor(target, event, listener) {
    const events = event.split(/\s+/g);

    if (typeof target.addEventListener === 'function') {
      super(() => events.forEach(e => target.removeEventListener(e, listener)));
      events.forEach(e => target.addEventListener(e, listener));
    } else if (typeof target.on === 'function') {
      super(() => events.forEach(e => target.off(e, listener)));
      events.forEach(e => target.on(e, listener));
    } else {
      throw new Error('The passed-in source must have either a addEventListener or on method');
    }
  }

}

function addDelegatedEventListener(object, event, selector, callback) {
  if (typeof selector === 'function') {
    callback = selector;
    selector = '*';
  }

  return new DisposableEvent(object, event, listener);

  function listener(e) {
    if (e.isPropagationStopped) {
      return;
    }

    let {
      target
    } = e;
    decorateEvent(e);
    nodeAndParents(target).forEach(node => {
      const matched = node.matches(selector);

      if (e.isImmediatePropagationStopped || !matched) {
        return;
      }

      e.matchedTarget = node;
      callback(e);
    });
  }

  function decorateEvent(e) {
    const overriddenStop = window.Event.prototype.stopPropagation;

    e.stopPropagation = function () {
      this.isPropagationStopped = true;
      overriddenStop.apply(this, arguments);
    };

    const overriddenStopImmediate = window.Event.prototype.stopImmediatePropagation;

    e.stopImmediatePropagation = function () {
      this.isImmediatePropagationStopped = true;
      overriddenStopImmediate.apply(this, arguments);
    };
  }
}

function eachParent(node, block) {
  let parent = node.parentNode;

  while (parent) {
    block(parent);

    if (parent.nodeName === 'HTML') {
      break;
    }

    parent = parent.parentNode;
  }
}

function parents(node, selector = '*') {
  const parentNodes = [];
  eachParent(node, parent => {
    if (parent.matches && parent.matches(selector)) {
      parentNodes.push(parent);
    }
  });
  return parentNodes;
}

function parent(node, selector = '*') {
  return head(parents(node, selector));
}

function nodeAndParents(node, selector = '*') {
  return [node].concat(parents(node, selector));
}

function noShadowDOM() {
  return parseFloat(atom.getVersion()) >= 1.13;
}

function editorRoot(element) {
  return noShadowDOM() ? element : element.shadowRoot || element;
}

function parseJSON(data, fallback) {
  try {
    return JSON.parse(data);
  } catch (e) {
    return fallback;
  }
} // get time in seconds since the date


function secondsSince(when) {
  var now = new Date();
  return (now.getTime() - when.getTime()) / 1000.0;
}

function promisifyRequest(request) {
  return request.then ? request : new Promise((resolve, reject) => {
    request.on('response', resp => resolve(resp));
    request.on('error', err => reject(err));
  });
}

function promisifyReadResponse(response) {
  return new Promise((resolve, reject) => {
    let data = '';
    response.on('data', chunk => data += chunk);
    response.on('end', () => resolve(data));
    response.on('error', err => reject(err));
  });
}

function delayPromise(factory, timeout) {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      factory().then(resolve, reject);
    }, timeout);
  });
}

function isWithinTextOfLine(editorElement, event) {
  const pixelPosition = pixelPositionForMouseEvent(editorElement, event);
  const defaultCharWidth = editorElement.getDefaultCharWidth ? editorElement.getDefaultCharWidth(pixelPosition) : editorElement.getModel().getDefaultCharWidth(pixelPosition);
  const screenPosition = editorElement.screenPositionForPixelPosition ? editorElement.screenPositionForPixelPosition(pixelPosition) : editorElement.getModel().screenPositionForPixelPosition(pixelPosition);
  const lineLengthForRow = editorElement.lineLengthForScreenRow ? editorElement.lineLengthForScreenRow(screenPosition.row) : editorElement.getModel().lineLengthForScreenRow(screenPosition.row);
  const maxLeftPixelPos = defaultCharWidth * (lineLengthForRow + 4); // extra chars for better ui

  return maxLeftPixelPos >= pixelPosition.left;
}

function bufferPositionForMouseEvent(editorElement, event) {
  return editorElement.getModel().bufferPositionForScreenPosition(screenPositionForMouseEvent(editorElement, event));
}

function screenPositionForMouseEvent(editorElement, event) {
  const pixelPosition = pixelPositionForMouseEvent(editorElement, event);

  if (pixelPosition == null) {
    return null;
  }

  return editorElement.screenPositionForPixelPosition != null ? editorElement.screenPositionForPixelPosition(pixelPosition) : editorElement.getModel().screenPositionForPixelPosition(pixelPosition);
}

function screenPositionForPixelPosition(editorElement, position) {
  if (position == null) {
    return null;
  }

  position = pixelPositionInEditorCoordinates(editorElement, position);
  return editorElement.screenPositionForPixelPosition != null ? editorElement.screenPositionForPixelPosition(position) : editorElement.getModel().screenPositionForPixelPosition(position);
}

function pixelPositionInEditorCoordinates(editorElement, position) {
  const {
    left: x,
    top: y
  } = position;
  const scrollTarget = editorElement.getScrollTop != null ? editorElement : editorElement.getModel();

  if (editorElement.querySelector('.lines') == null) {
    return null;
  }

  let {
    top,
    left
  } = editorElement.querySelector('.lines').getBoundingClientRect();
  top = y - top;
  left = x - left;

  if (parseFloat(atom.getVersion()) < 1.19) {
    top += scrollTarget.getScrollTop();
    left += scrollTarget.getScrollLeft();
  }

  return {
    top,
    left
  };
}

function pixelPositionForMouseEvent(editorElement, event) {
  const {
    clientX: left,
    clientY: top
  } = event;
  return pixelPositionInEditorCoordinates(editorElement, {
    top,
    left
  });
}

const stopPropagationAndDefault = f => function (e) {
  e.stopPropagation();
  e.preventDefault();
  return f && f.call(this, e);
};

const USER_ID_INDEX = 1;
const PATH_ID_INDEX = 4;

function idToDottedPath(id) {
  if (id.includes(';')) {
    const idarr = id.split(';');

    switch (idarr.length) {
      // value id
      case 5:
        //form: [language];[userID];[machineID];[colon delineated filepath];[dottedPath]
        //local example: python;7;3e51855fc9b0accd7bbe1eafebc9b967;:Users:dane:Desktop:stuff:whitelist:foo.py;Foo.foo
        //global example: python;;;;re
        //here we assume a value id... which could be global or local
        const valueIdPath = idarr[1] === '' ? idarr.slice(PATH_ID_INDEX).join('.') //global
        : idarr.slice(USER_ID_INDEX).join(';'); //local

        return valueIdPath;
      // symbol id

      case 6:
        //form: [language];[userID];[machineID];[colon delineated filepath];[dottedPath];[symbol]
        //local example: python;7;3e51855fc9b0accd7bbe1eafebc9b967;:Users:dane:Desktop:stuff:whitelist:foo.py;Foo;foo
        //global example: python;;;;;re
        //here we assume a symbol id
        const symbolIdPath = idarr[1] === '' ? idarr.slice(PATH_ID_INDEX).filter(part => part !== '').join('.') //global assumption => no userId
        : idarr.slice(USER_ID_INDEX).join(';'); //local assumption - recreate symbolId w/o language

        return symbolIdPath;

      default:
        return '';
    }
  }

  return '';
}

module.exports = {
  addDelegatedEventListener,
  bufferPositionForMouseEvent,
  compact,
  delayPromise,
  detailExist,
  detailGet,
  detailLang,
  detailNotEmpty,
  DisposableEvent,
  eachParent,
  editorRoot,
  flatten,
  getDetails,
  getFunctionDetails,
  head,
  idToDottedPath,
  isWithinTextOfLine,
  last,
  log,
  merge,
  nodeAndParents,
  noShadowDOM,
  parent,
  parents,
  parseJSON,
  pixelPositionForMouseEvent,
  promisifyReadResponse,
  promisifyRequest,
  screenPositionForMouseEvent,
  screenPositionForPixelPosition,
  secondsSince,
  stopPropagationAndDefault,
  truncate,
  stripLeadingSlash,
  parseRangeInPath,
  parseDefinitionInPath,
  parsePositionInPath,
  uniq
};

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = require("os");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

const os = __webpack_require__(6);

const AccountManager = __webpack_require__(8);
const Errors = __webpack_require__(57);
const Logger = __webpack_require__(58);
const Metrics = __webpack_require__(61);
const StateController = __webpack_require__(67);
const NodeClient = __webpack_require__(21);
const BrowserClient = __webpack_require__(43);
const utils = __webpack_require__(15);
const install = __webpack_require__(68);

module.exports = {
  AccountManager: AccountManager,
  Errors: Errors,
  Logger: Logger,
  Metrics: Metrics,
  StateController: StateController,
  NodeClient: NodeClient,
  BrowserClient: BrowserClient,
  utils: utils,
  install: install,
  statusBar: null,
};

if (typeof atom !== 'undefined') {
  const startFlow = (flow) => {
    const statusBar = this.statusBar;

    const Install = install.Install;
    const installer = new Install(flow(), {
      path: atom.project.getPaths()[0] || os.homedir(),
    }, {
      statusBar: statusBar,
      failureStep: 'termination',
      title: 'Kite Install',
    });

    const initialClient = AccountManager.client;
    AccountManager.client = new NodeClient('alpha.kite.com', -1, '', true);

    atom.workspace.getActivePane().addItem(installer);
    atom.workspace.getActivePane().activateItem(installer);

    installer.start()
    .then(result => console.log(result))
    .catch(err => console.error(err))
    .then(() => {
      AccountManager.client = initialClient;
    });
  };

  module.exports.AtomHelper = __webpack_require__(128);

  module.exports.consumeStatusBar = (statusBar) => {
    this.statusBar = statusBar;
  };

  module.exports.startInstallFlow = () => {
    startFlow(install.atom().defaultFlow);
  };

  module.exports.startInstallFlowACP = () => {
    startFlow(install.atom().autocompletePythonFlow);
  };

  module.exports.activate = function(state) {
    // This package isn't intended to be loaded as a production Atom package,
    // so we'll set the environment to debug here.
    Logger.LEVEL = Logger.LEVELS.DEBUG;
    Metrics.Tracker.source = 'kite_installer_debug';

    atom.commands.add('atom-workspace', {
      'install-kite': () => { this.startInstallFlow(); },
      'install-kite-ACP': () => { this.startInstallFlowACP(); },
    });
  };
}


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const KiteAPI = __webpack_require__(9);

module.exports = KiteAPI.Account;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const os = __webpack_require__(6);
const http = __webpack_require__(10);
const https = __webpack_require__(11);
const querystring = __webpack_require__(12);
const KiteConnector = __webpack_require__(13);
const KiteStateError = __webpack_require__(19);
const KiteRequestError = __webpack_require__(17);
const utils = __webpack_require__(15);
const NodeClient = __webpack_require__(21);
const BrowserClient = __webpack_require__(43);
const EventEmitter = __webpack_require__(14);
const EditorConfig = __webpack_require__(48);
const MemoryStore = __webpack_require__(49);
const {STATES} = KiteConnector;
const {MAX_FILE_SIZE} = __webpack_require__(50);
const {merge, checkArguments, checkArgumentKeys} = __webpack_require__(51);
const urls = __webpack_require__(52);

const KiteAPI = {
  STATES,

  emitter: new EventEmitter(),

  editorConfig: new EditorConfig(new MemoryStore()),

  toggleRequestDebug() {
    KiteConnector.toggleRequestDebug();
    this.Account.toggleRequestDebug();
  },

  requestJSON(...args) {
    return this.request(...args)
    .then(resp => utils.handleResponseData(resp))
    .then(data => JSON.parse(data));
  },

  isKiteLocal() {
    return this.request({
      path: '/clientapi/iskitelocal',
      method: 'GET',
    })
    .then(() => true)
    .catch(() => false);
  },

  setKiteSetting(key, value) {
    return this.requestJSON({
      path: `/clientapi/settings/${key}`,
      method: 'POST',
    }, JSON.stringify(value));
  },

  getKiteSetting(key) {
    return this.requestJSON({
      path: `/clientapi/settings/${key}`,
      method: 'GET',
    });
  },

  getSupportedLanguages() {
    return this.requestJSON({
      path: '/clientapi/languages',
    });
  },

  getOnboardingFilePath(editor, language = 'python') {
    checkArguments(this.getOnboardingFilePath, editor, language);
    const path = urls.onboardingFilePath(editor, language);
    return this.requestJSON({path});
  },

  canAuthenticateUser() {
    return KiteConnector.isKiteReachable()
    .then(() => utils.reversePromise(
      KiteConnector.isUserAuthenticated(),
      new KiteStateError('Kite is already authenticated', {
        state: STATES.AUTHENTICATED,
      })));
  },

  authenticateUser(email, password) {
    checkArguments(this.authenticateUser, email, password);
    return this.canAuthenticateUser()
    .then(() => this.request({
      path: '/clientapi/login',
      method: 'POST',
      headers: {
        'Content-Type': 'multipart/form-data',
      },
    }, {email, password}))
    .then(() => this.saveUserID());
  },

  authenticateSessionID(key) {
    // Unlike authenticateUser above, this method does not check to see if a
    // user is already authenticated before trying to authenticate. This
    // method is only used in specialized flows, so we're special-casing it
    // here.
    checkArguments(this.authenticateSessionID, key);
    return KiteConnector.isKiteReachable()
    .then(() => this.request({
      path: '/clientapi/authenticate',
      method: 'POST',
      headers: {
        'Content-Type': 'multipart/form-data',
      },
    }, {key}))
    .then(resp => this.saveUserID());
  },

  saveUserID() {
    return this.requestJSON({
      path: '/clientapi/user',
      method: 'GET',
    })
    .then(data => data.id && this.editorConfig.set('distinctID', data.id))
    .catch(() => {});
  },

  getHoverDataAtPosition(filename, source, position, editor, encoding = 'utf-16') {
    checkArguments(this.getHoverDataAtPosition, filename, source, position, encoding);
    const path = urls.hoverPath(filename, source, position, editor, encoding);

    return this.requestJSON({path});
  },

  getReportDataAtPosition(filename, source, position, editor, encoding = 'utf-16') {
    checkArguments(this.getReportDataAtPosition, filename, source, position, editor, encoding);
    return this.getHoverDataAtPosition(filename, source, position, editor, encoding)
    .then(data => this.getReportDataFromHover(data));
  },

  getReportDataFromHover(data) {
    const id = data.symbol[0].id;
    return !idIsEmpty(id)
      ? this.getSymbolReportDataForId(id)
        .then(report => [data, report])
        .catch(err => [data])
      : [data];
  },

  getSymbolReportDataForId(id) {
    checkArguments(this.getSymbolReportDataForId, id);
    return this.requestJSON({
      path: `/api/editor/symbol/${id}`,
    });
  },

  getValueReportDataForId(id) {
    checkArguments(this.getValueReportDataForId, id);
    return this.requestJSON({
      path: `/api/editor/value/${id}`,
    })
    .then(report => {
      if (report.value && idIsEmpty(report.value.id)) {
        report.value.id = id;
      }
      return report;
    });
  },

  getMembersDataForId(id, page = 0, limit = 999) {
    checkArguments(this.getMembersDataForId, id);
    const path = urls.membersPath(id, page, limit);

    return this.requestJSON({path});
  },

  getUsagesDataForValueId(id, page = 0, limit = 999) {
    checkArguments(this.getUsagesDataForValueId, id);
    const path = urls.usagesPath(id, page, limit);

    return this.requestJSON({path});
  },

  getUsageDataForId(id) {
    checkArguments(this.getUsageDataForId, id);
    return this.requestJSON({
      path: `/api/editor/usages/${id}`,
    })
    .then(report => {
      if (report.value && idIsEmpty(report.value.id)) {
        report.value.id = id;
      }
      return report;
    });
  },

  getExampleDataForId(id) {
    checkArguments(this.getExampleDataForId, id);
    return this.requestJSON({
      path: `/api/python/curation/${id}`,
    });
  },

  getUserAccountInfo() {
    return this.requestJSON({path: '/api/account/user'});
  },

  getStatus(filename) {
    return filename
      ? this.requestJSON({path: urls.statusPath(filename)})
        .catch((err) => ({status: 'ready'}))
      : Promise.resolve({status: 'ready'});
  },

  getCompletionsAtPosition(filename, source, position, editor, encoding = 'utf-16') {
    checkArguments(this.getCompletionsAtPosition, filename, source, position, editor, encoding);
    if (source.length > MAX_FILE_SIZE) { return Promise.resolve([]); }

    const payload = {
      text: source,
      editor,
      filename,
      cursor_runes: position,
      offset_encoding: encoding,
    };

    return this.requestJSON({
      path: '/clientapi/editor/completions',
      method: 'POST',
    }, JSON.stringify(payload))
    .then(data => data.completions || [])
    .catch(err => []);
  },

  getSnippetCompletionsAtPosition(filename, source, editor, start_position, end_position = start_position, encoding = 'utf-16') {
    checkArguments(this.getSnippetCompletionsAtPosition, filename, source, editor, 
      start_position, end_position, encoding);
    if (source.length > MAX_FILE_SIZE) { return Promise.resolve([]); }
    const payload = {
      text: source,
      editor,
      filename,
      position: {
        begin: start_position,
        end: end_position,
      },
      offset_encoding: encoding,
    };
    return this.requestJSON({
      path: '/clientapi/editor/complete',
      method: 'POST',
    }, JSON.stringify(payload))
    .then(data => data.completions || [])
    .catch(_ => []);
  },

  getSignaturesAtPosition(filename, source, position, editor, encoding = 'utf-16') {
    checkArguments(this.getSignaturesAtPosition, filename, source, position, editor, encoding);
    if (source.length > MAX_FILE_SIZE) { return Promise.resolve(); }

    const payload = {
      text: source,
      editor,
      filename,
      cursor_runes: position,
      offset_encoding: encoding,
    };

    return this.requestJSON({
      path: '/clientapi/editor/signatures',
      method: 'POST',
    }, JSON.stringify(payload))
    .catch(() => {});
  },

  getKSGCompletions(query) {
    checkArguments(this.getKSGCompletions, query);
    return this.requestJSON({ path: `/clientapi/ksg/completions?query=${encodeURIComponent(query)}` })
      .catch(() => {});
  },

  getKSGCodeBlocks(query, results = 3) {
    checkArguments(this.getKSGCodeBlocks, query, results);
    return this.requestJSON({ path: `/clientapi/ksg/codeblocks?query=${encodeURIComponent(query)}&results=${results}` })
      .catch(() => {});
  },

  getAutocorrectData(filename, source, editorMeta) {
    checkArguments(this.getAutocorrectData, filename, source, editorMeta);

    if (source.length > MAX_FILE_SIZE) { return Promise.resolve(); }

    const payload = {
      metadata: this.getAutocorrectMetadata('autocorrect_request', editorMeta),
      buffer: source,
      filename,
      language: 'python',
    };

    return this.requestJSON({
      path: '/clientapi/editor/autocorrect',
      method: 'POST',
    }, JSON.stringify(payload))
    .catch(() => {});
  },

  getAutocorrectModelInfo(version, editorMeta) {
    checkArguments(this.getAutocorrectModelInfo, version, editorMeta);

    const payload = {
      metadata: this.getAutocorrectMetadata('model_info_request', editorMeta),
      language: 'python',
      version,
    };

    return this.requestJSON({
      path: '/api/editor/autocorrect/model-info',
      method: 'POST',
    }, JSON.stringify(payload))
    .catch(() => {});
  },

  getAutocorrectMetadata(event, editorMeta) {
    checkArguments(this.getAutocorrectMetadata, event, editorMeta);
    checkArgumentKeys(this.getAutocorrectMetadata, editorMeta, 'editorMeta', 'source', 'plugin_version');
    return merge({
      event,
      os_name: this.getOsName(),
    }, editorMeta);
  },

  getOsName() {
    return {
      darwin: 'macos',
      win32: 'windows',
      linux: 'linux',
    }[os.platform()];
  },

  postSaveValidationData(filename, source, editorMeta) {
    checkArguments(this.postSaveValidationData, filename, source, editorMeta);

    if (source.length > MAX_FILE_SIZE) { return Promise.resolve(); }

    const payload = {
      metadata: this.getAutocorrectMetadata('validation_onsave', editorMeta),
      buffer: source,
      filename,
      language: 'python',
    };

    return this.request({
      path: '/clientapi/editor/autocorrect/validation/on-save',
      method: 'POST',
    }, JSON.stringify(payload))
    .catch(() => {});
  },

  postAutocorrectFeedbackData(response, feedback, editorMeta) {
    checkArguments(this.postAutocorrectFeedbackData, response, feedback, editorMeta);

    const payload = {
      metadata: this.getAutocorrectMetadata('feedback_diffset', editorMeta),
      response,
      feedback,
    };

    return this.request({
      path: '/clientapi/editor/autocorrect/feedback',
      method: 'POST',
    }, JSON.stringify(payload))
    .catch(() => {});
  },

  postAutocorrectHashMismatchData(response, requestStartTime, editorMeta) {
    checkArguments(this.postAutocorrectHashMismatchData, response, requestStartTime, editorMeta);

    const payload = {
      metadata: this.getAutocorrectMetadata('metrics_hash_mismatch', editorMeta),
      response,
      response_time: new Date() - requestStartTime,
    };

    return this.request({
      path: '/clientapi/editor/autocorrect/metrics',
      method: 'POST',
    }, JSON.stringify(payload))
    .catch(() => {});
  },

  sendFeatureMetric(name) {
    checkArguments(this.sendFeatureMetric, name);

    return this.request({
      path: '/clientapi/metrics/counters',
      method: 'POST',
    }, JSON.stringify({
      name,
      value: 1,
    }));
  },

  featureRequested(name, editor) {
    checkArguments(this.featureRequested, name, editor);
    this.sendFeatureMetric(`${editor}_${name}_requested`);
  },

  featureFulfilled(name, editor) {
    checkArguments(this.featureFulfilled, name, editor);
    this.sendFeatureMetric(`${editor}_${name}_fulfilled`);
  },

  featureApplied(name, editor, suffix = '') {
    checkArguments(this.featureApplied, name, editor);
    this.sendFeatureMetric(`${editor}_${name}_applied${suffix}`);
  },

  Account: {
    client: KiteConnector.client,

    initClient(hostname, port, base, ssl) {
      this.client.hostname = hostname;
      this.client.port = port;
      this.client.base = base;
      this.client.protocol = ssl ? https : http;
    },

    disposeClient() {},

    toggleRequestDebug() {
      if (this.client instanceof NodeClient) {
        this.client = new BrowserClient(this.client.hostname, this.client.port, this.client.base, this.client.protocol === https);
      } else {
        this.client = new NodeClient(this.client.hostname, this.client.port, this.client.base, this.client.protocol === 'https');
      }
    },

    checkEmail(data) {
      if (!data || !data.email) {
        return Promise.reject(new Error('No email provided'));
      }
      return this.client.request({
        path: '/api/account/check-email',
        method: 'POST',
      }, JSON.stringify(data))
      .then(checkStatusAndInvokeCallback('Unable to check email'));
    },

    createAccount(data, callback) {
      if (!data || !data.email) {
        return Promise.reject(new Error('No email provided'));
      }

      const content = querystring.stringify(data);
      let promise;
      if (data.password) {
        promise = this.client.request({
          path: '/api/account/create',
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
          },
        }, content);
      } else {
        promise = this.client.request({
          path: '/api/account/createPasswordless',
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
          },
        }, content);
      }

      return promise.then(checkStatusAndInvokeCallback('Unable to create an account', callback));
    },

    login(data, callback) {
      if (!data) {
        return Promise.reject(new Error('No login data provided'));
      }
      if (!data.email) {
        return Promise.reject(new Error('No email provided'));
      }
      if (!data.password) {
        return Promise.reject(new Error('No password provided'));
      }
      const content = querystring.stringify(data);
      return this.client.request({
        path: '/api/account/login',
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
        },
      }, content)
      .then(checkStatusAndInvokeCallback('Unable to login into Kite', callback));
    },

    resetPassword(data, callback) {
      if (!data || !data.email) {
        return Promise.reject(new Error('No email provided'));
      }
      const content = querystring.stringify(data);
      return this.client.request({
        path: '/api/account/reset-password/request',
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
        },
      }, content)
      .then(checkStatusAndInvokeCallback('Unable to reset passwords', callback));
    },
  },
};

const idIsEmpty = (id) =>
  !id || id === '' ||
  (id.indexOf(';') !== -1 && id.split(';')[1] === '');

const delegate = (methods, source, target) => {
  methods.forEach(method => target[method] = (...args) => source[method](...args));
  return target;
};

const checkStatusAndInvokeCallback = (message, callback) => resp => {
  callback && callback(resp);
  return new Promise((resolve, reject) => {
    if (resp.statusCode >= 400) {
      utils.handleResponseData(resp).then(respData => {
        reject(new KiteRequestError(message, {
          responseStatus: resp.statusCode,
          response: resp,
          responseData: respData,
        }));
      }, reject);
    } else {
      resolve(resp);
    }
  });
};

delegate([
  'arch',
  'canInstallKite',
  'canRunKite',
  'canRunKiteEnterprise',
  'checkHealth',
  'downloadKite',
  'downloadKiteRelease',
  'hasBothKiteInstalled',
  'hasManyKiteEnterpriseInstallation',
  'hasManyKiteInstallation',
  'installKite',
  'isAdmin',
  'isKiteEnterpriseInstalled',
  'isKiteEnterpriseRunning',
  'isKiteInstalled',
  'isKiteReachable',
  'isKiteRunning',
  'isKiteSupported',
  'isOSSupported',
  'isOSVersionSupported',
  'isUserAuthenticated',
  'onDidFailRequest',
  'request',
  'runKiteWithCopilot',
  'runKite',
  'runKiteAndWait',
  'runKiteEnterprise',
  'runKiteEnterpriseAndWait',
  'toggleRequestDebug',
  'waitForKite',
], KiteConnector, KiteAPI);

module.exports = KiteAPI;


/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = require("http");

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = require("https");

/***/ }),
/* 12 */
/***/ (function(module, exports) {

module.exports = require("querystring");

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const os = __webpack_require__(6);
const EventEmitter = __webpack_require__(14);

const utils = __webpack_require__(15);
const KiteStateError = __webpack_require__(19);
const KiteRequestError = __webpack_require__(17);
const {STATES} = __webpack_require__(20);
const NodeClient = __webpack_require__(21);
const BrowserClient = __webpack_require__(43);

module.exports = {
  STATES,

  adapter: (() => {
    switch (os.platform()) {
      case 'darwin': return __webpack_require__(44);
      case 'win32': return __webpack_require__(45);
      case 'linux': return __webpack_require__(46);
      default: return __webpack_require__(47);
    }
  })(),

  emitter: new EventEmitter(),

  client: new NodeClient('localhost', '46624'),

  toggleRequestDebug() {
    if (this.client instanceof NodeClient) {
      this.client = new BrowserClient(this.client.hostname, this.client.port);
    } else {
      this.client = new NodeClient(this.client.hostname, this.client.port);
    }
  },

  onDidFailRequest(listener) {
    this.emitter.on('did-fail-request', listener);
    return {
      dispose: () => {
        this.emitter.removeListener('did-fail-request', listener);
      },
    };
  },

  request(options, data, timeout) {
    return this.client.request(options, data, timeout)
    .catch(() => {
      let promise = Promise.resolve();
      if (utils.shouldAddCatchProcessing(options.path)) {
        promise = promise.then(() => this.isKiteSupported())
              .then(() => this.isKiteInstalled())
              .then(() => this.isKiteRunning());
      }
      return promise.then(() => {
        throw new KiteStateError('Kite could not be reached when attempting a request', {
          state: STATES.UNREACHABLE,
          request: options,
          requestData: data,
        });
      });
    })
    .then(resp => {
      return resp.statusCode >= 400
        ? utils.handleResponseData(resp).then(respData => {
          throw new KiteRequestError('bad_status', {
            responseStatus: resp.statusCode,
            request: options,
            requestData: data,
            response: resp,
            responseData: respData,
          });
        })
        : resp;
    })
    .catch(err => {
      this.emitter.emit('did-fail-request', err);
      throw err;
    });
  },

  checkHealth() {
    const extractErr = ([err]) => {
      throw err;
    };

    return this.isKiteSupported()
    .then(() =>
      utils.anyPromise([this.isKiteInstalled(), this.isKiteEnterpriseInstalled()]).catch(extractErr))
    .then(() =>
      utils.anyPromise([this.isKiteRunning(), this.isKiteEnterpriseRunning()]).catch(extractErr))
    .then(() => this.isKiteReachable())
    .then(() => STATES.READY)
    .catch(err => {
      if (!err.data || err.data.state == null) { throw err; }
      return err.data.state;
    });
  },

  // FIXME: This method is now deprecated, use checkHealth instead.
  handleState() {
    return this.checkHealth();
  },

  isKiteSupported() {
    return this.adapter.isKiteSupported()
      ? Promise.resolve()
      : Promise.reject(new KiteStateError('Kite is currently not support on your platform', {
        state: STATES.UNSUPPORTED,
      }));
  },

  isKiteInstalled() {
    return this.adapter.isKiteInstalled();
  },

  isKiteRunning() {
    return this.adapter.isKiteRunning();
  },

  canInstallKite() {
    return this.isKiteSupported()
    .then(() =>
      utils.reversePromise(this.adapter.isKiteInstalled(),
        new KiteStateError('Kite is already installed', {
          state: STATES.INSTALLED,
        })));
  },

  installKite(options) {
    return this.adapter.installKite(options);
  },

  downloadKiteRelease(options) {
    return this.adapter.downloadKiteRelease(options);
  },

  downloadKite(url, options) {
    return this.adapter.downloadKite(url, options);
  },

  canRunKite() {
    return this.isKiteInstalled()
    .then(() =>
      utils.reversePromise(this.isKiteRunning(),
        new KiteStateError('Kite is already runnning', {
          state: STATES.RUNNING,
        })));
  },

  runKiteWithCopilot() {
    return this.adapter.runKiteWithCopilot();
  },

  runKite() {
    return this.adapter.runKite();
  },

  runKiteAndWait(attempts, interval) {
    return this.runKite().then(() => this.waitForKite(attempts, interval));
  },

  isKiteReachable() {
    return this.client.request({
      path: '/clientapi/ping',
      method: 'GET',
    }, null, 200); // in tests, this took no longer than 15ms to respond
  },

  waitForKite(attempts, interval) {
    return utils.retryPromise(() => this.isKiteReachable(), attempts, interval);
  },

  isKiteEnterpriseInstalled() {
    return this.adapter.isKiteEnterpriseInstalled();
  },

  isKiteEnterpriseRunning() {
    return this.adapter.isKiteEnterpriseRunning();
  },

  canRunKiteEnterprise() {
    return this.isKiteEnterpriseInstalled()
    .then(() =>
      utils.reversePromise(this.isKiteEnterpriseRunning(),
        new KiteStateError('Kite Enterprise is already runnning', {
          state: STATES.RUNNING,
        })));
  },

  runKiteEnterprise() {
    return this.adapter.runKiteEnterprise();
  },

  runKiteEnterpriseAndWait(attempts, interval) {
    return this.runKiteEnterprise().then(() => this.waitForKite(attempts, interval));
  },

  hasBothKiteInstalled() {
    return this.adapter.hasBothKiteInstalled();
  },

  hasManyKiteInstallation() {
    return this.adapter.hasManyKiteInstallation();
  },

  hasManyKiteEnterpriseInstallation() {
    return this.adapter.hasManyKiteEnterpriseInstallation();
  },

  isAdmin() {
    return this.adapter.isAdmin();
  },

  arch() {
    return this.adapter.arch();
  },

  isOSSupported() {
    return this.adapter.isOSSupported();
  },

  isOSVersionSupported() {
    return this.adapter.isOSVersionSupported();
  },

  isUserAuthenticated() {
    return this.client.request({
      path: '/clientapi/user',
      method: 'GET',
    })
    .then((resp) => {
      switch (resp.statusCode) {
        case 200:
          return utils.handleResponseData(resp);
        case 401:
          throw new KiteStateError('Kite is not authenticated', {
            state: STATES.UNLOGGED,
          });
        default:
          return utils.handleResponseData(resp).then(respData => {
            throw new KiteRequestError('Invalid response status when checking Kite authentication', {
              responseStatus: resp.statusCode,
              request: {
                path: '/clientapi/user',
                method: 'GET',
              },
              response: resp,
              responseData: respData,
            });
          });
      }
    });
  },
};


/***/ }),
/* 14 */
/***/ (function(module, exports) {

module.exports = require("events");

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const http = __webpack_require__(10);
const https = __webpack_require__(11);
const child_process = __webpack_require__(16);
const KiteRequestError = __webpack_require__(17);
const KiteProcessError = __webpack_require__(18);

function deepMerge(a, b) {
  a = JSON.parse(JSON.stringify(a || {}));
  b = JSON.parse(JSON.stringify(b || {}));
  const c = Object.assign({}, a);

  Object.keys(b).forEach(k => {
    if (c[k] && typeof c[k] == 'object') {
      c[k] = deepMerge(c[k], b[k]);
    } else {
      c[k] = b[k];
    }
  });

  return c;
}

function promisifyRequest(request) {
  return new Promise((resolve, reject) => {
    request.on('response', resp => resolve(resp));
    request.on('error', err => reject(err));
  });
}

function promisifyStream(stream) {
  return new Promise((resolve, reject) => {
    stream.on('finish', () => resolve());
    stream.on('error', err => reject(err));
  });
}

function request(url) {
  return url.indexOf('https://') === 0
    ? https.request(url)
    : http.request(url);
}

function hasHeader(header, headers) {
  return header in headers ? header : false;
}

function isRedirection(resp) {
  return resp.statusCode >= 300 &&
         resp.statusCode < 400 &&
         hasHeader('location', resp.headers);
}

// Given a request this function will follow the redirection until a
// code different that 303 is returned
function followRedirections(req) {
  return promisifyRequest(req)
  .then(resp => {
    if (resp.statusCode >= 200 && resp.statusCode < 300) {
      return resp;
    } else if (isRedirection(resp)) {
      const location = resp.headers.location;
      const req = request(location);
      req.end();
      return followRedirections(req);
    } else {
      throw new KiteRequestError('Invalid response status when following redirection', {
        request: req,
        response: resp,
        responseStatus: resp.statusCode,
      });
    }
  });
}

function parseSetCookies(cookies) {
  if (!Array.isArray(cookies) || !cookies.length) {
    return [];
  }
  var parse = (cookie) => {
    var parsed = {
      Path: '',
      Domain: '',
      Expires: new Date('0001-01-01T00:00:00Z'),
      RawExpires: '',
      MaxAge: 0,
      Secure: false,
      HttpOnly: false,
      Raw: '',
      Unparsed: null,
    };
    cookie.split('; ').forEach((raw) => {
      if (raw === 'HttpOnly') {
        parsed.HttpOnly = true;
        return;
      }
      if (raw === 'Secure') {
        parsed.Secure = true;
        return;
      }
      var idx = raw.indexOf('=');
      var key = raw.substring(0, idx);
      var val = raw.substring(idx + 1);
      if (key === 'Expires') {
        val = new Date(val);
      }
      if (key in parsed) {
        parsed[key] = val;
      } else {
        parsed.Name = key;
        parsed.Value = val;
      }
    });
    return parsed;
  };
  return cookies.map(parse);
}

function findCookie(cookies, name) {
  return cookies.filter(c => c.Name === name)[0];
}

function dumpCookies(cookies) {
  return cookies.map((c) => c.Name + '=' + c.Value).join('; ');
}

function handleResponseData(resp, callback) {
  if (callback) {
    let data = '';
    resp.on('data', (chunk) => data += chunk);
    resp.on('end', () => callback(data));
    return null;
  } else {
    return new Promise((resolve, reject) => {
      let data = '';
      resp.on('data', (chunk) => data += chunk);
      resp.on('error', err => reject(err));
      resp.on('end', () => resolve(data));
    });
  }
}

// Returns a new Promise that resolve if the passed-in promise is rejected and
// will be rejected with the provided error if the passed-in promise resolve.
function reversePromise(promise, rejectionMessage, resolutionMessage) {
  return new Promise((resolve, reject) => {
    promise
    .then(() => reject(rejectionMessage))
    .catch(() => resolve(resolutionMessage));
  });
}

// Given a function returning a promise, it returns a new Promise that will be
// resolved if one of the promises returned by the function resolves. If no
// promises have been resolved after the specified amount of attempts the
// returned promise will be rejected
function retryPromise(doAttempt, attempts, interval) {
  return new Promise((resolve, reject) => {
    makeAttempt(0, resolve, reject);
  });

  function makeAttempt(n, resolve, reject) {
    var retryOrReject = (err) => {
      n + 1 >= attempts
        ? reject(err)
        : makeAttempt(n + 1, resolve, reject);
    };
    setTimeout(() =>
      doAttempt().then(resolve, retryOrReject),
      n ? interval : 0);
  }
}

// Spawns a child process and returns a promise that will be resolved if
// the process ends with a code of 0, otherwise the promise will be rejected
// with an error object of the provided rejectionType.
function spawnPromise(cmd, cmdArgs, cmdOptions, rejectionType, rejectionMessage) {
  const args = [cmd];

  if (cmdArgs) {
    if (typeof cmdArgs === 'string') {
      rejectionType = cmdArgs;
      rejectionMessage = cmdOptions;
    } else {
      args.push(cmdArgs);
    }
  }

  if (cmdOptions) {
    if (typeof cmdOptions === 'string') {
      rejectionMessage = rejectionType;
      rejectionType = cmdOptions;
    } else {
      args.push(cmdOptions);
    }
  }

  return new Promise((resolve, reject) => {
    const proc = child_process.spawn(...args);
    let stdout = '';
    let stderr = '';

    proc.stdout.on('data', data => stdout +=  data);
    proc.stderr.on('data', data => stdout +=  data);

    const error = new Error();

    proc.on('close', code => {
      code
        ? reject(new KiteProcessError(rejectionType,
          {
            message: rejectionMessage,
            stderr,
            stdout,
            callStack: error.stack,
            cmd: `${cmd} ${(typeof cmdOptions != 'string' ? cmdArgs || [] : []).join(' ')}`,
            options: typeof cmdOptions != 'string' ? cmdOptions : undefined,
          }))
        : resolve(stdout);
    });
  });
}

function anyPromise(arrayOfPromises) {
  // For each promise that resolves or rejects,
  // make them all resolve.
  // Record which ones did resolve or reject
  const resolvingPromises = arrayOfPromises.map(promise => {
    return promise
    .then(result => ({resolve: true, result: result}))
    .catch(error => ({resolve: false, result: error}));
  });

  return Promise.all(resolvingPromises).then(results => {
    const resolved = results.reduce((m, r) => {
      if (m) { return m; }
      if (r.resolve) { return r; }
      return null;
    }, null);


    if (resolved) {
      return resolved.result;
    } else {
      throw results.map(r => r.result);
    }
  });
}

// Exec a child process and returns a promise that will be resolved if
// the process ends with success, otherwise the promise will be rejected
// with an error object of the provided rejectionType.
function execPromise(cmd, cmdOptions, rejectionType, rejectionMessage) {
  const args = [cmd];

  if (cmdOptions) {
    if (cmdOptions === 'string') {
      rejectionMessage = rejectionType;
      rejectionType = cmdOptions;
      cmdOptions = {};
    }
  } else {
    cmdOptions = {};
  }

  args.push(cmdOptions);

  const error = new Error();

  return new Promise((resolve, reject) => {
    child_process.exec(...args, (err, stdout, stderr) => {
      if (err) {
        reject(new KiteProcessError(rejectionType,
          {
            message: rejectionMessage,
            stdout,
            stderr,
            callStack: error.stack,
            cmd,
            options: typeof cmdOptions != 'string' ? cmdOptions : undefined,
          }));
      }
      resolve(stdout);
    });
  });
}

// Calls the passed-in function if its actually a function.
function guardCall(fn) { typeof fn === 'function' && fn(); }

// Attempts to parse a json string and returns the fallback if it can't.
function parseJSON(json, fallback) {
  try { return JSON.parse(json) || fallback; } catch (e) { return fallback; }
}

// evaluates whether a particular path should have extra processing
// done on it in the case of a Promise rejection
// NB: this should be taken out with a more robust refactor
function shouldAddCatchProcessing(path) {
  return !path.startsWith('/clientapi/editor');
}

// should be wrapped in try/catch
function whoami() {
  return String(child_process.execSync('whoami')).trim();
}

module.exports = {
  anyPromise,
  deepMerge,
  dumpCookies,
  execPromise,
  findCookie,
  followRedirections,
  guardCall,
  handleResponseData,
  parseJSON,
  parseSetCookies,
  promisifyRequest,
  promisifyStream,
  retryPromise,
  reversePromise,
  shouldAddCatchProcessing,
  spawnPromise,
  whoami,
};


/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = require("child_process");

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = class KiteRequestError extends Error {
  get type() { return 'bad_status'; }

  constructor(message, data) {
    super(message);
    this.data = data;
    Error.captureStackTrace(this, this.constructor);
  }
};


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = class KiteProcessError extends Error {
  constructor(type, data) {
    super(type);
    this.data = data;
    this.message = `${type}: ${data.message}\ncmd: ${data.cmd}`;
    if (data.stdout) {
      this.message += `\nstdout: ${data.stdout}`;
    }
    if (data.stderr) {
      this.message += `\nstderr: ${data.stderr}`;
    }
    Error.captureStackTrace(this, this.constructor);
  }
};


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = class KiteStateError extends Error {
  get type() { return 'bad_state'; }
  
  constructor(message, data) {
    super(message);
    this.data = data;
    Error.captureStackTrace(this, this.constructor);
  }
};


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  STATES: {
    UNSUPPORTED: 0,
    UNINSTALLED: 1,
    NOT_RUNNING: 2,
    UNREACHABLE: 3,
    UNLOGGED: 4,
    READY: 4,

    // legacy states, prefer the ones above for health checks
    INSTALLED: 2,
    RUNNING: 3,
    REACHABLE: 4,
    AUTHENTICATED: 4,
  },

  LEVELS: {
    SILLY: 0,
    VERBOSE: 1,
    DEBUG: 2,
    INFO: 3,
    WARNING: 4,
    ERROR: 5,
  },
};


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const http = __webpack_require__(10);
const https = __webpack_require__(11);
const FormData = __webpack_require__(22);

const utils = __webpack_require__(15);

module.exports = class NodeClient {
  constructor(hostname, port, base = '', ssl = false) {
    this.hostname = hostname;
    this.port = port;
    this.base = base;
    this.protocol = ssl ? https : http;
    this.cookies = {};
  }

  request(opts, data, timeout) {
    return new Promise((resolve, reject) => {
      let form;

      opts.hostname = this.hostname;
      if (this.port > 0) { opts.port = this.port; }
      opts.path = this.base + opts.path;
      opts.headers = opts.headers || {};
      this.writeCookies(opts.headers);

      if (opts.headers['Content-Type'] === 'multipart/form-data' ||
          opts.headers['content-type'] === 'multipart/form-data') {
        delete opts.headers['Content-Type'];
        delete opts.headers['content-type'];

        form = new FormData();
        for (const key in data) {
          form.append(key, data[key]);
        }

        const headers = form.getHeaders();
        for (const key in headers) {
          opts.headers[key] = headers[key];
        }
      }

      const req = this.protocol.request(opts, resp => {
        this.readCookies(resp);
        resolve(resp);
      });
      req.on('error', err => reject(err));
      if (timeout != null) {
        req.setTimeout(timeout, () => reject(new Error('timeout')));
      }
      if (form) {
        form.pipe(req);
      } else {
        if (data) { req.write(data); }
        req.end();
      }
    });
  }

  readCookies(resp) {
    utils.parseSetCookies(resp.headers['set-cookie']).forEach(c => {
      this.cookies[c.Name] = c;
    });
  }

  writeCookies(hdrs) {
    const cookies = [];
    for (var k in this.cookies) {
      cookies.push(this.cookies[k]);
    }
    if (cookies.length) {
      hdrs.Cookies = utils.dumpCookies(cookies);
    }
  }
};


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

var CombinedStream = __webpack_require__(23);
var util = __webpack_require__(24);
var path = __webpack_require__(27);
var http = __webpack_require__(10);
var https = __webpack_require__(11);
var parseUrl = __webpack_require__(4).parse;
var fs = __webpack_require__(28);
var mime = __webpack_require__(29);
var asynckit = __webpack_require__(32);
var populate = __webpack_require__(42);

// Public API
module.exports = FormData;

// make it a Stream
util.inherits(FormData, CombinedStream);

/**
 * Create readable "multipart/form-data" streams.
 * Can be used to submit forms
 * and file uploads to other web applications.
 *
 * @constructor
 * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream
 */
function FormData(options) {
  if (!(this instanceof FormData)) {
    return new FormData();
  }

  this._overheadLength = 0;
  this._valueLength = 0;
  this._valuesToMeasure = [];

  CombinedStream.call(this);

  options = options || {};
  for (var option in options) {
    this[option] = options[option];
  }
}

FormData.LINE_BREAK = '\r\n';
FormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';

FormData.prototype.append = function(field, value, options) {

  options = options || {};

  // allow filename as single option
  if (typeof options == 'string') {
    options = {filename: options};
  }

  var append = CombinedStream.prototype.append.bind(this);

  // all that streamy business can't handle numbers
  if (typeof value == 'number') {
    value = '' + value;
  }

  // https://github.com/felixge/node-form-data/issues/38
  if (util.isArray(value)) {
    // Please convert your array into string
    // the way web server expects it
    this._error(new Error('Arrays are not supported.'));
    return;
  }

  var header = this._multiPartHeader(field, value, options);
  var footer = this._multiPartFooter();

  append(header);
  append(value);
  append(footer);

  // pass along options.knownLength
  this._trackLength(header, value, options);
};

FormData.prototype._trackLength = function(header, value, options) {
  var valueLength = 0;

  // used w/ getLengthSync(), when length is known.
  // e.g. for streaming directly from a remote server,
  // w/ a known file a size, and not wanting to wait for
  // incoming file to finish to get its size.
  if (options.knownLength != null) {
    valueLength += +options.knownLength;
  } else if (Buffer.isBuffer(value)) {
    valueLength = value.length;
  } else if (typeof value === 'string') {
    valueLength = Buffer.byteLength(value);
  }

  this._valueLength += valueLength;

  // @check why add CRLF? does this account for custom/multiple CRLFs?
  this._overheadLength +=
    Buffer.byteLength(header) +
    FormData.LINE_BREAK.length;

  // empty or either doesn't have path or not an http response
  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) )) {
    return;
  }

  // no need to bother with the length
  if (!options.knownLength) {
    this._valuesToMeasure.push(value);
  }
};

FormData.prototype._lengthRetriever = function(value, callback) {

  if (value.hasOwnProperty('fd')) {

    // take read range into a account
    // `end` = Infinity –> read file till the end
    //
    // TODO: Looks like there is bug in Node fs.createReadStream
    // it doesn't respect `end` options without `start` options
    // Fix it when node fixes it.
    // https://github.com/joyent/node/issues/7819
    if (value.end != undefined && value.end != Infinity && value.start != undefined) {

      // when end specified
      // no need to calculate range
      // inclusive, starts with 0
      callback(null, value.end + 1 - (value.start ? value.start : 0));

    // not that fast snoopy
    } else {
      // still need to fetch file size from fs
      fs.stat(value.path, function(err, stat) {

        var fileSize;

        if (err) {
          callback(err);
          return;
        }

        // update final size based on the range options
        fileSize = stat.size - (value.start ? value.start : 0);
        callback(null, fileSize);
      });
    }

  // or http response
  } else if (value.hasOwnProperty('httpVersion')) {
    callback(null, +value.headers['content-length']);

  // or request stream http://github.com/mikeal/request
  } else if (value.hasOwnProperty('httpModule')) {
    // wait till response come back
    value.on('response', function(response) {
      value.pause();
      callback(null, +response.headers['content-length']);
    });
    value.resume();

  // something else
  } else {
    callback('Unknown stream');
  }
};

FormData.prototype._multiPartHeader = function(field, value, options) {
  // custom header specified (as string)?
  // it becomes responsible for boundary
  // (e.g. to handle extra CRLFs on .NET servers)
  if (typeof options.header == 'string') {
    return options.header;
  }

  var contentDisposition = this._getContentDisposition(value, options);
  var contentType = this._getContentType(value, options);

  var contents = '';
  var headers  = {
    // add custom disposition as third element or keep it two elements if not
    'Content-Disposition': ['form-data', 'name="' + field + '"'].concat(contentDisposition || []),
    // if no content type. allow it to be empty array
    'Content-Type': [].concat(contentType || [])
  };

  // allow custom headers.
  if (typeof options.header == 'object') {
    populate(headers, options.header);
  }

  var header;
  for (var prop in headers) {
    if (!headers.hasOwnProperty(prop)) continue;
    header = headers[prop];

    // skip nullish headers.
    if (header == null) {
      continue;
    }

    // convert all headers to arrays.
    if (!Array.isArray(header)) {
      header = [header];
    }

    // add non-empty headers.
    if (header.length) {
      contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;
    }
  }

  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;
};

FormData.prototype._getContentDisposition = function(value, options) {

  var filename
    , contentDisposition
    ;

  if (typeof options.filepath === 'string') {
    // custom filepath for relative paths
    filename = path.normalize(options.filepath).replace(/\\/g, '/');
  } else if (options.filename || value.name || value.path) {
    // custom filename take precedence
    // formidable and the browser add a name property
    // fs- and request- streams have path property
    filename = path.basename(options.filename || value.name || value.path);
  } else if (value.readable && value.hasOwnProperty('httpVersion')) {
    // or try http response
    filename = path.basename(value.client._httpMessage.path || '');
  }

  if (filename) {
    contentDisposition = 'filename="' + filename + '"';
  }

  return contentDisposition;
};

FormData.prototype._getContentType = function(value, options) {

  // use custom content-type above all
  var contentType = options.contentType;

  // or try `name` from formidable, browser
  if (!contentType && value.name) {
    contentType = mime.lookup(value.name);
  }

  // or try `path` from fs-, request- streams
  if (!contentType && value.path) {
    contentType = mime.lookup(value.path);
  }

  // or if it's http-reponse
  if (!contentType && value.readable && value.hasOwnProperty('httpVersion')) {
    contentType = value.headers['content-type'];
  }

  // or guess it from the filepath or filename
  if (!contentType && (options.filepath || options.filename)) {
    contentType = mime.lookup(options.filepath || options.filename);
  }

  // fallback to the default content type if `value` is not simple value
  if (!contentType && typeof value == 'object') {
    contentType = FormData.DEFAULT_CONTENT_TYPE;
  }

  return contentType;
};

FormData.prototype._multiPartFooter = function() {
  return function(next) {
    var footer = FormData.LINE_BREAK;

    var lastPart = (this._streams.length === 0);
    if (lastPart) {
      footer += this._lastBoundary();
    }

    next(footer);
  }.bind(this);
};

FormData.prototype._lastBoundary = function() {
  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;
};

FormData.prototype.getHeaders = function(userHeaders) {
  var header;
  var formHeaders = {
    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()
  };

  for (header in userHeaders) {
    if (userHeaders.hasOwnProperty(header)) {
      formHeaders[header.toLowerCase()] = userHeaders[header];
    }
  }

  return formHeaders;
};

FormData.prototype.getBoundary = function() {
  if (!this._boundary) {
    this._generateBoundary();
  }

  return this._boundary;
};

FormData.prototype.getBuffer = function() {
  var dataBuffer = new Buffer.alloc( 0 );
  var boundary = this.getBoundary();

  // Create the form content. Add Line breaks to the end of data.
  for (var i = 0, len = this._streams.length; i < len; i++) {
    if (typeof this._streams[i] !== 'function') {

      // Add content to the buffer.
      if(Buffer.isBuffer(this._streams[i])) {
        dataBuffer = Buffer.concat( [dataBuffer, this._streams[i]]);
      }else {
        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(this._streams[i])]);
      }

      // Add break after content.
      if (typeof this._streams[i] !== 'string' || this._streams[i].substring( 2, boundary.length + 2 ) !== boundary) {
        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(FormData.LINE_BREAK)] );
      }
    }
  }

  // Add the footer and return the Buffer object.
  return Buffer.concat( [dataBuffer, Buffer.from(this._lastBoundary())] );
};

FormData.prototype._generateBoundary = function() {
  // This generates a 50 character boundary similar to those used by Firefox.
  // They are optimized for boyer-moore parsing.
  var boundary = '--------------------------';
  for (var i = 0; i < 24; i++) {
    boundary += Math.floor(Math.random() * 10).toString(16);
  }

  this._boundary = boundary;
};

// Note: getLengthSync DOESN'T calculate streams length
// As workaround one can calculate file size manually
// and add it as knownLength option
FormData.prototype.getLengthSync = function() {
  var knownLength = this._overheadLength + this._valueLength;

  // Don't get confused, there are 3 "internal" streams for each keyval pair
  // so it basically checks if there is any value added to the form
  if (this._streams.length) {
    knownLength += this._lastBoundary().length;
  }

  // https://github.com/form-data/form-data/issues/40
  if (!this.hasKnownLength()) {
    // Some async length retrievers are present
    // therefore synchronous length calculation is false.
    // Please use getLength(callback) to get proper length
    this._error(new Error('Cannot calculate proper length in synchronous way.'));
  }

  return knownLength;
};

// Public API to check if length of added values is known
// https://github.com/form-data/form-data/issues/196
// https://github.com/form-data/form-data/issues/262
FormData.prototype.hasKnownLength = function() {
  var hasKnownLength = true;

  if (this._valuesToMeasure.length) {
    hasKnownLength = false;
  }

  return hasKnownLength;
};

FormData.prototype.getLength = function(cb) {
  var knownLength = this._overheadLength + this._valueLength;

  if (this._streams.length) {
    knownLength += this._lastBoundary().length;
  }

  if (!this._valuesToMeasure.length) {
    process.nextTick(cb.bind(this, null, knownLength));
    return;
  }

  asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {
    if (err) {
      cb(err);
      return;
    }

    values.forEach(function(length) {
      knownLength += length;
    });

    cb(null, knownLength);
  });
};

FormData.prototype.submit = function(params, cb) {
  var request
    , options
    , defaults = {method: 'post'}
    ;

  // parse provided url if it's string
  // or treat it as options object
  if (typeof params == 'string') {

    params = parseUrl(params);
    options = populate({
      port: params.port,
      path: params.pathname,
      host: params.hostname,
      protocol: params.protocol
    }, defaults);

  // use custom params
  } else {

    options = populate(params, defaults);
    // if no port provided use default one
    if (!options.port) {
      options.port = options.protocol == 'https:' ? 443 : 80;
    }
  }

  // put that good code in getHeaders to some use
  options.headers = this.getHeaders(params.headers);

  // https if specified, fallback to http in any other case
  if (options.protocol == 'https:') {
    request = https.request(options);
  } else {
    request = http.request(options);
  }

  // get content length and fire away
  this.getLength(function(err, length) {
    if (err) {
      this._error(err);
      return;
    }

    // add content length
    request.setHeader('Content-Length', length);

    this.pipe(request);
    if (cb) {
      request.on('error', cb);
      request.on('response', cb.bind(this, null));
    }
  }.bind(this));

  return request;
};

FormData.prototype._error = function(err) {
  if (!this.error) {
    this.error = err;
    this.pause();
    this.emit('error', err);
  }
};

FormData.prototype.toString = function () {
  return '[object FormData]';
};


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

var util = __webpack_require__(24);
var Stream = __webpack_require__(25).Stream;
var DelayedStream = __webpack_require__(26);

module.exports = CombinedStream;
function CombinedStream() {
  this.writable = false;
  this.readable = true;
  this.dataSize = 0;
  this.maxDataSize = 2 * 1024 * 1024;
  this.pauseStreams = true;

  this._released = false;
  this._streams = [];
  this._currentStream = null;
  this._insideLoop = false;
  this._pendingNext = false;
}
util.inherits(CombinedStream, Stream);

CombinedStream.create = function(options) {
  var combinedStream = new this();

  options = options || {};
  for (var option in options) {
    combinedStream[option] = options[option];
  }

  return combinedStream;
};

CombinedStream.isStreamLike = function(stream) {
  return (typeof stream !== 'function')
    && (typeof stream !== 'string')
    && (typeof stream !== 'boolean')
    && (typeof stream !== 'number')
    && (!Buffer.isBuffer(stream));
};

CombinedStream.prototype.append = function(stream) {
  var isStreamLike = CombinedStream.isStreamLike(stream);

  if (isStreamLike) {
    if (!(stream instanceof DelayedStream)) {
      var newStream = DelayedStream.create(stream, {
        maxDataSize: Infinity,
        pauseStream: this.pauseStreams,
      });
      stream.on('data', this._checkDataSize.bind(this));
      stream = newStream;
    }

    this._handleErrors(stream);

    if (this.pauseStreams) {
      stream.pause();
    }
  }

  this._streams.push(stream);
  return this;
};

CombinedStream.prototype.pipe = function(dest, options) {
  Stream.prototype.pipe.call(this, dest, options);
  this.resume();
  return dest;
};

CombinedStream.prototype._getNext = function() {
  this._currentStream = null;

  if (this._insideLoop) {
    this._pendingNext = true;
    return; // defer call
  }

  this._insideLoop = true;
  try {
    do {
      this._pendingNext = false;
      this._realGetNext();
    } while (this._pendingNext);
  } finally {
    this._insideLoop = false;
  }
};

CombinedStream.prototype._realGetNext = function() {
  var stream = this._streams.shift();


  if (typeof stream == 'undefined') {
    this.end();
    return;
  }

  if (typeof stream !== 'function') {
    this._pipeNext(stream);
    return;
  }

  var getStream = stream;
  getStream(function(stream) {
    var isStreamLike = CombinedStream.isStreamLike(stream);
    if (isStreamLike) {
      stream.on('data', this._checkDataSize.bind(this));
      this._handleErrors(stream);
    }

    this._pipeNext(stream);
  }.bind(this));
};

CombinedStream.prototype._pipeNext = function(stream) {
  this._currentStream = stream;

  var isStreamLike = CombinedStream.isStreamLike(stream);
  if (isStreamLike) {
    stream.on('end', this._getNext.bind(this));
    stream.pipe(this, {end: false});
    return;
  }

  var value = stream;
  this.write(value);
  this._getNext();
};

CombinedStream.prototype._handleErrors = function(stream) {
  var self = this;
  stream.on('error', function(err) {
    self._emitError(err);
  });
};

CombinedStream.prototype.write = function(data) {
  this.emit('data', data);
};

CombinedStream.prototype.pause = function() {
  if (!this.pauseStreams) {
    return;
  }

  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.pause) == 'function') this._currentStream.pause();
  this.emit('pause');
};

CombinedStream.prototype.resume = function() {
  if (!this._released) {
    this._released = true;
    this.writable = true;
    this._getNext();
  }

  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.resume) == 'function') this._currentStream.resume();
  this.emit('resume');
};

CombinedStream.prototype.end = function() {
  this._reset();
  this.emit('end');
};

CombinedStream.prototype.destroy = function() {
  this._reset();
  this.emit('close');
};

CombinedStream.prototype._reset = function() {
  this.writable = false;
  this._streams = [];
  this._currentStream = null;
};

CombinedStream.prototype._checkDataSize = function() {
  this._updateDataSize();
  if (this.dataSize <= this.maxDataSize) {
    return;
  }

  var message =
    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';
  this._emitError(new Error(message));
};

CombinedStream.prototype._updateDataSize = function() {
  this.dataSize = 0;

  var self = this;
  this._streams.forEach(function(stream) {
    if (!stream.dataSize) {
      return;
    }

    self.dataSize += stream.dataSize;
  });

  if (this._currentStream && this._currentStream.dataSize) {
    this.dataSize += this._currentStream.dataSize;
  }
};

CombinedStream.prototype._emitError = function(err) {
  this._reset();
  this.emit('error', err);
};


/***/ }),
/* 24 */
/***/ (function(module, exports) {

module.exports = require("util");

/***/ }),
/* 25 */
/***/ (function(module, exports) {

module.exports = require("stream");

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

var Stream = __webpack_require__(25).Stream;
var util = __webpack_require__(24);

module.exports = DelayedStream;
function DelayedStream() {
  this.source = null;
  this.dataSize = 0;
  this.maxDataSize = 1024 * 1024;
  this.pauseStream = true;

  this._maxDataSizeExceeded = false;
  this._released = false;
  this._bufferedEvents = [];
}
util.inherits(DelayedStream, Stream);

DelayedStream.create = function(source, options) {
  var delayedStream = new this();

  options = options || {};
  for (var option in options) {
    delayedStream[option] = options[option];
  }

  delayedStream.source = source;

  var realEmit = source.emit;
  source.emit = function() {
    delayedStream._handleEmit(arguments);
    return realEmit.apply(source, arguments);
  };

  source.on('error', function() {});
  if (delayedStream.pauseStream) {
    source.pause();
  }

  return delayedStream;
};

Object.defineProperty(DelayedStream.prototype, 'readable', {
  configurable: true,
  enumerable: true,
  get: function() {
    return this.source.readable;
  }
});

DelayedStream.prototype.setEncoding = function() {
  return this.source.setEncoding.apply(this.source, arguments);
};

DelayedStream.prototype.resume = function() {
  if (!this._released) {
    this.release();
  }

  this.source.resume();
};

DelayedStream.prototype.pause = function() {
  this.source.pause();
};

DelayedStream.prototype.release = function() {
  this._released = true;

  this._bufferedEvents.forEach(function(args) {
    this.emit.apply(this, args);
  }.bind(this));
  this._bufferedEvents = [];
};

DelayedStream.prototype.pipe = function() {
  var r = Stream.prototype.pipe.apply(this, arguments);
  this.resume();
  return r;
};

DelayedStream.prototype._handleEmit = function(args) {
  if (this._released) {
    this.emit.apply(this, args);
    return;
  }

  if (args[0] === 'data') {
    this.dataSize += args[1].length;
    this._checkIfMaxDataSizeExceeded();
  }

  this._bufferedEvents.push(args);
};

DelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {
  if (this._maxDataSizeExceeded) {
    return;
  }

  if (this.dataSize <= this.maxDataSize) {
    return;
  }

  this._maxDataSizeExceeded = true;
  var message =
    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.'
  this.emit('error', new Error(message));
};


/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = require("path");

/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = require("fs");

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * mime-types
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */



/**
 * Module dependencies.
 * @private
 */

var db = __webpack_require__(30)
var extname = __webpack_require__(27).extname

/**
 * Module variables.
 * @private
 */

var EXTRACT_TYPE_REGEXP = /^\s*([^;\s]*)(?:;|\s|$)/
var TEXT_TYPE_REGEXP = /^text\//i

/**
 * Module exports.
 * @public
 */

exports.charset = charset
exports.charsets = { lookup: charset }
exports.contentType = contentType
exports.extension = extension
exports.extensions = Object.create(null)
exports.lookup = lookup
exports.types = Object.create(null)

// Populate the extensions/types maps
populateMaps(exports.extensions, exports.types)

/**
 * Get the default charset for a MIME type.
 *
 * @param {string} type
 * @return {boolean|string}
 */

function charset (type) {
  if (!type || typeof type !== 'string') {
    return false
  }

  // TODO: use media-typer
  var match = EXTRACT_TYPE_REGEXP.exec(type)
  var mime = match && db[match[1].toLowerCase()]

  if (mime && mime.charset) {
    return mime.charset
  }

  // default text/* to utf-8
  if (match && TEXT_TYPE_REGEXP.test(match[1])) {
    return 'UTF-8'
  }

  return false
}

/**
 * Create a full Content-Type header given a MIME type or extension.
 *
 * @param {string} str
 * @return {boolean|string}
 */

function contentType (str) {
  // TODO: should this even be in this module?
  if (!str || typeof str !== 'string') {
    return false
  }

  var mime = str.indexOf('/') === -1
    ? exports.lookup(str)
    : str

  if (!mime) {
    return false
  }

  // TODO: use content-type or other module
  if (mime.indexOf('charset') === -1) {
    var charset = exports.charset(mime)
    if (charset) mime += '; charset=' + charset.toLowerCase()
  }

  return mime
}

/**
 * Get the default extension for a MIME type.
 *
 * @param {string} type
 * @return {boolean|string}
 */

function extension (type) {
  if (!type || typeof type !== 'string') {
    return false
  }

  // TODO: use media-typer
  var match = EXTRACT_TYPE_REGEXP.exec(type)

  // get extensions
  var exts = match && exports.extensions[match[1].toLowerCase()]

  if (!exts || !exts.length) {
    return false
  }

  return exts[0]
}

/**
 * Lookup the MIME type for a file path/extension.
 *
 * @param {string} path
 * @return {boolean|string}
 */

function lookup (path) {
  if (!path || typeof path !== 'string') {
    return false
  }

  // get the extension ("ext" or ".ext" or full path)
  var extension = extname('x.' + path)
    .toLowerCase()
    .substr(1)

  if (!extension) {
    return false
  }

  return exports.types[extension] || false
}

/**
 * Populate the extensions and types maps.
 * @private
 */

function populateMaps (extensions, types) {
  // source preference (least -> most)
  var preference = ['nginx', 'apache', undefined, 'iana']

  Object.keys(db).forEach(function forEachMimeType (type) {
    var mime = db[type]
    var exts = mime.extensions

    if (!exts || !exts.length) {
      return
    }

    // mime -> extensions
    extensions[type] = exts

    // extension -> mime
    for (var i = 0; i < exts.length; i++) {
      var extension = exts[i]

      if (types[extension]) {
        var from = preference.indexOf(db[types[extension]].source)
        var to = preference.indexOf(mime.source)

        if (types[extension] !== 'application/octet-stream' &&
          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {
          // skip the remapping
          continue
        }
      }

      // set the extension -> mime
      types[extension] = type
    }
  })
}


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

/*!
 * mime-db
 * Copyright(c) 2014 Jonathan Ong
 * MIT Licensed
 */

/**
 * Module exports.
 */

module.exports = __webpack_require__(31)


/***/ }),
/* 31 */
/***/ (function(module) {

module.exports = JSON.parse("{\"application/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"application/3gpdash-qoe-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/3gpp-ims+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/a2l\":{\"source\":\"iana\"},\"application/activemessage\":{\"source\":\"iana\"},\"application/activity+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-costmap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-costmapfilter+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-directory+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointcost+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointcostparams+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointprop+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointpropparams+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-error+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-networkmap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-networkmapfilter+json\":{\"source\":\"iana\",\"compressible\":true},\"application/aml\":{\"source\":\"iana\"},\"application/andrew-inset\":{\"source\":\"iana\",\"extensions\":[\"ez\"]},\"application/applefile\":{\"source\":\"iana\"},\"application/applixware\":{\"source\":\"apache\",\"extensions\":[\"aw\"]},\"application/atf\":{\"source\":\"iana\"},\"application/atfx\":{\"source\":\"iana\"},\"application/atom+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atom\"]},\"application/atomcat+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomcat\"]},\"application/atomdeleted+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomdeleted\"]},\"application/atomicmail\":{\"source\":\"iana\"},\"application/atomsvc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomsvc\"]},\"application/atsc-dwd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dwd\"]},\"application/atsc-held+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"held\"]},\"application/atsc-rdt+json\":{\"source\":\"iana\",\"compressible\":true},\"application/atsc-rsat+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rsat\"]},\"application/atxml\":{\"source\":\"iana\"},\"application/auth-policy+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/bacnet-xdd+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/batch-smtp\":{\"source\":\"iana\"},\"application/bdoc\":{\"compressible\":false,\"extensions\":[\"bdoc\"]},\"application/beep+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/calendar+json\":{\"source\":\"iana\",\"compressible\":true},\"application/calendar+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xcs\"]},\"application/call-completion\":{\"source\":\"iana\"},\"application/cals-1840\":{\"source\":\"iana\"},\"application/cbor\":{\"source\":\"iana\"},\"application/cbor-seq\":{\"source\":\"iana\"},\"application/cccex\":{\"source\":\"iana\"},\"application/ccmp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ccxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ccxml\"]},\"application/cdfx+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"cdfx\"]},\"application/cdmi-capability\":{\"source\":\"iana\",\"extensions\":[\"cdmia\"]},\"application/cdmi-container\":{\"source\":\"iana\",\"extensions\":[\"cdmic\"]},\"application/cdmi-domain\":{\"source\":\"iana\",\"extensions\":[\"cdmid\"]},\"application/cdmi-object\":{\"source\":\"iana\",\"extensions\":[\"cdmio\"]},\"application/cdmi-queue\":{\"source\":\"iana\",\"extensions\":[\"cdmiq\"]},\"application/cdni\":{\"source\":\"iana\"},\"application/cea\":{\"source\":\"iana\"},\"application/cea-2018+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cellml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cfw\":{\"source\":\"iana\"},\"application/clue+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/clue_info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cms\":{\"source\":\"iana\"},\"application/cnrp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/coap-group+json\":{\"source\":\"iana\",\"compressible\":true},\"application/coap-payload\":{\"source\":\"iana\"},\"application/commonground\":{\"source\":\"iana\"},\"application/conference-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cose\":{\"source\":\"iana\"},\"application/cose-key\":{\"source\":\"iana\"},\"application/cose-key-set\":{\"source\":\"iana\"},\"application/cpl+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/csrattrs\":{\"source\":\"iana\"},\"application/csta+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cstadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/csvm+json\":{\"source\":\"iana\",\"compressible\":true},\"application/cu-seeme\":{\"source\":\"apache\",\"extensions\":[\"cu\"]},\"application/cwt\":{\"source\":\"iana\"},\"application/cybercash\":{\"source\":\"iana\"},\"application/dart\":{\"compressible\":true},\"application/dash+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mpd\"]},\"application/dashdelta\":{\"source\":\"iana\"},\"application/davmount+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"davmount\"]},\"application/dca-rft\":{\"source\":\"iana\"},\"application/dcd\":{\"source\":\"iana\"},\"application/dec-dx\":{\"source\":\"iana\"},\"application/dialog-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dicom\":{\"source\":\"iana\"},\"application/dicom+json\":{\"source\":\"iana\",\"compressible\":true},\"application/dicom+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dii\":{\"source\":\"iana\"},\"application/dit\":{\"source\":\"iana\"},\"application/dns\":{\"source\":\"iana\"},\"application/dns+json\":{\"source\":\"iana\",\"compressible\":true},\"application/dns-message\":{\"source\":\"iana\"},\"application/docbook+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"dbk\"]},\"application/dskpp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dssc+der\":{\"source\":\"iana\",\"extensions\":[\"dssc\"]},\"application/dssc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdssc\"]},\"application/dvcs\":{\"source\":\"iana\"},\"application/ecmascript\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ecma\",\"es\"]},\"application/edi-consent\":{\"source\":\"iana\"},\"application/edi-x12\":{\"source\":\"iana\",\"compressible\":false},\"application/edifact\":{\"source\":\"iana\",\"compressible\":false},\"application/efi\":{\"source\":\"iana\"},\"application/emergencycalldata.comment+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.deviceinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.ecall.msd\":{\"source\":\"iana\"},\"application/emergencycalldata.providerinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.serviceinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.subscriberinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.veds+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emma+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"emma\"]},\"application/emotionml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"emotionml\"]},\"application/encaprtp\":{\"source\":\"iana\"},\"application/epp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/epub+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"epub\"]},\"application/eshop\":{\"source\":\"iana\"},\"application/exi\":{\"source\":\"iana\",\"extensions\":[\"exi\"]},\"application/expect-ct-report+json\":{\"source\":\"iana\",\"compressible\":true},\"application/fastinfoset\":{\"source\":\"iana\"},\"application/fastsoap\":{\"source\":\"iana\"},\"application/fdt+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"fdt\"]},\"application/fhir+json\":{\"source\":\"iana\",\"compressible\":true},\"application/fhir+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/fido.trusted-apps+json\":{\"compressible\":true},\"application/fits\":{\"source\":\"iana\"},\"application/flexfec\":{\"source\":\"iana\"},\"application/font-sfnt\":{\"source\":\"iana\"},\"application/font-tdpfr\":{\"source\":\"iana\",\"extensions\":[\"pfr\"]},\"application/font-woff\":{\"source\":\"iana\",\"compressible\":false},\"application/framework-attributes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/geo+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"geojson\"]},\"application/geo+json-seq\":{\"source\":\"iana\"},\"application/geopackage+sqlite3\":{\"source\":\"iana\"},\"application/geoxacml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/gltf-buffer\":{\"source\":\"iana\"},\"application/gml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"gml\"]},\"application/gpx+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"gpx\"]},\"application/gxf\":{\"source\":\"apache\",\"extensions\":[\"gxf\"]},\"application/gzip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"gz\"]},\"application/h224\":{\"source\":\"iana\"},\"application/held+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/hjson\":{\"extensions\":[\"hjson\"]},\"application/http\":{\"source\":\"iana\"},\"application/hyperstudio\":{\"source\":\"iana\",\"extensions\":[\"stk\"]},\"application/ibe-key-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ibe-pkg-reply+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ibe-pp-data\":{\"source\":\"iana\"},\"application/iges\":{\"source\":\"iana\"},\"application/im-iscomposing+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/index\":{\"source\":\"iana\"},\"application/index.cmd\":{\"source\":\"iana\"},\"application/index.obj\":{\"source\":\"iana\"},\"application/index.response\":{\"source\":\"iana\"},\"application/index.vnd\":{\"source\":\"iana\"},\"application/inkml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ink\",\"inkml\"]},\"application/iotp\":{\"source\":\"iana\"},\"application/ipfix\":{\"source\":\"iana\",\"extensions\":[\"ipfix\"]},\"application/ipp\":{\"source\":\"iana\"},\"application/isup\":{\"source\":\"iana\"},\"application/its+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"its\"]},\"application/java-archive\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"jar\",\"war\",\"ear\"]},\"application/java-serialized-object\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"ser\"]},\"application/java-vm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"class\"]},\"application/javascript\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"js\",\"mjs\"]},\"application/jf2feed+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jose\":{\"source\":\"iana\"},\"application/jose+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jrd+json\":{\"source\":\"iana\",\"compressible\":true},\"application/json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"json\",\"map\"]},\"application/json-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/json-seq\":{\"source\":\"iana\"},\"application/json5\":{\"extensions\":[\"json5\"]},\"application/jsonml+json\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"jsonml\"]},\"application/jwk+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jwk-set+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jwt\":{\"source\":\"iana\"},\"application/kpml-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/kpml-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ld+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"jsonld\"]},\"application/lgr+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lgr\"]},\"application/link-format\":{\"source\":\"iana\"},\"application/load-control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/lost+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lostxml\"]},\"application/lostsync+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/lxf\":{\"source\":\"iana\"},\"application/mac-binhex40\":{\"source\":\"iana\",\"extensions\":[\"hqx\"]},\"application/mac-compactpro\":{\"source\":\"apache\",\"extensions\":[\"cpt\"]},\"application/macwriteii\":{\"source\":\"iana\"},\"application/mads+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mads\"]},\"application/manifest+json\":{\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"webmanifest\"]},\"application/marc\":{\"source\":\"iana\",\"extensions\":[\"mrc\"]},\"application/marcxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mrcx\"]},\"application/mathematica\":{\"source\":\"iana\",\"extensions\":[\"ma\",\"nb\",\"mb\"]},\"application/mathml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mathml\"]},\"application/mathml-content+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mathml-presentation+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-associated-procedure-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-deregister+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-envelope+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-msk+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-msk-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-protection-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-reception-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-register+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-register-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-schedule+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-user-service-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbox\":{\"source\":\"iana\",\"extensions\":[\"mbox\"]},\"application/media-policy-dataset+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/media_control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mediaservercontrol+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mscml\"]},\"application/merge-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/metalink+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"metalink\"]},\"application/metalink4+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"meta4\"]},\"application/mets+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mets\"]},\"application/mf4\":{\"source\":\"iana\"},\"application/mikey\":{\"source\":\"iana\"},\"application/mipc\":{\"source\":\"iana\"},\"application/mmt-aei+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"maei\"]},\"application/mmt-usd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"musd\"]},\"application/mods+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mods\"]},\"application/moss-keys\":{\"source\":\"iana\"},\"application/moss-signature\":{\"source\":\"iana\"},\"application/mosskey-data\":{\"source\":\"iana\"},\"application/mosskey-request\":{\"source\":\"iana\"},\"application/mp21\":{\"source\":\"iana\",\"extensions\":[\"m21\",\"mp21\"]},\"application/mp4\":{\"source\":\"iana\",\"extensions\":[\"mp4s\",\"m4p\"]},\"application/mpeg4-generic\":{\"source\":\"iana\"},\"application/mpeg4-iod\":{\"source\":\"iana\"},\"application/mpeg4-iod-xmt\":{\"source\":\"iana\"},\"application/mrb-consumer+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdf\"]},\"application/mrb-publish+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdf\"]},\"application/msc-ivr+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/msc-mixer+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/msword\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"doc\",\"dot\"]},\"application/mud+json\":{\"source\":\"iana\",\"compressible\":true},\"application/multipart-core\":{\"source\":\"iana\"},\"application/mxf\":{\"source\":\"iana\",\"extensions\":[\"mxf\"]},\"application/n-quads\":{\"source\":\"iana\",\"extensions\":[\"nq\"]},\"application/n-triples\":{\"source\":\"iana\",\"extensions\":[\"nt\"]},\"application/nasdata\":{\"source\":\"iana\"},\"application/news-checkgroups\":{\"source\":\"iana\"},\"application/news-groupinfo\":{\"source\":\"iana\"},\"application/news-transmission\":{\"source\":\"iana\"},\"application/nlsml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/node\":{\"source\":\"iana\"},\"application/nss\":{\"source\":\"iana\"},\"application/ocsp-request\":{\"source\":\"iana\"},\"application/ocsp-response\":{\"source\":\"iana\"},\"application/octet-stream\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"]},\"application/oda\":{\"source\":\"iana\",\"extensions\":[\"oda\"]},\"application/odm+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/odx\":{\"source\":\"iana\"},\"application/oebps-package+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"opf\"]},\"application/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ogx\"]},\"application/omdoc+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"omdoc\"]},\"application/onenote\":{\"source\":\"apache\",\"extensions\":[\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"]},\"application/oscore\":{\"source\":\"iana\"},\"application/oxps\":{\"source\":\"iana\",\"extensions\":[\"oxps\"]},\"application/p2p-overlay+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"relo\"]},\"application/parityfec\":{\"source\":\"iana\"},\"application/passport\":{\"source\":\"iana\"},\"application/patch-ops-error+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xer\"]},\"application/pdf\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pdf\"]},\"application/pdx\":{\"source\":\"iana\"},\"application/pem-certificate-chain\":{\"source\":\"iana\"},\"application/pgp-encrypted\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pgp\"]},\"application/pgp-keys\":{\"source\":\"iana\"},\"application/pgp-signature\":{\"source\":\"iana\",\"extensions\":[\"asc\",\"sig\"]},\"application/pics-rules\":{\"source\":\"apache\",\"extensions\":[\"prf\"]},\"application/pidf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/pidf-diff+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/pkcs10\":{\"source\":\"iana\",\"extensions\":[\"p10\"]},\"application/pkcs12\":{\"source\":\"iana\"},\"application/pkcs7-mime\":{\"source\":\"iana\",\"extensions\":[\"p7m\",\"p7c\"]},\"application/pkcs7-signature\":{\"source\":\"iana\",\"extensions\":[\"p7s\"]},\"application/pkcs8\":{\"source\":\"iana\",\"extensions\":[\"p8\"]},\"application/pkcs8-encrypted\":{\"source\":\"iana\"},\"application/pkix-attr-cert\":{\"source\":\"iana\",\"extensions\":[\"ac\"]},\"application/pkix-cert\":{\"source\":\"iana\",\"extensions\":[\"cer\"]},\"application/pkix-crl\":{\"source\":\"iana\",\"extensions\":[\"crl\"]},\"application/pkix-pkipath\":{\"source\":\"iana\",\"extensions\":[\"pkipath\"]},\"application/pkixcmp\":{\"source\":\"iana\",\"extensions\":[\"pki\"]},\"application/pls+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"pls\"]},\"application/poc-settings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/postscript\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ai\",\"eps\",\"ps\"]},\"application/ppsp-tracker+json\":{\"source\":\"iana\",\"compressible\":true},\"application/problem+json\":{\"source\":\"iana\",\"compressible\":true},\"application/problem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/provenance+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"provx\"]},\"application/prs.alvestrand.titrax-sheet\":{\"source\":\"iana\"},\"application/prs.cww\":{\"source\":\"iana\",\"extensions\":[\"cww\"]},\"application/prs.hpub+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/prs.nprend\":{\"source\":\"iana\"},\"application/prs.plucker\":{\"source\":\"iana\"},\"application/prs.rdf-xml-crypt\":{\"source\":\"iana\"},\"application/prs.xsf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/pskc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"pskcxml\"]},\"application/qsig\":{\"source\":\"iana\"},\"application/raml+yaml\":{\"compressible\":true,\"extensions\":[\"raml\"]},\"application/raptorfec\":{\"source\":\"iana\"},\"application/rdap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/rdf+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rdf\",\"owl\"]},\"application/reginfo+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rif\"]},\"application/relax-ng-compact-syntax\":{\"source\":\"iana\",\"extensions\":[\"rnc\"]},\"application/remote-printing\":{\"source\":\"iana\"},\"application/reputon+json\":{\"source\":\"iana\",\"compressible\":true},\"application/resource-lists+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rl\"]},\"application/resource-lists-diff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rld\"]},\"application/rfc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/riscos\":{\"source\":\"iana\"},\"application/rlmi+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/rls-services+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rs\"]},\"application/route-apd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rapd\"]},\"application/route-s-tsid+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sls\"]},\"application/route-usd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rusd\"]},\"application/rpki-ghostbusters\":{\"source\":\"iana\",\"extensions\":[\"gbr\"]},\"application/rpki-manifest\":{\"source\":\"iana\",\"extensions\":[\"mft\"]},\"application/rpki-publication\":{\"source\":\"iana\"},\"application/rpki-roa\":{\"source\":\"iana\",\"extensions\":[\"roa\"]},\"application/rpki-updown\":{\"source\":\"iana\"},\"application/rsd+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"rsd\"]},\"application/rss+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"rss\"]},\"application/rtf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtf\"]},\"application/rtploopback\":{\"source\":\"iana\"},\"application/rtx\":{\"source\":\"iana\"},\"application/samlassertion+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/samlmetadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sbml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sbml\"]},\"application/scaip+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/scim+json\":{\"source\":\"iana\",\"compressible\":true},\"application/scvp-cv-request\":{\"source\":\"iana\",\"extensions\":[\"scq\"]},\"application/scvp-cv-response\":{\"source\":\"iana\",\"extensions\":[\"scs\"]},\"application/scvp-vp-request\":{\"source\":\"iana\",\"extensions\":[\"spq\"]},\"application/scvp-vp-response\":{\"source\":\"iana\",\"extensions\":[\"spp\"]},\"application/sdp\":{\"source\":\"iana\",\"extensions\":[\"sdp\"]},\"application/secevent+jwt\":{\"source\":\"iana\"},\"application/senml+cbor\":{\"source\":\"iana\"},\"application/senml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/senml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"senmlx\"]},\"application/senml-exi\":{\"source\":\"iana\"},\"application/sensml+cbor\":{\"source\":\"iana\"},\"application/sensml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/sensml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sensmlx\"]},\"application/sensml-exi\":{\"source\":\"iana\"},\"application/sep+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sep-exi\":{\"source\":\"iana\"},\"application/session-info\":{\"source\":\"iana\"},\"application/set-payment\":{\"source\":\"iana\"},\"application/set-payment-initiation\":{\"source\":\"iana\",\"extensions\":[\"setpay\"]},\"application/set-registration\":{\"source\":\"iana\"},\"application/set-registration-initiation\":{\"source\":\"iana\",\"extensions\":[\"setreg\"]},\"application/sgml\":{\"source\":\"iana\"},\"application/sgml-open-catalog\":{\"source\":\"iana\"},\"application/shf+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"shf\"]},\"application/sieve\":{\"source\":\"iana\",\"extensions\":[\"siv\",\"sieve\"]},\"application/simple-filter+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/simple-message-summary\":{\"source\":\"iana\"},\"application/simplesymbolcontainer\":{\"source\":\"iana\"},\"application/sipc\":{\"source\":\"iana\"},\"application/slate\":{\"source\":\"iana\"},\"application/smil\":{\"source\":\"iana\"},\"application/smil+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"smi\",\"smil\"]},\"application/smpte336m\":{\"source\":\"iana\"},\"application/soap+fastinfoset\":{\"source\":\"iana\"},\"application/soap+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sparql-query\":{\"source\":\"iana\",\"extensions\":[\"rq\"]},\"application/sparql-results+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"srx\"]},\"application/spirits-event+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sql\":{\"source\":\"iana\"},\"application/srgs\":{\"source\":\"iana\",\"extensions\":[\"gram\"]},\"application/srgs+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"grxml\"]},\"application/sru+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sru\"]},\"application/ssdl+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ssdl\"]},\"application/ssml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ssml\"]},\"application/stix+json\":{\"source\":\"iana\",\"compressible\":true},\"application/swid+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"swidtag\"]},\"application/tamp-apex-update\":{\"source\":\"iana\"},\"application/tamp-apex-update-confirm\":{\"source\":\"iana\"},\"application/tamp-community-update\":{\"source\":\"iana\"},\"application/tamp-community-update-confirm\":{\"source\":\"iana\"},\"application/tamp-error\":{\"source\":\"iana\"},\"application/tamp-sequence-adjust\":{\"source\":\"iana\"},\"application/tamp-sequence-adjust-confirm\":{\"source\":\"iana\"},\"application/tamp-status-query\":{\"source\":\"iana\"},\"application/tamp-status-response\":{\"source\":\"iana\"},\"application/tamp-update\":{\"source\":\"iana\"},\"application/tamp-update-confirm\":{\"source\":\"iana\"},\"application/tar\":{\"compressible\":true},\"application/taxii+json\":{\"source\":\"iana\",\"compressible\":true},\"application/tei+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tei\",\"teicorpus\"]},\"application/tetra_isi\":{\"source\":\"iana\"},\"application/thraud+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tfi\"]},\"application/timestamp-query\":{\"source\":\"iana\"},\"application/timestamp-reply\":{\"source\":\"iana\"},\"application/timestamped-data\":{\"source\":\"iana\",\"extensions\":[\"tsd\"]},\"application/tlsrpt+gzip\":{\"source\":\"iana\"},\"application/tlsrpt+json\":{\"source\":\"iana\",\"compressible\":true},\"application/tnauthlist\":{\"source\":\"iana\"},\"application/toml\":{\"compressible\":true,\"extensions\":[\"toml\"]},\"application/trickle-ice-sdpfrag\":{\"source\":\"iana\"},\"application/trig\":{\"source\":\"iana\"},\"application/ttml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ttml\"]},\"application/tve-trigger\":{\"source\":\"iana\"},\"application/tzif\":{\"source\":\"iana\"},\"application/tzif-leap\":{\"source\":\"iana\"},\"application/ulpfec\":{\"source\":\"iana\"},\"application/urc-grpsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/urc-ressheet+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rsheet\"]},\"application/urc-targetdesc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/urc-uisocketdesc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vcard+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vcard+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vemmi\":{\"source\":\"iana\"},\"application/vividence.scriptfile\":{\"source\":\"apache\"},\"application/vnd.1000minds.decision-model+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"1km\"]},\"application/vnd.3gpp-prose+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp-prose-pc3ch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp-v2x-local-service-information\":{\"source\":\"iana\"},\"application/vnd.3gpp.access-transfer-events+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.bsf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.gmop+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mc-signalling-ear\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-payload\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-signalling\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-floor-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-location-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-mbms-usage-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-signed+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-ue-init-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-affiliation-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-location-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-mbms-usage-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-transmission-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mid-call+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.pic-bw-large\":{\"source\":\"iana\",\"extensions\":[\"plb\"]},\"application/vnd.3gpp.pic-bw-small\":{\"source\":\"iana\",\"extensions\":[\"psb\"]},\"application/vnd.3gpp.pic-bw-var\":{\"source\":\"iana\",\"extensions\":[\"pvb\"]},\"application/vnd.3gpp.sms\":{\"source\":\"iana\"},\"application/vnd.3gpp.sms+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.srvcc-ext+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.srvcc-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.state-and-event-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.ussd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp2.bcmcsinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp2.sms\":{\"source\":\"iana\"},\"application/vnd.3gpp2.tcap\":{\"source\":\"iana\",\"extensions\":[\"tcap\"]},\"application/vnd.3lightssoftware.imagescal\":{\"source\":\"iana\"},\"application/vnd.3m.post-it-notes\":{\"source\":\"iana\",\"extensions\":[\"pwn\"]},\"application/vnd.accpac.simply.aso\":{\"source\":\"iana\",\"extensions\":[\"aso\"]},\"application/vnd.accpac.simply.imp\":{\"source\":\"iana\",\"extensions\":[\"imp\"]},\"application/vnd.acucobol\":{\"source\":\"iana\",\"extensions\":[\"acu\"]},\"application/vnd.acucorp\":{\"source\":\"iana\",\"extensions\":[\"atc\",\"acutc\"]},\"application/vnd.adobe.air-application-installer-package+zip\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"air\"]},\"application/vnd.adobe.flash.movie\":{\"source\":\"iana\"},\"application/vnd.adobe.formscentral.fcdt\":{\"source\":\"iana\",\"extensions\":[\"fcdt\"]},\"application/vnd.adobe.fxp\":{\"source\":\"iana\",\"extensions\":[\"fxp\",\"fxpl\"]},\"application/vnd.adobe.partial-upload\":{\"source\":\"iana\"},\"application/vnd.adobe.xdp+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdp\"]},\"application/vnd.adobe.xfdf\":{\"source\":\"iana\",\"extensions\":[\"xfdf\"]},\"application/vnd.aether.imp\":{\"source\":\"iana\"},\"application/vnd.afpc.afplinedata\":{\"source\":\"iana\"},\"application/vnd.afpc.afplinedata-pagedef\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-charset\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-codedfont\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-codepage\":{\"source\":\"iana\"},\"application/vnd.afpc.modca\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-formdef\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-mediummap\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-objectcontainer\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-overlay\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-pagesegment\":{\"source\":\"iana\"},\"application/vnd.ah-barcode\":{\"source\":\"iana\"},\"application/vnd.ahead.space\":{\"source\":\"iana\",\"extensions\":[\"ahead\"]},\"application/vnd.airzip.filesecure.azf\":{\"source\":\"iana\",\"extensions\":[\"azf\"]},\"application/vnd.airzip.filesecure.azs\":{\"source\":\"iana\",\"extensions\":[\"azs\"]},\"application/vnd.amadeus+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.amazon.ebook\":{\"source\":\"apache\",\"extensions\":[\"azw\"]},\"application/vnd.amazon.mobi8-ebook\":{\"source\":\"iana\"},\"application/vnd.americandynamics.acc\":{\"source\":\"iana\",\"extensions\":[\"acc\"]},\"application/vnd.amiga.ami\":{\"source\":\"iana\",\"extensions\":[\"ami\"]},\"application/vnd.amundsen.maze+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.android.ota\":{\"source\":\"iana\"},\"application/vnd.android.package-archive\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"apk\"]},\"application/vnd.anki\":{\"source\":\"iana\"},\"application/vnd.anser-web-certificate-issue-initiation\":{\"source\":\"iana\",\"extensions\":[\"cii\"]},\"application/vnd.anser-web-funds-transfer-initiation\":{\"source\":\"apache\",\"extensions\":[\"fti\"]},\"application/vnd.antix.game-component\":{\"source\":\"iana\",\"extensions\":[\"atx\"]},\"application/vnd.apache.thrift.binary\":{\"source\":\"iana\"},\"application/vnd.apache.thrift.compact\":{\"source\":\"iana\"},\"application/vnd.apache.thrift.json\":{\"source\":\"iana\"},\"application/vnd.api+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.aplextor.warrp+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.apothekende.reservation+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.apple.installer+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mpkg\"]},\"application/vnd.apple.keynote\":{\"source\":\"iana\",\"extensions\":[\"keynote\"]},\"application/vnd.apple.mpegurl\":{\"source\":\"iana\",\"extensions\":[\"m3u8\"]},\"application/vnd.apple.numbers\":{\"source\":\"iana\",\"extensions\":[\"numbers\"]},\"application/vnd.apple.pages\":{\"source\":\"iana\",\"extensions\":[\"pages\"]},\"application/vnd.apple.pkpass\":{\"compressible\":false,\"extensions\":[\"pkpass\"]},\"application/vnd.arastra.swi\":{\"source\":\"iana\"},\"application/vnd.aristanetworks.swi\":{\"source\":\"iana\",\"extensions\":[\"swi\"]},\"application/vnd.artisan+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.artsquare\":{\"source\":\"iana\"},\"application/vnd.astraea-software.iota\":{\"source\":\"iana\",\"extensions\":[\"iota\"]},\"application/vnd.audiograph\":{\"source\":\"iana\",\"extensions\":[\"aep\"]},\"application/vnd.autopackage\":{\"source\":\"iana\"},\"application/vnd.avalon+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.avistar+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.balsamiq.bmml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"bmml\"]},\"application/vnd.balsamiq.bmpr\":{\"source\":\"iana\"},\"application/vnd.banana-accounting\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.error\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.msg\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.msg+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.bekitzur-stech+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.bint.med-content\":{\"source\":\"iana\"},\"application/vnd.biopax.rdf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.blink-idb-value-wrapper\":{\"source\":\"iana\"},\"application/vnd.blueice.multipass\":{\"source\":\"iana\",\"extensions\":[\"mpm\"]},\"application/vnd.bluetooth.ep.oob\":{\"source\":\"iana\"},\"application/vnd.bluetooth.le.oob\":{\"source\":\"iana\"},\"application/vnd.bmi\":{\"source\":\"iana\",\"extensions\":[\"bmi\"]},\"application/vnd.bpf\":{\"source\":\"iana\"},\"application/vnd.bpf3\":{\"source\":\"iana\"},\"application/vnd.businessobjects\":{\"source\":\"iana\",\"extensions\":[\"rep\"]},\"application/vnd.byu.uapi+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cab-jscript\":{\"source\":\"iana\"},\"application/vnd.canon-cpdl\":{\"source\":\"iana\"},\"application/vnd.canon-lips\":{\"source\":\"iana\"},\"application/vnd.capasystems-pg+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cendio.thinlinc.clientconf\":{\"source\":\"iana\"},\"application/vnd.century-systems.tcp_stream\":{\"source\":\"iana\"},\"application/vnd.chemdraw+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"cdxml\"]},\"application/vnd.chess-pgn\":{\"source\":\"iana\"},\"application/vnd.chipnuts.karaoke-mmd\":{\"source\":\"iana\",\"extensions\":[\"mmd\"]},\"application/vnd.ciedi\":{\"source\":\"iana\"},\"application/vnd.cinderella\":{\"source\":\"iana\",\"extensions\":[\"cdy\"]},\"application/vnd.cirpack.isdn-ext\":{\"source\":\"iana\"},\"application/vnd.citationstyles.style+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"csl\"]},\"application/vnd.claymore\":{\"source\":\"iana\",\"extensions\":[\"cla\"]},\"application/vnd.cloanto.rp9\":{\"source\":\"iana\",\"extensions\":[\"rp9\"]},\"application/vnd.clonk.c4group\":{\"source\":\"iana\",\"extensions\":[\"c4g\",\"c4d\",\"c4f\",\"c4p\",\"c4u\"]},\"application/vnd.cluetrust.cartomobile-config\":{\"source\":\"iana\",\"extensions\":[\"c11amc\"]},\"application/vnd.cluetrust.cartomobile-config-pkg\":{\"source\":\"iana\",\"extensions\":[\"c11amz\"]},\"application/vnd.coffeescript\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.document\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.document-template\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.presentation\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.presentation-template\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.spreadsheet\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.spreadsheet-template\":{\"source\":\"iana\"},\"application/vnd.collection+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.collection.doc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.collection.next+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.comicbook+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.comicbook-rar\":{\"source\":\"iana\"},\"application/vnd.commerce-battelle\":{\"source\":\"iana\"},\"application/vnd.commonspace\":{\"source\":\"iana\",\"extensions\":[\"csp\"]},\"application/vnd.contact.cmsg\":{\"source\":\"iana\",\"extensions\":[\"cdbcmsg\"]},\"application/vnd.coreos.ignition+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cosmocaller\":{\"source\":\"iana\",\"extensions\":[\"cmc\"]},\"application/vnd.crick.clicker\":{\"source\":\"iana\",\"extensions\":[\"clkx\"]},\"application/vnd.crick.clicker.keyboard\":{\"source\":\"iana\",\"extensions\":[\"clkk\"]},\"application/vnd.crick.clicker.palette\":{\"source\":\"iana\",\"extensions\":[\"clkp\"]},\"application/vnd.crick.clicker.template\":{\"source\":\"iana\",\"extensions\":[\"clkt\"]},\"application/vnd.crick.clicker.wordbank\":{\"source\":\"iana\",\"extensions\":[\"clkw\"]},\"application/vnd.criticaltools.wbs+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wbs\"]},\"application/vnd.cryptii.pipe+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.crypto-shade-file\":{\"source\":\"iana\"},\"application/vnd.ctc-posml\":{\"source\":\"iana\",\"extensions\":[\"pml\"]},\"application/vnd.ctct.ws+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cups-pdf\":{\"source\":\"iana\"},\"application/vnd.cups-postscript\":{\"source\":\"iana\"},\"application/vnd.cups-ppd\":{\"source\":\"iana\",\"extensions\":[\"ppd\"]},\"application/vnd.cups-raster\":{\"source\":\"iana\"},\"application/vnd.cups-raw\":{\"source\":\"iana\"},\"application/vnd.curl\":{\"source\":\"iana\"},\"application/vnd.curl.car\":{\"source\":\"apache\",\"extensions\":[\"car\"]},\"application/vnd.curl.pcurl\":{\"source\":\"apache\",\"extensions\":[\"pcurl\"]},\"application/vnd.cyan.dean.root+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cybank\":{\"source\":\"iana\"},\"application/vnd.d2l.coursepackage1p0+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.dart\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dart\"]},\"application/vnd.data-vision.rdz\":{\"source\":\"iana\",\"extensions\":[\"rdz\"]},\"application/vnd.datapackage+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dataresource+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.debian.binary-package\":{\"source\":\"iana\"},\"application/vnd.dece.data\":{\"source\":\"iana\",\"extensions\":[\"uvf\",\"uvvf\",\"uvd\",\"uvvd\"]},\"application/vnd.dece.ttml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uvt\",\"uvvt\"]},\"application/vnd.dece.unspecified\":{\"source\":\"iana\",\"extensions\":[\"uvx\",\"uvvx\"]},\"application/vnd.dece.zip\":{\"source\":\"iana\",\"extensions\":[\"uvz\",\"uvvz\"]},\"application/vnd.denovo.fcselayout-link\":{\"source\":\"iana\",\"extensions\":[\"fe_launch\"]},\"application/vnd.desmume.movie\":{\"source\":\"iana\"},\"application/vnd.dir-bi.plate-dl-nosuffix\":{\"source\":\"iana\"},\"application/vnd.dm.delegation+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dna\":{\"source\":\"iana\",\"extensions\":[\"dna\"]},\"application/vnd.document+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dolby.mlp\":{\"source\":\"apache\",\"extensions\":[\"mlp\"]},\"application/vnd.dolby.mobile.1\":{\"source\":\"iana\"},\"application/vnd.dolby.mobile.2\":{\"source\":\"iana\"},\"application/vnd.doremir.scorecloud-binary-document\":{\"source\":\"iana\"},\"application/vnd.dpgraph\":{\"source\":\"iana\",\"extensions\":[\"dpg\"]},\"application/vnd.dreamfactory\":{\"source\":\"iana\",\"extensions\":[\"dfac\"]},\"application/vnd.drive+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ds-keypoint\":{\"source\":\"apache\",\"extensions\":[\"kpxx\"]},\"application/vnd.dtg.local\":{\"source\":\"iana\"},\"application/vnd.dtg.local.flash\":{\"source\":\"iana\"},\"application/vnd.dtg.local.html\":{\"source\":\"iana\"},\"application/vnd.dvb.ait\":{\"source\":\"iana\",\"extensions\":[\"ait\"]},\"application/vnd.dvb.dvbj\":{\"source\":\"iana\"},\"application/vnd.dvb.esgcontainer\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcdftnotifaccess\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgaccess\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgaccess2\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgpdd\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcroaming\":{\"source\":\"iana\"},\"application/vnd.dvb.iptv.alfec-base\":{\"source\":\"iana\"},\"application/vnd.dvb.iptv.alfec-enhancement\":{\"source\":\"iana\"},\"application/vnd.dvb.notif-aggregate-root+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-container+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-generic+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-msglist+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-registration-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-registration-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-init+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.pfr\":{\"source\":\"iana\"},\"application/vnd.dvb.service\":{\"source\":\"iana\",\"extensions\":[\"svc\"]},\"application/vnd.dxr\":{\"source\":\"iana\"},\"application/vnd.dynageo\":{\"source\":\"iana\",\"extensions\":[\"geo\"]},\"application/vnd.dzr\":{\"source\":\"iana\"},\"application/vnd.easykaraoke.cdgdownload\":{\"source\":\"iana\"},\"application/vnd.ecdis-update\":{\"source\":\"iana\"},\"application/vnd.ecip.rlp\":{\"source\":\"iana\"},\"application/vnd.ecowin.chart\":{\"source\":\"iana\",\"extensions\":[\"mag\"]},\"application/vnd.ecowin.filerequest\":{\"source\":\"iana\"},\"application/vnd.ecowin.fileupdate\":{\"source\":\"iana\"},\"application/vnd.ecowin.series\":{\"source\":\"iana\"},\"application/vnd.ecowin.seriesrequest\":{\"source\":\"iana\"},\"application/vnd.ecowin.seriesupdate\":{\"source\":\"iana\"},\"application/vnd.efi.img\":{\"source\":\"iana\"},\"application/vnd.efi.iso\":{\"source\":\"iana\"},\"application/vnd.emclient.accessrequest+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.enliven\":{\"source\":\"iana\",\"extensions\":[\"nml\"]},\"application/vnd.enphase.envoy\":{\"source\":\"iana\"},\"application/vnd.eprints.data+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.epson.esf\":{\"source\":\"iana\",\"extensions\":[\"esf\"]},\"application/vnd.epson.msf\":{\"source\":\"iana\",\"extensions\":[\"msf\"]},\"application/vnd.epson.quickanime\":{\"source\":\"iana\",\"extensions\":[\"qam\"]},\"application/vnd.epson.salt\":{\"source\":\"iana\",\"extensions\":[\"slt\"]},\"application/vnd.epson.ssf\":{\"source\":\"iana\",\"extensions\":[\"ssf\"]},\"application/vnd.ericsson.quickcall\":{\"source\":\"iana\"},\"application/vnd.espass-espass+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.eszigno3+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"es3\",\"et3\"]},\"application/vnd.etsi.aoc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.asic-e+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.etsi.asic-s+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.etsi.cug+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvcommand+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvdiscovery+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-bc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-cod+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-npvr+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvservice+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsync+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvueprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.mcid+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.mheg5\":{\"source\":\"iana\"},\"application/vnd.etsi.overload-control-policy-dataset+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.pstn+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.sci+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.simservs+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.timestamp-token\":{\"source\":\"iana\"},\"application/vnd.etsi.tsl+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.tsl.der\":{\"source\":\"iana\"},\"application/vnd.eudora.data\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.profile\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.settings\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.theme\":{\"source\":\"iana\"},\"application/vnd.exstream-empower+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.exstream-package\":{\"source\":\"iana\"},\"application/vnd.ezpix-album\":{\"source\":\"iana\",\"extensions\":[\"ez2\"]},\"application/vnd.ezpix-package\":{\"source\":\"iana\",\"extensions\":[\"ez3\"]},\"application/vnd.f-secure.mobile\":{\"source\":\"iana\"},\"application/vnd.fastcopy-disk-image\":{\"source\":\"iana\"},\"application/vnd.fdf\":{\"source\":\"iana\",\"extensions\":[\"fdf\"]},\"application/vnd.fdsn.mseed\":{\"source\":\"iana\",\"extensions\":[\"mseed\"]},\"application/vnd.fdsn.seed\":{\"source\":\"iana\",\"extensions\":[\"seed\",\"dataless\"]},\"application/vnd.ffsns\":{\"source\":\"iana\"},\"application/vnd.ficlab.flb+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.filmit.zfc\":{\"source\":\"iana\"},\"application/vnd.fints\":{\"source\":\"iana\"},\"application/vnd.firemonkeys.cloudcell\":{\"source\":\"iana\"},\"application/vnd.flographit\":{\"source\":\"iana\",\"extensions\":[\"gph\"]},\"application/vnd.fluxtime.clip\":{\"source\":\"iana\",\"extensions\":[\"ftc\"]},\"application/vnd.font-fontforge-sfd\":{\"source\":\"iana\"},\"application/vnd.framemaker\":{\"source\":\"iana\",\"extensions\":[\"fm\",\"frame\",\"maker\",\"book\"]},\"application/vnd.frogans.fnc\":{\"source\":\"iana\",\"extensions\":[\"fnc\"]},\"application/vnd.frogans.ltf\":{\"source\":\"iana\",\"extensions\":[\"ltf\"]},\"application/vnd.fsc.weblaunch\":{\"source\":\"iana\",\"extensions\":[\"fsc\"]},\"application/vnd.fujitsu.oasys\":{\"source\":\"iana\",\"extensions\":[\"oas\"]},\"application/vnd.fujitsu.oasys2\":{\"source\":\"iana\",\"extensions\":[\"oa2\"]},\"application/vnd.fujitsu.oasys3\":{\"source\":\"iana\",\"extensions\":[\"oa3\"]},\"application/vnd.fujitsu.oasysgp\":{\"source\":\"iana\",\"extensions\":[\"fg5\"]},\"application/vnd.fujitsu.oasysprs\":{\"source\":\"iana\",\"extensions\":[\"bh2\"]},\"application/vnd.fujixerox.art-ex\":{\"source\":\"iana\"},\"application/vnd.fujixerox.art4\":{\"source\":\"iana\"},\"application/vnd.fujixerox.ddd\":{\"source\":\"iana\",\"extensions\":[\"ddd\"]},\"application/vnd.fujixerox.docuworks\":{\"source\":\"iana\",\"extensions\":[\"xdw\"]},\"application/vnd.fujixerox.docuworks.binder\":{\"source\":\"iana\",\"extensions\":[\"xbd\"]},\"application/vnd.fujixerox.docuworks.container\":{\"source\":\"iana\"},\"application/vnd.fujixerox.hbpl\":{\"source\":\"iana\"},\"application/vnd.fut-misnet\":{\"source\":\"iana\"},\"application/vnd.futoin+cbor\":{\"source\":\"iana\"},\"application/vnd.futoin+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.fuzzysheet\":{\"source\":\"iana\",\"extensions\":[\"fzs\"]},\"application/vnd.genomatix.tuxedo\":{\"source\":\"iana\",\"extensions\":[\"txd\"]},\"application/vnd.gentics.grd+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geo+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geocube+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geogebra.file\":{\"source\":\"iana\",\"extensions\":[\"ggb\"]},\"application/vnd.geogebra.tool\":{\"source\":\"iana\",\"extensions\":[\"ggt\"]},\"application/vnd.geometry-explorer\":{\"source\":\"iana\",\"extensions\":[\"gex\",\"gre\"]},\"application/vnd.geonext\":{\"source\":\"iana\",\"extensions\":[\"gxt\"]},\"application/vnd.geoplan\":{\"source\":\"iana\",\"extensions\":[\"g2w\"]},\"application/vnd.geospace\":{\"source\":\"iana\",\"extensions\":[\"g3w\"]},\"application/vnd.gerber\":{\"source\":\"iana\"},\"application/vnd.globalplatform.card-content-mgt\":{\"source\":\"iana\"},\"application/vnd.globalplatform.card-content-mgt-response\":{\"source\":\"iana\"},\"application/vnd.gmx\":{\"source\":\"iana\",\"extensions\":[\"gmx\"]},\"application/vnd.google-apps.document\":{\"compressible\":false,\"extensions\":[\"gdoc\"]},\"application/vnd.google-apps.presentation\":{\"compressible\":false,\"extensions\":[\"gslides\"]},\"application/vnd.google-apps.spreadsheet\":{\"compressible\":false,\"extensions\":[\"gsheet\"]},\"application/vnd.google-earth.kml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"kml\"]},\"application/vnd.google-earth.kmz\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"kmz\"]},\"application/vnd.gov.sk.e-form+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.gov.sk.e-form+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.gov.sk.xmldatacontainer+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.grafeq\":{\"source\":\"iana\",\"extensions\":[\"gqf\",\"gqs\"]},\"application/vnd.gridmp\":{\"source\":\"iana\"},\"application/vnd.groove-account\":{\"source\":\"iana\",\"extensions\":[\"gac\"]},\"application/vnd.groove-help\":{\"source\":\"iana\",\"extensions\":[\"ghf\"]},\"application/vnd.groove-identity-message\":{\"source\":\"iana\",\"extensions\":[\"gim\"]},\"application/vnd.groove-injector\":{\"source\":\"iana\",\"extensions\":[\"grv\"]},\"application/vnd.groove-tool-message\":{\"source\":\"iana\",\"extensions\":[\"gtm\"]},\"application/vnd.groove-tool-template\":{\"source\":\"iana\",\"extensions\":[\"tpl\"]},\"application/vnd.groove-vcard\":{\"source\":\"iana\",\"extensions\":[\"vcg\"]},\"application/vnd.hal+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hal+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"hal\"]},\"application/vnd.handheld-entertainment+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"zmm\"]},\"application/vnd.hbci\":{\"source\":\"iana\",\"extensions\":[\"hbci\"]},\"application/vnd.hc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hcl-bireports\":{\"source\":\"iana\"},\"application/vnd.hdt\":{\"source\":\"iana\"},\"application/vnd.heroku+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hhe.lesson-player\":{\"source\":\"iana\",\"extensions\":[\"les\"]},\"application/vnd.hp-hpgl\":{\"source\":\"iana\",\"extensions\":[\"hpgl\"]},\"application/vnd.hp-hpid\":{\"source\":\"iana\",\"extensions\":[\"hpid\"]},\"application/vnd.hp-hps\":{\"source\":\"iana\",\"extensions\":[\"hps\"]},\"application/vnd.hp-jlyt\":{\"source\":\"iana\",\"extensions\":[\"jlt\"]},\"application/vnd.hp-pcl\":{\"source\":\"iana\",\"extensions\":[\"pcl\"]},\"application/vnd.hp-pclxl\":{\"source\":\"iana\",\"extensions\":[\"pclxl\"]},\"application/vnd.httphone\":{\"source\":\"iana\"},\"application/vnd.hydrostatix.sof-data\":{\"source\":\"iana\",\"extensions\":[\"sfd-hdstx\"]},\"application/vnd.hyper+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hyper-item+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hyperdrive+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hzn-3d-crossword\":{\"source\":\"iana\"},\"application/vnd.ibm.afplinedata\":{\"source\":\"iana\"},\"application/vnd.ibm.electronic-media\":{\"source\":\"iana\"},\"application/vnd.ibm.minipay\":{\"source\":\"iana\",\"extensions\":[\"mpy\"]},\"application/vnd.ibm.modcap\":{\"source\":\"iana\",\"extensions\":[\"afp\",\"listafp\",\"list3820\"]},\"application/vnd.ibm.rights-management\":{\"source\":\"iana\",\"extensions\":[\"irm\"]},\"application/vnd.ibm.secure-container\":{\"source\":\"iana\",\"extensions\":[\"sc\"]},\"application/vnd.iccprofile\":{\"source\":\"iana\",\"extensions\":[\"icc\",\"icm\"]},\"application/vnd.ieee.1905\":{\"source\":\"iana\"},\"application/vnd.igloader\":{\"source\":\"iana\",\"extensions\":[\"igl\"]},\"application/vnd.imagemeter.folder+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.imagemeter.image+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.immervision-ivp\":{\"source\":\"iana\",\"extensions\":[\"ivp\"]},\"application/vnd.immervision-ivu\":{\"source\":\"iana\",\"extensions\":[\"ivu\"]},\"application/vnd.ims.imsccv1p1\":{\"source\":\"iana\"},\"application/vnd.ims.imsccv1p2\":{\"source\":\"iana\"},\"application/vnd.ims.imsccv1p3\":{\"source\":\"iana\"},\"application/vnd.ims.lis.v2.result+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolconsumerprofile+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolproxy+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolproxy.id+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolsettings+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolsettings.simple+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.informedcontrol.rms+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.informix-visionary\":{\"source\":\"iana\"},\"application/vnd.infotech.project\":{\"source\":\"iana\"},\"application/vnd.infotech.project+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.innopath.wamp.notification\":{\"source\":\"iana\"},\"application/vnd.insors.igm\":{\"source\":\"iana\",\"extensions\":[\"igm\"]},\"application/vnd.intercon.formnet\":{\"source\":\"iana\",\"extensions\":[\"xpw\",\"xpx\"]},\"application/vnd.intergeo\":{\"source\":\"iana\",\"extensions\":[\"i2g\"]},\"application/vnd.intertrust.digibox\":{\"source\":\"iana\"},\"application/vnd.intertrust.nncp\":{\"source\":\"iana\"},\"application/vnd.intu.qbo\":{\"source\":\"iana\",\"extensions\":[\"qbo\"]},\"application/vnd.intu.qfx\":{\"source\":\"iana\",\"extensions\":[\"qfx\"]},\"application/vnd.iptc.g2.catalogitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.conceptitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.knowledgeitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.newsitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.newsmessage+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.packageitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.planningitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ipunplugged.rcprofile\":{\"source\":\"iana\",\"extensions\":[\"rcprofile\"]},\"application/vnd.irepository.package+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"irp\"]},\"application/vnd.is-xpr\":{\"source\":\"iana\",\"extensions\":[\"xpr\"]},\"application/vnd.isac.fcs\":{\"source\":\"iana\",\"extensions\":[\"fcs\"]},\"application/vnd.iso11783-10+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.jam\":{\"source\":\"iana\",\"extensions\":[\"jam\"]},\"application/vnd.japannet-directory-service\":{\"source\":\"iana\"},\"application/vnd.japannet-jpnstore-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-payment-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-registration\":{\"source\":\"iana\"},\"application/vnd.japannet-registration-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-setstore-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-verification\":{\"source\":\"iana\"},\"application/vnd.japannet-verification-wakeup\":{\"source\":\"iana\"},\"application/vnd.jcp.javame.midlet-rms\":{\"source\":\"iana\",\"extensions\":[\"rms\"]},\"application/vnd.jisp\":{\"source\":\"iana\",\"extensions\":[\"jisp\"]},\"application/vnd.joost.joda-archive\":{\"source\":\"iana\",\"extensions\":[\"joda\"]},\"application/vnd.jsk.isdn-ngn\":{\"source\":\"iana\"},\"application/vnd.kahootz\":{\"source\":\"iana\",\"extensions\":[\"ktz\",\"ktr\"]},\"application/vnd.kde.karbon\":{\"source\":\"iana\",\"extensions\":[\"karbon\"]},\"application/vnd.kde.kchart\":{\"source\":\"iana\",\"extensions\":[\"chrt\"]},\"application/vnd.kde.kformula\":{\"source\":\"iana\",\"extensions\":[\"kfo\"]},\"application/vnd.kde.kivio\":{\"source\":\"iana\",\"extensions\":[\"flw\"]},\"application/vnd.kde.kontour\":{\"source\":\"iana\",\"extensions\":[\"kon\"]},\"application/vnd.kde.kpresenter\":{\"source\":\"iana\",\"extensions\":[\"kpr\",\"kpt\"]},\"application/vnd.kde.kspread\":{\"source\":\"iana\",\"extensions\":[\"ksp\"]},\"application/vnd.kde.kword\":{\"source\":\"iana\",\"extensions\":[\"kwd\",\"kwt\"]},\"application/vnd.kenameaapp\":{\"source\":\"iana\",\"extensions\":[\"htke\"]},\"application/vnd.kidspiration\":{\"source\":\"iana\",\"extensions\":[\"kia\"]},\"application/vnd.kinar\":{\"source\":\"iana\",\"extensions\":[\"kne\",\"knp\"]},\"application/vnd.koan\":{\"source\":\"iana\",\"extensions\":[\"skp\",\"skd\",\"skt\",\"skm\"]},\"application/vnd.kodak-descriptor\":{\"source\":\"iana\",\"extensions\":[\"sse\"]},\"application/vnd.las\":{\"source\":\"iana\"},\"application/vnd.las.las+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.las.las+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lasxml\"]},\"application/vnd.laszip\":{\"source\":\"iana\"},\"application/vnd.leap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.liberty-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.llamagraphics.life-balance.desktop\":{\"source\":\"iana\",\"extensions\":[\"lbd\"]},\"application/vnd.llamagraphics.life-balance.exchange+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lbe\"]},\"application/vnd.logipipe.circuit+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.loom\":{\"source\":\"iana\"},\"application/vnd.lotus-1-2-3\":{\"source\":\"iana\",\"extensions\":[\"123\"]},\"application/vnd.lotus-approach\":{\"source\":\"iana\",\"extensions\":[\"apr\"]},\"application/vnd.lotus-freelance\":{\"source\":\"iana\",\"extensions\":[\"pre\"]},\"application/vnd.lotus-notes\":{\"source\":\"iana\",\"extensions\":[\"nsf\"]},\"application/vnd.lotus-organizer\":{\"source\":\"iana\",\"extensions\":[\"org\"]},\"application/vnd.lotus-screencam\":{\"source\":\"iana\",\"extensions\":[\"scm\"]},\"application/vnd.lotus-wordpro\":{\"source\":\"iana\",\"extensions\":[\"lwp\"]},\"application/vnd.macports.portpkg\":{\"source\":\"iana\",\"extensions\":[\"portpkg\"]},\"application/vnd.mapbox-vector-tile\":{\"source\":\"iana\"},\"application/vnd.marlin.drm.actiontoken+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.conftoken+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.license+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.mdcf\":{\"source\":\"iana\"},\"application/vnd.mason+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.maxmind.maxmind-db\":{\"source\":\"iana\"},\"application/vnd.mcd\":{\"source\":\"iana\",\"extensions\":[\"mcd\"]},\"application/vnd.medcalcdata\":{\"source\":\"iana\",\"extensions\":[\"mc1\"]},\"application/vnd.mediastation.cdkey\":{\"source\":\"iana\",\"extensions\":[\"cdkey\"]},\"application/vnd.meridian-slingshot\":{\"source\":\"iana\"},\"application/vnd.mfer\":{\"source\":\"iana\",\"extensions\":[\"mwf\"]},\"application/vnd.mfmp\":{\"source\":\"iana\",\"extensions\":[\"mfm\"]},\"application/vnd.micro+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.micrografx.flo\":{\"source\":\"iana\",\"extensions\":[\"flo\"]},\"application/vnd.micrografx.igx\":{\"source\":\"iana\",\"extensions\":[\"igx\"]},\"application/vnd.microsoft.portable-executable\":{\"source\":\"iana\"},\"application/vnd.microsoft.windows.thumbnail-cache\":{\"source\":\"iana\"},\"application/vnd.miele+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.mif\":{\"source\":\"iana\",\"extensions\":[\"mif\"]},\"application/vnd.minisoft-hp3000-save\":{\"source\":\"iana\"},\"application/vnd.mitsubishi.misty-guard.trustweb\":{\"source\":\"iana\"},\"application/vnd.mobius.daf\":{\"source\":\"iana\",\"extensions\":[\"daf\"]},\"application/vnd.mobius.dis\":{\"source\":\"iana\",\"extensions\":[\"dis\"]},\"application/vnd.mobius.mbk\":{\"source\":\"iana\",\"extensions\":[\"mbk\"]},\"application/vnd.mobius.mqy\":{\"source\":\"iana\",\"extensions\":[\"mqy\"]},\"application/vnd.mobius.msl\":{\"source\":\"iana\",\"extensions\":[\"msl\"]},\"application/vnd.mobius.plc\":{\"source\":\"iana\",\"extensions\":[\"plc\"]},\"application/vnd.mobius.txf\":{\"source\":\"iana\",\"extensions\":[\"txf\"]},\"application/vnd.mophun.application\":{\"source\":\"iana\",\"extensions\":[\"mpn\"]},\"application/vnd.mophun.certificate\":{\"source\":\"iana\",\"extensions\":[\"mpc\"]},\"application/vnd.motorola.flexsuite\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.adsi\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.fis\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.gotap\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.kmr\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.ttc\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.wem\":{\"source\":\"iana\"},\"application/vnd.motorola.iprm\":{\"source\":\"iana\"},\"application/vnd.mozilla.xul+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xul\"]},\"application/vnd.ms-3mfdocument\":{\"source\":\"iana\"},\"application/vnd.ms-artgalry\":{\"source\":\"iana\",\"extensions\":[\"cil\"]},\"application/vnd.ms-asf\":{\"source\":\"iana\"},\"application/vnd.ms-cab-compressed\":{\"source\":\"iana\",\"extensions\":[\"cab\"]},\"application/vnd.ms-color.iccprofile\":{\"source\":\"apache\"},\"application/vnd.ms-excel\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xls\",\"xlm\",\"xla\",\"xlc\",\"xlt\",\"xlw\"]},\"application/vnd.ms-excel.addin.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlam\"]},\"application/vnd.ms-excel.sheet.binary.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlsb\"]},\"application/vnd.ms-excel.sheet.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlsm\"]},\"application/vnd.ms-excel.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xltm\"]},\"application/vnd.ms-fontobject\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"eot\"]},\"application/vnd.ms-htmlhelp\":{\"source\":\"iana\",\"extensions\":[\"chm\"]},\"application/vnd.ms-ims\":{\"source\":\"iana\",\"extensions\":[\"ims\"]},\"application/vnd.ms-lrm\":{\"source\":\"iana\",\"extensions\":[\"lrm\"]},\"application/vnd.ms-office.activex+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-officetheme\":{\"source\":\"iana\",\"extensions\":[\"thmx\"]},\"application/vnd.ms-opentype\":{\"source\":\"apache\",\"compressible\":true},\"application/vnd.ms-outlook\":{\"compressible\":false,\"extensions\":[\"msg\"]},\"application/vnd.ms-package.obfuscated-opentype\":{\"source\":\"apache\"},\"application/vnd.ms-pki.seccat\":{\"source\":\"apache\",\"extensions\":[\"cat\"]},\"application/vnd.ms-pki.stl\":{\"source\":\"apache\",\"extensions\":[\"stl\"]},\"application/vnd.ms-playready.initiator+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-powerpoint\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ppt\",\"pps\",\"pot\"]},\"application/vnd.ms-powerpoint.addin.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"ppam\"]},\"application/vnd.ms-powerpoint.presentation.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"pptm\"]},\"application/vnd.ms-powerpoint.slide.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"sldm\"]},\"application/vnd.ms-powerpoint.slideshow.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"ppsm\"]},\"application/vnd.ms-powerpoint.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"potm\"]},\"application/vnd.ms-printdevicecapabilities+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-printing.printticket+xml\":{\"source\":\"apache\",\"compressible\":true},\"application/vnd.ms-printschematicket+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-project\":{\"source\":\"iana\",\"extensions\":[\"mpp\",\"mpt\"]},\"application/vnd.ms-tnef\":{\"source\":\"iana\"},\"application/vnd.ms-windows.devicepairing\":{\"source\":\"iana\"},\"application/vnd.ms-windows.nwprinting.oob\":{\"source\":\"iana\"},\"application/vnd.ms-windows.printerpairing\":{\"source\":\"iana\"},\"application/vnd.ms-windows.wsd.oob\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.lic-chlg-req\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.lic-resp\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.meter-chlg-req\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.meter-resp\":{\"source\":\"iana\"},\"application/vnd.ms-word.document.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"docm\"]},\"application/vnd.ms-word.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"dotm\"]},\"application/vnd.ms-works\":{\"source\":\"iana\",\"extensions\":[\"wps\",\"wks\",\"wcm\",\"wdb\"]},\"application/vnd.ms-wpl\":{\"source\":\"iana\",\"extensions\":[\"wpl\"]},\"application/vnd.ms-xpsdocument\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xps\"]},\"application/vnd.msa-disk-image\":{\"source\":\"iana\"},\"application/vnd.mseq\":{\"source\":\"iana\",\"extensions\":[\"mseq\"]},\"application/vnd.msign\":{\"source\":\"iana\"},\"application/vnd.multiad.creator\":{\"source\":\"iana\"},\"application/vnd.multiad.creator.cif\":{\"source\":\"iana\"},\"application/vnd.music-niff\":{\"source\":\"iana\"},\"application/vnd.musician\":{\"source\":\"iana\",\"extensions\":[\"mus\"]},\"application/vnd.muvee.style\":{\"source\":\"iana\",\"extensions\":[\"msty\"]},\"application/vnd.mynfc\":{\"source\":\"iana\",\"extensions\":[\"taglet\"]},\"application/vnd.ncd.control\":{\"source\":\"iana\"},\"application/vnd.ncd.reference\":{\"source\":\"iana\"},\"application/vnd.nearst.inv+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nervana\":{\"source\":\"iana\"},\"application/vnd.netfpx\":{\"source\":\"iana\"},\"application/vnd.neurolanguage.nlu\":{\"source\":\"iana\",\"extensions\":[\"nlu\"]},\"application/vnd.nimn\":{\"source\":\"iana\"},\"application/vnd.nintendo.nitro.rom\":{\"source\":\"iana\"},\"application/vnd.nintendo.snes.rom\":{\"source\":\"iana\"},\"application/vnd.nitf\":{\"source\":\"iana\",\"extensions\":[\"ntf\",\"nitf\"]},\"application/vnd.noblenet-directory\":{\"source\":\"iana\",\"extensions\":[\"nnd\"]},\"application/vnd.noblenet-sealer\":{\"source\":\"iana\",\"extensions\":[\"nns\"]},\"application/vnd.noblenet-web\":{\"source\":\"iana\",\"extensions\":[\"nnw\"]},\"application/vnd.nokia.catalogs\":{\"source\":\"iana\"},\"application/vnd.nokia.conml+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.conml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.iptv.config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.isds-radio-presets\":{\"source\":\"iana\"},\"application/vnd.nokia.landmark+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.landmark+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.landmarkcollection+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.n-gage.ac+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ac\"]},\"application/vnd.nokia.n-gage.data\":{\"source\":\"iana\",\"extensions\":[\"ngdat\"]},\"application/vnd.nokia.n-gage.symbian.install\":{\"source\":\"iana\",\"extensions\":[\"n-gage\"]},\"application/vnd.nokia.ncd\":{\"source\":\"iana\"},\"application/vnd.nokia.pcd+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.pcd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.radio-preset\":{\"source\":\"iana\",\"extensions\":[\"rpst\"]},\"application/vnd.nokia.radio-presets\":{\"source\":\"iana\",\"extensions\":[\"rpss\"]},\"application/vnd.novadigm.edm\":{\"source\":\"iana\",\"extensions\":[\"edm\"]},\"application/vnd.novadigm.edx\":{\"source\":\"iana\",\"extensions\":[\"edx\"]},\"application/vnd.novadigm.ext\":{\"source\":\"iana\",\"extensions\":[\"ext\"]},\"application/vnd.ntt-local.content-share\":{\"source\":\"iana\"},\"application/vnd.ntt-local.file-transfer\":{\"source\":\"iana\"},\"application/vnd.ntt-local.ogw_remote-access\":{\"source\":\"iana\"},\"application/vnd.ntt-local.sip-ta_remote\":{\"source\":\"iana\"},\"application/vnd.ntt-local.sip-ta_tcp_stream\":{\"source\":\"iana\"},\"application/vnd.oasis.opendocument.chart\":{\"source\":\"iana\",\"extensions\":[\"odc\"]},\"application/vnd.oasis.opendocument.chart-template\":{\"source\":\"iana\",\"extensions\":[\"otc\"]},\"application/vnd.oasis.opendocument.database\":{\"source\":\"iana\",\"extensions\":[\"odb\"]},\"application/vnd.oasis.opendocument.formula\":{\"source\":\"iana\",\"extensions\":[\"odf\"]},\"application/vnd.oasis.opendocument.formula-template\":{\"source\":\"iana\",\"extensions\":[\"odft\"]},\"application/vnd.oasis.opendocument.graphics\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odg\"]},\"application/vnd.oasis.opendocument.graphics-template\":{\"source\":\"iana\",\"extensions\":[\"otg\"]},\"application/vnd.oasis.opendocument.image\":{\"source\":\"iana\",\"extensions\":[\"odi\"]},\"application/vnd.oasis.opendocument.image-template\":{\"source\":\"iana\",\"extensions\":[\"oti\"]},\"application/vnd.oasis.opendocument.presentation\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odp\"]},\"application/vnd.oasis.opendocument.presentation-template\":{\"source\":\"iana\",\"extensions\":[\"otp\"]},\"application/vnd.oasis.opendocument.spreadsheet\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ods\"]},\"application/vnd.oasis.opendocument.spreadsheet-template\":{\"source\":\"iana\",\"extensions\":[\"ots\"]},\"application/vnd.oasis.opendocument.text\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odt\"]},\"application/vnd.oasis.opendocument.text-master\":{\"source\":\"iana\",\"extensions\":[\"odm\"]},\"application/vnd.oasis.opendocument.text-template\":{\"source\":\"iana\",\"extensions\":[\"ott\"]},\"application/vnd.oasis.opendocument.text-web\":{\"source\":\"iana\",\"extensions\":[\"oth\"]},\"application/vnd.obn\":{\"source\":\"iana\"},\"application/vnd.ocf+cbor\":{\"source\":\"iana\"},\"application/vnd.oftn.l10n+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.contentaccessdownload+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.contentaccessstreaming+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.cspg-hexbinary\":{\"source\":\"iana\"},\"application/vnd.oipf.dae.svg+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.dae.xhtml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.mippvcontrolmessage+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.pae.gem\":{\"source\":\"iana\"},\"application/vnd.oipf.spdiscovery+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.spdlist+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.ueprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.userprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.olpc-sugar\":{\"source\":\"iana\",\"extensions\":[\"xo\"]},\"application/vnd.oma-scws-config\":{\"source\":\"iana\"},\"application/vnd.oma-scws-http-request\":{\"source\":\"iana\"},\"application/vnd.oma-scws-http-response\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.associated-procedure-parameter+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.drm-trigger+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.imd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.ltkm\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.notification+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.provisioningtrigger\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.sgboot\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.sgdd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.sgdu\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.simple-symbol-container\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.smartcard-trigger+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.sprov+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.stkm\":{\"source\":\"iana\"},\"application/vnd.oma.cab-address-book+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-feature-handler+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-pcc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-subs-invite+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-user-prefs+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.dcd\":{\"source\":\"iana\"},\"application/vnd.oma.dcdc\":{\"source\":\"iana\"},\"application/vnd.oma.dd2+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dd2\"]},\"application/vnd.oma.drm.risd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.group-usage-list+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.lwm2m+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.lwm2m+tlv\":{\"source\":\"iana\"},\"application/vnd.oma.pal+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.detailed-progress-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.final-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.groups+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.invocation-descriptor+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.optimized-progress-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.push\":{\"source\":\"iana\"},\"application/vnd.oma.scidm.messages+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.xcap-directory+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.omads-email+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.omads-file+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.omads-folder+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.omaloc-supl-init\":{\"source\":\"iana\"},\"application/vnd.onepager\":{\"source\":\"iana\"},\"application/vnd.onepagertamp\":{\"source\":\"iana\"},\"application/vnd.onepagertamx\":{\"source\":\"iana\"},\"application/vnd.onepagertat\":{\"source\":\"iana\"},\"application/vnd.onepagertatp\":{\"source\":\"iana\"},\"application/vnd.onepagertatx\":{\"source\":\"iana\"},\"application/vnd.openblox.game+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"obgx\"]},\"application/vnd.openblox.game-binary\":{\"source\":\"iana\"},\"application/vnd.openeye.oeb\":{\"source\":\"iana\"},\"application/vnd.openofficeorg.extension\":{\"source\":\"apache\",\"extensions\":[\"oxt\"]},\"application/vnd.openstreetmap.data+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"osm\"]},\"application/vnd.openxmlformats-officedocument.custom-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.customxmlproperties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawing+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.extended-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.presentation\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pptx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slide\":{\"source\":\"iana\",\"extensions\":[\"sldx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.slide+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slideshow\":{\"source\":\"iana\",\"extensions\":[\"ppsx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.tags+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.template\":{\"source\":\"iana\",\"extensions\":[\"potx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xlsx\"]},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.template\":{\"source\":\"iana\",\"extensions\":[\"xltx\"]},\"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.theme+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.themeoverride+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.vmldrawing\":{\"source\":\"iana\"},\"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"docx\"]},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.template\":{\"source\":\"iana\",\"extensions\":[\"dotx\"]},\"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.core-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.relationships+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oracle.resource+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.orange.indata\":{\"source\":\"iana\"},\"application/vnd.osa.netdeploy\":{\"source\":\"iana\"},\"application/vnd.osgeo.mapguide.package\":{\"source\":\"iana\",\"extensions\":[\"mgp\"]},\"application/vnd.osgi.bundle\":{\"source\":\"iana\"},\"application/vnd.osgi.dp\":{\"source\":\"iana\",\"extensions\":[\"dp\"]},\"application/vnd.osgi.subsystem\":{\"source\":\"iana\",\"extensions\":[\"esa\"]},\"application/vnd.otps.ct-kip+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oxli.countgraph\":{\"source\":\"iana\"},\"application/vnd.pagerduty+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.palm\":{\"source\":\"iana\",\"extensions\":[\"pdb\",\"pqa\",\"oprc\"]},\"application/vnd.panoply\":{\"source\":\"iana\"},\"application/vnd.paos.xml\":{\"source\":\"iana\"},\"application/vnd.patentdive\":{\"source\":\"iana\"},\"application/vnd.patientecommsdoc\":{\"source\":\"iana\"},\"application/vnd.pawaafile\":{\"source\":\"iana\",\"extensions\":[\"paw\"]},\"application/vnd.pcos\":{\"source\":\"iana\"},\"application/vnd.pg.format\":{\"source\":\"iana\",\"extensions\":[\"str\"]},\"application/vnd.pg.osasli\":{\"source\":\"iana\",\"extensions\":[\"ei6\"]},\"application/vnd.piaccess.application-licence\":{\"source\":\"iana\"},\"application/vnd.picsel\":{\"source\":\"iana\",\"extensions\":[\"efif\"]},\"application/vnd.pmi.widget\":{\"source\":\"iana\",\"extensions\":[\"wg\"]},\"application/vnd.poc.group-advertisement+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.pocketlearn\":{\"source\":\"iana\",\"extensions\":[\"plf\"]},\"application/vnd.powerbuilder6\":{\"source\":\"iana\",\"extensions\":[\"pbd\"]},\"application/vnd.powerbuilder6-s\":{\"source\":\"iana\"},\"application/vnd.powerbuilder7\":{\"source\":\"iana\"},\"application/vnd.powerbuilder7-s\":{\"source\":\"iana\"},\"application/vnd.powerbuilder75\":{\"source\":\"iana\"},\"application/vnd.powerbuilder75-s\":{\"source\":\"iana\"},\"application/vnd.preminet\":{\"source\":\"iana\"},\"application/vnd.previewsystems.box\":{\"source\":\"iana\",\"extensions\":[\"box\"]},\"application/vnd.proteus.magazine\":{\"source\":\"iana\",\"extensions\":[\"mgz\"]},\"application/vnd.psfs\":{\"source\":\"iana\"},\"application/vnd.publishare-delta-tree\":{\"source\":\"iana\",\"extensions\":[\"qps\"]},\"application/vnd.pvi.ptid1\":{\"source\":\"iana\",\"extensions\":[\"ptid\"]},\"application/vnd.pwg-multiplexed\":{\"source\":\"iana\"},\"application/vnd.pwg-xhtml-print+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.qualcomm.brew-app-res\":{\"source\":\"iana\"},\"application/vnd.quarantainenet\":{\"source\":\"iana\"},\"application/vnd.quark.quarkxpress\":{\"source\":\"iana\",\"extensions\":[\"qxd\",\"qxt\",\"qwd\",\"qwt\",\"qxl\",\"qxb\"]},\"application/vnd.quobject-quoxdocument\":{\"source\":\"iana\"},\"application/vnd.radisys.moml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-conf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-conn+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-dialog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-stream+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-conf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-base+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-fax-detect+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-fax-sendrecv+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-group+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-speech+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-transform+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.rainstor.data\":{\"source\":\"iana\"},\"application/vnd.rapid\":{\"source\":\"iana\"},\"application/vnd.rar\":{\"source\":\"iana\"},\"application/vnd.realvnc.bed\":{\"source\":\"iana\",\"extensions\":[\"bed\"]},\"application/vnd.recordare.musicxml\":{\"source\":\"iana\",\"extensions\":[\"mxl\"]},\"application/vnd.recordare.musicxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"musicxml\"]},\"application/vnd.renlearn.rlprint\":{\"source\":\"iana\"},\"application/vnd.restful+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.rig.cryptonote\":{\"source\":\"iana\",\"extensions\":[\"cryptonote\"]},\"application/vnd.rim.cod\":{\"source\":\"apache\",\"extensions\":[\"cod\"]},\"application/vnd.rn-realmedia\":{\"source\":\"apache\",\"extensions\":[\"rm\"]},\"application/vnd.rn-realmedia-vbr\":{\"source\":\"apache\",\"extensions\":[\"rmvb\"]},\"application/vnd.route66.link66+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"link66\"]},\"application/vnd.rs-274x\":{\"source\":\"iana\"},\"application/vnd.ruckus.download\":{\"source\":\"iana\"},\"application/vnd.s3sms\":{\"source\":\"iana\"},\"application/vnd.sailingtracker.track\":{\"source\":\"iana\",\"extensions\":[\"st\"]},\"application/vnd.sbm.cid\":{\"source\":\"iana\"},\"application/vnd.sbm.mid2\":{\"source\":\"iana\"},\"application/vnd.scribus\":{\"source\":\"iana\"},\"application/vnd.sealed.3df\":{\"source\":\"iana\"},\"application/vnd.sealed.csf\":{\"source\":\"iana\"},\"application/vnd.sealed.doc\":{\"source\":\"iana\"},\"application/vnd.sealed.eml\":{\"source\":\"iana\"},\"application/vnd.sealed.mht\":{\"source\":\"iana\"},\"application/vnd.sealed.net\":{\"source\":\"iana\"},\"application/vnd.sealed.ppt\":{\"source\":\"iana\"},\"application/vnd.sealed.tiff\":{\"source\":\"iana\"},\"application/vnd.sealed.xls\":{\"source\":\"iana\"},\"application/vnd.sealedmedia.softseal.html\":{\"source\":\"iana\"},\"application/vnd.sealedmedia.softseal.pdf\":{\"source\":\"iana\"},\"application/vnd.seemail\":{\"source\":\"iana\",\"extensions\":[\"see\"]},\"application/vnd.sema\":{\"source\":\"iana\",\"extensions\":[\"sema\"]},\"application/vnd.semd\":{\"source\":\"iana\",\"extensions\":[\"semd\"]},\"application/vnd.semf\":{\"source\":\"iana\",\"extensions\":[\"semf\"]},\"application/vnd.shade-save-file\":{\"source\":\"iana\"},\"application/vnd.shana.informed.formdata\":{\"source\":\"iana\",\"extensions\":[\"ifm\"]},\"application/vnd.shana.informed.formtemplate\":{\"source\":\"iana\",\"extensions\":[\"itp\"]},\"application/vnd.shana.informed.interchange\":{\"source\":\"iana\",\"extensions\":[\"iif\"]},\"application/vnd.shana.informed.package\":{\"source\":\"iana\",\"extensions\":[\"ipk\"]},\"application/vnd.shootproof+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.shopkick+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.sigrok.session\":{\"source\":\"iana\"},\"application/vnd.simtech-mindmapper\":{\"source\":\"iana\",\"extensions\":[\"twd\",\"twds\"]},\"application/vnd.siren+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.smaf\":{\"source\":\"iana\",\"extensions\":[\"mmf\"]},\"application/vnd.smart.notebook\":{\"source\":\"iana\"},\"application/vnd.smart.teacher\":{\"source\":\"iana\",\"extensions\":[\"teacher\"]},\"application/vnd.software602.filler.form+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"fo\"]},\"application/vnd.software602.filler.form-xml-zip\":{\"source\":\"iana\"},\"application/vnd.solent.sdkm+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sdkm\",\"sdkd\"]},\"application/vnd.spotfire.dxp\":{\"source\":\"iana\",\"extensions\":[\"dxp\"]},\"application/vnd.spotfire.sfs\":{\"source\":\"iana\",\"extensions\":[\"sfs\"]},\"application/vnd.sqlite3\":{\"source\":\"iana\"},\"application/vnd.sss-cod\":{\"source\":\"iana\"},\"application/vnd.sss-dtf\":{\"source\":\"iana\"},\"application/vnd.sss-ntf\":{\"source\":\"iana\"},\"application/vnd.stardivision.calc\":{\"source\":\"apache\",\"extensions\":[\"sdc\"]},\"application/vnd.stardivision.draw\":{\"source\":\"apache\",\"extensions\":[\"sda\"]},\"application/vnd.stardivision.impress\":{\"source\":\"apache\",\"extensions\":[\"sdd\"]},\"application/vnd.stardivision.math\":{\"source\":\"apache\",\"extensions\":[\"smf\"]},\"application/vnd.stardivision.writer\":{\"source\":\"apache\",\"extensions\":[\"sdw\",\"vor\"]},\"application/vnd.stardivision.writer-global\":{\"source\":\"apache\",\"extensions\":[\"sgl\"]},\"application/vnd.stepmania.package\":{\"source\":\"iana\",\"extensions\":[\"smzip\"]},\"application/vnd.stepmania.stepchart\":{\"source\":\"iana\",\"extensions\":[\"sm\"]},\"application/vnd.street-stream\":{\"source\":\"iana\"},\"application/vnd.sun.wadl+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wadl\"]},\"application/vnd.sun.xml.calc\":{\"source\":\"apache\",\"extensions\":[\"sxc\"]},\"application/vnd.sun.xml.calc.template\":{\"source\":\"apache\",\"extensions\":[\"stc\"]},\"application/vnd.sun.xml.draw\":{\"source\":\"apache\",\"extensions\":[\"sxd\"]},\"application/vnd.sun.xml.draw.template\":{\"source\":\"apache\",\"extensions\":[\"std\"]},\"application/vnd.sun.xml.impress\":{\"source\":\"apache\",\"extensions\":[\"sxi\"]},\"application/vnd.sun.xml.impress.template\":{\"source\":\"apache\",\"extensions\":[\"sti\"]},\"application/vnd.sun.xml.math\":{\"source\":\"apache\",\"extensions\":[\"sxm\"]},\"application/vnd.sun.xml.writer\":{\"source\":\"apache\",\"extensions\":[\"sxw\"]},\"application/vnd.sun.xml.writer.global\":{\"source\":\"apache\",\"extensions\":[\"sxg\"]},\"application/vnd.sun.xml.writer.template\":{\"source\":\"apache\",\"extensions\":[\"stw\"]},\"application/vnd.sus-calendar\":{\"source\":\"iana\",\"extensions\":[\"sus\",\"susp\"]},\"application/vnd.svd\":{\"source\":\"iana\",\"extensions\":[\"svd\"]},\"application/vnd.swiftview-ics\":{\"source\":\"iana\"},\"application/vnd.symbian.install\":{\"source\":\"apache\",\"extensions\":[\"sis\",\"sisx\"]},\"application/vnd.syncml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xsm\"]},\"application/vnd.syncml.dm+wbxml\":{\"source\":\"iana\",\"extensions\":[\"bdm\"]},\"application/vnd.syncml.dm+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdm\"]},\"application/vnd.syncml.dm.notification\":{\"source\":\"iana\"},\"application/vnd.syncml.dmddf+wbxml\":{\"source\":\"iana\"},\"application/vnd.syncml.dmddf+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ddf\"]},\"application/vnd.syncml.dmtnds+wbxml\":{\"source\":\"iana\"},\"application/vnd.syncml.dmtnds+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.syncml.ds.notification\":{\"source\":\"iana\"},\"application/vnd.tableschema+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tao.intent-module-archive\":{\"source\":\"iana\",\"extensions\":[\"tao\"]},\"application/vnd.tcpdump.pcap\":{\"source\":\"iana\",\"extensions\":[\"pcap\",\"cap\",\"dmp\"]},\"application/vnd.think-cell.ppttc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tmd.mediaflex.api+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tml\":{\"source\":\"iana\"},\"application/vnd.tmobile-livetv\":{\"source\":\"iana\",\"extensions\":[\"tmo\"]},\"application/vnd.tri.onesource\":{\"source\":\"iana\"},\"application/vnd.trid.tpt\":{\"source\":\"iana\",\"extensions\":[\"tpt\"]},\"application/vnd.triscape.mxs\":{\"source\":\"iana\",\"extensions\":[\"mxs\"]},\"application/vnd.trueapp\":{\"source\":\"iana\",\"extensions\":[\"tra\"]},\"application/vnd.truedoc\":{\"source\":\"iana\"},\"application/vnd.ubisoft.webplayer\":{\"source\":\"iana\"},\"application/vnd.ufdl\":{\"source\":\"iana\",\"extensions\":[\"ufd\",\"ufdl\"]},\"application/vnd.uiq.theme\":{\"source\":\"iana\",\"extensions\":[\"utz\"]},\"application/vnd.umajin\":{\"source\":\"iana\",\"extensions\":[\"umj\"]},\"application/vnd.unity\":{\"source\":\"iana\",\"extensions\":[\"unityweb\"]},\"application/vnd.uoml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uoml\"]},\"application/vnd.uplanet.alert\":{\"source\":\"iana\"},\"application/vnd.uplanet.alert-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.bearer-choice\":{\"source\":\"iana\"},\"application/vnd.uplanet.bearer-choice-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.cacheop\":{\"source\":\"iana\"},\"application/vnd.uplanet.cacheop-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.channel\":{\"source\":\"iana\"},\"application/vnd.uplanet.channel-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.list\":{\"source\":\"iana\"},\"application/vnd.uplanet.list-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.listcmd\":{\"source\":\"iana\"},\"application/vnd.uplanet.listcmd-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.signal\":{\"source\":\"iana\"},\"application/vnd.uri-map\":{\"source\":\"iana\"},\"application/vnd.valve.source.material\":{\"source\":\"iana\"},\"application/vnd.vcx\":{\"source\":\"iana\",\"extensions\":[\"vcx\"]},\"application/vnd.vd-study\":{\"source\":\"iana\"},\"application/vnd.vectorworks\":{\"source\":\"iana\"},\"application/vnd.vel+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.verimatrix.vcas\":{\"source\":\"iana\"},\"application/vnd.veryant.thin\":{\"source\":\"iana\"},\"application/vnd.ves.encrypted\":{\"source\":\"iana\"},\"application/vnd.vidsoft.vidconference\":{\"source\":\"iana\"},\"application/vnd.visio\":{\"source\":\"iana\",\"extensions\":[\"vsd\",\"vst\",\"vss\",\"vsw\"]},\"application/vnd.visionary\":{\"source\":\"iana\",\"extensions\":[\"vis\"]},\"application/vnd.vividence.scriptfile\":{\"source\":\"iana\"},\"application/vnd.vsf\":{\"source\":\"iana\",\"extensions\":[\"vsf\"]},\"application/vnd.wap.sic\":{\"source\":\"iana\"},\"application/vnd.wap.slc\":{\"source\":\"iana\"},\"application/vnd.wap.wbxml\":{\"source\":\"iana\",\"extensions\":[\"wbxml\"]},\"application/vnd.wap.wmlc\":{\"source\":\"iana\",\"extensions\":[\"wmlc\"]},\"application/vnd.wap.wmlscriptc\":{\"source\":\"iana\",\"extensions\":[\"wmlsc\"]},\"application/vnd.webturbo\":{\"source\":\"iana\",\"extensions\":[\"wtb\"]},\"application/vnd.wfa.p2p\":{\"source\":\"iana\"},\"application/vnd.wfa.wsc\":{\"source\":\"iana\"},\"application/vnd.windows.devicepairing\":{\"source\":\"iana\"},\"application/vnd.wmc\":{\"source\":\"iana\"},\"application/vnd.wmf.bootstrap\":{\"source\":\"iana\"},\"application/vnd.wolfram.mathematica\":{\"source\":\"iana\"},\"application/vnd.wolfram.mathematica.package\":{\"source\":\"iana\"},\"application/vnd.wolfram.player\":{\"source\":\"iana\",\"extensions\":[\"nbp\"]},\"application/vnd.wordperfect\":{\"source\":\"iana\",\"extensions\":[\"wpd\"]},\"application/vnd.wqd\":{\"source\":\"iana\",\"extensions\":[\"wqd\"]},\"application/vnd.wrq-hp3000-labelled\":{\"source\":\"iana\"},\"application/vnd.wt.stf\":{\"source\":\"iana\",\"extensions\":[\"stf\"]},\"application/vnd.wv.csp+wbxml\":{\"source\":\"iana\"},\"application/vnd.wv.csp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.wv.ssp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xacml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xara\":{\"source\":\"iana\",\"extensions\":[\"xar\"]},\"application/vnd.xfdl\":{\"source\":\"iana\",\"extensions\":[\"xfdl\"]},\"application/vnd.xfdl.webform\":{\"source\":\"iana\"},\"application/vnd.xmi+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xmpie.cpkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.dpkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.plan\":{\"source\":\"iana\"},\"application/vnd.xmpie.ppkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.xlim\":{\"source\":\"iana\"},\"application/vnd.yamaha.hv-dic\":{\"source\":\"iana\",\"extensions\":[\"hvd\"]},\"application/vnd.yamaha.hv-script\":{\"source\":\"iana\",\"extensions\":[\"hvs\"]},\"application/vnd.yamaha.hv-voice\":{\"source\":\"iana\",\"extensions\":[\"hvp\"]},\"application/vnd.yamaha.openscoreformat\":{\"source\":\"iana\",\"extensions\":[\"osf\"]},\"application/vnd.yamaha.openscoreformat.osfpvg+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"osfpvg\"]},\"application/vnd.yamaha.remote-setup\":{\"source\":\"iana\"},\"application/vnd.yamaha.smaf-audio\":{\"source\":\"iana\",\"extensions\":[\"saf\"]},\"application/vnd.yamaha.smaf-phrase\":{\"source\":\"iana\",\"extensions\":[\"spf\"]},\"application/vnd.yamaha.through-ngn\":{\"source\":\"iana\"},\"application/vnd.yamaha.tunnel-udpencap\":{\"source\":\"iana\"},\"application/vnd.yaoweme\":{\"source\":\"iana\"},\"application/vnd.yellowriver-custom-menu\":{\"source\":\"iana\",\"extensions\":[\"cmp\"]},\"application/vnd.youtube.yt\":{\"source\":\"iana\"},\"application/vnd.zul\":{\"source\":\"iana\",\"extensions\":[\"zir\",\"zirz\"]},\"application/vnd.zzazz.deck+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"zaz\"]},\"application/voicexml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"vxml\"]},\"application/voucher-cms+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vq-rtcpxr\":{\"source\":\"iana\"},\"application/wasm\":{\"compressible\":true,\"extensions\":[\"wasm\"]},\"application/watcherinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/webpush-options+json\":{\"source\":\"iana\",\"compressible\":true},\"application/whoispp-query\":{\"source\":\"iana\"},\"application/whoispp-response\":{\"source\":\"iana\"},\"application/widget\":{\"source\":\"iana\",\"extensions\":[\"wgt\"]},\"application/winhlp\":{\"source\":\"apache\",\"extensions\":[\"hlp\"]},\"application/wita\":{\"source\":\"iana\"},\"application/wordperfect5.1\":{\"source\":\"iana\"},\"application/wsdl+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wsdl\"]},\"application/wspolicy+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wspolicy\"]},\"application/x-7z-compressed\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"7z\"]},\"application/x-abiword\":{\"source\":\"apache\",\"extensions\":[\"abw\"]},\"application/x-ace-compressed\":{\"source\":\"apache\",\"extensions\":[\"ace\"]},\"application/x-amf\":{\"source\":\"apache\"},\"application/x-apple-diskimage\":{\"source\":\"apache\",\"extensions\":[\"dmg\"]},\"application/x-arj\":{\"compressible\":false,\"extensions\":[\"arj\"]},\"application/x-authorware-bin\":{\"source\":\"apache\",\"extensions\":[\"aab\",\"x32\",\"u32\",\"vox\"]},\"application/x-authorware-map\":{\"source\":\"apache\",\"extensions\":[\"aam\"]},\"application/x-authorware-seg\":{\"source\":\"apache\",\"extensions\":[\"aas\"]},\"application/x-bcpio\":{\"source\":\"apache\",\"extensions\":[\"bcpio\"]},\"application/x-bdoc\":{\"compressible\":false,\"extensions\":[\"bdoc\"]},\"application/x-bittorrent\":{\"source\":\"apache\",\"extensions\":[\"torrent\"]},\"application/x-blorb\":{\"source\":\"apache\",\"extensions\":[\"blb\",\"blorb\"]},\"application/x-bzip\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"bz\"]},\"application/x-bzip2\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"bz2\",\"boz\"]},\"application/x-cbr\":{\"source\":\"apache\",\"extensions\":[\"cbr\",\"cba\",\"cbt\",\"cbz\",\"cb7\"]},\"application/x-cdlink\":{\"source\":\"apache\",\"extensions\":[\"vcd\"]},\"application/x-cfs-compressed\":{\"source\":\"apache\",\"extensions\":[\"cfs\"]},\"application/x-chat\":{\"source\":\"apache\",\"extensions\":[\"chat\"]},\"application/x-chess-pgn\":{\"source\":\"apache\",\"extensions\":[\"pgn\"]},\"application/x-chrome-extension\":{\"extensions\":[\"crx\"]},\"application/x-cocoa\":{\"source\":\"nginx\",\"extensions\":[\"cco\"]},\"application/x-compress\":{\"source\":\"apache\"},\"application/x-conference\":{\"source\":\"apache\",\"extensions\":[\"nsc\"]},\"application/x-cpio\":{\"source\":\"apache\",\"extensions\":[\"cpio\"]},\"application/x-csh\":{\"source\":\"apache\",\"extensions\":[\"csh\"]},\"application/x-deb\":{\"compressible\":false},\"application/x-debian-package\":{\"source\":\"apache\",\"extensions\":[\"deb\",\"udeb\"]},\"application/x-dgc-compressed\":{\"source\":\"apache\",\"extensions\":[\"dgc\"]},\"application/x-director\":{\"source\":\"apache\",\"extensions\":[\"dir\",\"dcr\",\"dxr\",\"cst\",\"cct\",\"cxt\",\"w3d\",\"fgd\",\"swa\"]},\"application/x-doom\":{\"source\":\"apache\",\"extensions\":[\"wad\"]},\"application/x-dtbncx+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ncx\"]},\"application/x-dtbook+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"dtb\"]},\"application/x-dtbresource+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"res\"]},\"application/x-dvi\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"dvi\"]},\"application/x-envoy\":{\"source\":\"apache\",\"extensions\":[\"evy\"]},\"application/x-eva\":{\"source\":\"apache\",\"extensions\":[\"eva\"]},\"application/x-font-bdf\":{\"source\":\"apache\",\"extensions\":[\"bdf\"]},\"application/x-font-dos\":{\"source\":\"apache\"},\"application/x-font-framemaker\":{\"source\":\"apache\"},\"application/x-font-ghostscript\":{\"source\":\"apache\",\"extensions\":[\"gsf\"]},\"application/x-font-libgrx\":{\"source\":\"apache\"},\"application/x-font-linux-psf\":{\"source\":\"apache\",\"extensions\":[\"psf\"]},\"application/x-font-pcf\":{\"source\":\"apache\",\"extensions\":[\"pcf\"]},\"application/x-font-snf\":{\"source\":\"apache\",\"extensions\":[\"snf\"]},\"application/x-font-speedo\":{\"source\":\"apache\"},\"application/x-font-sunos-news\":{\"source\":\"apache\"},\"application/x-font-type1\":{\"source\":\"apache\",\"extensions\":[\"pfa\",\"pfb\",\"pfm\",\"afm\"]},\"application/x-font-vfont\":{\"source\":\"apache\"},\"application/x-freearc\":{\"source\":\"apache\",\"extensions\":[\"arc\"]},\"application/x-futuresplash\":{\"source\":\"apache\",\"extensions\":[\"spl\"]},\"application/x-gca-compressed\":{\"source\":\"apache\",\"extensions\":[\"gca\"]},\"application/x-glulx\":{\"source\":\"apache\",\"extensions\":[\"ulx\"]},\"application/x-gnumeric\":{\"source\":\"apache\",\"extensions\":[\"gnumeric\"]},\"application/x-gramps-xml\":{\"source\":\"apache\",\"extensions\":[\"gramps\"]},\"application/x-gtar\":{\"source\":\"apache\",\"extensions\":[\"gtar\"]},\"application/x-gzip\":{\"source\":\"apache\"},\"application/x-hdf\":{\"source\":\"apache\",\"extensions\":[\"hdf\"]},\"application/x-httpd-php\":{\"compressible\":true,\"extensions\":[\"php\"]},\"application/x-install-instructions\":{\"source\":\"apache\",\"extensions\":[\"install\"]},\"application/x-iso9660-image\":{\"source\":\"apache\",\"extensions\":[\"iso\"]},\"application/x-java-archive-diff\":{\"source\":\"nginx\",\"extensions\":[\"jardiff\"]},\"application/x-java-jnlp-file\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"jnlp\"]},\"application/x-javascript\":{\"compressible\":true},\"application/x-keepass2\":{\"extensions\":[\"kdbx\"]},\"application/x-latex\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"latex\"]},\"application/x-lua-bytecode\":{\"extensions\":[\"luac\"]},\"application/x-lzh-compressed\":{\"source\":\"apache\",\"extensions\":[\"lzh\",\"lha\"]},\"application/x-makeself\":{\"source\":\"nginx\",\"extensions\":[\"run\"]},\"application/x-mie\":{\"source\":\"apache\",\"extensions\":[\"mie\"]},\"application/x-mobipocket-ebook\":{\"source\":\"apache\",\"extensions\":[\"prc\",\"mobi\"]},\"application/x-mpegurl\":{\"compressible\":false},\"application/x-ms-application\":{\"source\":\"apache\",\"extensions\":[\"application\"]},\"application/x-ms-shortcut\":{\"source\":\"apache\",\"extensions\":[\"lnk\"]},\"application/x-ms-wmd\":{\"source\":\"apache\",\"extensions\":[\"wmd\"]},\"application/x-ms-wmz\":{\"source\":\"apache\",\"extensions\":[\"wmz\"]},\"application/x-ms-xbap\":{\"source\":\"apache\",\"extensions\":[\"xbap\"]},\"application/x-msaccess\":{\"source\":\"apache\",\"extensions\":[\"mdb\"]},\"application/x-msbinder\":{\"source\":\"apache\",\"extensions\":[\"obd\"]},\"application/x-mscardfile\":{\"source\":\"apache\",\"extensions\":[\"crd\"]},\"application/x-msclip\":{\"source\":\"apache\",\"extensions\":[\"clp\"]},\"application/x-msdos-program\":{\"extensions\":[\"exe\"]},\"application/x-msdownload\":{\"source\":\"apache\",\"extensions\":[\"exe\",\"dll\",\"com\",\"bat\",\"msi\"]},\"application/x-msmediaview\":{\"source\":\"apache\",\"extensions\":[\"mvb\",\"m13\",\"m14\"]},\"application/x-msmetafile\":{\"source\":\"apache\",\"extensions\":[\"wmf\",\"wmz\",\"emf\",\"emz\"]},\"application/x-msmoney\":{\"source\":\"apache\",\"extensions\":[\"mny\"]},\"application/x-mspublisher\":{\"source\":\"apache\",\"extensions\":[\"pub\"]},\"application/x-msschedule\":{\"source\":\"apache\",\"extensions\":[\"scd\"]},\"application/x-msterminal\":{\"source\":\"apache\",\"extensions\":[\"trm\"]},\"application/x-mswrite\":{\"source\":\"apache\",\"extensions\":[\"wri\"]},\"application/x-netcdf\":{\"source\":\"apache\",\"extensions\":[\"nc\",\"cdf\"]},\"application/x-ns-proxy-autoconfig\":{\"compressible\":true,\"extensions\":[\"pac\"]},\"application/x-nzb\":{\"source\":\"apache\",\"extensions\":[\"nzb\"]},\"application/x-perl\":{\"source\":\"nginx\",\"extensions\":[\"pl\",\"pm\"]},\"application/x-pilot\":{\"source\":\"nginx\",\"extensions\":[\"prc\",\"pdb\"]},\"application/x-pkcs12\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"p12\",\"pfx\"]},\"application/x-pkcs7-certificates\":{\"source\":\"apache\",\"extensions\":[\"p7b\",\"spc\"]},\"application/x-pkcs7-certreqresp\":{\"source\":\"apache\",\"extensions\":[\"p7r\"]},\"application/x-rar-compressed\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"rar\"]},\"application/x-redhat-package-manager\":{\"source\":\"nginx\",\"extensions\":[\"rpm\"]},\"application/x-research-info-systems\":{\"source\":\"apache\",\"extensions\":[\"ris\"]},\"application/x-sea\":{\"source\":\"nginx\",\"extensions\":[\"sea\"]},\"application/x-sh\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"sh\"]},\"application/x-shar\":{\"source\":\"apache\",\"extensions\":[\"shar\"]},\"application/x-shockwave-flash\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"swf\"]},\"application/x-silverlight-app\":{\"source\":\"apache\",\"extensions\":[\"xap\"]},\"application/x-sql\":{\"source\":\"apache\",\"extensions\":[\"sql\"]},\"application/x-stuffit\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"sit\"]},\"application/x-stuffitx\":{\"source\":\"apache\",\"extensions\":[\"sitx\"]},\"application/x-subrip\":{\"source\":\"apache\",\"extensions\":[\"srt\"]},\"application/x-sv4cpio\":{\"source\":\"apache\",\"extensions\":[\"sv4cpio\"]},\"application/x-sv4crc\":{\"source\":\"apache\",\"extensions\":[\"sv4crc\"]},\"application/x-t3vm-image\":{\"source\":\"apache\",\"extensions\":[\"t3\"]},\"application/x-tads\":{\"source\":\"apache\",\"extensions\":[\"gam\"]},\"application/x-tar\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"tar\"]},\"application/x-tcl\":{\"source\":\"apache\",\"extensions\":[\"tcl\",\"tk\"]},\"application/x-tex\":{\"source\":\"apache\",\"extensions\":[\"tex\"]},\"application/x-tex-tfm\":{\"source\":\"apache\",\"extensions\":[\"tfm\"]},\"application/x-texinfo\":{\"source\":\"apache\",\"extensions\":[\"texinfo\",\"texi\"]},\"application/x-tgif\":{\"source\":\"apache\",\"extensions\":[\"obj\"]},\"application/x-ustar\":{\"source\":\"apache\",\"extensions\":[\"ustar\"]},\"application/x-virtualbox-hdd\":{\"compressible\":true,\"extensions\":[\"hdd\"]},\"application/x-virtualbox-ova\":{\"compressible\":true,\"extensions\":[\"ova\"]},\"application/x-virtualbox-ovf\":{\"compressible\":true,\"extensions\":[\"ovf\"]},\"application/x-virtualbox-vbox\":{\"compressible\":true,\"extensions\":[\"vbox\"]},\"application/x-virtualbox-vbox-extpack\":{\"compressible\":false,\"extensions\":[\"vbox-extpack\"]},\"application/x-virtualbox-vdi\":{\"compressible\":true,\"extensions\":[\"vdi\"]},\"application/x-virtualbox-vhd\":{\"compressible\":true,\"extensions\":[\"vhd\"]},\"application/x-virtualbox-vmdk\":{\"compressible\":true,\"extensions\":[\"vmdk\"]},\"application/x-wais-source\":{\"source\":\"apache\",\"extensions\":[\"src\"]},\"application/x-web-app-manifest+json\":{\"compressible\":true,\"extensions\":[\"webapp\"]},\"application/x-www-form-urlencoded\":{\"source\":\"iana\",\"compressible\":true},\"application/x-x509-ca-cert\":{\"source\":\"apache\",\"extensions\":[\"der\",\"crt\",\"pem\"]},\"application/x-xfig\":{\"source\":\"apache\",\"extensions\":[\"fig\"]},\"application/x-xliff+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xlf\"]},\"application/x-xpinstall\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"xpi\"]},\"application/x-xz\":{\"source\":\"apache\",\"extensions\":[\"xz\"]},\"application/x-zmachine\":{\"source\":\"apache\",\"extensions\":[\"z1\",\"z2\",\"z3\",\"z4\",\"z5\",\"z6\",\"z7\",\"z8\"]},\"application/x400-bp\":{\"source\":\"iana\"},\"application/xacml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xaml+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xaml\"]},\"application/xcap-att+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xav\"]},\"application/xcap-caps+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xca\"]},\"application/xcap-diff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdf\"]},\"application/xcap-el+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xel\"]},\"application/xcap-error+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xer\"]},\"application/xcap-ns+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xns\"]},\"application/xcon-conference-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xcon-conference-info-diff+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xenc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xenc\"]},\"application/xhtml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xhtml\",\"xht\"]},\"application/xhtml-voice+xml\":{\"source\":\"apache\",\"compressible\":true},\"application/xliff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xlf\"]},\"application/xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xml\",\"xsl\",\"xsd\",\"rng\"]},\"application/xml-dtd\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dtd\"]},\"application/xml-external-parsed-entity\":{\"source\":\"iana\"},\"application/xml-patch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xmpp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xop+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xop\"]},\"application/xproc+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xpl\"]},\"application/xslt+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xslt\"]},\"application/xspf+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xspf\"]},\"application/xv+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mxml\",\"xhvml\",\"xvml\",\"xvm\"]},\"application/yang\":{\"source\":\"iana\",\"extensions\":[\"yang\"]},\"application/yang-data+json\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-data+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-patch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/yin+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"yin\"]},\"application/zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"zip\"]},\"application/zlib\":{\"source\":\"iana\"},\"application/zstd\":{\"source\":\"iana\"},\"audio/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"audio/32kadpcm\":{\"source\":\"iana\"},\"audio/3gpp\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"3gpp\"]},\"audio/3gpp2\":{\"source\":\"iana\"},\"audio/aac\":{\"source\":\"iana\"},\"audio/ac3\":{\"source\":\"iana\"},\"audio/adpcm\":{\"source\":\"apache\",\"extensions\":[\"adp\"]},\"audio/amr\":{\"source\":\"iana\"},\"audio/amr-wb\":{\"source\":\"iana\"},\"audio/amr-wb+\":{\"source\":\"iana\"},\"audio/aptx\":{\"source\":\"iana\"},\"audio/asc\":{\"source\":\"iana\"},\"audio/atrac-advanced-lossless\":{\"source\":\"iana\"},\"audio/atrac-x\":{\"source\":\"iana\"},\"audio/atrac3\":{\"source\":\"iana\"},\"audio/basic\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"au\",\"snd\"]},\"audio/bv16\":{\"source\":\"iana\"},\"audio/bv32\":{\"source\":\"iana\"},\"audio/clearmode\":{\"source\":\"iana\"},\"audio/cn\":{\"source\":\"iana\"},\"audio/dat12\":{\"source\":\"iana\"},\"audio/dls\":{\"source\":\"iana\"},\"audio/dsr-es201108\":{\"source\":\"iana\"},\"audio/dsr-es202050\":{\"source\":\"iana\"},\"audio/dsr-es202211\":{\"source\":\"iana\"},\"audio/dsr-es202212\":{\"source\":\"iana\"},\"audio/dv\":{\"source\":\"iana\"},\"audio/dvi4\":{\"source\":\"iana\"},\"audio/eac3\":{\"source\":\"iana\"},\"audio/encaprtp\":{\"source\":\"iana\"},\"audio/evrc\":{\"source\":\"iana\"},\"audio/evrc-qcp\":{\"source\":\"iana\"},\"audio/evrc0\":{\"source\":\"iana\"},\"audio/evrc1\":{\"source\":\"iana\"},\"audio/evrcb\":{\"source\":\"iana\"},\"audio/evrcb0\":{\"source\":\"iana\"},\"audio/evrcb1\":{\"source\":\"iana\"},\"audio/evrcnw\":{\"source\":\"iana\"},\"audio/evrcnw0\":{\"source\":\"iana\"},\"audio/evrcnw1\":{\"source\":\"iana\"},\"audio/evrcwb\":{\"source\":\"iana\"},\"audio/evrcwb0\":{\"source\":\"iana\"},\"audio/evrcwb1\":{\"source\":\"iana\"},\"audio/evs\":{\"source\":\"iana\"},\"audio/flexfec\":{\"source\":\"iana\"},\"audio/fwdred\":{\"source\":\"iana\"},\"audio/g711-0\":{\"source\":\"iana\"},\"audio/g719\":{\"source\":\"iana\"},\"audio/g722\":{\"source\":\"iana\"},\"audio/g7221\":{\"source\":\"iana\"},\"audio/g723\":{\"source\":\"iana\"},\"audio/g726-16\":{\"source\":\"iana\"},\"audio/g726-24\":{\"source\":\"iana\"},\"audio/g726-32\":{\"source\":\"iana\"},\"audio/g726-40\":{\"source\":\"iana\"},\"audio/g728\":{\"source\":\"iana\"},\"audio/g729\":{\"source\":\"iana\"},\"audio/g7291\":{\"source\":\"iana\"},\"audio/g729d\":{\"source\":\"iana\"},\"audio/g729e\":{\"source\":\"iana\"},\"audio/gsm\":{\"source\":\"iana\"},\"audio/gsm-efr\":{\"source\":\"iana\"},\"audio/gsm-hr-08\":{\"source\":\"iana\"},\"audio/ilbc\":{\"source\":\"iana\"},\"audio/ip-mr_v2.5\":{\"source\":\"iana\"},\"audio/isac\":{\"source\":\"apache\"},\"audio/l16\":{\"source\":\"iana\"},\"audio/l20\":{\"source\":\"iana\"},\"audio/l24\":{\"source\":\"iana\",\"compressible\":false},\"audio/l8\":{\"source\":\"iana\"},\"audio/lpc\":{\"source\":\"iana\"},\"audio/melp\":{\"source\":\"iana\"},\"audio/melp1200\":{\"source\":\"iana\"},\"audio/melp2400\":{\"source\":\"iana\"},\"audio/melp600\":{\"source\":\"iana\"},\"audio/midi\":{\"source\":\"apache\",\"extensions\":[\"mid\",\"midi\",\"kar\",\"rmi\"]},\"audio/mobile-xmf\":{\"source\":\"iana\",\"extensions\":[\"mxmf\"]},\"audio/mp3\":{\"compressible\":false,\"extensions\":[\"mp3\"]},\"audio/mp4\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"m4a\",\"mp4a\"]},\"audio/mp4a-latm\":{\"source\":\"iana\"},\"audio/mpa\":{\"source\":\"iana\"},\"audio/mpa-robust\":{\"source\":\"iana\"},\"audio/mpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"]},\"audio/mpeg4-generic\":{\"source\":\"iana\"},\"audio/musepack\":{\"source\":\"apache\"},\"audio/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"oga\",\"ogg\",\"spx\"]},\"audio/opus\":{\"source\":\"iana\"},\"audio/parityfec\":{\"source\":\"iana\"},\"audio/pcma\":{\"source\":\"iana\"},\"audio/pcma-wb\":{\"source\":\"iana\"},\"audio/pcmu\":{\"source\":\"iana\"},\"audio/pcmu-wb\":{\"source\":\"iana\"},\"audio/prs.sid\":{\"source\":\"iana\"},\"audio/qcelp\":{\"source\":\"iana\"},\"audio/raptorfec\":{\"source\":\"iana\"},\"audio/red\":{\"source\":\"iana\"},\"audio/rtp-enc-aescm128\":{\"source\":\"iana\"},\"audio/rtp-midi\":{\"source\":\"iana\"},\"audio/rtploopback\":{\"source\":\"iana\"},\"audio/rtx\":{\"source\":\"iana\"},\"audio/s3m\":{\"source\":\"apache\",\"extensions\":[\"s3m\"]},\"audio/silk\":{\"source\":\"apache\",\"extensions\":[\"sil\"]},\"audio/smv\":{\"source\":\"iana\"},\"audio/smv-qcp\":{\"source\":\"iana\"},\"audio/smv0\":{\"source\":\"iana\"},\"audio/sp-midi\":{\"source\":\"iana\"},\"audio/speex\":{\"source\":\"iana\"},\"audio/t140c\":{\"source\":\"iana\"},\"audio/t38\":{\"source\":\"iana\"},\"audio/telephone-event\":{\"source\":\"iana\"},\"audio/tetra_acelp\":{\"source\":\"iana\"},\"audio/tone\":{\"source\":\"iana\"},\"audio/uemclip\":{\"source\":\"iana\"},\"audio/ulpfec\":{\"source\":\"iana\"},\"audio/usac\":{\"source\":\"iana\"},\"audio/vdvi\":{\"source\":\"iana\"},\"audio/vmr-wb\":{\"source\":\"iana\"},\"audio/vnd.3gpp.iufp\":{\"source\":\"iana\"},\"audio/vnd.4sb\":{\"source\":\"iana\"},\"audio/vnd.audiokoz\":{\"source\":\"iana\"},\"audio/vnd.celp\":{\"source\":\"iana\"},\"audio/vnd.cisco.nse\":{\"source\":\"iana\"},\"audio/vnd.cmles.radio-events\":{\"source\":\"iana\"},\"audio/vnd.cns.anp1\":{\"source\":\"iana\"},\"audio/vnd.cns.inf1\":{\"source\":\"iana\"},\"audio/vnd.dece.audio\":{\"source\":\"iana\",\"extensions\":[\"uva\",\"uvva\"]},\"audio/vnd.digital-winds\":{\"source\":\"iana\",\"extensions\":[\"eol\"]},\"audio/vnd.dlna.adts\":{\"source\":\"iana\"},\"audio/vnd.dolby.heaac.1\":{\"source\":\"iana\"},\"audio/vnd.dolby.heaac.2\":{\"source\":\"iana\"},\"audio/vnd.dolby.mlp\":{\"source\":\"iana\"},\"audio/vnd.dolby.mps\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2x\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2z\":{\"source\":\"iana\"},\"audio/vnd.dolby.pulse.1\":{\"source\":\"iana\"},\"audio/vnd.dra\":{\"source\":\"iana\",\"extensions\":[\"dra\"]},\"audio/vnd.dts\":{\"source\":\"iana\",\"extensions\":[\"dts\"]},\"audio/vnd.dts.hd\":{\"source\":\"iana\",\"extensions\":[\"dtshd\"]},\"audio/vnd.dts.uhd\":{\"source\":\"iana\"},\"audio/vnd.dvb.file\":{\"source\":\"iana\"},\"audio/vnd.everad.plj\":{\"source\":\"iana\"},\"audio/vnd.hns.audio\":{\"source\":\"iana\"},\"audio/vnd.lucent.voice\":{\"source\":\"iana\",\"extensions\":[\"lvp\"]},\"audio/vnd.ms-playready.media.pya\":{\"source\":\"iana\",\"extensions\":[\"pya\"]},\"audio/vnd.nokia.mobile-xmf\":{\"source\":\"iana\"},\"audio/vnd.nortel.vbk\":{\"source\":\"iana\"},\"audio/vnd.nuera.ecelp4800\":{\"source\":\"iana\",\"extensions\":[\"ecelp4800\"]},\"audio/vnd.nuera.ecelp7470\":{\"source\":\"iana\",\"extensions\":[\"ecelp7470\"]},\"audio/vnd.nuera.ecelp9600\":{\"source\":\"iana\",\"extensions\":[\"ecelp9600\"]},\"audio/vnd.octel.sbc\":{\"source\":\"iana\"},\"audio/vnd.presonus.multitrack\":{\"source\":\"iana\"},\"audio/vnd.qcelp\":{\"source\":\"iana\"},\"audio/vnd.rhetorex.32kadpcm\":{\"source\":\"iana\"},\"audio/vnd.rip\":{\"source\":\"iana\",\"extensions\":[\"rip\"]},\"audio/vnd.rn-realaudio\":{\"compressible\":false},\"audio/vnd.sealedmedia.softseal.mpeg\":{\"source\":\"iana\"},\"audio/vnd.vmx.cvsd\":{\"source\":\"iana\"},\"audio/vnd.wave\":{\"compressible\":false},\"audio/vorbis\":{\"source\":\"iana\",\"compressible\":false},\"audio/vorbis-config\":{\"source\":\"iana\"},\"audio/wav\":{\"compressible\":false,\"extensions\":[\"wav\"]},\"audio/wave\":{\"compressible\":false,\"extensions\":[\"wav\"]},\"audio/webm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"weba\"]},\"audio/x-aac\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"aac\"]},\"audio/x-aiff\":{\"source\":\"apache\",\"extensions\":[\"aif\",\"aiff\",\"aifc\"]},\"audio/x-caf\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"caf\"]},\"audio/x-flac\":{\"source\":\"apache\",\"extensions\":[\"flac\"]},\"audio/x-m4a\":{\"source\":\"nginx\",\"extensions\":[\"m4a\"]},\"audio/x-matroska\":{\"source\":\"apache\",\"extensions\":[\"mka\"]},\"audio/x-mpegurl\":{\"source\":\"apache\",\"extensions\":[\"m3u\"]},\"audio/x-ms-wax\":{\"source\":\"apache\",\"extensions\":[\"wax\"]},\"audio/x-ms-wma\":{\"source\":\"apache\",\"extensions\":[\"wma\"]},\"audio/x-pn-realaudio\":{\"source\":\"apache\",\"extensions\":[\"ram\",\"ra\"]},\"audio/x-pn-realaudio-plugin\":{\"source\":\"apache\",\"extensions\":[\"rmp\"]},\"audio/x-realaudio\":{\"source\":\"nginx\",\"extensions\":[\"ra\"]},\"audio/x-tta\":{\"source\":\"apache\"},\"audio/x-wav\":{\"source\":\"apache\",\"extensions\":[\"wav\"]},\"audio/xm\":{\"source\":\"apache\",\"extensions\":[\"xm\"]},\"chemical/x-cdx\":{\"source\":\"apache\",\"extensions\":[\"cdx\"]},\"chemical/x-cif\":{\"source\":\"apache\",\"extensions\":[\"cif\"]},\"chemical/x-cmdf\":{\"source\":\"apache\",\"extensions\":[\"cmdf\"]},\"chemical/x-cml\":{\"source\":\"apache\",\"extensions\":[\"cml\"]},\"chemical/x-csml\":{\"source\":\"apache\",\"extensions\":[\"csml\"]},\"chemical/x-pdb\":{\"source\":\"apache\"},\"chemical/x-xyz\":{\"source\":\"apache\",\"extensions\":[\"xyz\"]},\"font/collection\":{\"source\":\"iana\",\"extensions\":[\"ttc\"]},\"font/otf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"otf\"]},\"font/sfnt\":{\"source\":\"iana\"},\"font/ttf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ttf\"]},\"font/woff\":{\"source\":\"iana\",\"extensions\":[\"woff\"]},\"font/woff2\":{\"source\":\"iana\",\"extensions\":[\"woff2\"]},\"image/aces\":{\"source\":\"iana\",\"extensions\":[\"exr\"]},\"image/apng\":{\"compressible\":false,\"extensions\":[\"apng\"]},\"image/avci\":{\"source\":\"iana\"},\"image/avcs\":{\"source\":\"iana\"},\"image/bmp\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"bmp\"]},\"image/cgm\":{\"source\":\"iana\",\"extensions\":[\"cgm\"]},\"image/dicom-rle\":{\"source\":\"iana\",\"extensions\":[\"drle\"]},\"image/emf\":{\"source\":\"iana\",\"extensions\":[\"emf\"]},\"image/fits\":{\"source\":\"iana\",\"extensions\":[\"fits\"]},\"image/g3fax\":{\"source\":\"iana\",\"extensions\":[\"g3\"]},\"image/gif\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"gif\"]},\"image/heic\":{\"source\":\"iana\",\"extensions\":[\"heic\"]},\"image/heic-sequence\":{\"source\":\"iana\",\"extensions\":[\"heics\"]},\"image/heif\":{\"source\":\"iana\",\"extensions\":[\"heif\"]},\"image/heif-sequence\":{\"source\":\"iana\",\"extensions\":[\"heifs\"]},\"image/hej2k\":{\"source\":\"iana\",\"extensions\":[\"hej2\"]},\"image/hsj2\":{\"source\":\"iana\",\"extensions\":[\"hsj2\"]},\"image/ief\":{\"source\":\"iana\",\"extensions\":[\"ief\"]},\"image/jls\":{\"source\":\"iana\",\"extensions\":[\"jls\"]},\"image/jp2\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jp2\",\"jpg2\"]},\"image/jpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpeg\",\"jpg\",\"jpe\"]},\"image/jph\":{\"source\":\"iana\",\"extensions\":[\"jph\"]},\"image/jphc\":{\"source\":\"iana\",\"extensions\":[\"jhc\"]},\"image/jpm\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpm\"]},\"image/jpx\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpx\",\"jpf\"]},\"image/jxr\":{\"source\":\"iana\",\"extensions\":[\"jxr\"]},\"image/jxra\":{\"source\":\"iana\",\"extensions\":[\"jxra\"]},\"image/jxrs\":{\"source\":\"iana\",\"extensions\":[\"jxrs\"]},\"image/jxs\":{\"source\":\"iana\",\"extensions\":[\"jxs\"]},\"image/jxsc\":{\"source\":\"iana\",\"extensions\":[\"jxsc\"]},\"image/jxsi\":{\"source\":\"iana\",\"extensions\":[\"jxsi\"]},\"image/jxss\":{\"source\":\"iana\",\"extensions\":[\"jxss\"]},\"image/ktx\":{\"source\":\"iana\",\"extensions\":[\"ktx\"]},\"image/naplps\":{\"source\":\"iana\"},\"image/pjpeg\":{\"compressible\":false},\"image/png\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"png\"]},\"image/prs.btif\":{\"source\":\"iana\",\"extensions\":[\"btif\"]},\"image/prs.pti\":{\"source\":\"iana\",\"extensions\":[\"pti\"]},\"image/pwg-raster\":{\"source\":\"iana\"},\"image/sgi\":{\"source\":\"apache\",\"extensions\":[\"sgi\"]},\"image/svg+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"svg\",\"svgz\"]},\"image/t38\":{\"source\":\"iana\",\"extensions\":[\"t38\"]},\"image/tiff\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"tif\",\"tiff\"]},\"image/tiff-fx\":{\"source\":\"iana\",\"extensions\":[\"tfx\"]},\"image/vnd.adobe.photoshop\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"psd\"]},\"image/vnd.airzip.accelerator.azv\":{\"source\":\"iana\",\"extensions\":[\"azv\"]},\"image/vnd.cns.inf2\":{\"source\":\"iana\"},\"image/vnd.dece.graphic\":{\"source\":\"iana\",\"extensions\":[\"uvi\",\"uvvi\",\"uvg\",\"uvvg\"]},\"image/vnd.djvu\":{\"source\":\"iana\",\"extensions\":[\"djvu\",\"djv\"]},\"image/vnd.dvb.subtitle\":{\"source\":\"iana\",\"extensions\":[\"sub\"]},\"image/vnd.dwg\":{\"source\":\"iana\",\"extensions\":[\"dwg\"]},\"image/vnd.dxf\":{\"source\":\"iana\",\"extensions\":[\"dxf\"]},\"image/vnd.fastbidsheet\":{\"source\":\"iana\",\"extensions\":[\"fbs\"]},\"image/vnd.fpx\":{\"source\":\"iana\",\"extensions\":[\"fpx\"]},\"image/vnd.fst\":{\"source\":\"iana\",\"extensions\":[\"fst\"]},\"image/vnd.fujixerox.edmics-mmr\":{\"source\":\"iana\",\"extensions\":[\"mmr\"]},\"image/vnd.fujixerox.edmics-rlc\":{\"source\":\"iana\",\"extensions\":[\"rlc\"]},\"image/vnd.globalgraphics.pgb\":{\"source\":\"iana\"},\"image/vnd.microsoft.icon\":{\"source\":\"iana\",\"extensions\":[\"ico\"]},\"image/vnd.mix\":{\"source\":\"iana\"},\"image/vnd.mozilla.apng\":{\"source\":\"iana\"},\"image/vnd.ms-dds\":{\"extensions\":[\"dds\"]},\"image/vnd.ms-modi\":{\"source\":\"iana\",\"extensions\":[\"mdi\"]},\"image/vnd.ms-photo\":{\"source\":\"apache\",\"extensions\":[\"wdp\"]},\"image/vnd.net-fpx\":{\"source\":\"iana\",\"extensions\":[\"npx\"]},\"image/vnd.radiance\":{\"source\":\"iana\"},\"image/vnd.sealed.png\":{\"source\":\"iana\"},\"image/vnd.sealedmedia.softseal.gif\":{\"source\":\"iana\"},\"image/vnd.sealedmedia.softseal.jpg\":{\"source\":\"iana\"},\"image/vnd.svf\":{\"source\":\"iana\"},\"image/vnd.tencent.tap\":{\"source\":\"iana\",\"extensions\":[\"tap\"]},\"image/vnd.valve.source.texture\":{\"source\":\"iana\",\"extensions\":[\"vtf\"]},\"image/vnd.wap.wbmp\":{\"source\":\"iana\",\"extensions\":[\"wbmp\"]},\"image/vnd.xiff\":{\"source\":\"iana\",\"extensions\":[\"xif\"]},\"image/vnd.zbrush.pcx\":{\"source\":\"iana\",\"extensions\":[\"pcx\"]},\"image/webp\":{\"source\":\"apache\",\"extensions\":[\"webp\"]},\"image/wmf\":{\"source\":\"iana\",\"extensions\":[\"wmf\"]},\"image/x-3ds\":{\"source\":\"apache\",\"extensions\":[\"3ds\"]},\"image/x-cmu-raster\":{\"source\":\"apache\",\"extensions\":[\"ras\"]},\"image/x-cmx\":{\"source\":\"apache\",\"extensions\":[\"cmx\"]},\"image/x-freehand\":{\"source\":\"apache\",\"extensions\":[\"fh\",\"fhc\",\"fh4\",\"fh5\",\"fh7\"]},\"image/x-icon\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ico\"]},\"image/x-jng\":{\"source\":\"nginx\",\"extensions\":[\"jng\"]},\"image/x-mrsid-image\":{\"source\":\"apache\",\"extensions\":[\"sid\"]},\"image/x-ms-bmp\":{\"source\":\"nginx\",\"compressible\":true,\"extensions\":[\"bmp\"]},\"image/x-pcx\":{\"source\":\"apache\",\"extensions\":[\"pcx\"]},\"image/x-pict\":{\"source\":\"apache\",\"extensions\":[\"pic\",\"pct\"]},\"image/x-portable-anymap\":{\"source\":\"apache\",\"extensions\":[\"pnm\"]},\"image/x-portable-bitmap\":{\"source\":\"apache\",\"extensions\":[\"pbm\"]},\"image/x-portable-graymap\":{\"source\":\"apache\",\"extensions\":[\"pgm\"]},\"image/x-portable-pixmap\":{\"source\":\"apache\",\"extensions\":[\"ppm\"]},\"image/x-rgb\":{\"source\":\"apache\",\"extensions\":[\"rgb\"]},\"image/x-tga\":{\"source\":\"apache\",\"extensions\":[\"tga\"]},\"image/x-xbitmap\":{\"source\":\"apache\",\"extensions\":[\"xbm\"]},\"image/x-xcf\":{\"compressible\":false},\"image/x-xpixmap\":{\"source\":\"apache\",\"extensions\":[\"xpm\"]},\"image/x-xwindowdump\":{\"source\":\"apache\",\"extensions\":[\"xwd\"]},\"message/cpim\":{\"source\":\"iana\"},\"message/delivery-status\":{\"source\":\"iana\"},\"message/disposition-notification\":{\"source\":\"iana\",\"extensions\":[\"disposition-notification\"]},\"message/external-body\":{\"source\":\"iana\"},\"message/feedback-report\":{\"source\":\"iana\"},\"message/global\":{\"source\":\"iana\",\"extensions\":[\"u8msg\"]},\"message/global-delivery-status\":{\"source\":\"iana\",\"extensions\":[\"u8dsn\"]},\"message/global-disposition-notification\":{\"source\":\"iana\",\"extensions\":[\"u8mdn\"]},\"message/global-headers\":{\"source\":\"iana\",\"extensions\":[\"u8hdr\"]},\"message/http\":{\"source\":\"iana\",\"compressible\":false},\"message/imdn+xml\":{\"source\":\"iana\",\"compressible\":true},\"message/news\":{\"source\":\"iana\"},\"message/partial\":{\"source\":\"iana\",\"compressible\":false},\"message/rfc822\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"eml\",\"mime\"]},\"message/s-http\":{\"source\":\"iana\"},\"message/sip\":{\"source\":\"iana\"},\"message/sipfrag\":{\"source\":\"iana\"},\"message/tracking-status\":{\"source\":\"iana\"},\"message/vnd.si.simp\":{\"source\":\"iana\"},\"message/vnd.wfa.wsc\":{\"source\":\"iana\",\"extensions\":[\"wsc\"]},\"model/3mf\":{\"source\":\"iana\",\"extensions\":[\"3mf\"]},\"model/gltf+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"gltf\"]},\"model/gltf-binary\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"glb\"]},\"model/iges\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"igs\",\"iges\"]},\"model/mesh\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"msh\",\"mesh\",\"silo\"]},\"model/stl\":{\"source\":\"iana\",\"extensions\":[\"stl\"]},\"model/vnd.collada+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dae\"]},\"model/vnd.dwf\":{\"source\":\"iana\",\"extensions\":[\"dwf\"]},\"model/vnd.flatland.3dml\":{\"source\":\"iana\"},\"model/vnd.gdl\":{\"source\":\"iana\",\"extensions\":[\"gdl\"]},\"model/vnd.gs-gdl\":{\"source\":\"apache\"},\"model/vnd.gs.gdl\":{\"source\":\"iana\"},\"model/vnd.gtw\":{\"source\":\"iana\",\"extensions\":[\"gtw\"]},\"model/vnd.moml+xml\":{\"source\":\"iana\",\"compressible\":true},\"model/vnd.mts\":{\"source\":\"iana\",\"extensions\":[\"mts\"]},\"model/vnd.opengex\":{\"source\":\"iana\",\"extensions\":[\"ogex\"]},\"model/vnd.parasolid.transmit.binary\":{\"source\":\"iana\",\"extensions\":[\"x_b\"]},\"model/vnd.parasolid.transmit.text\":{\"source\":\"iana\",\"extensions\":[\"x_t\"]},\"model/vnd.rosette.annotated-data-model\":{\"source\":\"iana\"},\"model/vnd.usdz+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"usdz\"]},\"model/vnd.valve.source.compiled-map\":{\"source\":\"iana\",\"extensions\":[\"bsp\"]},\"model/vnd.vtu\":{\"source\":\"iana\",\"extensions\":[\"vtu\"]},\"model/vrml\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"wrl\",\"vrml\"]},\"model/x3d+binary\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"x3db\",\"x3dbz\"]},\"model/x3d+fastinfoset\":{\"source\":\"iana\",\"extensions\":[\"x3db\"]},\"model/x3d+vrml\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"x3dv\",\"x3dvz\"]},\"model/x3d+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"x3d\",\"x3dz\"]},\"model/x3d-vrml\":{\"source\":\"iana\",\"extensions\":[\"x3dv\"]},\"multipart/alternative\":{\"source\":\"iana\",\"compressible\":false},\"multipart/appledouble\":{\"source\":\"iana\"},\"multipart/byteranges\":{\"source\":\"iana\"},\"multipart/digest\":{\"source\":\"iana\"},\"multipart/encrypted\":{\"source\":\"iana\",\"compressible\":false},\"multipart/form-data\":{\"source\":\"iana\",\"compressible\":false},\"multipart/header-set\":{\"source\":\"iana\"},\"multipart/mixed\":{\"source\":\"iana\"},\"multipart/multilingual\":{\"source\":\"iana\"},\"multipart/parallel\":{\"source\":\"iana\"},\"multipart/related\":{\"source\":\"iana\",\"compressible\":false},\"multipart/report\":{\"source\":\"iana\"},\"multipart/signed\":{\"source\":\"iana\",\"compressible\":false},\"multipart/vnd.bint.med-plus\":{\"source\":\"iana\"},\"multipart/voice-message\":{\"source\":\"iana\"},\"multipart/x-mixed-replace\":{\"source\":\"iana\"},\"text/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"text/cache-manifest\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"appcache\",\"manifest\"]},\"text/calendar\":{\"source\":\"iana\",\"extensions\":[\"ics\",\"ifb\"]},\"text/calender\":{\"compressible\":true},\"text/cmd\":{\"compressible\":true},\"text/coffeescript\":{\"extensions\":[\"coffee\",\"litcoffee\"]},\"text/css\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"css\"]},\"text/csv\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"csv\"]},\"text/csv-schema\":{\"source\":\"iana\"},\"text/directory\":{\"source\":\"iana\"},\"text/dns\":{\"source\":\"iana\"},\"text/ecmascript\":{\"source\":\"iana\"},\"text/encaprtp\":{\"source\":\"iana\"},\"text/enriched\":{\"source\":\"iana\"},\"text/flexfec\":{\"source\":\"iana\"},\"text/fwdred\":{\"source\":\"iana\"},\"text/grammar-ref-list\":{\"source\":\"iana\"},\"text/html\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"html\",\"htm\",\"shtml\"]},\"text/jade\":{\"extensions\":[\"jade\"]},\"text/javascript\":{\"source\":\"iana\",\"compressible\":true},\"text/jcr-cnd\":{\"source\":\"iana\"},\"text/jsx\":{\"compressible\":true,\"extensions\":[\"jsx\"]},\"text/less\":{\"compressible\":true,\"extensions\":[\"less\"]},\"text/markdown\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"markdown\",\"md\"]},\"text/mathml\":{\"source\":\"nginx\",\"extensions\":[\"mml\"]},\"text/mdx\":{\"compressible\":true,\"extensions\":[\"mdx\"]},\"text/mizar\":{\"source\":\"iana\"},\"text/n3\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"n3\"]},\"text/parameters\":{\"source\":\"iana\"},\"text/parityfec\":{\"source\":\"iana\"},\"text/plain\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"]},\"text/provenance-notation\":{\"source\":\"iana\"},\"text/prs.fallenstein.rst\":{\"source\":\"iana\"},\"text/prs.lines.tag\":{\"source\":\"iana\",\"extensions\":[\"dsc\"]},\"text/prs.prop.logic\":{\"source\":\"iana\"},\"text/raptorfec\":{\"source\":\"iana\"},\"text/red\":{\"source\":\"iana\"},\"text/rfc822-headers\":{\"source\":\"iana\"},\"text/richtext\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtx\"]},\"text/rtf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtf\"]},\"text/rtp-enc-aescm128\":{\"source\":\"iana\"},\"text/rtploopback\":{\"source\":\"iana\"},\"text/rtx\":{\"source\":\"iana\"},\"text/sgml\":{\"source\":\"iana\",\"extensions\":[\"sgml\",\"sgm\"]},\"text/shex\":{\"extensions\":[\"shex\"]},\"text/slim\":{\"extensions\":[\"slim\",\"slm\"]},\"text/strings\":{\"source\":\"iana\"},\"text/stylus\":{\"extensions\":[\"stylus\",\"styl\"]},\"text/t140\":{\"source\":\"iana\"},\"text/tab-separated-values\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tsv\"]},\"text/troff\":{\"source\":\"iana\",\"extensions\":[\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"]},\"text/turtle\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"ttl\"]},\"text/ulpfec\":{\"source\":\"iana\"},\"text/uri-list\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uri\",\"uris\",\"urls\"]},\"text/vcard\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"vcard\"]},\"text/vnd.a\":{\"source\":\"iana\"},\"text/vnd.abc\":{\"source\":\"iana\"},\"text/vnd.ascii-art\":{\"source\":\"iana\"},\"text/vnd.curl\":{\"source\":\"iana\",\"extensions\":[\"curl\"]},\"text/vnd.curl.dcurl\":{\"source\":\"apache\",\"extensions\":[\"dcurl\"]},\"text/vnd.curl.mcurl\":{\"source\":\"apache\",\"extensions\":[\"mcurl\"]},\"text/vnd.curl.scurl\":{\"source\":\"apache\",\"extensions\":[\"scurl\"]},\"text/vnd.debian.copyright\":{\"source\":\"iana\"},\"text/vnd.dmclientscript\":{\"source\":\"iana\"},\"text/vnd.dvb.subtitle\":{\"source\":\"iana\",\"extensions\":[\"sub\"]},\"text/vnd.esmertec.theme-descriptor\":{\"source\":\"iana\"},\"text/vnd.ficlab.flt\":{\"source\":\"iana\"},\"text/vnd.fly\":{\"source\":\"iana\",\"extensions\":[\"fly\"]},\"text/vnd.fmi.flexstor\":{\"source\":\"iana\",\"extensions\":[\"flx\"]},\"text/vnd.gml\":{\"source\":\"iana\"},\"text/vnd.graphviz\":{\"source\":\"iana\",\"extensions\":[\"gv\"]},\"text/vnd.hgl\":{\"source\":\"iana\"},\"text/vnd.in3d.3dml\":{\"source\":\"iana\",\"extensions\":[\"3dml\"]},\"text/vnd.in3d.spot\":{\"source\":\"iana\",\"extensions\":[\"spot\"]},\"text/vnd.iptc.newsml\":{\"source\":\"iana\"},\"text/vnd.iptc.nitf\":{\"source\":\"iana\"},\"text/vnd.latex-z\":{\"source\":\"iana\"},\"text/vnd.motorola.reflex\":{\"source\":\"iana\"},\"text/vnd.ms-mediapackage\":{\"source\":\"iana\"},\"text/vnd.net2phone.commcenter.command\":{\"source\":\"iana\"},\"text/vnd.radisys.msml-basic-layout\":{\"source\":\"iana\"},\"text/vnd.senx.warpscript\":{\"source\":\"iana\"},\"text/vnd.si.uricatalogue\":{\"source\":\"iana\"},\"text/vnd.sosi\":{\"source\":\"iana\"},\"text/vnd.sun.j2me.app-descriptor\":{\"source\":\"iana\",\"extensions\":[\"jad\"]},\"text/vnd.trolltech.linguist\":{\"source\":\"iana\"},\"text/vnd.wap.si\":{\"source\":\"iana\"},\"text/vnd.wap.sl\":{\"source\":\"iana\"},\"text/vnd.wap.wml\":{\"source\":\"iana\",\"extensions\":[\"wml\"]},\"text/vnd.wap.wmlscript\":{\"source\":\"iana\",\"extensions\":[\"wmls\"]},\"text/vtt\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"vtt\"]},\"text/x-asm\":{\"source\":\"apache\",\"extensions\":[\"s\",\"asm\"]},\"text/x-c\":{\"source\":\"apache\",\"extensions\":[\"c\",\"cc\",\"cxx\",\"cpp\",\"h\",\"hh\",\"dic\"]},\"text/x-component\":{\"source\":\"nginx\",\"extensions\":[\"htc\"]},\"text/x-fortran\":{\"source\":\"apache\",\"extensions\":[\"f\",\"for\",\"f77\",\"f90\"]},\"text/x-gwt-rpc\":{\"compressible\":true},\"text/x-handlebars-template\":{\"extensions\":[\"hbs\"]},\"text/x-java-source\":{\"source\":\"apache\",\"extensions\":[\"java\"]},\"text/x-jquery-tmpl\":{\"compressible\":true},\"text/x-lua\":{\"extensions\":[\"lua\"]},\"text/x-markdown\":{\"compressible\":true,\"extensions\":[\"mkd\"]},\"text/x-nfo\":{\"source\":\"apache\",\"extensions\":[\"nfo\"]},\"text/x-opml\":{\"source\":\"apache\",\"extensions\":[\"opml\"]},\"text/x-org\":{\"compressible\":true,\"extensions\":[\"org\"]},\"text/x-pascal\":{\"source\":\"apache\",\"extensions\":[\"p\",\"pas\"]},\"text/x-processing\":{\"compressible\":true,\"extensions\":[\"pde\"]},\"text/x-sass\":{\"extensions\":[\"sass\"]},\"text/x-scss\":{\"extensions\":[\"scss\"]},\"text/x-setext\":{\"source\":\"apache\",\"extensions\":[\"etx\"]},\"text/x-sfv\":{\"source\":\"apache\",\"extensions\":[\"sfv\"]},\"text/x-suse-ymp\":{\"compressible\":true,\"extensions\":[\"ymp\"]},\"text/x-uuencode\":{\"source\":\"apache\",\"extensions\":[\"uu\"]},\"text/x-vcalendar\":{\"source\":\"apache\",\"extensions\":[\"vcs\"]},\"text/x-vcard\":{\"source\":\"apache\",\"extensions\":[\"vcf\"]},\"text/xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xml\"]},\"text/xml-external-parsed-entity\":{\"source\":\"iana\"},\"text/yaml\":{\"extensions\":[\"yaml\",\"yml\"]},\"video/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"video/3gpp\":{\"source\":\"iana\",\"extensions\":[\"3gp\",\"3gpp\"]},\"video/3gpp-tt\":{\"source\":\"iana\"},\"video/3gpp2\":{\"source\":\"iana\",\"extensions\":[\"3g2\"]},\"video/bmpeg\":{\"source\":\"iana\"},\"video/bt656\":{\"source\":\"iana\"},\"video/celb\":{\"source\":\"iana\"},\"video/dv\":{\"source\":\"iana\"},\"video/encaprtp\":{\"source\":\"iana\"},\"video/flexfec\":{\"source\":\"iana\"},\"video/h261\":{\"source\":\"iana\",\"extensions\":[\"h261\"]},\"video/h263\":{\"source\":\"iana\",\"extensions\":[\"h263\"]},\"video/h263-1998\":{\"source\":\"iana\"},\"video/h263-2000\":{\"source\":\"iana\"},\"video/h264\":{\"source\":\"iana\",\"extensions\":[\"h264\"]},\"video/h264-rcdo\":{\"source\":\"iana\"},\"video/h264-svc\":{\"source\":\"iana\"},\"video/h265\":{\"source\":\"iana\"},\"video/iso.segment\":{\"source\":\"iana\"},\"video/jpeg\":{\"source\":\"iana\",\"extensions\":[\"jpgv\"]},\"video/jpeg2000\":{\"source\":\"iana\"},\"video/jpm\":{\"source\":\"apache\",\"extensions\":[\"jpm\",\"jpgm\"]},\"video/mj2\":{\"source\":\"iana\",\"extensions\":[\"mj2\",\"mjp2\"]},\"video/mp1s\":{\"source\":\"iana\"},\"video/mp2p\":{\"source\":\"iana\"},\"video/mp2t\":{\"source\":\"iana\",\"extensions\":[\"ts\"]},\"video/mp4\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mp4\",\"mp4v\",\"mpg4\"]},\"video/mp4v-es\":{\"source\":\"iana\"},\"video/mpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"]},\"video/mpeg4-generic\":{\"source\":\"iana\"},\"video/mpv\":{\"source\":\"iana\"},\"video/nv\":{\"source\":\"iana\"},\"video/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ogv\"]},\"video/parityfec\":{\"source\":\"iana\"},\"video/pointer\":{\"source\":\"iana\"},\"video/quicktime\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"qt\",\"mov\"]},\"video/raptorfec\":{\"source\":\"iana\"},\"video/raw\":{\"source\":\"iana\"},\"video/rtp-enc-aescm128\":{\"source\":\"iana\"},\"video/rtploopback\":{\"source\":\"iana\"},\"video/rtx\":{\"source\":\"iana\"},\"video/smpte291\":{\"source\":\"iana\"},\"video/smpte292m\":{\"source\":\"iana\"},\"video/ulpfec\":{\"source\":\"iana\"},\"video/vc1\":{\"source\":\"iana\"},\"video/vc2\":{\"source\":\"iana\"},\"video/vnd.cctv\":{\"source\":\"iana\"},\"video/vnd.dece.hd\":{\"source\":\"iana\",\"extensions\":[\"uvh\",\"uvvh\"]},\"video/vnd.dece.mobile\":{\"source\":\"iana\",\"extensions\":[\"uvm\",\"uvvm\"]},\"video/vnd.dece.mp4\":{\"source\":\"iana\"},\"video/vnd.dece.pd\":{\"source\":\"iana\",\"extensions\":[\"uvp\",\"uvvp\"]},\"video/vnd.dece.sd\":{\"source\":\"iana\",\"extensions\":[\"uvs\",\"uvvs\"]},\"video/vnd.dece.video\":{\"source\":\"iana\",\"extensions\":[\"uvv\",\"uvvv\"]},\"video/vnd.directv.mpeg\":{\"source\":\"iana\"},\"video/vnd.directv.mpeg-tts\":{\"source\":\"iana\"},\"video/vnd.dlna.mpeg-tts\":{\"source\":\"iana\"},\"video/vnd.dvb.file\":{\"source\":\"iana\",\"extensions\":[\"dvb\"]},\"video/vnd.fvt\":{\"source\":\"iana\",\"extensions\":[\"fvt\"]},\"video/vnd.hns.video\":{\"source\":\"iana\"},\"video/vnd.iptvforum.1dparityfec-1010\":{\"source\":\"iana\"},\"video/vnd.iptvforum.1dparityfec-2005\":{\"source\":\"iana\"},\"video/vnd.iptvforum.2dparityfec-1010\":{\"source\":\"iana\"},\"video/vnd.iptvforum.2dparityfec-2005\":{\"source\":\"iana\"},\"video/vnd.iptvforum.ttsavc\":{\"source\":\"iana\"},\"video/vnd.iptvforum.ttsmpeg2\":{\"source\":\"iana\"},\"video/vnd.motorola.video\":{\"source\":\"iana\"},\"video/vnd.motorola.videop\":{\"source\":\"iana\"},\"video/vnd.mpegurl\":{\"source\":\"iana\",\"extensions\":[\"mxu\",\"m4u\"]},\"video/vnd.ms-playready.media.pyv\":{\"source\":\"iana\",\"extensions\":[\"pyv\"]},\"video/vnd.nokia.interleaved-multimedia\":{\"source\":\"iana\"},\"video/vnd.nokia.mp4vr\":{\"source\":\"iana\"},\"video/vnd.nokia.videovoip\":{\"source\":\"iana\"},\"video/vnd.objectvideo\":{\"source\":\"iana\"},\"video/vnd.radgamettools.bink\":{\"source\":\"iana\"},\"video/vnd.radgamettools.smacker\":{\"source\":\"iana\"},\"video/vnd.sealed.mpeg1\":{\"source\":\"iana\"},\"video/vnd.sealed.mpeg4\":{\"source\":\"iana\"},\"video/vnd.sealed.swf\":{\"source\":\"iana\"},\"video/vnd.sealedmedia.softseal.mov\":{\"source\":\"iana\"},\"video/vnd.uvvu.mp4\":{\"source\":\"iana\",\"extensions\":[\"uvu\",\"uvvu\"]},\"video/vnd.vivo\":{\"source\":\"iana\",\"extensions\":[\"viv\"]},\"video/vnd.youtube.yt\":{\"source\":\"iana\"},\"video/vp8\":{\"source\":\"iana\"},\"video/webm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"webm\"]},\"video/x-f4v\":{\"source\":\"apache\",\"extensions\":[\"f4v\"]},\"video/x-fli\":{\"source\":\"apache\",\"extensions\":[\"fli\"]},\"video/x-flv\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"flv\"]},\"video/x-m4v\":{\"source\":\"apache\",\"extensions\":[\"m4v\"]},\"video/x-matroska\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"mkv\",\"mk3d\",\"mks\"]},\"video/x-mng\":{\"source\":\"apache\",\"extensions\":[\"mng\"]},\"video/x-ms-asf\":{\"source\":\"apache\",\"extensions\":[\"asf\",\"asx\"]},\"video/x-ms-vob\":{\"source\":\"apache\",\"extensions\":[\"vob\"]},\"video/x-ms-wm\":{\"source\":\"apache\",\"extensions\":[\"wm\"]},\"video/x-ms-wmv\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"wmv\"]},\"video/x-ms-wmx\":{\"source\":\"apache\",\"extensions\":[\"wmx\"]},\"video/x-ms-wvx\":{\"source\":\"apache\",\"extensions\":[\"wvx\"]},\"video/x-msvideo\":{\"source\":\"apache\",\"extensions\":[\"avi\"]},\"video/x-sgi-movie\":{\"source\":\"apache\",\"extensions\":[\"movie\"]},\"video/x-smv\":{\"source\":\"apache\",\"extensions\":[\"smv\"]},\"x-conference/x-cooltalk\":{\"source\":\"apache\",\"extensions\":[\"ice\"]},\"x-shader/x-fragment\":{\"compressible\":true},\"x-shader/x-vertex\":{\"compressible\":true}}");

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

module.exports =
{
  parallel      : __webpack_require__(33),
  serial        : __webpack_require__(40),
  serialOrdered : __webpack_require__(41)
};


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

var iterate    = __webpack_require__(34)
  , initState  = __webpack_require__(38)
  , terminator = __webpack_require__(39)
  ;

// Public API
module.exports = parallel;

/**
 * Runs iterator over provided array elements in parallel
 *
 * @param   {array|object} list - array or object (named list) to iterate over
 * @param   {function} iterator - iterator to run
 * @param   {function} callback - invoked when all elements processed
 * @returns {function} - jobs terminator
 */
function parallel(list, iterator, callback)
{
  var state = initState(list);

  while (state.index < (state['keyedList'] || list).length)
  {
    iterate(list, iterator, state, function(error, result)
    {
      if (error)
      {
        callback(error, result);
        return;
      }

      // looks like it's the last one
      if (Object.keys(state.jobs).length === 0)
      {
        callback(null, state.results);
        return;
      }
    });

    state.index++;
  }

  return terminator.bind(state, callback);
}


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

var async = __webpack_require__(35)
  , abort = __webpack_require__(37)
  ;

// API
module.exports = iterate;

/**
 * Iterates over each job object
 *
 * @param {array|object} list - array or object (named list) to iterate over
 * @param {function} iterator - iterator to run
 * @param {object} state - current job status
 * @param {function} callback - invoked when all elements processed
 */
function iterate(list, iterator, state, callback)
{
  // store current index
  var key = state['keyedList'] ? state['keyedList'][state.index] : state.index;

  state.jobs[key] = runJob(iterator, key, list[key], function(error, output)
  {
    // don't repeat yourself
    // skip secondary callbacks
    if (!(key in state.jobs))
    {
      return;
    }

    // clean up jobs
    delete state.jobs[key];

    if (error)
    {
      // don't process rest of the results
      // stop still active jobs
      // and reset the list
      abort(state);
    }
    else
    {
      state.results[key] = output;
    }

    // return salvaged results
    callback(error, state.results);
  });
}

/**
 * Runs iterator over provided job element
 *
 * @param   {function} iterator - iterator to invoke
 * @param   {string|number} key - key/index of the element in the list of jobs
 * @param   {mixed} item - job description
 * @param   {function} callback - invoked after iterator is done with the job
 * @returns {function|mixed} - job abort function or something else
 */
function runJob(iterator, key, item, callback)
{
  var aborter;

  // allow shortcut if iterator expects only two arguments
  if (iterator.length == 2)
  {
    aborter = iterator(item, async(callback));
  }
  // otherwise go with full three arguments
  else
  {
    aborter = iterator(item, key, async(callback));
  }

  return aborter;
}


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

var defer = __webpack_require__(36);

// API
module.exports = async;

/**
 * Runs provided callback asynchronously
 * even if callback itself is not
 *
 * @param   {function} callback - callback to invoke
 * @returns {function} - augmented callback
 */
function async(callback)
{
  var isAsync = false;

  // check if async happened
  defer(function() { isAsync = true; });

  return function async_callback(err, result)
  {
    if (isAsync)
    {
      callback(err, result);
    }
    else
    {
      defer(function nextTick_callback()
      {
        callback(err, result);
      });
    }
  };
}


/***/ }),
/* 36 */
/***/ (function(module, exports) {

module.exports = defer;

/**
 * Runs provided function on next iteration of the event loop
 *
 * @param {function} fn - function to run
 */
function defer(fn)
{
  var nextTick = typeof setImmediate == 'function'
    ? setImmediate
    : (
      typeof process == 'object' && typeof process.nextTick == 'function'
      ? process.nextTick
      : null
    );

  if (nextTick)
  {
    nextTick(fn);
  }
  else
  {
    setTimeout(fn, 0);
  }
}


/***/ }),
/* 37 */
/***/ (function(module, exports) {

// API
module.exports = abort;

/**
 * Aborts leftover active jobs
 *
 * @param {object} state - current state object
 */
function abort(state)
{
  Object.keys(state.jobs).forEach(clean.bind(state));

  // reset leftover jobs
  state.jobs = {};
}

/**
 * Cleans up leftover job by invoking abort function for the provided job id
 *
 * @this  state
 * @param {string|number} key - job id to abort
 */
function clean(key)
{
  if (typeof this.jobs[key] == 'function')
  {
    this.jobs[key]();
  }
}


/***/ }),
/* 38 */
/***/ (function(module, exports) {

// API
module.exports = state;

/**
 * Creates initial state object
 * for iteration over list
 *
 * @param   {array|object} list - list to iterate over
 * @param   {function|null} sortMethod - function to use for keys sort,
 *                                     or `null` to keep them as is
 * @returns {object} - initial state object
 */
function state(list, sortMethod)
{
  var isNamedList = !Array.isArray(list)
    , initState =
    {
      index    : 0,
      keyedList: isNamedList || sortMethod ? Object.keys(list) : null,
      jobs     : {},
      results  : isNamedList ? {} : [],
      size     : isNamedList ? Object.keys(list).length : list.length
    }
    ;

  if (sortMethod)
  {
    // sort array keys based on it's values
    // sort object's keys just on own merit
    initState.keyedList.sort(isNamedList ? sortMethod : function(a, b)
    {
      return sortMethod(list[a], list[b]);
    });
  }

  return initState;
}


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

var abort = __webpack_require__(37)
  , async = __webpack_require__(35)
  ;

// API
module.exports = terminator;

/**
 * Terminates jobs in the attached state context
 *
 * @this  AsyncKitState#
 * @param {function} callback - final callback to invoke after termination
 */
function terminator(callback)
{
  if (!Object.keys(this.jobs).length)
  {
    return;
  }

  // fast forward iteration index
  this.index = this.size;

  // abort jobs
  abort(this);

  // send back results we have so far
  async(callback)(null, this.results);
}


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

var serialOrdered = __webpack_require__(41);

// Public API
module.exports = serial;

/**
 * Runs iterator over provided array elements in series
 *
 * @param   {array|object} list - array or object (named list) to iterate over
 * @param   {function} iterator - iterator to run
 * @param   {function} callback - invoked when all elements processed
 * @returns {function} - jobs terminator
 */
function serial(list, iterator, callback)
{
  return serialOrdered(list, iterator, null, callback);
}


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

var iterate    = __webpack_require__(34)
  , initState  = __webpack_require__(38)
  , terminator = __webpack_require__(39)
  ;

// Public API
module.exports = serialOrdered;
// sorting helpers
module.exports.ascending  = ascending;
module.exports.descending = descending;

/**
 * Runs iterator over provided sorted array elements in series
 *
 * @param   {array|object} list - array or object (named list) to iterate over
 * @param   {function} iterator - iterator to run
 * @param   {function} sortMethod - custom sort function
 * @param   {function} callback - invoked when all elements processed
 * @returns {function} - jobs terminator
 */
function serialOrdered(list, iterator, sortMethod, callback)
{
  var state = initState(list, sortMethod);

  iterate(list, iterator, state, function iteratorHandler(error, result)
  {
    if (error)
    {
      callback(error, result);
      return;
    }

    state.index++;

    // are we there yet?
    if (state.index < (state['keyedList'] || list).length)
    {
      iterate(list, iterator, state, iteratorHandler);
      return;
    }

    // done here
    callback(null, state.results);
  });

  return terminator.bind(state, callback);
}

/*
 * -- Sort methods
 */

/**
 * sort helper to sort array elements in ascending order
 *
 * @param   {mixed} a - an item to compare
 * @param   {mixed} b - an item to compare
 * @returns {number} - comparison result
 */
function ascending(a, b)
{
  return a < b ? -1 : a > b ? 1 : 0;
}

/**
 * sort helper to sort array elements in descending order
 *
 * @param   {mixed} a - an item to compare
 * @param   {mixed} b - an item to compare
 * @returns {number} - comparison result
 */
function descending(a, b)
{
  return -1 * ascending(a, b);
}


/***/ }),
/* 42 */
/***/ (function(module, exports) {

// populates missing values
module.exports = function(dst, src) {

  Object.keys(src).forEach(function(prop)
  {
    dst[prop] = dst[prop] || src[prop];
  });

  return dst;
};


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const utils = __webpack_require__(15);

const createResponse = (status, raw, req, headers = {}) => {
  const resp = {
    statusCode: status,
    req,
    on(event, callback) {
      switch (event) {
        case 'data':
          callback(raw);
          break;
        case 'end':
          callback();
          break;
      }
    },
  };
  for (let k in headers) { resp[k] = headers[k]; }
  resp.headers = resp.headers || {};

  return resp;
};

module.exports = class BrowserClient {
  constructor(hostname, port, base, ssl) {
    base = base || '';
    ssl = ssl || false;
    this.hostname = hostname;
    this.port = port;
    this.base = base;
    this.protocol = ssl ? 'https' : 'http';
    this.cookies = {};
  }

  request(opts, data, timeout) {
    const domain = this.port && this.port !== -1
      ? `${this.hostname}:${this.port}`
      : this.hostname;
    const url = `${this.protocol}://${domain}${this.base}${opts.path}`;
    const method = opts.method || 'GET';

    return new Promise((resolve, reject) => {
      const query = new XMLHttpRequest();
      query.addEventListener('error', reject);
      query.addEventListener('abort', reject);
      query.addEventListener('load', () => {
        const raw = query.responseText;

        resolve(createResponse(query.status, raw, {
          method,
          path: opts.path,
          url,
        }));
      });

      query.open(method, url);
      if (timeout) {
        query.timeout = timeout; // Set timeout to 4 seconds (4000 milliseconds)
        query.ontimeout = () => { reject(new Error('Request Timeout')); };
      }

      if (opts.headers) {
        if (opts.headers['Content-Type'] === 'multipart/form-data' ||
            opts.headers['content-type'] === 'multipart/form-data') {
          delete opts.headers['Content-Type'];
          delete opts.headers['content-type'];

          const form = new FormData();

          for (const key in data) {
            form.append(key, data[key]);
          }
          data = form;
        }

        for (const header in opts.headers) {
          query.setRequestHeader(header, opts.headers[header]);
        }
      }
      if (!opts.headers || !opts.headers['Cache-Control']) {
        query.setRequestHeader('Cache-Control', 'no-cache, must-revalidate');
      }

      query.send(data);
    });
  }

  readCookies(resp) {
    utils.parseSetCookies(resp.headers['set-cookie']).forEach(c => {
      this.cookies[c.Name] = c;
    });
  }

  writeCookies(hdrs) {
    var cookies = [];
    for (var k in this.cookies) {
      cookies.push(this.cookies[k]);
    }
    if (cookies.length) {
      hdrs.Cookies = utils.dumpCookies(cookies);
    }
  }
};


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const os = __webpack_require__(6);
const fs = __webpack_require__(28);
const path = __webpack_require__(27);
const https = __webpack_require__(11);
const child_process = __webpack_require__(16);
const utils = __webpack_require__(15);
const KiteStateError = __webpack_require__(19);
const {STATES} = __webpack_require__(20);

const OSXSupport = {
  RELEASE_URL: 'https://alpha.kite.com/release/dls/mac/current',
  APPS_PATH: '/Applications/',
  KITE_DMG_PATH: '/tmp/Kite.dmg',
  KITE_VOLUME_PATH: '/Volumes/Kite/',
  KITE_APP_PATH: {mounted: '/Volumes/Kite/Kite.app', defaultInstalled: '/Applications/Kite.app'},
  KITE_SIDEBAR_PATH: '/Applications/Kite.app/Contents/MacOS/KiteSidebar.app',
  KITE_BUNDLE_ID: 'com.kite.Kite',
  SESSION_FILE_PATH: path.join(os.homedir(), '.kite', 'session.json'),

  get releaseURL() {
    return this.RELEASE_URL;
  },

  get downloadPath() {
    return this.KITE_DMG_PATH;
  },

  get installPath() {
    return this.allInstallPaths[0];
  },

  get allInstallPaths() {
    let paths = String(child_process.spawnSync('mdfind', [
      'kMDItemCFBundleIdentifier = "com.kite.Kite"',
    ]).stdout).trim().split('\n');
    if (paths.indexOf(this.KITE_APP_PATH.defaultInstalled) === -1 && this.checkDefaultAppPath()) {
      paths.push(this.KITE_APP_PATH.defaultInstalled);
    }
    return paths.filter(p => p !== '');
  },

  get enterpriseInstallPath() {
    return this.allEnterpriseInstallPaths[0];
  },

  get allEnterpriseInstallPaths() {
    return String(child_process.spawnSync('mdfind', [
      'kMDItemCFBundleIdentifier = "enterprise.kite.Kite"',
    ]).stdout).trim().split('\n');
  },

  get sessionFilePath() {
    return this.SESSION_FILE_PATH;
  },

  isAdmin() {
    try {
      const user = utils.whoami();
      const adminUsers = String(child_process.execSync('dscacheutil -q group -a name admin'))
      .split('\n')
      .filter(l => /^users:/.test(l))[0]
      .trim()
      .replace(/users:\s+/, '')
      .split(/\s/g);
      return adminUsers.includes(user);
    } catch (e) {
      return false;
    }
  },

  arch() {
    return os.arch();
  },

  isOSSupported() {
    return true;
  },

  isOSVersionSupported() {
    return parseFloat(os.release()) >= 14;
  },

  isKiteSupported() {
    return this.isOSVersionSupported();
  },

  checkDefaultAppPath() {
    return fs.existsSync(this.KITE_APP_PATH.defaultInstalled);
  },

  isKiteInstalled() {
    return utils.spawnPromise(
      'mdfind',
      ['kMDItemCFBundleIdentifier = "com.kite.Kite"'],
      'mdfind_error',
      'Unable to run mdfind and verify that Kite is installed')
    .then(res => {
      if ((!res || res.trim() === '') && !this.checkDefaultAppPath()) {
        throw new KiteStateError('Unable to find Kite application install using mdfind', {
          state: STATES.UNINSTALLED,
        });
      }
    });
  },

  hasManyKiteInstallation() {
    return this.allInstallPaths.length > 1;
  },

  hasManyKiteEnterpriseInstallation() {
    return this.allEnterpriseInstallPaths.length > 1;
  },

  hasBothKiteInstalled() {
    return Promise.all([
      this.isKiteInstalled(),
      this.isKiteEnterpriseInstalled(),
    ]);
  },

  isKiteEnterpriseInstalled() {
    return utils.spawnPromise(
      'mdfind',
      ['kMDItemCFBundleIdentifier = "enterprise.kite.Kite"'],
      'mdfind_error',
      'Unable to run mdfind and verify that kite enterprise is installed')
    .then(res => {
      if (!res || res.trim() === '') {
        throw new KiteStateError('Unable to find Kite Enterprise application install using mdfind', {
          state: STATES.UNINSTALLED,
        });
      }
    });
  },

  downloadKiteRelease(opts) {
    return this.downloadKite(this.releaseURL, opts || {});
  },

  downloadKite(url, opts) {
    opts = opts || {};
    return this.streamKiteDownload(url, opts.onDownloadProgress)
    .then(() => utils.guardCall(opts.onDownload))
    .then(() => opts.install && this.installKite(opts));
  },

  streamKiteDownload(url, progress) {
    const req = https.request(url);
    req.end();

    return utils.followRedirections(req)
    .then(resp => {
      if (progress) {
        const total = parseInt(resp.headers['content-length'], 10);
        let length = 0;

        resp.on('data', chunk => {
          length += chunk.length;
          progress(length, total, length / total);
        });
      }

      return utils.promisifyStream(
        resp.pipe(fs.createWriteStream(this.downloadPath))
      )
      .then(() => new Promise((resolve, reject) => {
        setTimeout(resolve, 100);
      }));
    });
  },

  installKite(opts) {
    opts = opts || {};

    utils.guardCall(opts.onInstallStart);
    return utils.spawnPromise(
      'hdiutil',
      ['attach', '-nobrowse', this.KITE_DMG_PATH],
      'mount_error',
      'Unable to mount Kite.dmg')
    .then(() => utils.guardCall(opts.onMount))
    .then(() => utils.spawnPromise(
      'cp',
      ['-r', this.KITE_APP_PATH.mounted, this.APPS_PATH],
      'cp_error',
      'Unable to copy Kite.app in the applications directory'))
    .then(() => utils.guardCall(opts.onCopy))
    .then(() => utils.spawnPromise(
      'hdiutil',
      ['detach', this.KITE_VOLUME_PATH],
      'unmount_error',
      'Unable to unmount Kite.dmg'))
    .then(() => utils.guardCall(opts.onUnmount))
    .then(() => utils.spawnPromise(
      'rm', [this.KITE_DMG_PATH],
      'rm_error',
      'Unable to remove Kite.dmg'))
    .then(() => utils.guardCall(opts.onRemove))
    // mdfind takes some time to index the app location, so we need to
    // wait for the install to fully complete. Runs 10 times at 1.5s
    // intervals.
    .then(() => utils.retryPromise(() => this.isKiteInstalled(), 10, 1500));
  },

  isKiteRunning() {
    return utils.spawnPromise(
      '/bin/ps',
      ['-axco', 'command'],
      {encoding: 'utf8'},
      'ps_error',
      'Unable to run the ps command and verify that Kite is running')
    .then(stdout => {
      const procs = stdout.split('\n');
      if (!procs.some(s => /^Kite$/.test(s))) {
        throw new KiteStateError('Kite process could not be found in the processes list', {
          state: STATES.NOT_RUNNING,
        });
      }
    });
  },

  runKiteWithCopilot() {
    const env = Object.assign({}, process.env);
    delete env['ELECTRON_RUN_AS_NODE'];

    return utils.spawnPromise(
      'open',
      ['-a', this.installPath, '--args', '--plugin-launch-with-copilot', '--channel=autocomplete-python'],
      { env: env },
      'open_error',
      'Unable to run the open command to start Kite'
    );
  },

  runKite() {
    const env = Object.assign({}, process.env);
    delete env['ELECTRON_RUN_AS_NODE'];

    return this.isKiteRunning()
    .catch(() => utils.spawnPromise(
      'defaults',
      ['write', 'com.kite.Kite', 'shouldReopenSidebar', '0'],
      'defaults_error',
      'Unable to run defaults command')
    .then(() =>
    utils.spawnPromise(
      'open',
      ['-a', this.installPath, '--args', '--plugin-launch', '--channel=autocomplete-python'],
      { env: env },
      'open_error',
      'Unable to run the open command to start Kite'
    )));
  },

  isKiteEnterpriseRunning() {
    return utils.spawnPromise(
      '/bin/ps',
      ['-axco', 'command'],
      {encoding: 'utf8'},
      'ps_error',
      'Unable to run the ps command and verify that Kite enterprise is running')
    .then(stdout => {
      const procs = stdout.split('\n');
      if (!procs.some(s => /^KiteEnterprise$/.test(s))) {
        throw new KiteStateError('Kite Enterprise process could not be found in the processes list', {
          state: STATES.NOT_RUNNING,
        });
      }
    });
  },

  runKiteEnterprise() {
    const env = Object.assign({}, process.env);
    delete env['ELECTRON_RUN_AS_NODE'];

    return utils.spawnPromise(
      'defaults',
      ['write', 'enterprise.kite.Kite', 'shouldReopenSidebar', '0'],
      'defaults_error',
      'Unable to run defaults command')
    .then(() =>
      utils.spawnPromise(
        'open',
        ['-a', this.enterpriseInstallPath],
        { env: env },
        'open_error',
        'Unable to run the open command and start Kite enterprise'));
  },
};

module.exports = OSXSupport;


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const os = __webpack_require__(6);
const fs = __webpack_require__(28);
const path = __webpack_require__(27);
const https = __webpack_require__(11);
const child_process = __webpack_require__(16);
const utils = __webpack_require__(15);
const KiteStateError = __webpack_require__(19);
const KiteProcessError = __webpack_require__(18);

const {STATES} = __webpack_require__(20);

const KEY_BAT = `"${path.join(__dirname, 'read-key.bat')}"`;
const ARCH_BAT = `"${path.join(__dirname, 'read-arch.bat')}"`;
let COMPUTED_INSTALL_PATH;

const WindowsSupport = {
  RELEASE_URL: 'https://alpha.kite.com/release/dls/windows/current',
  KITE_INSTALLER_PATH: path.join(os.tmpdir(), 'KiteSetup.exe'),
  SESSION_FILE_PATH: path.join(process.env.LOCALAPPDATA, 'Kite', 'session.json'),

  // We're only setting the install path in tests
  set KITE_EXE_PATH(path) {
    COMPUTED_INSTALL_PATH = path;
  },
  get KITE_EXE_PATH() {
    if (!COMPUTED_INSTALL_PATH) {
      let installDir, fallbackInstallDir;

      if (process.env.ProgramW6432) {
        fallbackInstallDir = path.join(process.env.ProgramW6432, 'Kite');
      } else {
        // TODO: report that even the fallback needed a fallback
        fallbackInstallDir = 'C:\\Program Files\\Kite';
      }

      try {
        const registryDir = String(child_process.execSync(KEY_BAT)).trim();

        installDir = registryDir !== 'not found'
          ? registryDir
          : fallbackInstallDir;
      } catch (err) {
        installDir = fallbackInstallDir;
      }
      COMPUTED_INSTALL_PATH = path.join(installDir, 'kited.exe');
    }

    return COMPUTED_INSTALL_PATH;
  },

  get releaseURL() {
    return this.RELEASE_URL;
  },

  get downloadPath() {
    return this.KITE_INSTALLER_PATH;
  },

  get installPath() {
    return this.KITE_EXE_PATH;
  },

  get enterpriseInstallPath() {
    return null;
  },

  get allInstallPaths() {
    return [this.installPath];
  },

  get allEnterpriseInstallPaths() {
    return [];
  },

  get sessionFilePath() {
    return this.SESSION_FILE_PATH;
  },

  isAdmin() {
    try {
      // Note that this method can still fail if the server has not been started
      // but it has the merit of being simple and reliable
      // see https://stackoverflow.com/questions/4051883/batch-script-how-to-check-for-admin-rights
      // for details
      child_process.execSync('net session');
      return true;
    } catch (e) {
      return false;
    }
  },

  arch() {
    /* if (!this.cachedArch) { this.cachedArch = os.arch(); }
    
    // for backwards compatibility, we don't just return the direct result of the os call
    if (this.cachedArch === 'x32') { return '32bit'; }
    if (this.cachedArch === 'x64') { return '64bit'; }
    
    return this.cachedArch; */
    
    // we are lax here due to an edge case with a 32bit vscode running on a 64bit
    // os that results in Node getting the architecture of the VSCode environment vs.
    // the architecture of the OS itself
    // Ultimately, this deserves more thought in terms of its handling
    return '64bit';
  },

  isOSSupported() {
    return true;
  },

  isOSVersionSupported() {
    return parseFloat(os.release()) >= 6.1 &&
           this.arch() === '64bit';
  },

  isKiteSupported() {
    return this.isOSVersionSupported();
  },

  isKiteInstalled() {
    return new Promise((resolve, reject) => {
      fs.exists(this.KITE_EXE_PATH, (exists) => {
        if (exists) {
          resolve();
        } else {
          reject(new KiteStateError('', {
            state: STATES.UNINSTALLED,
          }));
        }
      });
    });
  },

  isKiteEnterpriseInstalled() {
    return Promise.reject(new KiteStateError('Kite Enterprise is currently not supported on windows', {
      state: STATES.UNSUPPORTED,
    }));
  },

  hasManyKiteInstallation() {
    return this.allInstallPaths.length > 1;
  },

  hasManyKiteEnterpriseInstallation() {
    return this.allEnterpriseInstallPaths.length > 1;
  },

  hasBothKiteInstalled() {
    return Promise.all([
      this.isKiteInstalled(),
      this.isKiteEnterpriseInstalled(),
    ]);
  },

  downloadKiteRelease(opts) {
    return this.downloadKite(this.releaseURL, opts || {});
  },

  downloadKite(url, opts) {
    opts = opts || {};
    return this.streamKiteDownload(url, opts.onDownloadProgress)
    .then(() => utils.guardCall(opts.onDownload))
    .then(() => opts.install && this.installKite(opts));
  },

  streamKiteDownload(url, progress) {
    const req = https.request(url);
    req.end();

    return utils.followRedirections(req)
    .then(resp => {
      if (progress) {
        const total = parseInt(resp.headers['content-length'], 10);
        let length = 0;

        resp.on('data', chunk => {
          length += chunk.length;
          progress(length, total, length / total);
        });
      }

      return utils.promisifyStream(
        resp.pipe(fs.createWriteStream(this.downloadPath))
      )
      .then(() => new Promise((resolve, reject) => {
        setTimeout(resolve, 100);
      }));
    });
  },

  installKite(opts) {
    opts = opts || {};
    var env = Object.create(process.env);
    env.KITE_SKIP_ONBOARDING = '1';

    utils.guardCall(opts.onInstallStart);
    return utils.execPromise(
      `"${this.KITE_INSTALLER_PATH}"` + ' --skip-onboarding --plugin-launch --channel=autocomplete-python',
      {env: env},
      'kite_install_error',
      'Unable to run Kite installer')
    .then(() => utils.guardCall(opts.onCopy))
    .then(() => fs.unlinkSync(this.KITE_INSTALLER_PATH))
    .then(() => utils.guardCall(opts.onRemove));
  },

  isKiteRunning() {
    return utils.spawnPromise(
      'tasklist',
      'tasklist_error',
      'Unable to run the tasklist command and verify whether kite is running or not')
    .then(stdout => {
      const procs = stdout.split('\n');
      if (procs.every(l => l.indexOf('kited.exe') === -1)) {
        throw new KiteStateError('Unable to find kited.exe process in the tasks list', {
          state: STATES.NOT_RUNNING,
        });
      }
    });
  },

  runKiteWithCopilot() {
    var env = Object.create(process.env);
    delete env["ELECTRON_RUN_AS_NODE"];
    return new Promise((resolve, reject) => {
      try {
        child_process.spawn(
          this.KITE_EXE_PATH,
          ['--plugin-launch-with-copilot', '--channel=autocomplete-python'],
          {detached: true, env: env});
        resolve();
      } catch (err) {
        reject(new KiteProcessError('kite_exe_error',
          {
            message: 'Unable to run kite executable',
            callStack: err.stack,
            cmd: this.KITE_EXE_PATH,
            options: {detached: true, env: env},
          }));
      }
    });
  },

  runKite() {
    return this.isKiteRunning()
    .catch(() => {
      var env = Object.create(process.env);
      env.KITE_SKIP_ONBOARDING = '1';
      delete env["ELECTRON_RUN_AS_NODE"];

      try {
        child_process.spawn(
          this.KITE_EXE_PATH,
          ['--plugin-launch', '--channel=autocomplete-python'],
          {detached: true, env: env});
      } catch (err) {
        throw new KiteProcessError('kite_exe_error',
          {
            message: 'Unable to run kite executable',
            callStack: err.stack,
            cmd: this.KITE_EXE_PATH,
            options: {detached: true, env: env},
          });
      }
    });
  },

  isKiteEnterpriseRunning() {
    return Promise.reject(new KiteStateError('Kite Enterprise is currently not supported on windows', {
      state: STATES.UNSUPPORTED,
    }));
  },

  runKiteEnterprise() {
    return Promise.reject(new KiteStateError('Kite Enterprise is currently not supported on windows', {
      state: STATES.UNSUPPORTED,
    }));
  },
};

module.exports = WindowsSupport;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const os = __webpack_require__(6);
const fs = __webpack_require__(28);
const path = __webpack_require__(27);
const https = __webpack_require__(11);
const child_process = __webpack_require__(16);

const utils = __webpack_require__(15);
const KiteStateError = __webpack_require__(19);
const KiteProcessError = __webpack_require__(18);

const {STATES} = __webpack_require__(20);

const LinuxSupport = {
  RELEASE_URL: 'https://linux.kite.com/dls/linux/current',
  SESSION_FILE_PATH: path.join(os.homedir(), '.kite', 'session.json'),
  KITE_INSTALLER_PATH: path.join(os.tmpdir(), 'kite-installer.sh'),
  KITED_PATH: path.join(os.homedir(), '.local', 'share', 'kite', 'kited'),
  KITED_PROCESS: /kited/,
  KITE_CURRENT_LINK: path.join(os.homedir(), '.local', 'share', 'kite', 'current'),

  memKitedInstallPath: null,

  get releaseURL() {
    return this.RELEASE_URL;
  },

  get downloadPath() {
    return this.KITE_INSTALLER_PATH;
  },

  get installPath() {
    if (!this.memKitedInstallPath) {
      this.memKitedInstallPath = this.KITED_PATH;
    }
    return this.memKitedInstallPath;
  },

  resetInstallPath() {
    this.memKitedInstallPath = null;
  },

  get allInstallPaths() {
    return [this.installPath];
  },

  get enterpriseInstallPath() {
    return null;
  },

  get allEnterpriseInstallPaths() {
    return null;
  },

  get sessionFilePath() {
    return this.SESSION_FILE_PATH;
  },

  hasManyKiteInstallation() {
    return this.allInstallPaths.length > 1;
  },

  hasManyKiteEnterpriseInstallation() {
    return false;
  },

  isAdmin() {
    try {
      const user = utils.whoami();
      const adminUsers = String(child_process.execSync('getent group root adm admin sudo'))
      .split('\n')
      .map(line => line.substring(line.lastIndexOf(':') + 1))
      .reduce((acc, val) => {
        val.split(',').forEach(token => acc.push(token.trim()));
        return acc;
      }, []);
      return adminUsers.includes(user);
    } catch (e) {
      // fallback to os.userInfo()
      try {
        const userInfo = os.userInfo();
        return userInfo.uid === 0 || userInfo.username === 'root';
      } catch (ignored) {
        return false;
      }
    }
  },

  arch() {
    return os.arch();
  },

  isOSSupported() {
    return true;
  },

  isOSVersionSupported() {
    let arch = os.arch();
    return arch === 'x64';
  },

  isKiteSupported() {
    return this.isOSSupported() && this.isOSVersionSupported();
  },

  isKiteInstalled() {
    return new Promise((resolve, reject) => {
      fs.exists(this.installPath, exists => {
        if (exists) {
          resolve();
        } else {
          reject(new KiteStateError('', {
            state: STATES.UNINSTALLED,
          }));
        }
      });
    });
  },

  // downloads the latest version of kite-installer.sh
  // and uses it to retrieve the current binary installer and installation data
  downloadKiteRelease(opts) {
    return this.downloadKite(this.releaseURL, opts || {});
  },

  downloadKite(url, opts) {
    opts = opts || {};
    return this.downloadKiteInstallerScript(url, opts.onDownloadProgress)
    .then(() => this.streamKiteDownload(this.downloadPath, opts.onDownloadProgress))
    .then(() => utils.guardCall(opts.onDownload))
    .then(() => opts.install && this.installKite(opts));
  },

  downloadKiteInstallerScript(url, progress) {
    const req = https.request(url);
    req.end();

    // set download status as early as possible to display the progress bar
    if (progress) {
      progress(0, 100, 0);
    }

    return utils.followRedirections(req)
    .then(resp => {
      return utils.promisifyStream(resp.pipe(fs.createWriteStream(this.downloadPath)))
      .then(() => fs.chmodSync(this.downloadPath, 0o700))
      .then(() => new Promise((resolve, reject) => {
        setTimeout(resolve, 100);
      }));
    });
  },

  streamKiteDownload(scriptPath, progress) {
    // we can't use util.spawnPromise here because we have to stream stdout in chunks to handle the progress
    return new Promise((resolve, reject) => {
      try {
        const child = child_process.spawn(scriptPath, ['--download'], {shell: true});
        child.on('close', function(code) {
          if (code === 0) {
            resolve(child);
          } else {
            const error = new Error();

            reject(new KiteProcessError('kited_error',
            {
              message: `Unable to download Kite. Unexpected exit code ${code}.`,
              stderr: '',
              stdout: '',
              callStack: error.stack,
              cmd: `${scriptPath} --download`,
              options: ["--download"],
            }));
          }
        });

        if (progress) {
          let last = -1;
          child.stdout.on('data', chunk => {
            // chunk is a buffer when used with spawn
            let line = chunk.toString('utf8');
            let pattern = /Download: (\d+)\/(\d+)/g;
            let lastMatch, match;
            while ((match = pattern.exec(line)) !== null) {
              lastMatch = match;
            }

            if (lastMatch) {
              let received = parseInt(lastMatch[1], 10);
              let total = parseInt(lastMatch[2], 10);
              if (received >= 0 && total >= received && received > last) {
                last = received;
                progress(received, total, received / total);
              }
            }
          });
        }
      } catch (e) {
        console.error(e);
        reject(e);
      }
    });
  },

  installKite(opts) {
    opts = opts || {};

    utils.guardCall(opts.onInstallStart);
    return utils.spawnPromise(this.KITE_INSTALLER_PATH,
    ['--install'], {shell: true},
    'kite-installer install error', `unable to install kite with ${this.KITE_INSTALLER_PATH}`)
    .then(() => this.resetInstallPath()) // force recalculation of mem'd path on successful install
    .then(() => utils.guardCall(opts.onMount))
    .then(() => fs.unlinkSync(this.KITE_INSTALLER_PATH))
    .then(() => utils.guardCall(opts.onRemove));
  },

  isKiteRunning() {
    return utils.spawnPromise(
    '/bin/ps',
    ['-axo', 'pid,command'],
    {encoding: 'utf-8'},
    'ps_error',
    'unable to run the ps command and verify that Kite is running')
    .then(stdout => {
      const procs = stdout.split('\n');

      if (!procs.some(p => this.KITED_PROCESS.test(p))) {
        throw new KiteStateError('Kite process could not be found in the processes list', {
          state: STATES.NOT_RUNNING,
        });
      }
    });
  },

  runKiteWithCopilot() {
    const env = Object.assign({}, process.env);
    env.SKIP_KITE_ONBOARDING = '1';
    delete env['ELECTRON_RUN_AS_NODE'];

    return new Promise((resolve, reject) => {
      try {
        if (!fs.existsSync(this.installPath)) {
          throw new Error('kited is not installed');
        }
        child_process.spawn(this.installPath,
        ['--plugin-launch-with-copilot', '--channel=autocomplete-python'],
        {detached: true, stdio: 'ignore', env});
        resolve();
      } catch (e) {
        reject(new KiteProcessError('kited_error',
        {
          message: (e.message && e.message === 'kited is not installed') || 'unable to run kited binary',
          callStack: e.stack,
          cmd: this.installPath,
          options: {detached: true, env},
        }));
      }
    });
  },

  runKite() {
    return this.isKiteRunning()
    .catch(() => {
      const env = Object.assign({}, process.env);
      env.SKIP_KITE_ONBOARDING = '1';
      delete env['ELECTRON_RUN_AS_NODE'];

      try {
        if (!fs.existsSync(this.installPath)) {
          throw new Error('kited is not installed');
        }
        child_process.spawn(this.installPath,
        ['--plugin-launch', '--channel=autocomplete-python'],
        {detached: true, stdio: 'ignore', env});
      } catch (e) {
        throw new KiteProcessError('kited_error',
        {
          message: (e.message && e.message === 'kited is not installed') || 'unable to run kited binary',
          callStack: e.stack,
          cmd: this.installPath,
          options: {detached: true, env},
        });
      }
    });
  },

  hasBothKiteInstalled() {
    return Promise.all([
      this.isKiteInstalled(),
      this.isKiteEnterpriseInstalled(),
    ]);
  },

  isKiteEnterpriseInstalled() {
    return this.notSupported();
  },

  isKiteEnterpriseRunning() {
    return this.notSupported();
  },

  runKiteEnterprise() {
    return this.notSupported();
  },

  notSupported() {
    return Promise.reject(
    new KiteStateError('Your platform is currently not supported', {
      state: STATES.UNSUPPORTED,
    }));
  },
};

module.exports = LinuxSupport;


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const KiteStateError = __webpack_require__(19);

const {STATES} = __webpack_require__(20);

module.exports = {
  get releaseURL() {
    return null;
  },

  get downloadPath() {
    return null;
  },

  get installPath() {
    return null;
  },

  get allInstallPaths() {
    return null;
  },

  get enterpriseInstallPath() {
    return null;
  },

  get allEnterpriseInstallPaths() {
    return null;
  },

  get sessionFilePath() {
    return null;
  },

  hasManyKiteInstallation() {
    return false;
  },

  hasManyKiteEnterpriseInstallation() {
    return false;
  },

  isAdmin() {
    return false;
  },

  arch() {
    return null;
  },

  isOSSupported() {
    return false;
  },

  isOSVersionSupported() {
    return false;
  },

  isKiteSupported() {
    return false;
  },

  isKiteInstalled() {
    return this.notSupported();
  },

  downloadKite(opts) {
    return this.notSupported();
  },

  installKite(opts) {
    return this.notSupported();
  },

  isKiteRunning() {
    return this.notSupported();
  },

  runKite() {
    return this.notSupported();
  },

  hasBothKiteInstalled() {
    return Promise.all([
      this.isKiteInstalled(),
      this.isKiteEnterpriseInstalled(),
    ]);
  },

  isKiteEnterpriseInstalled() {
    return this.notSupported();
  },

  isKiteEnterpriseRunning() {
    return this.notSupported();
  },

  runKiteEnterprise() {
    return this.notSupported();
  },

  notSupported() {
    return Promise.reject(
      new KiteStateError('Your platform is currently not supported', {
        state: STATES.UNSUPPORTED,
      }));
  },
};


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = class EditorConfig {
  constructor(store) {
    this.store = store;
  }

  get(path) {
    return (this.content
      ? Promise.resolve(this.content)
      : this.store.get()
        .then(data => parse(data))
        .then(data => {
          this.content = data;
          return data;
        }))
    .then(data => readValueAtPath(path, data));
  }

  set(path, value) {
    return this.get().then(data =>
      this.store.set(stringify(writeValueAtPath(path, value, data))));
  }
};

function parse(data) {
  return data ? JSON.parse(data) : data;
}

function stringify(data) {
  return JSON.stringify(data);
}

function readValueAtPath(path, object) {
  if (!path) { return object; }

  return path.split(/\./g).reduce((memo, key) => {
    if (memo == undefined) { return memo; }
    return memo[key];
  }, object);
}

function writeValueAtPath(path, value, object) {
  if (!object) { object = {}; }

  return path.split(/\./g).reduce((memo, key, i, a) => {
    if (i === a.length - 1) {
      memo[key] = value;
      return object;
    } else if (memo[key] == undefined) {
      memo[key] = {};
      return memo[key];
    }
    return memo[key];
  }, object);
}


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = class MemoryStore {
  constructor() {}

  set(content) {
    this.content = content;
    return Promise.resolve();
  }
  get() {
    return Promise.resolve(this.content);
  }
};


/***/ }),
/* 50 */
/***/ (function(module, exports) {


// MAX_FILE_SIZE is the maximum file size to send to Kite
const MAX_FILE_SIZE = 75 * Math.pow(2, 10); // 75 KB

// MAX_PAYLOAD_SIZE is the maximum length for a POST reqest body
const MAX_PAYLOAD_SIZE = Math.pow(2, 21); // 2097152

module.exports = {
  MAX_FILE_SIZE,
  MAX_PAYLOAD_SIZE,
};


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function merge(a, b) {
  const c = {};
  for (const k in a) { c[k] = a[k]; }
  for (const k in b) { c[k] = b[k]; }
  return c;
}

function reject(key, a) {
  const b = {};
  for (const k in a) {
    if (k !== key) { b[k] = a[k]; }
  }
  return b;
}

function parseSignature(fn) {
  const [, name, signature] = /(\w+)\(([^\)]+)\)/.exec(fn.toString());
  const parameters = signature.split(/,\s*/);
  return [name, parameters];
}

function checkArguments(fn, ...args) {
  const [name, parameters] = parseSignature(fn);
  const missingArguments = [];
  args.forEach((arg, i) => {
    if (arg == null) { missingArguments.push(parameters[i]); }
  });
  if (missingArguments.length) {
    throw new Error(
      `Missing argument${missingArguments.length > 1 ? 's' : ''} ${missingArguments.join(', ')} in ${name}`);
  }
}

function checkArgumentKeys(fn, arg, argName, ...keys) {
  const missingKeys = [];
  keys.forEach((key, i) => {
    if (arg[key] == null) { missingKeys.push(key); }
  });
  if (missingKeys.length) {
    throw new Error(
      `Missing mandatory key${
        missingKeys.length > 1 ? 's' : ''
      } ${missingKeys.join(', ')} in argument ${argName} of ${fn.name}`);
  }
}

module.exports = {
  checkArgumentKeys,
  checkArguments,
  merge,
  reject,
};


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const md5 = __webpack_require__(53);

function onboardingFilePath(editor, language) {
  return [
    '/clientapi/plugins/onboarding_file', [
      `editor=${editor}`,
      `language=${language}`,
    ].join('&'),
  ].join('?');
}

function hoverPath(filename, source, position, editor, encoding) {
  const state = md5(source);
  const buffer = cleanPath(filename);
  return [
    `/api/buffer/${editor}/${buffer}/${state}/hover`,
    [
      `cursor_runes=${position}`,
      `offset_encoding=${encoding}`,
    ].join('&'),
  ].join('?');
}

function membersPath(id, page, limit) {
  return [
    `/api/editor/value/${id}/members`,
    [
      `offset=${page}`,
      `limit=${limit}`,
    ].join('&'),
  ].join('?');
}

function usagesPath(id, page, limit) {
  return [
    `/api/editor/value/${id}/usages`,
    [
      `offset=${page}`,
      `limit=${limit}`,
    ].join('&'),
  ].join('?');
}

function shouldNotifyPath(path) {
  return `/clientapi/permissions/notify?filename=${encodeURI(path)}`;
}

function statusPath(path) {
  return `/clientapi/status?filename=${encodeURI(path)}`;
}

function projectDirPath(path) {
  return `/clientapi/projectdir?filename=${encodeURI(path)}`;
}

function cleanPath(p) {
  return encodeURI(p)
  .replace(/^([A-Z]):/, '/windows/$1')
  .replace(/\/|\\|%5C/g, ':');
}

module.exports = {
  cleanPath,
  onboardingFilePath,
  hoverPath,
  membersPath,
  projectDirPath,
  shouldNotifyPath,
  statusPath,
  usagesPath,
};


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

(function(){
  var crypt = __webpack_require__(54),
      utf8 = __webpack_require__(55).utf8,
      isBuffer = __webpack_require__(56),
      bin = __webpack_require__(55).bin,

  // The core
  md5 = function (message, options) {
    // Convert to byte array
    if (message.constructor == String)
      if (options && options.encoding === 'binary')
        message = bin.stringToBytes(message);
      else
        message = utf8.stringToBytes(message);
    else if (isBuffer(message))
      message = Array.prototype.slice.call(message, 0);
    else if (!Array.isArray(message))
      message = message.toString();
    // else, assume byte array already

    var m = crypt.bytesToWords(message),
        l = message.length * 8,
        a =  1732584193,
        b = -271733879,
        c = -1732584194,
        d =  271733878;

    // Swap endian
    for (var i = 0; i < m.length; i++) {
      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |
             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;
    }

    // Padding
    m[l >>> 5] |= 0x80 << (l % 32);
    m[(((l + 64) >>> 9) << 4) + 14] = l;

    // Method shortcuts
    var FF = md5._ff,
        GG = md5._gg,
        HH = md5._hh,
        II = md5._ii;

    for (var i = 0; i < m.length; i += 16) {

      var aa = a,
          bb = b,
          cc = c,
          dd = d;

      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);
      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);
      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);
      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);
      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);
      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);
      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);
      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);
      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);
      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);
      c = FF(c, d, a, b, m[i+10], 17, -42063);
      b = FF(b, c, d, a, m[i+11], 22, -1990404162);
      a = FF(a, b, c, d, m[i+12],  7,  1804603682);
      d = FF(d, a, b, c, m[i+13], 12, -40341101);
      c = FF(c, d, a, b, m[i+14], 17, -1502002290);
      b = FF(b, c, d, a, m[i+15], 22,  1236535329);

      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);
      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);
      c = GG(c, d, a, b, m[i+11], 14,  643717713);
      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);
      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);
      d = GG(d, a, b, c, m[i+10],  9,  38016083);
      c = GG(c, d, a, b, m[i+15], 14, -660478335);
      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);
      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);
      d = GG(d, a, b, c, m[i+14],  9, -1019803690);
      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);
      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);
      a = GG(a, b, c, d, m[i+13],  5, -1444681467);
      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);
      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);
      b = GG(b, c, d, a, m[i+12], 20, -1926607734);

      a = HH(a, b, c, d, m[i+ 5],  4, -378558);
      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);
      c = HH(c, d, a, b, m[i+11], 16,  1839030562);
      b = HH(b, c, d, a, m[i+14], 23, -35309556);
      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);
      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);
      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);
      b = HH(b, c, d, a, m[i+10], 23, -1094730640);
      a = HH(a, b, c, d, m[i+13],  4,  681279174);
      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);
      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);
      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);
      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);
      d = HH(d, a, b, c, m[i+12], 11, -421815835);
      c = HH(c, d, a, b, m[i+15], 16,  530742520);
      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);

      a = II(a, b, c, d, m[i+ 0],  6, -198630844);
      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);
      c = II(c, d, a, b, m[i+14], 15, -1416354905);
      b = II(b, c, d, a, m[i+ 5], 21, -57434055);
      a = II(a, b, c, d, m[i+12],  6,  1700485571);
      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);
      c = II(c, d, a, b, m[i+10], 15, -1051523);
      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);
      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);
      d = II(d, a, b, c, m[i+15], 10, -30611744);
      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);
      b = II(b, c, d, a, m[i+13], 21,  1309151649);
      a = II(a, b, c, d, m[i+ 4],  6, -145523070);
      d = II(d, a, b, c, m[i+11], 10, -1120210379);
      c = II(c, d, a, b, m[i+ 2], 15,  718787259);
      b = II(b, c, d, a, m[i+ 9], 21, -343485551);

      a = (a + aa) >>> 0;
      b = (b + bb) >>> 0;
      c = (c + cc) >>> 0;
      d = (d + dd) >>> 0;
    }

    return crypt.endian([a, b, c, d]);
  };

  // Auxiliary functions
  md5._ff  = function (a, b, c, d, x, s, t) {
    var n = a + (b & c | ~b & d) + (x >>> 0) + t;
    return ((n << s) | (n >>> (32 - s))) + b;
  };
  md5._gg  = function (a, b, c, d, x, s, t) {
    var n = a + (b & d | c & ~d) + (x >>> 0) + t;
    return ((n << s) | (n >>> (32 - s))) + b;
  };
  md5._hh  = function (a, b, c, d, x, s, t) {
    var n = a + (b ^ c ^ d) + (x >>> 0) + t;
    return ((n << s) | (n >>> (32 - s))) + b;
  };
  md5._ii  = function (a, b, c, d, x, s, t) {
    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;
    return ((n << s) | (n >>> (32 - s))) + b;
  };

  // Package private blocksize
  md5._blocksize = 16;
  md5._digestsize = 16;

  module.exports = function (message, options) {
    if (message === undefined || message === null)
      throw new Error('Illegal argument ' + message);

    var digestbytes = crypt.wordsToBytes(md5(message, options));
    return options && options.asBytes ? digestbytes :
        options && options.asString ? bin.bytesToString(digestbytes) :
        crypt.bytesToHex(digestbytes);
  };

})();


/***/ }),
/* 54 */
/***/ (function(module, exports) {

(function() {
  var base64map
      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',

  crypt = {
    // Bit-wise rotation left
    rotl: function(n, b) {
      return (n << b) | (n >>> (32 - b));
    },

    // Bit-wise rotation right
    rotr: function(n, b) {
      return (n << (32 - b)) | (n >>> b);
    },

    // Swap big-endian to little-endian and vice versa
    endian: function(n) {
      // If number given, swap endian
      if (n.constructor == Number) {
        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;
      }

      // Else, assume array and swap all items
      for (var i = 0; i < n.length; i++)
        n[i] = crypt.endian(n[i]);
      return n;
    },

    // Generate an array of any length of random bytes
    randomBytes: function(n) {
      for (var bytes = []; n > 0; n--)
        bytes.push(Math.floor(Math.random() * 256));
      return bytes;
    },

    // Convert a byte array to big-endian 32-bit words
    bytesToWords: function(bytes) {
      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)
        words[b >>> 5] |= bytes[i] << (24 - b % 32);
      return words;
    },

    // Convert big-endian 32-bit words to a byte array
    wordsToBytes: function(words) {
      for (var bytes = [], b = 0; b < words.length * 32; b += 8)
        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);
      return bytes;
    },

    // Convert a byte array to a hex string
    bytesToHex: function(bytes) {
      for (var hex = [], i = 0; i < bytes.length; i++) {
        hex.push((bytes[i] >>> 4).toString(16));
        hex.push((bytes[i] & 0xF).toString(16));
      }
      return hex.join('');
    },

    // Convert a hex string to a byte array
    hexToBytes: function(hex) {
      for (var bytes = [], c = 0; c < hex.length; c += 2)
        bytes.push(parseInt(hex.substr(c, 2), 16));
      return bytes;
    },

    // Convert a byte array to a base-64 string
    bytesToBase64: function(bytes) {
      for (var base64 = [], i = 0; i < bytes.length; i += 3) {
        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];
        for (var j = 0; j < 4; j++)
          if (i * 8 + j * 6 <= bytes.length * 8)
            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));
          else
            base64.push('=');
      }
      return base64.join('');
    },

    // Convert a base-64 string to a byte array
    base64ToBytes: function(base64) {
      // Remove non-base-64 characters
      base64 = base64.replace(/[^A-Z0-9+\/]/ig, '');

      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;
          imod4 = ++i % 4) {
        if (imod4 == 0) continue;
        bytes.push(((base64map.indexOf(base64.charAt(i - 1))
            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))
            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));
      }
      return bytes;
    }
  };

  module.exports = crypt;
})();


/***/ }),
/* 55 */
/***/ (function(module, exports) {

var charenc = {
  // UTF-8 encoding
  utf8: {
    // Convert a string to a byte array
    stringToBytes: function(str) {
      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));
    },

    // Convert a byte array to a string
    bytesToString: function(bytes) {
      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));
    }
  },

  // Binary encoding
  bin: {
    // Convert a string to a byte array
    stringToBytes: function(str) {
      for (var bytes = [], i = 0; i < str.length; i++)
        bytes.push(str.charCodeAt(i) & 0xFF);
      return bytes;
    },

    // Convert a byte array to a string
    bytesToString: function(bytes) {
      for (var str = [], i = 0; i < bytes.length; i++)
        str.push(String.fromCharCode(bytes[i]));
      return str.join('');
    }
  }
};

module.exports = charenc;


/***/ }),
/* 56 */
/***/ (function(module, exports) {

>>>>>>> Patch autocomplete-plus/snippets insert(...) to not insert indentation for Kite completions.
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function(tracker) {
  var prev = null;
  return {
    trackUncaught: () => {
      if (prev === null) {
        prev = window.onerror;
        window.onerror = (msg, url, line, col, err) => {
          tracker.trackEvent('uncaught error', {
            uncaughtError: { msg, url, line, col },
          });
        };
      }
    },
    ignoreUncaught: () => {
      if (prev !== null) {
        window.onerror = prev;
        prev = null;
      }
    },
  };
};


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {LEVELS} = __webpack_require__(20);
const NullReporter = __webpack_require__(59);
const ConsoleReporter = __webpack_require__(60);

module.exports =  {
  LEVELS,
  LEVEL: LEVELS.INFO,

  output: typeof console != 'undefined' ? ConsoleReporter : NullReporter,

  silly(...msgs) { this.log(LEVELS.SILLY, ...msgs); },
  verbose(...msgs) { this.log(LEVELS.VERBOSE, ...msgs); },
  debug(...msgs) { this.log(LEVELS.DEBUG, ...msgs); },
  info(...msgs) { this.log(LEVELS.INFO, ...msgs); },
  warn(...msgs) { this.log(LEVELS.WARNING, ...msgs); },
  error(...msgs) { this.log(LEVELS.ERROR, ...msgs); },
  log(level, ...msgs) {
    if (level >= this.LEVEL && !this.SILENT) {
      this.output.log(level, ...msgs);
    }
  },
  logRequest() {},
  logResponse() {},
};


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  log() {},
};


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {LEVELS} = __webpack_require__(20);

module.exports = {
  TRACE_ALL: false,
  METHODS: {
    [LEVELS.SILLY]: 'debug' in console ? 'debug' : 'log',
    [LEVELS.VERBOSE]: 'debug' in console ? 'debug' : 'log',
    [LEVELS.DEBUG]: 'log',
    [LEVELS.INFO]: 'info' in console ? 'info' : 'log',
    [LEVELS.WARNING]: 'warn' in console ? 'warn' : 'error',
    [LEVELS.ERROR]: 'error',
  },

  log(level, ...msgs) {
    console[this.METHODS[level]](...msgs);
  },
};


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var os = __webpack_require__(6);
const crypto = __webpack_require__(62);
const mixpanel = __webpack_require__(63);

const localconfig = __webpack_require__(65);
const kitePkg = __webpack_require__(66);
const Logger = __webpack_require__(58);

const MIXPANEL_TOKEN = 'fb6b9b336122a8b29c60f4c28dab6d03';

const OS_VERSION = os.type() + ' ' + os.release();

const client = mixpanel.init(MIXPANEL_TOKEN, {
  protocol: 'https',
});

const EDITOR_UUID = typeof localStorage !== 'undefined'
  ? localStorage.getItem('metrics.userId')
  : undefined;

// Generate a unique ID for this user and save it for future use.
function distinctID() {
  var id = localconfig.get('distinctID');
  if (id === undefined) {
    // use the atom UUID
    id = EDITOR_UUID || crypto.randomBytes(32).toString('hex');
    localconfig.set('distinctID', id);
  }
  return id;
}

// Send an event to mixpanel
function track(eventName, properties) {
  if (!module.exports.enabled) { return; }

  var eventData = {
    distinct_id: distinctID(),
    editor_uuid: EDITOR_UUID,
    kite_installer_version: kitePkg.version,
    os_name: os.type(),
    os_release: os.release(),
  };

  if (typeof atom !== 'undefined') {
    eventData.editor = 'atom';
    eventData.editor_version = atom.getVersion();
  }

  for (var key in properties || {}) {
    eventData[key] = properties[key];
  }
  Logger.debug(`track: ${ eventName }`, eventData);
  client.track(eventName, eventData);
}

var Tracker = {
  source: null,
  props: null,
  trackEvent: function(eventName, extras) {
    extras = extras || {};
    extras.source = this.source;
    for (var key in this.props) {
      extras[key] = this.props[key];
    }
    track(eventName, extras);
  },
};

module.exports = {
  enabled: true,
  distinctID,
  track,
  Tracker,
};


/***/ }),
/* 62 */
/***/ (function(module, exports) {

module.exports = require("crypto");

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

/*
    Heavily inspired by the original js library copyright Mixpanel, Inc.
    (http://mixpanel.com/)

    Copyright (c) 2012 Carl Sverre

    Released under the MIT license.
*/

var http        = __webpack_require__(10),
    https       = __webpack_require__(11),
    querystring = __webpack_require__(12),
    Buffer      = __webpack_require__(64).Buffer,
    util        = __webpack_require__(24);

var REQUEST_LIBS = {
    http: http,
    https: https
};

var create_client = function(token, config) {
    var metrics = {};

    if(!token) {
        throw new Error("The Mixpanel Client needs a Mixpanel token: `init(token)`");
    }

    // Default config
    metrics.config = {
        test: false,
        debug: false,
        verbose: false,
        host: 'api.mixpanel.com',
        protocol: 'http'
    };

    metrics.token = token;

    /**
        send_request(data)
        ---
        this function sends an async GET request to mixpanel

        data:object                     the data to send in the request
        callback:function(err:Error)    callback is called when the request is
                                        finished or an error occurs
    */
    metrics.send_request = function(endpoint, data, callback) {
        callback = callback || function() {};
        var event_data = new Buffer(JSON.stringify(data));
        var request_data = {
            'data': event_data.toString('base64'),
            'ip': 0,
            'verbose': metrics.config.verbose ? 1 : 0
        };

        var request_lib = REQUEST_LIBS[metrics.config.protocol];
        if (!request_lib) {
            throw new Error(
                "Mixpanel Initialization Error: Unsupported protocol " + metrics.config.protocol + ". " +
                "Supported protocols are: " + Object.keys(REQUEST_LIBS)
            );
        }

        if (endpoint === '/import') {
            var key = metrics.config.key;
            if (!key) {
                throw new Error("The Mixpanel Client needs a Mixpanel api key when importing old events: `init(token, { key: ... })`");
            }
            request_data.api_key = key;
        }

        var request_options = {
            host: metrics.config.host,
            port: metrics.config.port,
            headers: {}
        };

        if (metrics.config.test) { request_data.test = 1; }

        var query = querystring.stringify(request_data);

        request_options.path = [endpoint,"?",query].join("");

        request_lib.get(request_options, function(res) {
            var data = "";
            res.on('data', function(chunk) {
               data += chunk;
            });

            res.on('end', function() {
                var e;
                if (metrics.config.verbose) {
                    try {
                        var result = JSON.parse(data);
                        if(result.status != 1) {
                            e = new Error("Mixpanel Server Error: " + result.error);
                        }
                    }
                    catch(ex) {
                        e = new Error("Could not parse response from Mixpanel");
                    }
                }
                else {
                    e = (data !== '1') ? new Error("Mixpanel Server Error: " + data) : undefined;
                }

                callback(e);
            });
        }).on('error', function(e) {
            if (metrics.config.debug) {
                console.log("Got Error: " + e.message);
            }
            callback(e);
        });
    };

    /**
        track(event, properties, callback)
        ---
        this function sends an event to mixpanel.

        event:string                    the event name
        properties:object               additional event properties to send
        callback:function(err:Error)    callback is called when the request is
                                        finished or an error occurs
    */
    metrics.track = function(event, properties, callback) {
        if (typeof(properties) === 'function' || !properties) {
            callback = properties;
            properties = {};
        }

        // if properties.time exists, use import endpoint
        var endpoint = (typeof(properties.time) === 'number') ? '/import' : '/track';

        properties.token = metrics.token;
        properties.mp_lib = "node";

        var data = {
            'event' : event,
            'properties' : properties
        };

        if (metrics.config.debug) {
            console.log("Sending the following event to Mixpanel:");
            console.log(data);
        }

        metrics.send_request(endpoint, data, callback);
    };

    var parse_time = function(time) {
        if (time === void 0) {
            throw new Error("Import methods require you to specify the time of the event");
        } else if (Object.prototype.toString.call(time) === '[object Date]') {
            time = Math.floor(time.getTime() / 1000);
        }
        return time;
    };

    /**
        import(event, properties, callback)
        ---
        This function sends an event to mixpanel using the import
        endpoint.  The time argument should be either a Date or Number,
        and should signify the time the event occurred.

        It is highly recommended that you specify the distinct_id
        property for each event you import, otherwise the events will be
        tied to the IP address of the sending machine.

        For more information look at:
        https://mixpanel.com/docs/api-documentation/importing-events-older-than-31-days

        event:string                    the event name
        time:date|number                the time of the event
        properties:object               additional event properties to send
        callback:function(err:Error)    callback is called when the request is
                                        finished or an error occurs
    */
    metrics.import = function(event, time, properties, callback) {
        if (typeof(properties) === 'function' || !properties) {
            callback = properties;
            properties = {};
        }

        properties.time = parse_time(time);

        metrics.track(event, properties, callback);
    };

    /**
        import_batch(event_list, options, callback)
        ---
        This function sends a list of events to mixpanel using the import
        endpoint. The format of the event array should be:

        [
            {
                "event": "event name",
                "properties": {
                    "time": new Date(), // Number or Date; required for each event
                    "key": "val",
                    ...
                }
            },
            {
                "event": "event name",
                "properties": {
                    "time": new Date()  // Number or Date; required for each event
                }
            },
            ...
        ]

        See import() for further information about the import endpoint.

        Options:
            max_batch_size: the maximum number of events to be transmitted over
                            the network simultaneously. useful for capping bandwidth
                            usage.

        N.B.: the Mixpanel API only accepts 50 events per request, so regardless
        of max_batch_size, larger lists of events will be chunked further into
        groups of 50.

        event_list:array                    list of event names and properties
        options:object                      optional batch configuration
        callback:function(error_list:array) callback is called when the request is
                                            finished or an error occurs
    */
    metrics.import_batch = function(event_list, options, callback) {
        var batch_size = 50, // default: Mixpanel API permits 50 events per request
            total_events = event_list.length,
            max_simultaneous_events = total_events,
            completed_events = 0,
            event_group_idx = 0,
            request_errors = [];

        if (typeof(options) === 'function' || !options) {
            callback = options;
            options = {};
        }
        if (options.max_batch_size) {
            max_simultaneous_events = options.max_batch_size;
            if (options.max_batch_size < batch_size) {
                batch_size = options.max_batch_size;
            }
        }

        var send_next_batch = function() {
            var properties,
                event_batch = [];

            // prepare batch with required props
            for (var ei = event_group_idx; ei < total_events && ei < event_group_idx + batch_size; ei++) {
                properties = event_list[ei].properties;
                properties.time = parse_time(properties.time);
                if (!properties.token) {
                    properties.token = metrics.token;
                }
                event_batch.push(event_list[ei]);
            }

            if (event_batch.length > 0) {
                metrics.send_request('/import', event_batch, function(e) {
                    completed_events += event_batch.length;
                    if (e) {
                        request_errors.push(e);
                    }
                    if (completed_events < total_events) {
                        send_next_batch();
                    } else if (callback) {
                        callback(request_errors);
                    }
                });
                event_group_idx += batch_size;
            }
        };

        if (metrics.config.debug) {
            console.log(
                "Sending " + event_list.length + " events to Mixpanel in " +
                Math.ceil(total_events / batch_size) + " requests"
            );
        }

        for (var i = 0; i < max_simultaneous_events; i += batch_size) {
            send_next_batch();
        }
    };

    /**
        alias(distinct_id, alias)
        ---
        This function creates an alias for distinct_id

        For more information look at:
        https://mixpanel.com/docs/integration-libraries/using-mixpanel-alias

        distinct_id:string              the current identifier
        alias:string                    the future alias
    */
    metrics.alias = function(distinct_id, alias, callback) {
        var properties = {
            distinct_id: distinct_id,
            alias: alias
        };

        metrics.track('$create_alias', properties, callback);
    };

    metrics.people = {
        /** people.set_once(distinct_id, prop, to, modifiers, callback)
            ---
            The same as people.set but in the words of mixpanel:
            mixpanel.people.set_once

            " This method allows you to set a user attribute, only if
             it is not currently set. It can be called multiple times
             safely, so is perfect for storing things like the first date
             you saw a user, or the referrer that brought them to your
             website for the first time. "

        */
        set_once: function(distinct_id, prop, to, modifiers, callback) {
            var $set = {};

            if (typeof(prop) === 'object') {
                if (typeof(to) === 'object') {
                    callback = modifiers;
                    modifiers = to;
                } else {
                    callback = to;
                }
                $set = prop;
            } else {
                $set[prop] = to;
                if (typeof(modifiers) === 'function' || !modifiers) {
                    callback = modifiers;
                }
            }

            modifiers = modifiers || {};
            modifiers.set_once = true;

            this._set(distinct_id, $set, callback, modifiers);
        },

        /**
            people.set(distinct_id, prop, to, modifiers, callback)
            ---
            set properties on an user record in engage

            usage:

                mixpanel.people.set('bob', 'gender', 'm');

                mixpanel.people.set('joe', {
                    'company': 'acme',
                    'plan': 'premium'
                });
        */
        set: function(distinct_id, prop, to, modifiers, callback) {
            var $set = {};

            if (typeof(prop) === 'object') {
                if (typeof(to) === 'object') {
                    callback = modifiers;
                    modifiers = to;
                } else {
                    callback = to;
                }
                $set = prop;
            } else {
                $set[prop] = to;
                if (typeof(modifiers) === 'function' || !modifiers) {
                    callback = modifiers;
                }
            }

            this._set(distinct_id, $set, callback, modifiers);
        },

        // used internally by set and set_once
        _set: function(distinct_id, $set, callback, options) {
            options = options || {};
            var set_key = (options && options.set_once) ? "$set_once" : "$set";

            var data = {
                '$token': metrics.token,
                '$distinct_id': distinct_id
            };
            data[set_key] = $set;

            if ('ip' in $set) {
                data.$ip = $set.ip;
                delete $set.ip;
            }

            if ($set.$ignore_time) {
                data.$ignore_time = $set.$ignore_time;
                delete $set.$ignore_time;
            }

            data = merge_modifiers(data, options);

            if (metrics.config.debug) {
                console.log("Sending the following data to Mixpanel (Engage):");
                console.log(data);
            }

            metrics.send_request('/engage', data, callback);
        },

        /**
            people.increment(distinct_id, prop, by, modifiers, callback)
            ---
            increment/decrement properties on an user record in engage

            usage:

                mixpanel.people.increment('bob', 'page_views', 1);

                // or, for convenience, if you're just incrementing a counter by 1, you can
                // simply do
                mixpanel.people.increment('bob', 'page_views');

                // to decrement a counter, pass a negative number
                mixpanel.people.increment('bob', 'credits_left', -1);

                // like mixpanel.people.set(), you can increment multiple properties at once:
                mixpanel.people.increment('bob', {
                    counter1: 1,
                    counter2: 3,
                    counter3: -2
                });
        */
        increment: function(distinct_id, prop, by, modifiers, callback) {
            var $add = {};

            if (typeof(prop) === 'object') {
                if (typeof(by) === 'object') {
                    callback = modifiers;
                    modifiers = by;
                } else {
                    callback = by;
                }
                Object.keys(prop).forEach(function(key) {
                    var val = prop[key];

                    if (isNaN(parseFloat(val))) {
                        if (metrics.config.debug) {
                            console.error("Invalid increment value passed to mixpanel.people.increment - must be a number");
                            console.error("Passed " + key + ":" + val);
                        }
                        return;
                    } else {
                        $add[key] = val;
                    }
                });
            } else {
                if (typeof(by) === 'number' || !by) {
                    by = by || 1;
                    $add[prop] = by;
                    if (typeof(modifiers) === 'function') {
                        callback = modifiers;
                    }
                } else if (typeof(by) === 'function') {
                    callback = by;
                    $add[prop] = 1;
                } else {
                    callback = modifiers;
                    modifiers = (typeof(by) === 'object') ? by : {};
                    $add[prop] = 1;
                }
            }

            var data = {
                '$add': $add,
                '$token': metrics.token,
                '$distinct_id': distinct_id
            };

            data = merge_modifiers(data, modifiers);

            if (metrics.config.debug) {
                console.log("Sending the following data to Mixpanel (Engage):");
                console.log(data);
            }

            metrics.send_request('/engage', data, callback);
        },

        /**
            people.append(distinct_id, prop, value, modifiers, callback)
            ---
            Append a value to a list-valued people analytics property.

            usage:

                // append a value to a list, creating it if needed
                mixpanel.people.append('pages_visited', 'homepage');

                // like mixpanel.people.set(), you can append multiple properties at once:
                mixpanel.people.append({
                    list1: 'bob',
                    list2: 123
                });
        */
        append: function(distinct_id, prop, value, modifiers, callback) {
            var $append = {};

            if (typeof(prop) === 'object') {
                if (typeof(value) === 'object') {
                    callback = modifiers;
                    modifiers = value;
                } else {
                    callback = value;
                }
                Object.keys(prop).forEach(function(key) {
                    $append[key] = prop[key];
                });
            } else {
                $append[prop] = value;
                if (typeof(modifiers) === 'function') {
                    callback = modifiers;
                }
            }

            var data = {
                '$append': $append,
                '$token': metrics.token,
                '$distinct_id': distinct_id
            };

            data = merge_modifiers(data, modifiers);

            if (metrics.config.debug) {
                console.log("Sending the following data to Mixpanel (Engage):");
                console.log(data);
            }

            metrics.send_request('/engage', data, callback);
        },

        /**
            people.track_charge(distinct_id, amount, properties, modifiers, callback)
            ---
            Record that you have charged the current user a certain
            amount of money.

            usage:

                // charge a user $29.99
                mixpanel.people.track_charge('bob', 29.99);

                // charge a user $19 on the 1st of february
                mixpanel.people.track_charge('bob', 19, { '$time': new Date('feb 1 2012') });
        */
        track_charge: function(distinct_id, amount, properties, modifiers, callback) {
            if (typeof(properties) === 'function' || !properties) {
                callback = properties || function() {};
                properties = {};
            } else {
                if (typeof(modifiers) === 'function' || !modifiers) {
                    callback = modifiers || function() {};
                    if (properties.$ignore_time || properties.hasOwnProperty("$ip")) {
                        modifiers = {};
                        Object.keys(properties).forEach(function(key) {
                            modifiers[key] = properties[key];
                            delete properties[key];
                        });
                    }
                }
            }

            if (typeof(amount) !== 'number') {
                amount = parseFloat(amount);
                if (isNaN(amount)) {
                    console.error("Invalid value passed to mixpanel.people.track_charge - must be a number");
                    return;
                }
            }

            properties.$amount = amount;

            if (properties.hasOwnProperty('$time')) {
                var time = properties.$time;
                if (Object.prototype.toString.call(time) === '[object Date]') {
                    properties.$time = time.toISOString();
                }
            }

            var data = {
                '$append': { '$transactions': properties },
                '$token': metrics.token,
                '$distinct_id': distinct_id
            };

            data = merge_modifiers(data, modifiers);

            if (metrics.config.debug) {
                console.log("Sending the following data to Mixpanel (Engage):");
                console.log(data);
            }

            metrics.send_request('/engage', data, callback);
        },

        /**
            people.clear_charges(distinct_id, modifiers, callback)
            ---
            Clear all the current user's transactions.

            usage:

                mixpanel.people.clear_charges('bob');
        */
        clear_charges: function(distinct_id, modifiers, callback) {
            var data = {
                '$set': { '$transactions': [] },
                '$token': metrics.token,
                '$distinct_id': distinct_id
            };

            if (typeof(modifiers) === 'function') { callback = modifiers; }

            data = merge_modifiers(data, modifiers);

            if (metrics.config.debug) {
                console.log("Clearing this user's charges:", distinct_id);
            }

            metrics.send_request('/engage', data, callback);
        },

        /**
            people.delete_user(distinct_id, modifiers, callback)
            ---
            delete an user record in engage

            usage:

                mixpanel.people.delete_user('bob');
        */
        delete_user: function(distinct_id, modifiers, callback) {
            var data = {
                '$delete': '',
                '$token': metrics.token,
                '$distinct_id': distinct_id
            };

            if (typeof(modifiers) === 'function') { callback = modifiers; }

            data = merge_modifiers(data, modifiers);

            if (metrics.config.debug) {
                console.log("Deleting the user from engage:", distinct_id);
            }

            metrics.send_request('/engage', data, callback);
        },

        /**
         people.union(distinct_id, data, modifiers, callback)
         ---
         merge value(s) into a list-valued people analytics property.

         usage:

            mixpanel.people.union('bob', {'browsers': 'firefox'});

            mixpanel.people.union('bob', {'browsers', ['chrome'], os: ['linux']});
         */
        union: function(distinct_id, data, modifiers, callback) {
            var $union = {};

            if (typeof(data) !== 'object' || util.isArray(data)) {
                if (metrics.config.debug) {
                    console.error("Invalid value passed to mixpanel.people.union - data must be an object with array values");
                }
                return;
            }

            Object.keys(data).forEach(function(key) {
                var val = data[key];
                if (util.isArray(val)) {
                    var merge_values = val.filter(function(v) {
                        return typeof(v) === 'string' || typeof(v) === 'number';
                    });
                    if (merge_values.length > 0) {
                        $union[key] = merge_values;
                    }
                } else if (typeof(val) === 'string' || typeof(val) === 'number') {
                    $union[key] = [val];
                } else {
                    if (metrics.config.debug) {
                        console.error("Invalid argument passed to mixpanel.people.union - values must be a scalar value or array");
                        console.error("Passed " + key + ':', val);
                    }
                    return;
                }
            });

            if (Object.keys($union).length === 0) {
                return;
            }

            data = {
                '$union': $union,
                '$token': metrics.token,
                '$distinct_id': distinct_id
            };

            if (typeof(modifiers) === 'function') {
                callback = modifiers;
            }

            data = merge_modifiers(data, modifiers);

            if (metrics.config.debug) {
                console.log("Sending the following data to Mixpanel (Engage):");
                console.log(data);
            }

            metrics.send_request('/engage', data, callback);
        },

        /**
         people.unset(distinct_id, prop, modifiers, callback)
         ---
         delete a property on an user record in engage

         usage:

            mixpanel.people.unset('bob', 'page_views');

            mixpanel.people.unset('bob', ['page_views', 'last_login']);
         */
        unset: function(distinct_id, prop, modifiers, callback) {
            var $unset = [];

            if (util.isArray(prop)) {
                $unset = prop;
            } else if (typeof(prop) === 'string') {
                $unset = [prop];
            } else {
                if (metrics.config.debug) {
                    console.error("Invalid argument passed to mixpanel.people.unset - must be a string or array");
                    console.error("Passed: " + prop);
                }
                return;
            }

            var data = {
                '$unset': $unset,
                '$token': metrics.token,
                '$distinct_id': distinct_id
            };

            if (typeof(modifiers) === 'function') {
                callback = modifiers;
            }

            data = merge_modifiers(data, modifiers);

            if (metrics.config.debug) {
                console.log("Sending the following data to Mixpanel (Engage):");
                console.log(data);
            }

            metrics.send_request('/engage', data, callback);
        }
    };

    var merge_modifiers = function(data, modifiers) {
        if (modifiers) {
            if (modifiers.$ignore_alias) {
                data.$ignore_alias = modifiers.$ignore_alias;
            }
            if (modifiers.$ignore_time) {
                data.$ignore_time = modifiers.$ignore_time;
            }
            if (modifiers.hasOwnProperty("$ip")) {
                data.$ip = modifiers.$ip;
            }
            if (modifiers.hasOwnProperty("$time")) {
                data.$time = parse_time(modifiers.$time);
            }
        }
        return data;
    };

    /**
        set_config(config)
        ---
        Modifies the mixpanel config

        config:object       an object with properties to override in the
                            mixpanel client config
    */
    metrics.set_config = function(config) {
        for (var c in config) {
            if (config.hasOwnProperty(c)) {
                if (c == "host") { // Split host, into host and port.
                    metrics.config.host = config[c].split(':')[0];
                    var port = config[c].split(':')[1];
                    if (port) {
                        metrics.config.port = Number(port);
                    }
                } else {
                    metrics.config[c] = config[c];
                }
            }
        }
    };

    if (config) {
        metrics.set_config(config);
    }

    return metrics;
};

// module exporting
module.exports = {
    Client: function(token) {
        console.warn("The function `Client(token)` is deprecated.  It is now called `init(token)`.");
        return create_client(token);
    },
    init: create_client
};


/***/ }),
/* 64 */
/***/ (function(module, exports) {

module.exports = require("buffer");

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const fs = __webpack_require__(28);
const os = __webpack_require__(6);
const path = __webpack_require__(27);

const Logger = __webpack_require__(58);
const configPath = typeof atom !== 'undefined' && atom.config.getUserConfigPath()
  ? path.join(path.dirname(atom.config.getUserConfigPath()), 'kite-config.json')
  : path.join(os.homedir(), '.kite', 'kite-config.json');

var config = null;

try {
  Logger.verbose(`initializing localconfig from ${ configPath }...`);
  var str = fs.readFileSync(configPath, {encoding: 'utf8'});
  config = JSON.parse(str);
} catch (err) {
  config = {};
}

function persist() {
  var str = JSON.stringify(config, null, 2); // serialize with whitespace for human readability
  fs.writeFile(configPath, str, 'utf8', (err) => {
    if (err) {
      Logger.error(`failed to persist localconfig to ${ configPath }`, err);
    }
  });
}

// get gets a value from storage
function get(key, fallback) {
  return key in config ? config[key] : fallback;
}

// set assigns a value to storage and asynchronously persists it to disk
function set(key, value) {
  config[key] = value;
  persist();   // will write to disk asynchronously
}

module.exports = {
  get: get,
  set: set,
};


/***/ }),
/* 66 */
/***/ (function(module) {

module.exports = JSON.parse("{\"_from\":\"kite-installer@=3.16.0\",\"_id\":\"kite-installer@3.16.0\",\"_inBundle\":false,\"_integrity\":\"sha512-/VutstuMOxKrGuyLaGN15y5T3lqCq3lCe+uLGOb2dN9MwWmSneZHgU/9eaPpozIwjHKpEenR1f5s4Y7ESPa0lA==\",\"_location\":\"/kite-installer\",\"_phantomChildren\":{\"form-data\":\"2.5.1\",\"md5\":\"2.2.1\"},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"kite-installer@=3.16.0\",\"name\":\"kite-installer\",\"escapedName\":\"kite-installer\",\"rawSpec\":\"=3.16.0\",\"saveSpec\":null,\"fetchSpec\":\"=3.16.0\"},\"_requiredBy\":[\"/\"],\"_resolved\":\"https://registry.npmjs.org/kite-installer/-/kite-installer-3.16.0.tgz\",\"_shasum\":\"745471719998bf491975695edf513e0297e1a91a\",\"_spec\":\"kite-installer@=3.16.0\",\"_where\":\"/Users/tcheang/go/src/github.com/kiteco/atom-plugin\",\"author\":{\"name\":\"Daniel Hung\"},\"bundleDependencies\":false,\"consumedServices\":{\"status-bar\":{\"versions\":{\"^1.0.0\":\"consumeStatusBar\"}}},\"dependencies\":{\"kite-api\":\"=3.9.0\",\"kite-connector\":\"=3.10.0\",\"mixpanel\":\"^0.5.0\",\"rollbar\":\"^2.4.4\"},\"deprecated\":false,\"description\":\"Javascript library to install and manage Kite\",\"devDependencies\":{\"babel-eslint\":\"^7.1.1\",\"codecov\":\"^3.6.5\",\"eslint\":\"^3.6.0\",\"eslint-config\":\"^0.3.0\",\"eslint-config-fbjs\":\"^1.1.1\",\"eslint-plugin-babel\":\"^4.0.0\",\"eslint-plugin-flowtype\":\"^2.29.1\",\"eslint-plugin-jasmine\":\"^2.2.0\",\"eslint-plugin-prefer-object-spread\":\"^1.1.0\",\"eslint-plugin-react\":\"^6.8.0\",\"expect.js\":\"^0.3.1\",\"fbjs\":\"^0.8.6\",\"jsdom\":\"^9.8.3\",\"mocha\":\"^5.2.0\",\"mocha-jsdom\":\"^1.1.0\",\"nyc\":\"^13.0.1\",\"sinon\":\"^2.3.5\"},\"keywords\":[],\"license\":\"SEE LICENSE IN LICENSE\",\"main\":\"./lib/index.js\",\"name\":\"kite-installer\",\"scripts\":{\"coverage\":\"npm run lcov_report && codecov\",\"lcov_report\":\"nyc report --reporter=lcov\",\"lint\":\"eslint .\",\"lint:fix\":\"eslint --fix .\",\"test\":\"nyc mocha --timeout 20000 --recursive test/*.test.js test/**/*.test.js\",\"test-nocov\":\"mocha --timeout 20000 --recursive test/*.test.js test/**/*.test.js\"},\"version\":\"3.16.0\"}");

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const KiteAPI = __webpack_require__(9);
const KiteConnector = __webpack_require__(13);
const {STATES} = __webpack_require__(20);

const StateController = {
  STATES,

  get support() {
    return KiteConnector.adapter;
  },

  get releaseURL() {
    return this.support.releaseURL;
  },

  get downloadPath() {
    return this.support.downloadPath;
  },

  get installPath() {
    return this.support.installPath;
  },

  /*
    The old client.request method was not failing due to invalid status code
    so we're just returning the response in that case so that the legacy
    code can continue working until we decide to change it completely.
  */
  client: {
    request(...args) {
      return KiteAPI.request(...args).catch(err => {
        if (err.resp) {
          return err.resp;
        }
        throw err;
      });
    },
  },
};

[
  ['handleState', 'checkHealth'],
  ['pathInWhitelist', 'isPathWhitelisted'],
].forEach(([a, b]) => {
  StateController[a] = (...args) => KiteAPI[b](...args);
});

[
  'arch',
  'isAdmin',
  'isOSSupported',
  'isOSVersionSupported',
  'hasManyKiteInstallation',
  'hasManyKiteEnterpriseInstallation',
  'hasBothKiteInstalled',
].forEach(method => {
  StateController[method] = (...args) => KiteConnector.adapter[method](...args);
});

[
  'isKiteSupported',
  'isKiteInstalled',
  'isKiteEnterpriseInstalled',
  'canInstallKite',
  'downloadKiteRelease',
  'downloadKite',
  'installKite',
  'isKiteRunning',
  'canRunKite',
  'runKite',
  'runKiteAndWait',
  'isKiteEnterpriseRunning',
  'canRunKiteEnterprise',
  'runKiteEnterprise',
  'runKiteEnterpriseAndWait',
  'isKiteReachable',
  'waitForKite',
  'isUserAuthenticated',
  'canAuthenticateUser',
  'authenticateUser',
  'authenticateSessionID',
  'isPathWhitelisted',
  'canWhitelistPath',
  'whitelistPath',
  'blacklistPath',
  'saveUserID',
].forEach(method => {
  StateController[method] = (...args) => KiteAPI[method](...args);
});

module.exports = StateController;


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

const Authenticate = __webpack_require__(69);
const BranchStep = __webpack_require__(72);
const CheckEmail = __webpack_require__(73);
const CreateAccount = __webpack_require__(74);
const Download = __webpack_require__(75);
const RunKiteWithCopilot = __webpack_require__(76);
const Flow = __webpack_require__(77);
const GetEmail = __webpack_require__(80);
const InputEmail = __webpack_require__(81);
const Install = __webpack_require__(82);
const KiteVsJedi = __webpack_require__(120);
const Login = __webpack_require__(121);
const ParallelSteps = __webpack_require__(122);
const PassStep = __webpack_require__(123);
const VoidStep = __webpack_require__(124);

const KiteAPI = __webpack_require__(9);

module.exports = {
  Authenticate,
  BranchStep,
  CheckEmail,
  CreateAccount,
  Download,
  RunKiteWithCopilot,
  Flow,
  GetEmail,
  InputEmail,
  Install,
  KiteVsJedi,
  Login,
  ParallelSteps,
  VoidStep,

  atom: () => {
    const InstallElement = __webpack_require__(125);
    const InputEmailElement = __webpack_require__(127);
    const InstallWaitElement = __webpack_require__(129);
    const InstallEndElement = __webpack_require__(130);
    const InstallErrorElement = __webpack_require__(131);
    const KiteVsJediElement = __webpack_require__(132);
    const LoginElement = __webpack_require__(133);
    const NotAdminElement = __webpack_require__(134);
    const InstallErrorView = __webpack_require__(135);

    const InstallPlugin = __webpack_require__(136);

    return {
      InstallElement,
      InputEmailElement,
      InstallWaitElement,
      InstallEndElement,
      InstallErrorElement,
      KiteVsJediElement,
      LoginElement,
      InstallErrorView,
      InstallPlugin,

      defaultFlow: () => {
        return [
          new BranchStep([
            {
              match: (data) => KiteAPI.isAdmin(),
              step: new GetEmail({name: 'get-email'}),
            }, {
              match: (data) => !KiteAPI.isAdmin(),
              step: new VoidStep({
                name: 'not-admin',
                view: new NotAdminElement('kite_installer_not_admin_step'),
              }),
            },
          ], {
            name: 'admin-check',
          }),
          new InputEmail({
            name: 'input-email',
            view: new InputEmailElement('kite_installer_input_email_step'),
          }),
          new CheckEmail({
            name: 'check-email',
            failureStep: 'input-email',
          }),
          new BranchStep([
            {
              match: (data) => data.account.exists,
              step: new Login({
                name: 'login',
                view: new LoginElement('kite_installer_login_step'),
                failureStep: 'account-switch',
                backStep: 'input-email',
              }),
            }, {
              match: (data) => !data.account.exists,
              step: new CreateAccount({name: 'create-account'}),
            },
          ], {
            name: 'account-switch',
          }),
          new ParallelSteps([
            new Flow([
              new Download({name: 'download'}),
              new RunKiteWithCopilot({name: 'launch-copilot'}),
              new Authenticate({name: 'authenticate'}),
              new InstallPlugin({name: 'install-plugin'}),
            ], {name: 'download-flow'}),
            new PassStep({
              name: 'wait-step',
              view: new InstallWaitElement('kite_installer_wait_step'),
            }),
          ], {
            name: 'download-and-wait',
          }),
          new BranchStep([
            {
              match: (data) => !data.error,
              step: new VoidStep({
                name: 'end',
                view: new InstallEndElement('kite_installer_install_end_step'),
              }),
            }, {
              match: (data) => data.error,
              step: new VoidStep({
                name: 'error',
                view: new InstallErrorElement('kite_installer_install_error_step'),
              }),
            },
          ], {name: 'termination'}),
        ];
      },

      autocompletePythonFlow: () => {
        return [
          new KiteVsJedi({
            name: 'kite-vs-jedi',
            view: new KiteVsJediElement('kite_installer_choose_kite_step'),
          }),
          new ParallelSteps([
            new Flow([
              new Download({name: 'download'}),
              new InstallPlugin({name: 'install-plugin'}),
              new RunKiteWithCopilot({name: 'launch-copilot'}),
            ], {name: 'download-flow'}),
            new PassStep({
              name: 'wait-step',
              view: new InstallWaitElement('kite_installer_wait_step'),
            }),
          ], {
            name: 'download-and-wait',
          }),
          new BranchStep([
            {
              match: (data) => !data.error,
              step: new VoidStep({
                name: 'end',
                view: new InstallEndElement('kite_installer_install_end_step'),
              }),
            }, 
            {
              match: (data) => data.error,
              step: new VoidStep({
                name: 'error',
                view: new InstallErrorElement('kite_installer_install_error_step'),
              }),
            },
          ], {name: 'termination'}),
        ];
      },
    };
  },
};


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const BaseStep = __webpack_require__(70);
const KiteAPI = __webpack_require__(9);
const {retryPromise} = __webpack_require__(15);
const Metrics = __webpack_require__(61);

module.exports = class Authenticate extends BaseStep {
  constructor(options = {}) {
    super(options);
    this.cooldown = options.cooldown || 1500;
    this.tries = options.tries || 10;
  }
  start(state, install) {
    install.updateState({authenticate: {done: false}});

    let promise;

    if (!state.account || !state.account.sessionId) {
      promise = Promise.resolve();
    } else {
      promise = retryPromise(() => KiteAPI.authenticateSessionID(state.account.sessionId), this.tries, this.cooldown);
    }

    return promise.then(() => {
      Metrics.Tracker.trackEvent('kite_installer_user_authenticated');
      install.updateState({authenticate: {done: true}});
    });
  }
};


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const CompositeDisposable = __webpack_require__(71);

module.exports = class BaseStep {
  constructor(options = {}) {
    this.options = options;
    this.name = options.name;
    this.failureStep = options.failureStep;
    this.view = options.view;
    this.subscriptions = new CompositeDisposable();
  }

  start() { return Promise.resolve(); }

  release() { this.subscriptions.dispose(); }

  getView() { return this.view; }

  getStatusBar() { return this.options.statusBar; }
};


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = class CompositeDisposable {
  constructor(disposables = []) {
    this.disposables = disposables;
  }

  add(disposable) {
    if (disposable && !this.disposables.includes(disposable)) {
      this.disposables.push(disposable);
    }
  }

  remove(disposable) {
    if (disposable && this.disposables.includes(disposable)) {
      this.disposables = this.disposables.filter(d => d != disposable);
    }
  }

  dispose() {
    this.disposables.forEach(d => d.dispose());
  }
};


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const BaseStep = __webpack_require__(70);

module.exports = class BranchStep extends BaseStep {
  constructor(branches, options) {
    super(options);
    this.branches = branches;
  }

  start(data) {
    return new Promise((resolve, reject) => {
      const result = this.branches.reduce((p, cond) => {
        if (p) { return p; }

        return cond.match(data) ? {step: cond.step, data} : null;
      }, null);

      result
        ? resolve(result)
        : reject();
    });
  }
};


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const BaseStep = __webpack_require__(70);
const AccountManager = __webpack_require__(8);

module.exports = class CheckEmail extends BaseStep {
  start({account}) {
    if (account.skipped) {
      return Promise.resolve({skipped: true});
    }

    return AccountManager.checkEmail(account)
    .catch(err => {
      if (err.resp) {
        return err.resp;
      } else {
        throw err;
      }
    })
    .then(() => {
      return {
        error: null,
        account: {
          email: account.email,
          invalid: false,
          exists: false,
          hasPassword: false,
          reason: null,
        },
      };
    }).catch(err => {
      if (err.data && err.data.response) {
        const json = JSON.parse(err.data.responseData);
        switch (err.data.responseStatus) {
          case 403:
          case 404:
          case 409:
            if (json.email_invalid) {
              const err = new Error(json.fail_reason);
              err.data = {
                account: {
                  email: account.email,
                  invalid: json.email_invalid,
                  exists: json.account_exists,
                  hasPassword: json.has_password,
                  reason: json.fail_reason,
                },
              };
              throw err;
            } else {
              return {
                error: null,
                account: {
                  email: account.email,
                  invalid: json.email_invalid,
                  exists: json.account_exists,
                  hasPassword: json.has_password,
                  reason: json.fail_reason,
                },
              };
            }
        }
        return undefined;
      } else {
        throw err;
      }
    });
  }
};


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const BaseStep = __webpack_require__(70);
const AccountManager = __webpack_require__(8);
const utils = __webpack_require__(15);

module.exports = class CreateAccount extends BaseStep {
  start({account: {email}}, err) {
    return AccountManager.createAccount({email}).then(resp => {
      const cookies = utils.parseSetCookies(resp.headers['set-cookie']);
      return {
        account: {
          sessionId: utils.findCookie(cookies, 'kite-session').Value,
        },
      };
    });
  }
};


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const KiteAPI = __webpack_require__(9);
const {retryPromise} = __webpack_require__(15);
const Metrics = __webpack_require__(61);

const BaseStep = __webpack_require__(70);

module.exports = class Download extends BaseStep {
  constructor(options) {
    super(options);

    this.installInterval = 1500;
    this.runInterval = 2500;
  }

  start(state, install) {
    return KiteAPI.downloadKiteRelease({
      reinstall: true,
      onDownloadProgress: (length, total, ratio) => {
        install.updateState({download: {length, total, ratio}});
      },
    })
    .then(() => {
      Metrics.Tracker.trackEvent('kite_installer_kite_app_downloaded');
      install.updateState({
        download: {done: true},
        install: {done: false},
      });
      return retryPromise(() => KiteAPI.installKite(), 5, this.installInterval);
    })
    .then(() => retryPromise(() => KiteAPI.isKiteInstalled(), 10, this.installInterval))
    .then(() => {
      Metrics.Tracker.trackEvent('kite_installer_kite_app_installed');
      install.updateState({
        install: {done: true},
        running: {done: false},
      });
      return KiteAPI.runKiteAndWait(30, this.runInterval)
      .then(() => {
        Metrics.Tracker.trackEvent('kite_installer_kite_app_started');
        install.updateState({running: {done: true}});
      });
    });
  }
};


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const KiteAPI = __webpack_require__(9);
const {retryPromise} = __webpack_require__(15);

const BaseStep = __webpack_require__(70);

module.exports = class RunKiteWithCopilot extends BaseStep {
  constructor(options) {
    super(options);

    this.runInterval = 2500;
  }

  start(state, install) {
    return retryPromise(() => KiteAPI.isKiteInstalled(), 10, this.installInterval)
    .then(() => {
      return KiteAPI.runKiteWithCopilot()
      .then(() => {
        install.updateState({running: {done: true}});
      });
    });
  }
};


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const Emitter = __webpack_require__(78);
const BaseStep = __webpack_require__(70);

module.exports = class Flow extends BaseStep {
  constructor(steps = [], options) {
    super(options);
    this.currentStepIndex = 0;
    this.emitter = new Emitter();
    this.steps = steps;
  }

  onDidChangeCurrentStep(listener) {
    return this.emitter.on('did-change-current-step', listener);
  }

  onDidFailStep(listener) {
    return this.emitter.on('did-fail-step', listener);
  }

  installStatusBarElement(install) {
    let statusBar = this.getStatusBar();
    if (!statusBar) {
      return;
    }

    // init late because we need HTMLElement
    const InstallStatusElement = __webpack_require__(79);
    let installStatus = new InstallStatusElement("kite-install-status");
    installStatus.init(install, statusBar)
  }

  start(state, install) {
    this.install = install;
    const firstStep = this.steps[this.currentStepIndex];
    if (firstStep) {
      this.installStatusBarElement(install);
      return this.executeStep(firstStep);
    }
    return Promise.resolve();
  }

  executeStep(step) {
    if (this.currentStep) { this.currentStep.release(); }

    this.currentStep = step;
    const stepIndex = this.steps.indexOf(step);
    this.currentStepIndex = stepIndex !== -1
      ? stepIndex
      : this.currentStepIndex;

    this.emitter.emit('did-change-current-step', step);

    return step
    .start(this.install.state, this.install)
    .catch((err) => {
      this.emitter.emit('did-fail-step', {error: err, step});

      this.install.updateState({
        error: {
          message: err.message,
          stack: err.stack,
        },
      });

      if (step.failureStep) {
        return this.executeStep(this.getStepByName(step.failureStep));
      } else {
        if (this.options.failureStep && this.getStepByName(this.options.failureStep)) {
          return this.executeStep(this.getStepByName(this.options.failureStep));
        } else {
          throw err;
        }
      }
    })
    .then((data) => {
      if (data && data.step) {
        const step = typeof data.step === 'string'
          ? this.getStepByName(data.step)
          : data.step;
        this.install.updateState(data.data);
        return this.executeStep(step);
      } else {
        this.install.updateState(data);
        return this.executeNextStep(data);
      }
    });
  }

  executeNextStep(data) {
    const nextStep = this.getNextStep(this.currentStepIndex);
    return nextStep
      ? this.executeStep(nextStep)
      : data;
  }

  getCurrentStep() {
    return this.currentStep && this.currentStep.getCurrentStep
      ? this.currentStep.getCurrentStep()
      : this.currentStep;
  }

  getStepByName(name) {
    return this.steps.reduce((m, s) => {
      if (m) { return m; }
      if (s.name === name) { return s; }
      return m;
    }, null);
  }

  getNextStep(index) {
    return this.steps[index + 1];
  }
};


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = class Emitter {
  constructor() {
    this.listeners = {};
  }

  on(event, listener) {
    this.listeners[event] = this.listeners[event] || [];

    if (listener && !this.listeners[event].includes(listener)) {
      this.listeners[event].push(listener);
      return {
        dispose: () => {
          this.listeners[event] = this.listeners[event].filter(l => l !== listener);
        },
      };
    } else {
      return {
        dispose: () => {},
      };
    }
  }

  emit(event, data) {
    this.listeners[event] && this.listeners[event].forEach(listener => {
      listener(data);
    });
  }
};


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const CompositeDisposable = __webpack_require__(71);

class InstallStatusBarElement extends HTMLElement {
  constructor(name) {
    super();
    this.name = name;
    this.className = 'kite-install-status';
    this.classList.add('inline-block');
    this.subscriptions = new CompositeDisposable();
    this.currentStatusText = '';
  }

  destroyTile() {
    if (this.subscriptions) {
      this.subscriptions.dispose();
      this.subscriptions = null;
    }
    if (this.statusBarTile) {
      this.statusBarTile.destroy();
      this.statusBarTile = null;
    }
  }

  init(install, statusBar) {
    this.subscriptions.add(atom.tooltips.add(this, {
      title: 'Kite will start automatically after being installed'
    }));

    this.statusBarTile = statusBar.addRightTile({item: this});
    this.subscriptions.add(install.on('encountered-fatal-error', (err) => {
      console.log('fatal status bar error: ' + err);
      this.destroyTile();
    }));

    this.subscriptions.add(install.onDidFailStep(({error}) => {
      console.log('fatal status bar error:' + (error && error.message));
      this.destroyTile();
    }));

    this.subscriptions.add(install.observeState((state) => {
      let newStatusText;
      if (state.download) {
        newStatusText = 'Downloading Kite';
      }

      if ((state.download && state.download.done) || state.install) {
        newStatusText = 'Installing Kite';
      }

      if (state.running) {
        newStatusText = 'Starting Kite';
      }

      if (state.plugin) {
        if (state.plugin.done) {
          this.destroyTile();
          newStatusText = '';
        } else {
          newStatusText = 'Installing Kite plugin';
        }
      }

      if (newStatusText && newStatusText !== this.currentStatusText) {
        this.currentStatusText = newStatusText;
        this.innerHTML = `<span class="loading loading-spinner-tiny inline-block icon"></span><span class="text"> ${newStatusText}</span>`;
      }
    }));
  }

  release() {
    // this.destroyTile()
  }
}

customElements.define('kite-atom-install-statusbar', InstallStatusBarElement);

module.exports = InstallStatusBarElement;


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const fs = __webpack_require__(28);
const os = __webpack_require__(6);
const path = __webpack_require__(27);

const Logger = __webpack_require__(58);
const {Tracker} = __webpack_require__(61);
const BaseStep = __webpack_require__(70);

module.exports = class GetEmail extends BaseStep {
  start() {
    return new Promise((resolve, reject) => {
      const gitconfig = String(fs.readFileSync(path.join(os.homedir(), '.gitconfig')));

      const lines = gitconfig.split('\n');
      const line = lines.filter(line => /^\s*email\s=/.test(line))[0];

      resolve({account: {email: line ? line.split('=')[1].trim() : undefined}});
    }).catch(err => {
      Tracker.trackEvent('error parsing gitconfig', { error: err.message });
      Logger.error('error parsing gitconfig:', err);
      return {account: {email: undefined}};
    });
  }
};


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const BaseStep = __webpack_require__(70);

module.exports = class InputEmail extends BaseStep {
  start(state, install) {
    return new Promise((resolve, reject) => {
      this.subscriptions.add(install.on('did-submit-email', data => {
        resolve({account: data});
      }));

      this.subscriptions.add(install.on('did-skip-email', data => {
        resolve({account: data});
      }))
    });
  }
};


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const Emitter = __webpack_require__(78);
const Flow = __webpack_require__(77);
const {deepMerge} = __webpack_require__(15);
const Rollbar = __webpack_require__(83);
const rollbar = new Rollbar('0d9bba1cb93446a8af003823e0e85ce8');

module.exports = class Install {
  /*
  interface Step {
    get name : String
    get failureStep : String
    get view : HTMLElement?
    start(state : Object, install : Install) : Promise
  }
  */
  constructor(steps, state = {}, options = {}) {
    this.emitter = new Emitter();
    this.flow = new Flow(steps, options);
    this.state = state;
    this.options = options;

    this.flow.onDidFailStep(({error}) => {
      error && rollbar.error(error, error.data);

      if (this.state.destroyed) {
        this.emit("headless-error", {error, state: this.state})
      }
    });
  }

  getTitle() {
    return this.options.title || 'Kite Install';
  }

  // Atom is using `on` unless these methods exists, so to avoid any issue
  // we have them defined here.
  onDidChangeTitle() {}
  onDidChangeModified() {}

  on(event, listener) {
    return this.emitter.on(event, listener);
  }

  observeState(listener) {
    listener && listener(this.state);
    return this.onDidUdpdateState(listener);
  }

  onDidDestroy(listener) {
    return this.emitter.on('did-destroy', listener);
  }

  onDidUdpdateState(listener) {
    return this.emitter.on('did-update-state', listener);
  }

  onDidChangeCurrentStep(listener) {
    return this.flow.onDidChangeCurrentStep(listener);
  }

  onDidFailStep(listener) {
    return this.flow.onDidFailStep(listener);
  }

  start() {
    return this.flow.start(this.state, this);
  }

  emit(event, data) {
    this.emitter.emit(event, data);
  }

  destroy() {
    this.updateState({
      destroyed: true
    })
    this.emit('did-destroy');
  }


  getCurrentStepView() {
    const step = this.getCurrentStep();
    return step && step.getView();
  }

  getCurrentStep() {
    return this.flow.getCurrentStep();
  }

  updateState(o) {
    this.state = deepMerge(this.state, o);
    if (o && o.error === null) {
      delete this.state.error;
    }
    this.emitter.emit('did-update-state', this.state);
  }
};


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

var util = __webpack_require__(24);
var os = __webpack_require__(6);

var packageJson = __webpack_require__(84);
var Client = __webpack_require__(85);
var _ = __webpack_require__(87);
var API = __webpack_require__(93);
var logger = __webpack_require__(96);

var Transport = __webpack_require__(97);
var urllib = __webpack_require__(4);
var jsonBackup = __webpack_require__(98);

var transforms = __webpack_require__(99);
var sharedTransforms = __webpack_require__(118);
var sharedPredicates = __webpack_require__(119);

function Rollbar(options, client) {
  if (_.isType(options, 'string')) {
    var accessToken = options;
    options = {};
    options.accessToken = accessToken;
  }
  if (options.minimumLevel !== undefined) {
    options.reportLevel = options.minimumLevel;
    delete options.minimumLevel;
  }
  this.options = _.handleOptions(Rollbar.defaultOptions, options);
  this.options._configuredOptions = options;
  // On the server we want to ignore any maxItems setting
  delete this.options.maxItems;
  this.options.environment = this.options.environment || 'unspecified';
  logger.setVerbose(this.options.verbose);
  this.lambdaContext = null;
  this.lambdaTimeoutHandle = null;
  var transport = new Transport();
  var api = new API(this.options, transport, urllib, jsonBackup);
  this.client = client || new Client(this.options, api, logger, 'server');
  addTransformsToNotifier(this.client.notifier);
  addPredicatesToQueue(this.client.queue);
  this.setupUnhandledCapture();
}

var _instance = null;
Rollbar.init = function(options, client) {
  if (_instance) {
    return _instance.global(options).configure(options);
  }
  _instance = new Rollbar(options, client);
  return _instance;
};

function handleUninitialized(maybeCallback) {
  var message = 'Rollbar is not initialized';
  logger.error(message);
  if (maybeCallback) {
    maybeCallback(new Error(message));
  }
}

Rollbar.prototype.global = function(options) {
  options = _.handleOptions(options);
  // On the server we want to ignore any maxItems setting
  delete options.maxItems;
  this.client.global(options);
  return this;
};
Rollbar.global = function(options) {
  if (_instance) {
    return _instance.global(options);
  } else {
    handleUninitialized();
  }
};

Rollbar.prototype.configure = function(options, payloadData) {
  var oldOptions = this.options;
  var payload = {};
  if (payloadData) {
    payload = {payload: payloadData};
  }
  this.options = _.handleOptions(oldOptions, options, payload);
  this.options._configuredOptions = _.handleOptions(oldOptions._configuredOptions, options, payload);
  // On the server we want to ignore any maxItems setting
  delete this.options.maxItems;
  logger.setVerbose(this.options.verbose);
  this.client.configure(options, payloadData);
  this.setupUnhandledCapture();
  return this;
};
Rollbar.configure = function(options, payloadData) {
  if (_instance) {
    return _instance.configure(options, payloadData);
  } else {
    handleUninitialized();
  }
};

Rollbar.prototype.lastError = function() {
  return this.client.lastError;
};
Rollbar.lastError = function() {
  if (_instance) {
    return _instance.lastError();
  } else {
    handleUninitialized();
  }
};

Rollbar.prototype.log = function() {
  var item = this._createItem(arguments);
  var uuid = item.uuid;
  this.client.log(item);
  return {uuid: uuid};
};
Rollbar.log = function() {
  if (_instance) {
    return _instance.log.apply(_instance, arguments);
  } else {
    var maybeCallback = _getFirstFunction(arguments);
    handleUninitialized(maybeCallback);
  }
};

Rollbar.prototype.debug = function() {
  var item = this._createItem(arguments);
  var uuid = item.uuid;
  this.client.debug(item);
  return {uuid: uuid};
};
Rollbar.debug = function() {
  if (_instance) {
    return _instance.debug.apply(_instance, arguments);
  } else {
    var maybeCallback = _getFirstFunction(arguments);
    handleUninitialized(maybeCallback);
  }
};

Rollbar.prototype.info = function() {
  var item = this._createItem(arguments);
  var uuid = item.uuid;
  this.client.info(item);
  return {uuid: uuid};
};
Rollbar.info = function() {
  if (_instance) {
    return _instance.info.apply(_instance, arguments);
  } else {
    var maybeCallback = _getFirstFunction(arguments);
    handleUninitialized(maybeCallback);
  }
};

Rollbar.prototype.warn = function() {
  var item = this._createItem(arguments);
  var uuid = item.uuid;
  this.client.warn(item);
  return {uuid: uuid};
};
Rollbar.warn = function() {
  if (_instance) {
    return _instance.warn.apply(_instance, arguments);
  } else {
    var maybeCallback = _getFirstFunction(arguments);
    handleUninitialized(maybeCallback);
  }
};


Rollbar.prototype.warning = function() {
  var item = this._createItem(arguments);
  var uuid = item.uuid;
  this.client.warning(item);
  return {uuid: uuid};
};
Rollbar.warning = function() {
  if (_instance) {
    return _instance.warning.apply(_instance, arguments);
  } else {
    var maybeCallback = _getFirstFunction(arguments);
    handleUninitialized(maybeCallback);
  }
};


Rollbar.prototype.error = function() {
  var item = this._createItem(arguments);
  var uuid = item.uuid;
  this.client.error(item);
  return {uuid: uuid};
};
Rollbar.error = function() {
  if (_instance) {
    return _instance.error.apply(_instance, arguments);
  } else {
    var maybeCallback = _getFirstFunction(arguments);
    handleUninitialized(maybeCallback);
  }
};
Rollbar.prototype._uncaughtError = function() {
  var item = this._createItem(arguments);
  item._isUncaught = true;
  var uuid = item.uuid;
  this.client.error(item);
  return {uuid: uuid};
};

Rollbar.prototype.critical = function() {
  var item = this._createItem(arguments);
  var uuid = item.uuid;
  this.client.critical(item);
  return {uuid: uuid};
};
Rollbar.critical = function() {
  if (_instance) {
    return _instance.critical.apply(_instance, arguments);
  } else {
    var maybeCallback = _getFirstFunction(arguments);
    handleUninitialized(maybeCallback);
  }
};

Rollbar.prototype.buildJsonPayload = function(item) {
  return this.client.buildJsonPayload(item);
};
Rollbar.buildJsonPayload = function() {
  if (_instance) {
    return _instance.buildJsonPayload.apply(_instance, arguments);
  } else {
    handleUninitialized();
  }
};

Rollbar.prototype.sendJsonPayload = function(jsonPayload) {
  return this.client.sendJsonPayload(jsonPayload);
};
Rollbar.sendJsonPayload = function() {
  if (_instance) {
    return _instance.sendJsonPayload.apply(_instance, arguments);
  } else {
    handleUninitialized();
  }
};

Rollbar.prototype.wait = function(callback) {
  this.client.wait(callback);
};
Rollbar.wait = function(callback) {
  if (_instance) {
    return _instance.wait(callback)
  } else {
    var maybeCallback = _getFirstFunction(arguments);
    handleUninitialized(maybeCallback);
  }
};

Rollbar.prototype.errorHandler = function() {
  return function(err, request, response, next) {
    var cb = function(rollbarError) {
      if (rollbarError) {
        logger.error('Error reporting to rollbar, ignoring: ' + rollbarError);
      }
      return next(err, request, response);
    };
    if (!err) {
      return next(err, request, response);
    }

    if (err instanceof Error) {
      return this.error(err, request, cb);
    }
    return this.error('Error: ' + err, request, cb);
  }.bind(this);
};
Rollbar.errorHandler = function() {
  if (_instance) {
    return _instance.errorHandler()
  } else {
    handleUninitialized();
  }
};

Rollbar.prototype.lambdaHandler = function(handler, timeoutHandler) {
  if (handler.length <= 2) {
    return this.asyncLambdaHandler(handler, timeoutHandler);
  }
  return this.syncLambdaHandler(handler, timeoutHandler);
};

Rollbar.prototype.asyncLambdaHandler = function(handler, timeoutHandler) {
  var self = this;
  var _timeoutHandler = function(event, context) {
    var message = 'Function timed out';
    var custom = {
      originalEvent: event,
      originalRequestId: context.awsRequestId,
    };
    self.error(message, custom);
  };
  var shouldReportTimeouts = self.options.captureLambdaTimeouts;
  return function(event, context) {
    return new Promise(function(resolve, reject) {
      self.lambdaContext = context;
      if (shouldReportTimeouts) {
        var timeoutCb = (timeoutHandler || _timeoutHandler).bind(null, event, context);
        self.lambdaTimeoutHandle = setTimeout(timeoutCb, context.getRemainingTimeInMillis() - 1000);
      }
      handler(event, context)
        .then(function(resp) {
          clearTimeout(self.lambdaTimeoutHandle);
          resolve(resp);
        })
        .catch(function(err) {
          self.error(err);
          self.wait(function() {
            clearTimeout(self.lambdaTimeoutHandle);
            reject(err);
          });
        });
    });
  };
};
Rollbar.prototype.syncLambdaHandler = function(handler, timeoutHandler) {
  var self = this;
  var _timeoutHandler = function(event, context, _cb) {
    var message = 'Function timed out';
    var custom = {
      originalEvent: event,
      originalRequestId: context.awsRequestId,
    };
    self.error(message, custom);
  };
  var shouldReportTimeouts = self.options.captureLambdaTimeouts;
  return function(event, context, callback) {
    self.lambdaContext = context;
    if (shouldReportTimeouts) {
      var timeoutCb = (timeoutHandler || _timeoutHandler).bind(null, event, context, callback);
      self.lambdaTimeoutHandle = setTimeout(timeoutCb, context.getRemainingTimeInMillis() - 1000);
    }
    try {
      handler(event, context, function(err, resp) {
        if (err) {
          self.error(err);
        }
        self.wait(function() {
          clearTimeout(self.lambdaTimeoutHandle);
          callback(err, resp);
        });
      });
    } catch (err) {
      self.error(err);
      self.wait(function() {
        clearTimeout(self.lambdaTimeoutHandle);
        throw err;
      });
    }
  };
};
Rollbar.lambdaHandler = function(handler) {
  if (_instance) {
    return _instance.lambdaHandler(handler);
  } else {
    handleUninitialized();
  }
};

function wrapCallback(r, f) {
  return function() {
    var err = arguments[0];
    if (err) {
      r.error(err);
    }
    return f.apply(this, arguments);
  };
}

Rollbar.prototype.wrapCallback = function(f) {
  return wrapCallback(this, f);
};
Rollbar.wrapCallback = function(f) {
  if (_instance) {
    return _instance.wrapCallback(f);
  } else {
    handleUninitialized();
  }
};

Rollbar.prototype.captureEvent = function() {
  var event = _.createTelemetryEvent(arguments);
  return this.client.captureEvent(event.type, event.metadata, event.level);
};
Rollbar.captureEvent = function() {
  if (_instance) {
    return _instance.captureEvent.apply(_instance, arguments);
  } else {
    handleUninitialized();
  }
};

/** DEPRECATED **/

Rollbar.prototype.reportMessage = function(message, level, request, callback) {
  logger.log('reportMessage is deprecated');
  if (_.isFunction(this[level])) {
    return this[level](message, request, callback);
  } else {
    return this.error(message, request, callback);
  }
};
Rollbar.reportMessage = function(message, level, request, callback) {
  if (_instance) {
    return _instance.reportMessage(message, level, request, callback);
  } else {
    handleUninitialized(callback);
  }
};

Rollbar.prototype.reportMessageWithPayloadData = function(message, payloadData, request, callback) {
  logger.log('reportMessageWithPayloadData is deprecated');
  return this.error(message, request, payloadData, callback);
};
Rollbar.reportMessageWithPayloadData = function(message, payloadData, request, callback) {
  if (_instance) {
    return _instance.reportMessageWithPayloadData(message, payloadData, request, callback);
  } else {
    handleUninitialized(callback);
  }
};


Rollbar.prototype.handleError = function(err, request, callback) {
  logger.log('handleError is deprecated');
  return this.error(err, request, callback);
};
Rollbar.handleError = function(err, request, callback) {
  if (_instance) {
    return _instance.handleError(err, request, callback);
  } else {
    handleUninitialized(callback);
  }
};


Rollbar.prototype.handleErrorWithPayloadData = function(err, payloadData, request, callback) {
  logger.log('handleErrorWithPayloadData is deprecated');
  return this.error(err, request, payloadData, callback);
};
Rollbar.handleErrorWithPayloadData = function(err, payloadData, request, callback) {
  if (_instance) {
    return _instance.handleErrorWithPayloadData(err, payloadData, request, callback);
  } else {
    handleUninitialized(callback);
  }
};

Rollbar.handleUncaughtExceptions = function(accessToken, options) {
  if (_instance) {
    options = options || {};
    options.accessToken = accessToken;
    return _instance.configure(options);
  } else {
    handleUninitialized();
  }
};

Rollbar.handleUnhandledRejections = function(accessToken, options) {
  if (_instance) {
    options = options || {};
    options.accessToken = accessToken;
    return _instance.configure(options);
  } else {
    handleUninitialized();
  }
};

Rollbar.handleUncaughtExceptionsAndRejections = function(accessToken, options) {
  if (_instance) {
    options = options || {};
    options.accessToken = accessToken;
    return _instance.configure(options);
  } else {
    handleUninitialized();
  }
};

/** Internal **/

function addTransformsToNotifier(notifier) {
  notifier
    .addTransform(transforms.baseData)
    .addTransform(transforms.handleItemWithError)
    .addTransform(transforms.addBody)
    .addTransform(sharedTransforms.addMessageWithError)
    .addTransform(sharedTransforms.addTelemetryData)
    .addTransform(transforms.addRequestData)
    .addTransform(transforms.addLambdaData)
    .addTransform(sharedTransforms.addConfigToPayload)
    .addTransform(transforms.scrubPayload)
    .addTransform(sharedTransforms.userTransform(logger))
    .addTransform(sharedTransforms.addConfiguredOptions)
    .addTransform(sharedTransforms.addDiagnosticKeys)
    .addTransform(sharedTransforms.itemToPayload);
}

function addPredicatesToQueue(queue) {
  queue
    .addPredicate(sharedPredicates.checkLevel)
    .addPredicate(sharedPredicates.userCheckIgnore(logger))
    .addPredicate(sharedPredicates.urlIsNotBlacklisted(logger))
    .addPredicate(sharedPredicates.urlIsWhitelisted(logger))
    .addPredicate(sharedPredicates.messageIsIgnored(logger));
}

Rollbar.prototype._createItem = function(args) {
  var requestKeys = ['headers', 'protocol', 'url', 'method', 'body', 'route'];
  return _.createItem(args, logger, this, requestKeys, this.lambdaContext);
};

function _getFirstFunction(args) {
  for (var i = 0, len = args.length; i < len; ++i) {
    if (_.isFunction(args[i])) {
      return args[i];
    }
  }
  return undefined;
}

Rollbar.prototype.setupUnhandledCapture = function() {
  if (this.options.captureUncaught || this.options.handleUncaughtExceptions) {
    this.handleUncaughtExceptions();
  }
  if (this.options.captureUnhandledRejections || this.options.handleUnhandledRejections) {
    this.handleUnhandledRejections();
  }
};

Rollbar.prototype.handleUncaughtExceptions = function() {
  var exitOnUncaught = !!this.options.exitOnUncaughtException;
  delete this.options.exitOnUncaughtException;

  addOrReplaceRollbarHandler('uncaughtException', function(err) {
    if (!this.options.captureUncaught && !this.options.handleUncaughtExceptions) {
      return;
    }

    this._uncaughtError(err, function(err) {
      if (err) {
        logger.error('Encountered error while handling an uncaught exception.');
        logger.error(err);
      }
    });
    if (exitOnUncaught) {
      setImmediate(function() {
        this.wait(function() {
          process.exit(1);
        });
      }.bind(this));
    }
  }.bind(this));
};

Rollbar.prototype.handleUnhandledRejections = function() {
  addOrReplaceRollbarHandler('unhandledRejection', function(reason) {
    if (!this.options.captureUnhandledRejections && !this.options.handleUnhandledRejections) {
      return;
    }

    this._uncaughtError(reason, function(err) {
      if (err) {
        logger.error('Encountered error while handling an uncaught exception.');
        logger.error(err);
      }
    });
  }.bind(this));
};

function addOrReplaceRollbarHandler(event, action) {
  // We only support up to two arguments which is enough for how this is used
  // rather than dealing with `arguments` and `apply`
  var fn = function(a, b) {
    action(a, b);
  };
  fn._rollbarHandler = true;

  var listeners = process.listeners(event);
  var len = listeners.length;
  for (var i = 0; i < len; ++i) {
    if (listeners[i]._rollbarHandler) {
      process.removeListener(event, listeners[i]);
    }
  }
  process.on(event, fn);
}

function RollbarError(message, nested) {
  Error.call(this);
  Error.captureStackTrace(this, this.constructor);

  this.message = message;
  this.nested = nested;
  this.name = this.constructor.name;
}
util.inherits(RollbarError, Error);
Rollbar.Error = RollbarError;

Rollbar.defaultOptions = {
  host: os.hostname(),
  environment: "none" || false,
  framework: 'node-js',
  showReportedMessageTraces: false,
  notifier: {
    name: 'node_rollbar',
    version: packageJson.version
  },
  scrubHeaders: packageJson.defaults.server.scrubHeaders,
  scrubFields: packageJson.defaults.server.scrubFields,
  addRequestData: null,
  reportLevel: packageJson.defaults.reportLevel,
  verbose: false,
  enabled: true,
  transmit: true,
  sendConfig: false,
  includeItemsInTelemetry: false,
  captureEmail: false,
  captureUsername: false,
  captureIp: true,
  captureLambdaTimeouts: true,
  ignoreDuplicateErrors: true,
  scrubRequestBody: true
};

module.exports = Rollbar;


/***/ }),
/* 84 */
/***/ (function(module) {

module.exports = JSON.parse("{\"_from\":\"rollbar@^2.3.8\",\"_id\":\"rollbar@2.15.0\",\"_inBundle\":false,\"_integrity\":\"sha512-imEL4FOng650XZq0ZoqAI8wCfWZ5UE+4rRJwwwxthyzTdKOeDAObz/trMohc/ULn1WCo9Cz3T6ozn9Awd5kGTg==\",\"_location\":\"/rollbar\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"range\",\"registry\":true,\"raw\":\"rollbar@^2.3.8\",\"name\":\"rollbar\",\"escapedName\":\"rollbar\",\"rawSpec\":\"^2.3.8\",\"saveSpec\":null,\"fetchSpec\":\"^2.3.8\"},\"_requiredBy\":[\"/\",\"/kite-installer\"],\"_resolved\":\"https://registry.npmjs.org/rollbar/-/rollbar-2.15.0.tgz\",\"_shasum\":\"1291116a2b6273a22f2e4b5d1b3eb9880e1b5dac\",\"_spec\":\"rollbar@^2.3.8\",\"_where\":\"/Users/tcheang/go/src/github.com/kiteco/atom-plugin\",\"browser\":\"dist/rollbar.umd.min.js\",\"bugs\":{\"url\":\"https://github.com/rollbar/rollbar.js/issues\"},\"bundleDependencies\":false,\"cdn\":{\"host\":\"cdn.rollbar.com\"},\"defaults\":{\"endpoint\":\"api.rollbar.com/api/1/item/\",\"browser\":{\"scrubFields\":[\"pw\",\"pass\",\"passwd\",\"password\",\"secret\",\"confirm_password\",\"confirmPassword\",\"password_confirmation\",\"passwordConfirmation\",\"access_token\",\"accessToken\",\"X-Rollbar-Access-Token\",\"secret_key\",\"secretKey\",\"secretToken\",\"cc-number\",\"card number\",\"cardnumber\",\"cardnum\",\"ccnum\",\"ccnumber\",\"cc num\",\"creditcardnumber\",\"credit card number\",\"newcreditcardnumber\",\"new credit card\",\"creditcardno\",\"credit card no\",\"card#\",\"card #\",\"cc-csc\",\"cvc\",\"cvc2\",\"cvv2\",\"ccv2\",\"security code\",\"card verification\",\"name on credit card\",\"name on card\",\"nameoncard\",\"cardholder\",\"card holder\",\"name des karteninhabers\",\"ccname\",\"card type\",\"cardtype\",\"cc type\",\"cctype\",\"payment type\",\"expiration date\",\"expirationdate\",\"expdate\",\"cc-exp\",\"ccmonth\",\"ccyear\"]},\"server\":{\"scrubHeaders\":[\"authorization\",\"www-authorization\",\"http_authorization\",\"omniauth.auth\",\"cookie\",\"oauth-access-token\",\"x-access-token\",\"x_csrf_token\",\"http_x_csrf_token\",\"x-csrf-token\"],\"scrubFields\":[\"pw\",\"pass\",\"passwd\",\"password\",\"password_confirmation\",\"passwordConfirmation\",\"confirm_password\",\"confirmPassword\",\"secret\",\"secret_token\",\"secretToken\",\"secret_key\",\"secretKey\",\"api_key\",\"access_token\",\"accessToken\",\"authenticity_token\",\"oauth_token\",\"token\",\"user_session_secret\",\"request.session.csrf\",\"request.session._csrf\",\"request.params._csrf\",\"request.cookie\",\"request.cookies\"]},\"reactNative\":{\"rewriteFilenamePatterns\":[\"^.*/[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}/[^/]*.app/(.*)$\",\"^.*/[0-9A-Fa-f]{64}/codepush_ios/(.*)$\",\"^.*/[0-9A-Fa-f]{64}/codepush_android/(.*)$\",\"^.*/[0-9A-Fa-f]{64}/CodePush/(.*)$\"]},\"logLevel\":\"debug\",\"reportLevel\":\"debug\",\"uncaughtErrorLevel\":\"error\",\"maxItems\":0,\"itemsPerMin\":60},\"dependencies\":{\"async\":\"~1.2.1\",\"buffer-from\":\"~1.1.1\",\"console-polyfill\":\"0.3.0\",\"debug\":\"2.6.9\",\"decache\":\"^3.0.5\",\"error-stack-parser\":\"^2.0.4\",\"json-stringify-safe\":\"~5.0.0\",\"lru-cache\":\"~2.2.1\",\"request-ip\":\"~2.0.1\",\"source-map\":\"^0.5.7\",\"uuid\":\"3.0.x\"},\"deprecated\":false,\"description\":\"Error tracking and logging from JS to Rollbar\",\"devDependencies\":{\"babel-core\":\"^6.26.3\",\"babel-eslint\":\"^10.0.3\",\"babel-loader\":\"^8.0.4\",\"bluebird\":\"^3.3.5\",\"browserstack-api\":\"0.0.5\",\"chai\":\"^4.2.0\",\"chalk\":\"^1.1.1\",\"eslint\":\"^6.8.0\",\"eslint-loader\":\"^3.0.3\",\"express\":\"^4.16.4\",\"glob\":\"^5.0.14\",\"grunt\":\"^1.0.4\",\"grunt-bumpup\":\"^0.6.3\",\"grunt-cli\":\"^1.3.2\",\"grunt-contrib-concat\":\"~0.3.0\",\"grunt-contrib-connect\":\"^2.1.0\",\"grunt-contrib-copy\":\"~0.5.0\",\"grunt-contrib-jshint\":\"^2.1.0\",\"grunt-contrib-uglify\":\"^4.0.0\",\"grunt-contrib-watch\":\"^1.1.0\",\"grunt-karma\":\"^3.0.2\",\"grunt-mocha\":\"^1.2.0\",\"grunt-parallel\":\"^0.5.1\",\"grunt-text-replace\":\"^0.4.0\",\"grunt-vows\":\"^0.4.2\",\"grunt-webpack\":\"^3.1.3\",\"istanbul-instrumenter-loader\":\"^3.0.1\",\"jade\":\"~0.27.7\",\"jasmine-core\":\"^2.3.4\",\"jquery-mockjax\":\"^2.5.0\",\"karma\":\"^4.4.1\",\"karma-browserstack-launcher\":\"^1.5.1\",\"karma-chai\":\"^0.1.0\",\"karma-chrome-launcher\":\"^2.2.0\",\"karma-expect\":\"^1.1.0\",\"karma-firefox-launcher\":\"^0.1.6\",\"karma-html2js-preprocessor\":\"^1.1.0\",\"karma-jquery\":\"^0.1.0\",\"karma-mocha\":\"^1.3.0\",\"karma-mocha-reporter\":\"^2.2.5\",\"karma-requirejs\":\"^0.2.2\",\"karma-safari-launcher\":\"^0.1.1\",\"karma-sinon\":\"^1.0.4\",\"karma-sourcemap-loader\":\"^0.3.5\",\"karma-webpack\":\"^4.0.2\",\"mocha\":\"^5.2.0\",\"mootools\":\"^1.5.1\",\"natives\":\"^1.1.6\",\"node-libs-browser\":\"^0.5.2\",\"request\":\"^2.88.0\",\"requirejs\":\"^2.1.20\",\"script-loader\":\"0.6.1\",\"sinon\":\"^8.1.1\",\"stackframe\":\"^0.2.2\",\"strict-loader\":\"^1.2.0\",\"time-grunt\":\"^1.0.0\",\"vows\":\"^0.8.3\",\"webpack\":\"^4.41.5\",\"webpack-dev-server\":\"^3.10.3\"},\"homepage\":\"https://github.com/rollbar/rollbar.js#readme\",\"license\":\"MIT\",\"main\":\"src/server/rollbar.js\",\"name\":\"rollbar\",\"optionalDependencies\":{\"decache\":\"^3.0.5\"},\"plugins\":{\"jquery\":{\"version\":\"0.0.8\"}},\"repository\":{\"type\":\"git\",\"url\":\"git+ssh://git@github.com/rollbar/rollbar.js.git\"},\"scripts\":{\"build\":\"grunt\",\"lint\":\"eslint . --ext .js\",\"test\":\"grunt test\",\"test-browser\":\"grunt test-browser\",\"test-server\":\"grunt test-server\",\"test_ci\":\"grunt test\"},\"types\":\"./index.d.ts\",\"version\":\"2.15.0\"}");

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

var RateLimiter = __webpack_require__(86);
var Queue = __webpack_require__(90);
var Notifier = __webpack_require__(91);
var Telemeter = __webpack_require__(92);
var _ = __webpack_require__(87);

/*
 * Rollbar - the interface to Rollbar
 *
 * @param options
 * @param api
 * @param logger
 */
function Rollbar(options, api, logger, platform) {
  this.options = _.merge(options);
  this.logger = logger;
  Rollbar.rateLimiter.configureGlobal(this.options);
  Rollbar.rateLimiter.setPlatformOptions(platform, this.options);
  this.api = api;
  this.queue = new Queue(Rollbar.rateLimiter, api, logger, this.options);
  this.notifier = new Notifier(this.queue, this.options);
  this.telemeter = new Telemeter(this.options);
  this.lastError = null;
  this.lastErrorHash = 'none';
}

var defaultOptions = {
  maxItems: 0,
  itemsPerMinute: 60
};

Rollbar.rateLimiter = new RateLimiter(defaultOptions);

Rollbar.prototype.global = function(options) {
  Rollbar.rateLimiter.configureGlobal(options);
  return this;
};

Rollbar.prototype.configure = function(options, payloadData) {
  var oldOptions = this.options;
  var payload = {};
  if (payloadData) {
    payload = {payload: payloadData};
  }
  this.options = _.merge(oldOptions, options, payload);
  this.notifier && this.notifier.configure(this.options);
  this.telemeter && this.telemeter.configure(this.options);
  this.global(this.options);
  return this;
};

Rollbar.prototype.log = function(item) {
  var level = this._defaultLogLevel();
  return this._log(level, item);
};

Rollbar.prototype.debug = function(item) {
  this._log('debug', item);
};

Rollbar.prototype.info = function(item) {
  this._log('info', item);
};

Rollbar.prototype.warn = function(item) {
  this._log('warning', item);
};

Rollbar.prototype.warning = function(item) {
  this._log('warning', item);
};

Rollbar.prototype.error = function(item) {
  this._log('error', item);
};

Rollbar.prototype.critical = function(item) {
  this._log('critical', item);
};

Rollbar.prototype.wait = function(callback) {
  this.queue.wait(callback);
};

Rollbar.prototype.captureEvent = function(type, metadata, level) {
  return this.telemeter.captureEvent(type, metadata, level);
};

Rollbar.prototype.captureDomContentLoaded = function(ts) {
  return this.telemeter.captureDomContentLoaded(ts);
};

Rollbar.prototype.captureLoad = function(ts) {
  return this.telemeter.captureLoad(ts);
};

Rollbar.prototype.buildJsonPayload = function(item) {
  return this.api.buildJsonPayload(item);
};

Rollbar.prototype.sendJsonPayload = function(jsonPayload) {
  this.api.postJsonPayload(jsonPayload);
};

/* Internal */

Rollbar.prototype._log = function(defaultLevel, item) {
  var callback;
  if (item.callback) {
    callback = item.callback;
    delete item.callback;
  }
  if (this.options.ignoreDuplicateErrors && this._sameAsLastError(item)) {
    if (callback) {
      var error = new Error('ignored identical item');
      error.item = item;
      callback(error);
    }
    return;
  }
  try {
    item.level = item.level || defaultLevel;
    this.telemeter._captureRollbarItem(item);
    item.telemetryEvents = this.telemeter.copyEvents();
    this.notifier.log(item, callback);
  } catch (e) {
    this.logger.error(e);
  }
};

Rollbar.prototype._defaultLogLevel = function() {
  return this.options.logLevel || 'debug';
};

Rollbar.prototype._sameAsLastError = function(item) {
  if (!item._isUncaught) {
    return false;
  }
  var itemHash = generateItemHash(item);
  if (this.lastErrorHash === itemHash) {
    return true;
  }
  this.lastError = item.err;
  this.lastErrorHash = itemHash;
  return false;
};

function generateItemHash(item) {
  var message = item.message || '';
  var stack = (item.err || {}).stack || String(item.err);
  return message + '::' + stack;
}

module.exports = Rollbar;


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

var _ = __webpack_require__(87);

/*
 * RateLimiter - an object that encapsulates the logic for counting items sent to Rollbar
 *
 * @param options - the same options that are accepted by configureGlobal offered as a convenience
 */
function RateLimiter(options) {
  this.startTime = _.now();
  this.counter = 0;
  this.perMinCounter = 0;
  this.platform = null;
  this.platformOptions = {};
  this.configureGlobal(options);
}

RateLimiter.globalSettings = {
  startTime: _.now(),
  maxItems: undefined,
  itemsPerMinute: undefined
};

/*
 * configureGlobal - set the global rate limiter options
 *
 * @param options - Only the following values are recognized:
 *    startTime: a timestamp of the form returned by (new Date()).getTime()
 *    maxItems: the maximum items
 *    itemsPerMinute: the max number of items to send in a given minute
 */
RateLimiter.prototype.configureGlobal = function(options) {
  if (options.startTime !== undefined) {
    RateLimiter.globalSettings.startTime = options.startTime;
  }
  if (options.maxItems !== undefined) {
    RateLimiter.globalSettings.maxItems = options.maxItems;
  }
  if (options.itemsPerMinute !== undefined) {
    RateLimiter.globalSettings.itemsPerMinute = options.itemsPerMinute;
  }
};

/*
 * shouldSend - determine if we should send a given item based on rate limit settings
 *
 * @param item - the item we are about to send
 * @returns An object with the following structure:
 *  error: (Error|null)
 *  shouldSend: bool
 *  payload: (Object|null)
 *  If shouldSend is false, the item passed as a parameter should not be sent to Rollbar, and
 *  exactly one of error or payload will be non-null. If error is non-null, the returned Error will
 *  describe the situation, but it means that we were already over a rate limit (either globally or
 *  per minute) when this item was checked. If error is null, and therefore payload is non-null, it
 *  means this item put us over the global rate limit and the payload should be sent to Rollbar in
 *  place of the passed in item.
 */
RateLimiter.prototype.shouldSend = function(item, now) {
  now = now || _.now();
  var elapsedTime = now - this.startTime;
  if (elapsedTime < 0 || elapsedTime >= 60000) {
    this.startTime = now;
    this.perMinCounter = 0;
  }

  var globalRateLimit = RateLimiter.globalSettings.maxItems;
  var globalRateLimitPerMin = RateLimiter.globalSettings.itemsPerMinute;

  if (checkRate(item, globalRateLimit, this.counter)) {
    return shouldSendValue(this.platform, this.platformOptions, globalRateLimit + ' max items reached', false);
  } else if (checkRate(item, globalRateLimitPerMin, this.perMinCounter)) {
    return shouldSendValue(this.platform, this.platformOptions, globalRateLimitPerMin + ' items per minute reached', false);
  }
  this.counter++;
  this.perMinCounter++;

  var shouldSend = !checkRate(item, globalRateLimit, this.counter);
  var perMinute = shouldSend;
  shouldSend = shouldSend && !checkRate(item, globalRateLimitPerMin, this.perMinCounter);
  return shouldSendValue(this.platform, this.platformOptions, null, shouldSend, globalRateLimit, globalRateLimitPerMin, perMinute);
};

RateLimiter.prototype.setPlatformOptions = function(platform, options) {
  this.platform = platform;
  this.platformOptions = options;
};

/* Helpers */

function checkRate(item, limit, counter) {
  return !item.ignoreRateLimit && limit >= 1 && counter > limit;
}

function shouldSendValue(platform, options, error, shouldSend, globalRateLimit, limitPerMin, perMinute) {
  var payload = null;
  if (error) {
    error = new Error(error);
  }
  if (!error && !shouldSend) {
    payload = rateLimitPayload(platform, options, globalRateLimit, limitPerMin, perMinute);
  }
  return {error: error, shouldSend: shouldSend, payload: payload};
}

function rateLimitPayload(platform, options, globalRateLimit, limitPerMin, perMinute) {
  var environment = options.environment || (options.payload && options.payload.environment);
  var msg;
  if (perMinute) {
    msg = 'item per minute limit reached, ignoring errors until timeout';
  } else {
    msg = 'maxItems has been hit, ignoring errors until reset.';
  }
  var item = {
    body: {
      message: {
        body: msg,
        extra: {
          maxItems: globalRateLimit,
          itemsPerMinute: limitPerMin
        }
      }
    },
    language: 'javascript',
    environment: environment,
    notifier: {
      version: (options.notifier && options.notifier.version) || options.version
    }
  };
  if (platform === 'browser') {
    item.platform = 'browser';
    item.framework = 'browser-js';
    item.notifier.name = 'rollbar-browser-js';
  } else if (platform === 'server') {
    item.framework = options.framework || 'node-js';
    item.notifier.name = options.notifier.name;
  } else if (platform === 'react-native') {
    item.framework = options.framework || 'react-native';
    item.notifier.name = options.notifier.name;
  }
  return item;
}

module.exports = RateLimiter;


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

var merge = __webpack_require__(88);

var RollbarJSON = {};
var __initRollbarJSON = false;
function setupJSON() {
  if (__initRollbarJSON) {
    return;
  }
  __initRollbarJSON = true;

  if (isDefined(JSON)) {
    if (isNativeFunction(JSON.stringify)) {
      RollbarJSON.stringify = JSON.stringify;
    }
    if (isNativeFunction(JSON.parse)) {
      RollbarJSON.parse = JSON.parse;
    }
  }
  if (!isFunction(RollbarJSON.stringify) || !isFunction(RollbarJSON.parse)) {
    var setupCustomJSON = __webpack_require__(89);
    setupCustomJSON(RollbarJSON);
  }
}
setupJSON();

/*
 * isType - Given a Javascript value and a string, returns true if the type of the value matches the
 * given string.
 *
 * @param x - any value
 * @param t - a lowercase string containing one of the following type names:
 *    - undefined
 *    - null
 *    - error
 *    - number
 *    - boolean
 *    - string
 *    - symbol
 *    - function
 *    - object
 *    - array
 * @returns true if x is of type t, otherwise false
 */
function isType(x, t) {
  return t === typeName(x);
}

/*
 * typeName - Given a Javascript value, returns the type of the object as a string
 */
function typeName(x) {
  var name = typeof x;
  if (name !== 'object') {
    return name;
  }
  if (!x) {
    return 'null';
  }
  if (x instanceof Error) {
    return 'error';
  }
  return ({}).toString.call(x).match(/\s([a-zA-Z]+)/)[1].toLowerCase();
}

/* isFunction - a convenience function for checking if a value is a function
 *
 * @param f - any value
 * @returns true if f is a function, otherwise false
 */
function isFunction(f) {
  return isType(f, 'function');
}

/* isNativeFunction - a convenience function for checking if a value is a native JS function
 *
 * @param f - any value
 * @returns true if f is a native JS function, otherwise false
 */
function isNativeFunction(f) {
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
  var funcMatchString = Function.prototype.toString.call(Object.prototype.hasOwnProperty)
    .replace(reRegExpChar, '\\$&')
    .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?');
  var reIsNative = RegExp('^' + funcMatchString + '$');
  return isObject(f) && reIsNative.test(f);
}

/* isObject - Checks if the argument is an object
 *
 * @param value - any value
 * @returns true is value is an object function is an object)
*/
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

/* isString - Checks if the argument is a string
 *
 * @param value - any value
 * @returns true if value is a string
*/
function isString(value) {
  return typeof value === 'string' || value instanceof String
}

/*
 * isDefined - a convenience function for checking if a value is not equal to undefined
 *
 * @param u - any value
 * @returns true if u is anything other than undefined
 */
function isDefined(u) {
  return !isType(u, 'undefined');
}

/*
 * isIterable - convenience function for checking if a value can be iterated, essentially
 * whether it is an object or an array.
 *
 * @param i - any value
 * @returns true if i is an object or an array as determined by `typeName`
 */
function isIterable(i) {
  var type = typeName(i);
  return (type === 'object' || type === 'array');
}

/*
 * isError - convenience function for checking if a value is of an error type
 *
 * @param e - any value
 * @returns true if e is an error
 */
function isError(e) {
  // Detect both Error and Firefox Exception type
  return isType(e, 'error') || isType(e, 'exception');
}

function traverse(obj, func, seen) {
  var k, v, i;
  var isObj = isType(obj, 'object');
  var isArray = isType(obj, 'array');
  var keys = [];

  if (isObj && seen.indexOf(obj) !== -1) {
    return obj;
  }
  seen.push(obj);

  if (isObj) {
    for (k in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, k)) {
        keys.push(k);
      }
    }
  } else if (isArray) {
    for (i = 0; i < obj.length; ++i) {
      keys.push(i);
    }
  }

  var result = isObj ? {} : [];
  var same = true;
  for (i = 0; i < keys.length; ++i) {
    k = keys[i];
    v = obj[k];
    result[k] = func(k, v, seen);
    same = same && result[k] === obj[k];
  }

  return (keys.length != 0 && !same) ? result : obj;
}

function redact() {
  return '********';
}

// from http://stackoverflow.com/a/8809472/1138191
function uuid4() {
  var d = now();
  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
    var r = (d + Math.random() * 16) % 16 | 0;
    d = Math.floor(d / 16);
    return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);
  });
  return uuid;
}

var LEVELS = {
  debug: 0,
  info: 1,
  warning: 2,
  error: 3,
  critical: 4
};

function sanitizeUrl(url) {
  var baseUrlParts = parseUri(url);
  if (!baseUrlParts) {
    return '(unknown)';
  }

  // remove a trailing # if there is no anchor
  if (baseUrlParts.anchor === '') {
    baseUrlParts.source = baseUrlParts.source.replace('#', '');
  }

  url = baseUrlParts.source.replace('?' + baseUrlParts.query, '');
  return url;
}

var parseUriOptions = {
  strictMode: false,
  key: [
    'source',
    'protocol',
    'authority',
    'userInfo',
    'user',
    'password',
    'host',
    'port',
    'relative',
    'path',
    'directory',
    'file',
    'query',
    'anchor'
  ],
  q: {
    name: 'queryKey',
    parser: /(?:^|&)([^&=]*)=?([^&]*)/g
  },
  parser: {
    strict: /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
    loose: /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
  }
};

function parseUri(str) {
  if (!isType(str, 'string')) {
    return undefined;
  }

  var o = parseUriOptions;
  var m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);
  var uri = {};

  for (var i = 0, l = o.key.length; i < l; ++i) {
    uri[o.key[i]] = m[i] || '';
  }

  uri[o.q.name] = {};
  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {
    if ($1) {
      uri[o.q.name][$1] = $2;
    }
  });

  return uri;
}

function addParamsAndAccessTokenToPath(accessToken, options, params) {
  params = params || {};
  params.access_token = accessToken;
  var paramsArray = [];
  var k;
  for (k in params) {
    if (Object.prototype.hasOwnProperty.call(params, k)) {
      paramsArray.push([k, params[k]].join('='));
    }
  }
  var query = '?' + paramsArray.sort().join('&');

  options = options || {};
  options.path = options.path || '';
  var qs = options.path.indexOf('?');
  var h = options.path.indexOf('#');
  var p;
  if (qs !== -1 && (h === -1 || h > qs)) {
    p = options.path;
    options.path = p.substring(0,qs) + query + '&' + p.substring(qs+1);
  } else {
    if (h !== -1) {
      p = options.path;
      options.path = p.substring(0,h) + query + p.substring(h);
    } else {
      options.path = options.path + query;
    }
  }
}

function formatUrl(u, protocol) {
  protocol = protocol || u.protocol;
  if (!protocol && u.port) {
    if (u.port === 80) {
      protocol = 'http:';
    } else if (u.port === 443) {
      protocol = 'https:';
    }
  }
  protocol = protocol || 'https:';

  if (!u.hostname) {
    return null;
  }
  var result = protocol + '//' + u.hostname;
  if (u.port) {
    result = result + ':' + u.port;
  }
  if (u.path) {
    result = result + u.path;
  }
  return result;
}

function stringify(obj, backup) {
  var value, error;
  try {
    value = RollbarJSON.stringify(obj);
  } catch (jsonError) {
    if (backup && isFunction(backup)) {
      try {
        value = backup(obj);
      } catch (backupError) {
        error = backupError;
      }
    } else {
      error = jsonError;
    }
  }
  return {error: error, value: value};
}

function maxByteSize(string) {
  // The transport will use utf-8, so assume utf-8 encoding.
  //
  // This minimal implementation will accurately count bytes for all UCS-2 and
  // single code point UTF-16. If presented with multi code point UTF-16,
  // which should be rare, it will safely overcount, not undercount.
  //
  // While robust utf-8 encoders exist, this is far smaller and far more performant.
  // For quickly counting payload size for truncation, smaller is better.

  var count = 0;
  var length = string.length;

  for (var i = 0; i < length; i++) {
    var code = string.charCodeAt(i);
    if (code < 128) { // up to 7 bits
      count = count + 1;
    } else if (code < 2048) { // up to 11 bits
      count = count + 2;
    } else if (code < 65536) { // up to 16 bits
      count = count + 3;
    }
  }

  return count;
}

function jsonParse(s) {
  var value, error;
  try {
    value = RollbarJSON.parse(s);
  } catch (e) {
    error = e;
  }
  return {error: error, value: value};
}

function makeUnhandledStackInfo(
  message,
  url,
  lineno,
  colno,
  error,
  mode,
  backupMessage,
  errorParser
) {
  var location = {
    url: url || '',
    line: lineno,
    column: colno
  };
  location.func = errorParser.guessFunctionName(location.url, location.line);
  location.context = errorParser.gatherContext(location.url, location.line);
  var href = document && document.location && document.location.href;
  var useragent = window && window.navigator && window.navigator.userAgent;
  return {
    'mode': mode,
    'message': error ? String(error) : (message || backupMessage),
    'url': href,
    'stack': [location],
    'useragent': useragent
  };
}

function wrapCallback(logger, f) {
  return function(err, resp) {
    try {
      f(err, resp);
    } catch (e) {
      logger.error(e);
    }
  };
}

function createItem(args, logger, notifier, requestKeys, lambdaContext) {
  var message, err, custom, callback, request;
  var arg;
  var extraArgs = [];
  var diagnostic = {};

  for (var i = 0, l = args.length; i < l; ++i) {
    arg = args[i];

    var typ = typeName(arg);
    switch (typ) {
      case 'undefined':
        break;
      case 'string':
        message ? extraArgs.push(arg) : message = arg;
        break;
      case 'function':
        callback = wrapCallback(logger, arg);
        break;
      case 'date':
        extraArgs.push(arg);
        break;
      case 'error':
      case 'domexception':
      case 'exception': // Firefox Exception type
        err ? extraArgs.push(arg) : err = arg;
        break;
      case 'object':
      case 'array':
        if (arg instanceof Error || (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {
          err ? extraArgs.push(arg) : err = arg;
          break;
        }
        if (requestKeys && typ === 'object' && !request) {
          for (var j = 0, len = requestKeys.length; j < len; ++j) {
            if (arg[requestKeys[j]] !== undefined) {
              request = arg;
              break;
            }
          }
          if (request) {
            break;
          }
        }
        custom ? extraArgs.push(arg) : custom = arg;
        break;
      default:
        if (arg instanceof Error || (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {
          err ? extraArgs.push(arg) : err = arg;
          break;
        }
        extraArgs.push(arg);
    }
  }

  if (extraArgs.length > 0) {
    // if custom is an array this turns it into an object with integer keys
    custom = merge(custom);
    custom.extraArgs = extraArgs;
  }

  var item = {
    message: message,
    err: err,
    custom: custom,
    timestamp: now(),
    callback: callback,
    notifier: notifier,
    diagnostic: diagnostic,
    uuid: uuid4()
  };

  setCustomItemKeys(item, custom);

  if (requestKeys && request) {
    item.request = request;
  }
  if (lambdaContext) {
    item.lambdaContext = lambdaContext;
  }
  item._originalArgs = args;
  return item;
}

function setCustomItemKeys(item, custom) {
  if (custom && custom.level !== undefined) {
    item.level = custom.level;
    delete custom.level;
  }
  if (custom && custom.skipFrames !== undefined) {
    item.skipFrames = custom.skipFrames;
    delete custom.skipFrames;
  }
}

var TELEMETRY_TYPES = ['log', 'network', 'dom', 'navigation', 'error', 'manual'];
var TELEMETRY_LEVELS = ['critical', 'error', 'warning', 'info', 'debug'];

function arrayIncludes(arr, val) {
  for (var k = 0; k < arr.length; ++k) {
    if (arr[k] === val) {
      return true;
    }
  }

  return false;
}

function createTelemetryEvent(args) {
  var type, metadata, level;
  var arg;

  for (var i = 0, l = args.length; i < l; ++i) {
    arg = args[i];

    var typ = typeName(arg);
    switch (typ) {
      case 'string':
        if (!type && arrayIncludes(TELEMETRY_TYPES, arg)) {
          type = arg;
        } else if (!level && arrayIncludes(TELEMETRY_LEVELS, arg)) {
          level = arg;
        }
        break;
      case 'object':
        metadata = arg;
        break;
      default:
        break;
    }
  }
  var event = {
    type: type || 'manual',
    metadata: metadata || {},
    level: level
  };

  return event;
}

/*
 * get - given an obj/array and a keypath, return the value at that keypath or
 *       undefined if not possible.
 *
 * @param obj - an object or array
 * @param path - a string of keys separated by '.' such as 'plugin.jquery.0.message'
 *    which would correspond to 42 in `{plugin: {jquery: [{message: 42}]}}`
 */
function get(obj, path) {
  if (!obj) {
    return undefined;
  }
  var keys = path.split('.');
  var result = obj;
  try {
    for (var i = 0, len = keys.length; i < len; ++i) {
      result = result[keys[i]];
    }
  } catch (e) {
    result = undefined;
  }
  return result;
}

function set(obj, path, value) {
  if (!obj) {
    return;
  }
  var keys = path.split('.');
  var len = keys.length;
  if (len < 1) {
    return;
  }
  if (len === 1) {
    obj[keys[0]] = value;
    return;
  }
  try {
    var temp = obj[keys[0]] || {};
    var replacement = temp;
    for (var i = 1; i < len - 1; ++i) {
      temp[keys[i]] = temp[keys[i]] || {};
      temp = temp[keys[i]];
    }
    temp[keys[len-1]] = value;
    obj[keys[0]] = replacement;
  } catch (e) {
    return;
  }
}

function scrub(data, scrubFields) {
  scrubFields = scrubFields || [];
  var paramRes = _getScrubFieldRegexs(scrubFields);
  var queryRes = _getScrubQueryParamRegexs(scrubFields);

  function redactQueryParam(dummy0, paramPart) {
    return paramPart + redact();
  }

  function paramScrubber(v) {
    var i;
    if (isType(v, 'string')) {
      for (i = 0; i < queryRes.length; ++i) {
        v = v.replace(queryRes[i], redactQueryParam);
      }
    }
    return v;
  }

  function valScrubber(k, v) {
    var i;
    for (i = 0; i < paramRes.length; ++i) {
      if (paramRes[i].test(k)) {
        v = redact();
        break;
      }
    }
    return v;
  }

  function scrubber(k, v, seen) {
    var tmpV = valScrubber(k, v);
    if (tmpV === v) {
      if (isType(v, 'object') || isType(v, 'array')) {
        return traverse(v, scrubber, seen);
      }
      return paramScrubber(tmpV);
    } else {
      return tmpV;
    }
  }

  return traverse(data, scrubber, []);
}

function _getScrubFieldRegexs(scrubFields) {
  var ret = [];
  var pat;
  for (var i = 0; i < scrubFields.length; ++i) {
    pat = '^\\[?(%5[bB])?' + scrubFields[i] + '\\[?(%5[bB])?\\]?(%5[dD])?$';
    ret.push(new RegExp(pat, 'i'));
  }
  return ret;
}


function _getScrubQueryParamRegexs(scrubFields) {
  var ret = [];
  var pat;
  for (var i = 0; i < scrubFields.length; ++i) {
    pat = '\\[?(%5[bB])?' + scrubFields[i] + '\\[?(%5[bB])?\\]?(%5[dD])?';
    ret.push(new RegExp('(' + pat + '=)([^&\\n]+)', 'igm'));
  }
  return ret;
}

function formatArgsAsString(args) {
  var i, len, arg;
  var result = [];
  for (i = 0, len = args.length; i < len; ++i) {
    arg = args[i];
    switch (typeName(arg)) {
      case 'object':
        arg = stringify(arg);
        arg = arg.error || arg.value;
        if (arg.length > 500) {
          arg = arg.substr(0, 497) + '...';
        }
        break;
      case 'null':
        arg = 'null';
        break;
      case 'undefined':
        arg = 'undefined';
        break;
      case 'symbol':
        arg = arg.toString();
        break;
    }
    result.push(arg);
  }
  return result.join(' ');
}

function now() {
  if (Date.now) {
    return +Date.now();
  }
  return +new Date();
}

function filterIp(requestData, captureIp) {
  if (!requestData || !requestData['user_ip'] || captureIp === true) {
    return;
  }
  var newIp = requestData['user_ip'];
  if (!captureIp) {
    newIp = null;
  } else {
    try {
      var parts;
      if (newIp.indexOf('.') !== -1) {
        parts = newIp.split('.');
        parts.pop();
        parts.push('0');
        newIp = parts.join('.');
      } else if (newIp.indexOf(':') !== -1) {
        parts = newIp.split(':');
        if (parts.length > 2) {
          var beginning = parts.slice(0, 3);
          var slashIdx = beginning[2].indexOf('/');
          if (slashIdx !== -1) {
            beginning[2] = beginning[2].substring(0, slashIdx);
          }
          var terminal = '0000:0000:0000:0000:0000';
          newIp = beginning.concat(terminal).join(':');
        }
      } else {
        newIp = null;
      }
    } catch (e) {
      newIp = null;
    }
  }
  requestData['user_ip'] = newIp;
}

function handleOptions(current, input, payload) {
  var result = merge(current, input, payload);
  if (!input || input.overwriteScrubFields) {
    return result;
  }
  if (input.scrubFields) {
    result.scrubFields = (current.scrubFields || []).concat(input.scrubFields);
  }
  return result;
}

module.exports = {
  addParamsAndAccessTokenToPath: addParamsAndAccessTokenToPath,
  createItem: createItem,
  createTelemetryEvent: createTelemetryEvent,
  filterIp: filterIp,
  formatArgsAsString: formatArgsAsString,
  formatUrl: formatUrl,
  get: get,
  handleOptions: handleOptions,
  isError: isError,
  isFunction: isFunction,
  isIterable: isIterable,
  isNativeFunction: isNativeFunction,
  isType: isType,
  isObject: isObject,
  isString: isString,
  jsonParse: jsonParse,
  LEVELS: LEVELS,
  makeUnhandledStackInfo: makeUnhandledStackInfo,
  merge: merge,
  now: now,
  redact: redact,
  sanitizeUrl: sanitizeUrl,
  scrub: scrub,
  set: set,
  stringify: stringify,
  maxByteSize: maxByteSize,
  traverse: traverse,
  typeName: typeName,
  uuid4: uuid4
};


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hasOwn = Object.prototype.hasOwnProperty;
var toStr = Object.prototype.toString;

var isPlainObject = function isPlainObject(obj) {
	if (!obj || toStr.call(obj) !== '[object Object]') {
		return false;
	}

	var hasOwnConstructor = hasOwn.call(obj, 'constructor');
	var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
	// Not own constructor property must be Object
	if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
		return false;
	}

	// Own properties are enumerated firstly, so to speed up,
	// if last one is own, then all properties are own.
	var key;
	for (key in obj) {/**/}

	return typeof key === 'undefined' || hasOwn.call(obj, key);
};

function merge() {
  var i, src, copy, clone, name,
      result = {},
     current = null,
      length = arguments.length;

  for (i=0; i < length; i++) {
    current = arguments[i];
    if (current == null) {
      continue;
    }

    for (name in current) {
      src = result[name];
      copy = current[name];
      if (result !== copy) {
        if (copy && isPlainObject(copy)) {
          clone = src && isPlainObject(src) ? src : {};
          result[name] = merge(clone, copy);
        } else if (typeof copy !== 'undefined') {
          result[name] = copy;
        }
      }
    }
  }
  return result;
}

module.exports = merge;


/***/ }),
/* 89 */
/***/ (function(module, exports) {

//  json3.js
//  2017-02-21
//  Public Domain.
//  NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.
//  See http://www.JSON.org/js.html
//  This code should be minified before deployment.
//  See http://javascript.crockford.com/jsmin.html

//  USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO
//  NOT CONTROL.

//  This file creates a global JSON object containing two methods: stringify
//  and parse. This file provides the ES5 JSON capability to ES3 systems.
//  If a project might run on IE8 or earlier, then this file should be included.
//  This file does nothing on ES5 systems.

//      JSON.stringify(value, replacer, space)
//          value       any JavaScript value, usually an object or array.
//          replacer    an optional parameter that determines how object
//                      values are stringified for objects. It can be a
//                      function or an array of strings.
//          space       an optional parameter that specifies the indentation
//                      of nested structures. If it is omitted, the text will
//                      be packed without extra whitespace. If it is a number,
//                      it will specify the number of spaces to indent at each
//                      level. If it is a string (such as "\t" or "&nbsp;"),
//                      it contains the characters used to indent at each level.
//          This method produces a JSON text from a JavaScript value.
//          When an object value is found, if the object contains a toJSON
//          method, its toJSON method will be called and the result will be
//          stringified. A toJSON method does not serialize: it returns the
//          value represented by the name/value pair that should be serialized,
//          or undefined if nothing should be serialized. The toJSON method
//          will be passed the key associated with the value, and this will be
//          bound to the value.

//          For example, this would serialize Dates as ISO strings.

//              Date.prototype.toJSON = function (key) {
//                  function f(n) {
//                      // Format integers to have at least two digits.
//                      return (n < 10)
//                          ? "0" + n
//                          : n;
//                  }
//                  return this.getUTCFullYear()   + "-" +
//                       f(this.getUTCMonth() + 1) + "-" +
//                       f(this.getUTCDate())      + "T" +
//                       f(this.getUTCHours())     + ":" +
//                       f(this.getUTCMinutes())   + ":" +
//                       f(this.getUTCSeconds())   + "Z";
//              };

//          You can provide an optional replacer method. It will be passed the
//          key and value of each member, with this bound to the containing
//          object. The value that is returned from your method will be
//          serialized. If your method returns undefined, then the member will
//          be excluded from the serialization.

//          If the replacer parameter is an array of strings, then it will be
//          used to select the members to be serialized. It filters the results
//          such that only members with keys listed in the replacer array are
//          stringified.

//          Values that do not have JSON representations, such as undefined or
//          functions, will not be serialized. Such values in objects will be
//          dropped; in arrays they will be replaced with null. You can use
//          a replacer function to replace those with JSON values.

//          JSON.stringify(undefined) returns undefined.

//          The optional space parameter produces a stringification of the
//          value that is filled with line breaks and indentation to make it
//          easier to read.

//          If the space parameter is a non-empty string, then that string will
//          be used for indentation. If the space parameter is a number, then
//          the indentation will be that many spaces.

//          Example:

//          text = JSON.stringify(["e", {pluribus: "unum"}]);
//          // text is '["e",{"pluribus":"unum"}]'

//          text = JSON.stringify(["e", {pluribus: "unum"}], null, "\t");
//          // text is '[\n\t"e",\n\t{\n\t\t"pluribus": "unum"\n\t}\n]'

//          text = JSON.stringify([new Date()], function (key, value) {
//              return this[key] instanceof Date
//                  ? "Date(" + this[key] + ")"
//                  : value;
//          });
//          // text is '["Date(---current time---)"]'

//      JSON.parse(text, reviver)
//          This method parses a JSON text to produce an object or array.
//          It can throw a SyntaxError exception.
//          This has been modified to use JSON-js/json_parse_state.js as the
//          parser instead of the one built around eval found in JSON-js/json2.js

//          The optional reviver parameter is a function that can filter and
//          transform the results. It receives each of the keys and values,
//          and its return value is used instead of the original value.
//          If it returns what it received, then the structure is not modified.
//          If it returns undefined then the member is deleted.

//          Example:

//          // Parse the text. Values that look like ISO date strings will
//          // be converted to Date objects.

//          myData = JSON.parse(text, function (key, value) {
//              var a;
//              if (typeof value === "string") {
//                  a =
//   /^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)Z$/.exec(value);
//                  if (a) {
//                      return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],
//                          +a[5], +a[6]));
//                  }
//              }
//              return value;
//          });

//          myData = JSON.parse('["Date(09/09/2001)"]', function (key, value) {
//              var d;
//              if (typeof value === "string" &&
//                      value.slice(0, 5) === "Date(" &&
//                      value.slice(-1) === ")") {
//                  d = new Date(value.slice(5, -1));
//                  if (d) {
//                      return d;
//                  }
//              }
//              return value;
//          });

//  This is a reference implementation. You are free to copy, modify, or
//  redistribute.

/*jslint
  for, this
  */

/*property
  JSON, apply, call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,
  getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,
  lastIndex, length, parse, prototype, push, replace, slice, stringify,
  test, toJSON, toString, valueOf
  */

var setupCustomJSON = function(JSON) {

  var rx_one = /^[\],:{}\s]*$/;
  var rx_two = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
  var rx_three = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var rx_four = /(?:^|:|,)(?:\s*\[)+/g;
  var rx_escapable = /[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
  var rx_dangerous = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;

  function f(n) {
    // Format integers to have at least two digits.
    return n < 10
      ? "0" + n
      : n;
  }

  function this_value() {
    return this.valueOf();
  }

  if (typeof Date.prototype.toJSON !== "function") {

    Date.prototype.toJSON = function () {

      return isFinite(this.valueOf())
        ? this.getUTCFullYear() + "-" +
        f(this.getUTCMonth() + 1) + "-" +
        f(this.getUTCDate()) + "T" +
        f(this.getUTCHours()) + ":" +
        f(this.getUTCMinutes()) + ":" +
        f(this.getUTCSeconds()) + "Z"
        : null;
    };

    Boolean.prototype.toJSON = this_value;
    Number.prototype.toJSON = this_value;
    String.prototype.toJSON = this_value;
  }

  var gap;
  var indent;
  var meta;
  var rep;


  function quote(string) {

    // If the string contains no control characters, no quote characters, and no
    // backslash characters, then we can safely slap some quotes around it.
    // Otherwise we must also replace the offending characters with safe escape
    // sequences.

    rx_escapable.lastIndex = 0;
    return rx_escapable.test(string)
      ? "\"" + string.replace(rx_escapable, function (a) {
        var c = meta[a];
        return typeof c === "string"
          ? c
          : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
      }) + "\""
    : "\"" + string + "\"";
  }


  function str(key, holder) {

    // Produce a string from holder[key].

    var i;          // The loop counter.
    var k;          // The member key.
    var v;          // The member value.
    var length;
    var mind = gap;
    var partial;
    var value = holder[key];

    // If the value has a toJSON method, call it to obtain a replacement value.

    if (value && typeof value === "object" &&
        typeof value.toJSON === "function") {
      value = value.toJSON(key);
    }

    // If we were called with a replacer function, then call the replacer to
    // obtain a replacement value.

    if (typeof rep === "function") {
      value = rep.call(holder, key, value);
    }

    // What happens next depends on the value's type.

    switch (typeof value) {
      case "string":
        return quote(value);

      case "number":

        // JSON numbers must be finite. Encode non-finite numbers as null.

        return isFinite(value)
          ? String(value)
          : "null";

      case "boolean":
      case "null":

        // If the value is a boolean or null, convert it to a string. Note:
        // typeof null does not produce "null". The case is included here in
        // the remote chance that this gets fixed someday.

        return String(value);

        // If the type is "object", we might be dealing with an object or an array or
        // null.

      case "object":

        // Due to a specification blunder in ECMAScript, typeof null is "object",
        // so watch out for that case.

        if (!value) {
          return "null";
        }

        // Make an array to hold the partial results of stringifying this object value.

        gap += indent;
        partial = [];

        // Is the value an array?

        if (Object.prototype.toString.apply(value) === "[object Array]") {

          // The value is an array. Stringify every element. Use null as a placeholder
          // for non-JSON values.

          length = value.length;
          for (i = 0; i < length; i += 1) {
            partial[i] = str(i, value) || "null";
          }

          // Join all of the elements together, separated with commas, and wrap them in
          // brackets.

          v = partial.length === 0
            ? "[]"
            : gap
            ? "[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]"
            : "[" + partial.join(",") + "]";
          gap = mind;
          return v;
        }

        // If the replacer is an array, use it to select the members to be stringified.

        if (rep && typeof rep === "object") {
          length = rep.length;
          for (i = 0; i < length; i += 1) {
            if (typeof rep[i] === "string") {
              k = rep[i];
              v = str(k, value);
              if (v) {
                partial.push(quote(k) + (
                      gap
                      ? ": "
                      : ":"
                      ) + v);
              }
            }
          }
        } else {

          // Otherwise, iterate through all of the keys in the object.

          for (k in value) {
            if (Object.prototype.hasOwnProperty.call(value, k)) {
              v = str(k, value);
              if (v) {
                partial.push(quote(k) + (
                      gap
                      ? ": "
                      : ":"
                      ) + v);
              }
            }
          }
        }

        // Join all of the member texts together, separated with commas,
        // and wrap them in braces.

        v = partial.length === 0
          ? "{}"
          : gap
          ? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}"
          : "{" + partial.join(",") + "}";
        gap = mind;
        return v;
    }
  }

  // If the JSON object does not yet have a stringify method, give it one.

  if (typeof JSON.stringify !== "function") {
    meta = {    // table of character substitutions
      "\b": "\\b",
      "\t": "\\t",
      "\n": "\\n",
      "\f": "\\f",
      "\r": "\\r",
      "\"": "\\\"",
      "\\": "\\\\"
    };
    JSON.stringify = function (value, replacer, space) {

      // The stringify method takes a value and an optional replacer, and an optional
      // space parameter, and returns a JSON text. The replacer can be a function
      // that can replace values, or an array of strings that will select the keys.
      // A default replacer method can be provided. Use of the space parameter can
      // produce text that is more easily readable.

      var i;
      gap = "";
      indent = "";

      // If the space parameter is a number, make an indent string containing that
      // many spaces.

      if (typeof space === "number") {
        for (i = 0; i < space; i += 1) {
          indent += " ";
        }

        // If the space parameter is a string, it will be used as the indent string.

      } else if (typeof space === "string") {
        indent = space;
      }

      // If there is a replacer, it must be a function or an array.
      // Otherwise, throw an error.

      rep = replacer;
      if (replacer && typeof replacer !== "function" &&
          (typeof replacer !== "object" ||
           typeof replacer.length !== "number")) {
        throw new Error("JSON.stringify");
      }

      // Make a fake root object containing our value under the key of "".
      // Return the result of stringifying the value.

      return str("", {"": value});
    };
  }


  // If the JSON object does not yet have a parse method, give it one.

  if (typeof JSON.parse !== "function") {
    JSON.parse = (function () {

      // This function creates a JSON parse function that uses a state machine rather
      // than the dangerous eval function to parse a JSON text.

      var state;      // The state of the parser, one of
      // 'go'         The starting state
      // 'ok'         The final, accepting state
      // 'firstokey'  Ready for the first key of the object or
      //              the closing of an empty object
      // 'okey'       Ready for the next key of the object
      // 'colon'      Ready for the colon
      // 'ovalue'     Ready for the value half of a key/value pair
      // 'ocomma'     Ready for a comma or closing }
      // 'firstavalue' Ready for the first value of an array or
      //              an empty array
      // 'avalue'     Ready for the next value of an array
      // 'acomma'     Ready for a comma or closing ]
      var stack;      // The stack, for controlling nesting.
      var container;  // The current container object or array
      var key;        // The current key
      var value;      // The current value
      var escapes = { // Escapement translation table
        "\\": "\\",
        "\"": "\"",
        "/": "/",
        "t": "\t",
        "n": "\n",
        "r": "\r",
        "f": "\f",
        "b": "\b"
      };
      var string = {   // The actions for string tokens
        go: function () {
          state = "ok";
        },
        firstokey: function () {
          key = value;
          state = "colon";
        },
        okey: function () {
          key = value;
          state = "colon";
        },
        ovalue: function () {
          state = "ocomma";
        },
        firstavalue: function () {
          state = "acomma";
        },
        avalue: function () {
          state = "acomma";
        }
      };
      var number = {   // The actions for number tokens
        go: function () {
          state = "ok";
        },
        ovalue: function () {
          state = "ocomma";
        },
        firstavalue: function () {
          state = "acomma";
        },
        avalue: function () {
          state = "acomma";
        }
      };
      var action = {

        // The action table describes the behavior of the machine. It contains an
        // object for each token. Each object contains a method that is called when
        // a token is matched in a state. An object will lack a method for illegal
        // states.

        "{": {
          go: function () {
            stack.push({state: "ok"});
            container = {};
            state = "firstokey";
          },
          ovalue: function () {
            stack.push({container: container, state: "ocomma", key: key});
            container = {};
            state = "firstokey";
          },
          firstavalue: function () {
            stack.push({container: container, state: "acomma"});
            container = {};
            state = "firstokey";
          },
          avalue: function () {
            stack.push({container: container, state: "acomma"});
            container = {};
            state = "firstokey";
          }
        },
        "}": {
          firstokey: function () {
            var pop = stack.pop();
            value = container;
            container = pop.container;
            key = pop.key;
            state = pop.state;
          },
          ocomma: function () {
            var pop = stack.pop();
            container[key] = value;
            value = container;
            container = pop.container;
            key = pop.key;
            state = pop.state;
          }
        },
        "[": {
          go: function () {
            stack.push({state: "ok"});
            container = [];
            state = "firstavalue";
          },
          ovalue: function () {
            stack.push({container: container, state: "ocomma", key: key});
            container = [];
            state = "firstavalue";
          },
          firstavalue: function () {
            stack.push({container: container, state: "acomma"});
            container = [];
            state = "firstavalue";
          },
          avalue: function () {
            stack.push({container: container, state: "acomma"});
            container = [];
            state = "firstavalue";
          }
        },
        "]": {
          firstavalue: function () {
            var pop = stack.pop();
            value = container;
            container = pop.container;
            key = pop.key;
            state = pop.state;
          },
          acomma: function () {
            var pop = stack.pop();
            container.push(value);
            value = container;
            container = pop.container;
            key = pop.key;
            state = pop.state;
          }
        },
        ":": {
          colon: function () {
            if (Object.hasOwnProperty.call(container, key)) {
              throw new SyntaxError("Duplicate key '" + key + "\"");
            }
            state = "ovalue";
          }
        },
        ",": {
          ocomma: function () {
            container[key] = value;
            state = "okey";
          },
          acomma: function () {
            container.push(value);
            state = "avalue";
          }
        },
        "true": {
          go: function () {
            value = true;
            state = "ok";
          },
          ovalue: function () {
            value = true;
            state = "ocomma";
          },
          firstavalue: function () {
            value = true;
            state = "acomma";
          },
          avalue: function () {
            value = true;
            state = "acomma";
          }
        },
        "false": {
          go: function () {
            value = false;
            state = "ok";
          },
          ovalue: function () {
            value = false;
            state = "ocomma";
          },
          firstavalue: function () {
            value = false;
            state = "acomma";
          },
          avalue: function () {
            value = false;
            state = "acomma";
          }
        },
        "null": {
          go: function () {
            value = null;
            state = "ok";
          },
          ovalue: function () {
            value = null;
            state = "ocomma";
          },
          firstavalue: function () {
            value = null;
            state = "acomma";
          },
          avalue: function () {
            value = null;
            state = "acomma";
          }
        }
      };

      function debackslashify(text) {

        // Remove and replace any backslash escapement.

        return text.replace(/\\(?:u(.{4})|([^u]))/g, function (ignore, b, c) {
          return b
            ? String.fromCharCode(parseInt(b, 16))
            : escapes[c];
        });
      }

      return function (source, reviver) {

        // A regular expression is used to extract tokens from the JSON text.
        // The extraction process is cautious.

        var result;
        var tx = /^[\u0020\t\n\r]*(?:([,:\[\]{}]|true|false|null)|(-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)|"((?:[^\r\n\t\\\"]|\\(?:["\\\/trnfb]|u[0-9a-fA-F]{4}))*)")/;

        // Set the starting state.

        state = "go";

        // The stack records the container, key, and state for each object or array
        // that contains another object or array while processing nested structures.

        stack = [];

        // If any error occurs, we will catch it and ultimately throw a syntax error.

        try {

          // For each token...

          while (true) {
            result = tx.exec(source);
            if (!result) {
              break;
            }

            // result is the result array from matching the tokenizing regular expression.
            //  result[0] contains everything that matched, including any initial whitespace.
            //  result[1] contains any punctuation that was matched, or true, false, or null.
            //  result[2] contains a matched number, still in string form.
            //  result[3] contains a matched string, without quotes but with escapement.

            if (result[1]) {

              // Token: Execute the action for this state and token.

              action[result[1]][state]();

            } else if (result[2]) {

              // Number token: Convert the number string into a number value and execute
              // the action for this state and number.

              value = +result[2];
              number[state]();
            } else {

              // String token: Replace the escapement sequences and execute the action for
              // this state and string.

              value = debackslashify(result[3]);
              string[state]();
            }

            // Remove the token from the string. The loop will continue as long as there
            // are tokens. This is a slow process, but it allows the use of ^ matching,
            // which assures that no illegal tokens slip through.

            source = source.slice(result[0].length);
          }

          // If we find a state/token combination that is illegal, then the action will
          // cause an error. We handle the error by simply changing the state.

        } catch (e) {
          state = e;
        }

        // The parsing is finished. If we are not in the final "ok" state, or if the
        // remaining source contains anything except whitespace, then we did not have
        //a well-formed JSON text.

        if (state !== "ok" || (/[^\u0020\t\n\r]/.test(source))) {
          throw (state instanceof SyntaxError)
            ? state
            : new SyntaxError("JSON");
        }

        // If there is a reviver function, we recursively walk the new structure,
        // passing each name/value pair to the reviver function for possible
        // transformation, starting with a temporary root object that holds the current
        // value in an empty key. If there is not a reviver function, we simply return
        // that value.

        return (typeof reviver === "function")
          ? (function walk(holder, key) {
            var k;
            var v;
            var val = holder[key];
            if (val && typeof val === "object") {
              for (k in value) {
                if (Object.prototype.hasOwnProperty.call(val, k)) {
                  v = walk(val, k);
                  if (v !== undefined) {
                    val[k] = v;
                  } else {
                    delete val[k];
                  }
                }
              }
            }
            return reviver.call(holder, key, val);
          }({"": value}, ""))
        : value;
      };
    }());
  }
}

module.exports = setupCustomJSON;


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

var _ = __webpack_require__(87);

/*
 * Queue - an object which handles which handles a queue of items to be sent to Rollbar.
 *   This object handles rate limiting via a passed in rate limiter, retries based on connection
 *   errors, and filtering of items based on a set of configurable predicates. The communication to
 *   the backend is performed via a given API object.
 *
 * @param rateLimiter - An object which conforms to the interface
 *    rateLimiter.shouldSend(item) -> bool
 * @param api - An object which conforms to the interface
 *    api.postItem(payload, function(err, response))
 * @param logger - An object used to log verbose messages if desired
 * @param options - see Queue.prototype.configure
 */
function Queue(rateLimiter, api, logger, options) {
  this.rateLimiter = rateLimiter;
  this.api = api;
  this.logger = logger;
  this.options = options;
  this.predicates = [];
  this.pendingItems = [];
  this.pendingRequests = [];
  this.retryQueue = [];
  this.retryHandle = null;
  this.waitCallback = null;
  this.waitIntervalID = null;
}

/*
 * configure - updates the options this queue uses
 *
 * @param options
 */
Queue.prototype.configure = function(options) {
  this.api && this.api.configure(options);
  var oldOptions = this.options;
  this.options = _.merge(oldOptions, options);
  return this;
};

/*
 * addPredicate - adds a predicate to the end of the list of predicates for this queue
 *
 * @param predicate - function(item, options) -> (bool|{err: Error})
 *  Returning true means that this predicate passes and the item is okay to go on the queue
 *  Returning false means do not add the item to the queue, but it is not an error
 *  Returning {err: Error} means do not add the item to the queue, and the given error explains why
 *  Returning {err: undefined} is equivalent to returning true but don't do that
 */
Queue.prototype.addPredicate = function(predicate) {
  if (_.isFunction(predicate)) {
    this.predicates.push(predicate);
  }
  return this;
};

Queue.prototype.addPendingItem = function(item) {
  this.pendingItems.push(item);
};

Queue.prototype.removePendingItem = function(item) {
  var idx = this.pendingItems.indexOf(item);
  if (idx !== -1) {
    this.pendingItems.splice(idx, 1);
  }
};

/*
 * addItem - Send an item to the Rollbar API if all of the predicates are satisfied
 *
 * @param item - The payload to send to the backend
 * @param callback - function(error, repsonse) which will be called with the response from the API
 *  in the case of a success, otherwise response will be null and error will have a value. If both
 *  error and response are null then the item was stopped by a predicate which did not consider this
 *  to be an error condition, but nonetheless did not send the item to the API.
 *  @param originalError - The original error before any transformations that is to be logged if any
 */
Queue.prototype.addItem = function(item, callback, originalError, originalItem) {
  if (!callback || !_.isFunction(callback)) {
    callback = function() { return; };
  }
  var predicateResult = this._applyPredicates(item);
  if (predicateResult.stop) {
    this.removePendingItem(originalItem);
    callback(predicateResult.err);
    return;
  }
  this._maybeLog(item, originalError);
  this.removePendingItem(originalItem);
  if (!this.options.transmit) {
    callback(new Error('Transmit disabled'));
    return;
  }
  this.pendingRequests.push(item);
  try {
    this._makeApiRequest(item, function(err, resp) {
      this._dequeuePendingRequest(item);
      callback(err, resp);
    }.bind(this));
  } catch (e) {
    this._dequeuePendingRequest(item);
    callback(e);
  }
};

/*
 * wait - Stop any further errors from being added to the queue, and get called back when all items
 *   currently processing have finished sending to the backend.
 *
 * @param callback - function() called when all pending items have been sent
 */
Queue.prototype.wait = function(callback) {
  if (!_.isFunction(callback)) {
    return;
  }
  this.waitCallback = callback;
  if (this._maybeCallWait()) {
    return;
  }
  if (this.waitIntervalID) {
    this.waitIntervalID = clearInterval(this.waitIntervalID);
  }
  this.waitIntervalID = setInterval(function() {
    this._maybeCallWait();
  }.bind(this), 500);
};

/* _applyPredicates - Sequentially applies the predicates that have been added to the queue to the
 *   given item with the currently configured options.
 *
 * @param item - An item in the queue
 * @returns {stop: bool, err: (Error|null)} - stop being true means do not add item to the queue,
 *   the error value should be passed up to a callbak if we are stopping.
 */
Queue.prototype._applyPredicates = function(item) {
  var p = null;
  for (var i = 0, len = this.predicates.length; i < len; i++) {
    p = this.predicates[i](item, this.options);
    if (!p || p.err !== undefined) {
      return {stop: true, err: p.err};
    }
  }
  return {stop: false, err: null};
};

/*
 * _makeApiRequest - Send an item to Rollbar, callback when done, if there is an error make an
 *   effort to retry if we are configured to do so.
 *
 * @param item - an item ready to send to the backend
 * @param callback - function(err, response)
 */
Queue.prototype._makeApiRequest = function(item, callback) {
  var rateLimitResponse = this.rateLimiter.shouldSend(item);
  if (rateLimitResponse.shouldSend) {
    this.api.postItem(item, function(err, resp) {
      if (err) {
        this._maybeRetry(err, item, callback);
      } else {
        callback(err, resp);
      }
    }.bind(this));
  } else if (rateLimitResponse.error) {
    callback(rateLimitResponse.error);
  } else {
    this.api.postItem(rateLimitResponse.payload, callback);
  }
};

// These are errors basically mean there is no internet connection
var RETRIABLE_ERRORS = ['ECONNRESET', 'ENOTFOUND', 'ESOCKETTIMEDOUT', 'ETIMEDOUT', 'ECONNREFUSED', 'EHOSTUNREACH', 'EPIPE', 'EAI_AGAIN'];

/*
 * _maybeRetry - Given the error returned by the API, decide if we should retry or just callback
 *   with the error.
 *
 * @param err - an error returned by the API transport
 * @param item - the item that was trying to be sent when this error occured
 * @param callback - function(err, response)
 */
Queue.prototype._maybeRetry = function(err, item, callback) {
  var shouldRetry = false;
  if (this.options.retryInterval) {
    for (var i = 0, len = RETRIABLE_ERRORS.length; i < len; i++) {
      if (err.code === RETRIABLE_ERRORS[i]) {
        shouldRetry = true;
        break;
      }
    }
  }
  if (shouldRetry) {
    this._retryApiRequest(item, callback);
  } else {
    callback(err);
  }
};

/*
 * _retryApiRequest - Add an item and a callback to a queue and possibly start a timer to process
 *   that queue based on the retryInterval in the options for this queue.
 *
 * @param item - an item that failed to send due to an error we deem retriable
 * @param callback - function(err, response)
 */
Queue.prototype._retryApiRequest = function(item, callback) {
  this.retryQueue.push({item: item, callback: callback});

  if (!this.retryHandle) {
    this.retryHandle = setInterval(function() {
      while (this.retryQueue.length) {
        var retryObject = this.retryQueue.shift();
        this._makeApiRequest(retryObject.item, retryObject.callback);
      }
    }.bind(this), this.options.retryInterval);
  }
};

/*
 * _dequeuePendingRequest - Removes the item from the pending request queue, this queue is used to
 *   enable to functionality of providing a callback that clients can pass to `wait` to be notified
 *   when the pending request queue has been emptied. This must be called when the API finishes
 *   processing this item. If a `wait` callback is configured, it is called by this function.
 *
 * @param item - the item previously added to the pending request queue
 */
Queue.prototype._dequeuePendingRequest = function(item) {
  var idx = this.pendingRequests.indexOf(item);
  if (idx !== -1) {
    this.pendingRequests.splice(idx, 1);
    this._maybeCallWait();
  }
};

Queue.prototype._maybeLog = function(data, originalError) {
  if (this.logger && this.options.verbose) {
    var message = originalError;
    message = message || _.get(data, 'body.trace.exception.message');
    message = message || _.get(data, 'body.trace_chain.0.exception.message');
    if (message) {
      this.logger.error(message);
      return;
    }
    message = _.get(data, 'body.message.body');
    if (message) {
      this.logger.log(message);
    }
  }
};

Queue.prototype._maybeCallWait = function() {
  if (_.isFunction(this.waitCallback) && this.pendingItems.length === 0 && this.pendingRequests.length === 0) {
    if (this.waitIntervalID) {
      this.waitIntervalID = clearInterval(this.waitIntervalID);
    }
    this.waitCallback();
    return true;
  }
  return false;
};

module.exports = Queue;


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

var _ = __webpack_require__(87);

/*
 * Notifier - the internal object responsible for delegating between the client exposed API, the
 * chain of transforms necessary to turn an item into something that can be sent to Rollbar, and the
 * queue which handles the communcation with the Rollbar API servers.
 *
 * @param queue - an object that conforms to the interface: addItem(item, callback)
 * @param options - an object representing the options to be set for this notifier, this should have
 * any defaults already set by the caller
 */
function Notifier(queue, options) {
  this.queue = queue;
  this.options = options;
  this.transforms = [];
  this.diagnostic = {};
}

/*
 * configure - updates the options for this notifier with the passed in object
 *
 * @param options - an object which gets merged with the current options set on this notifier
 * @returns this
 */
Notifier.prototype.configure = function(options) {
  this.queue && this.queue.configure(options);
  var oldOptions = this.options;
  this.options = _.merge(oldOptions, options);
  return this;
};

/*
 * addTransform - adds a transform onto the end of the queue of transforms for this notifier
 *
 * @param transform - a function which takes three arguments:
 *    * item: An Object representing the data to eventually be sent to Rollbar
 *    * options: The current value of the options for this notifier
 *    * callback: function(err: (Null|Error), item: (Null|Object)) the transform must call this
 *    callback with a null value for error if it wants the processing chain to continue, otherwise
 *    with an error to terminate the processing. The item should be the updated item after this
 *    transform is finished modifying it.
 */
Notifier.prototype.addTransform = function(transform) {
  if (_.isFunction(transform)) {
    this.transforms.push(transform);
  }
  return this;
};

/*
 * log - the internal log function which applies the configured transforms and then pushes onto the
 * queue to be sent to the backend.
 *
 * @param item - An object with the following structure:
 *    message [String] - An optional string to be sent to rollbar
 *    error [Error] - An optional error
 *
 * @param callback - A function of type function(err, resp) which will be called with exactly one
 * null argument and one non-null argument. The callback will be called once, either during the
 * transform stage if an error occurs inside a transform, or in response to the communication with
 * the backend. The second argument will be the response from the backend in case of success.
 */
Notifier.prototype.log = function(item, callback) {
  if (!callback || !_.isFunction(callback)) {
    callback = function() {};
  }

  if (!this.options.enabled) {
    return callback(new Error('Rollbar is not enabled'));
  }

  this.queue.addPendingItem(item);
  var originalError = item.err;
  this._applyTransforms(item, function(err, i) {
    if (err) {
      this.queue.removePendingItem(item);
      return callback(err, null);
    }
    this.queue.addItem(i, callback, originalError, item);
  }.bind(this));
};

/* Internal */

/*
 * _applyTransforms - Applies the transforms that have been added to this notifier sequentially. See
 * `addTransform` for more information.
 *
 * @param item - An item to be transformed
 * @param callback - A function of type function(err, item) which will be called with a non-null
 * error and a null item in the case of a transform failure, or a null error and non-null item after
 * all transforms have been applied.
 */
Notifier.prototype._applyTransforms = function(item, callback) {
  var transformIndex = -1;
  var transformsLength = this.transforms.length;
  var transforms = this.transforms;
  var options = this.options;

  var cb = function(err, i) {
    if (err) {
      callback(err, null);
      return;
    }

    transformIndex++;

    if (transformIndex === transformsLength) {
      callback(null, i);
      return;
    }

    transforms[transformIndex](i, options, cb);
  };

  cb(null, item);
};

module.exports = Notifier;


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

var _ = __webpack_require__(87);

var MAX_EVENTS = 100;

function Telemeter(options) {
  this.queue = [];
  this.options = _.merge(options);
  var maxTelemetryEvents = this.options.maxTelemetryEvents || MAX_EVENTS;
  this.maxQueueSize = Math.max(0, Math.min(maxTelemetryEvents, MAX_EVENTS));
}

Telemeter.prototype.configure = function(options) {
  var oldOptions = this.options;
  this.options = _.merge(oldOptions, options);
  var maxTelemetryEvents = this.options.maxTelemetryEvents || MAX_EVENTS;
  var newMaxEvents = Math.max(0, Math.min(maxTelemetryEvents, MAX_EVENTS));
  var deleteCount = 0;
  if (this.maxQueueSize > newMaxEvents) {
    deleteCount = this.maxQueueSize - newMaxEvents;
  }
  this.maxQueueSize = newMaxEvents;
  this.queue.splice(0, deleteCount);
};

Telemeter.prototype.copyEvents = function() {
  var events = Array.prototype.slice.call(this.queue, 0);
  if (_.isFunction(this.options.filterTelemetry)) {
    try {
      var i = events.length;
      while (i--) {
        if (this.options.filterTelemetry(events[i])) {
          events.splice(i, 1);
        }
      }
    } catch (e) {
      this.options.filterTelemetry = null;
    }
  }
  return events;
};

Telemeter.prototype.capture = function(type, metadata, level, rollbarUUID, timestamp) {
  var e = {
    level: getLevel(type, level),
    type: type,
    timestamp_ms: timestamp || _.now(),
    body: metadata,
    source: 'client'
  };
  if (rollbarUUID) {
    e.uuid = rollbarUUID;
  }

  try {
    if (_.isFunction(this.options.filterTelemetry) && this.options.filterTelemetry(e)) {
      return false;
    }
  } catch (exc) {
    this.options.filterTelemetry = null;
  }

  this.push(e);
  return e;
};

Telemeter.prototype.captureEvent = function(type, metadata, level, rollbarUUID) {
  return this.capture(type, metadata, level, rollbarUUID);
};

Telemeter.prototype.captureError = function(err, level, rollbarUUID, timestamp) {
  var metadata = {
    message: err.message || String(err)
  };
  if (err.stack) {
    metadata.stack = err.stack;
  }
  return this.capture('error', metadata, level, rollbarUUID, timestamp);
};

Telemeter.prototype.captureLog = function(message, level, rollbarUUID, timestamp) {
  return this.capture('log', {
    message: message
  }, level, rollbarUUID, timestamp);
};

Telemeter.prototype.captureNetwork = function(metadata, subtype, rollbarUUID, requestData) {
  subtype = subtype || 'xhr';
  metadata.subtype = metadata.subtype || subtype;
  if (requestData) {
    metadata.request = requestData;
  }
  var level = this.levelFromStatus(metadata.status_code);
  return this.capture('network', metadata, level, rollbarUUID);
};

Telemeter.prototype.levelFromStatus = function(statusCode) {
  if (statusCode >= 200 && statusCode < 400) {
    return 'info';
  }
  if (statusCode === 0 || statusCode >= 400) {
    return 'error';
  }
  return 'info';
};

Telemeter.prototype.captureDom = function(subtype, element, value, checked, rollbarUUID) {
  var metadata = {
    subtype: subtype,
    element: element
  };
  if (value !== undefined) {
    metadata.value = value;
  }
  if (checked !== undefined) {
    metadata.checked = checked;
  }
  return this.capture('dom', metadata, 'info', rollbarUUID);
};

Telemeter.prototype.captureNavigation = function(from, to, rollbarUUID) {
  return this.capture('navigation', {from: from, to: to}, 'info', rollbarUUID);
};

Telemeter.prototype.captureDomContentLoaded = function(ts) {
  return this.capture('navigation', {subtype: 'DOMContentLoaded'}, 'info', undefined, ts && ts.getTime());
  /**
   * If we decide to make this a dom event instead, then use the line below:
  return this.capture('dom', {subtype: 'DOMContentLoaded'}, 'info', undefined, ts && ts.getTime());
  */
};
Telemeter.prototype.captureLoad = function(ts) {
  return this.capture('navigation', {subtype: 'load'}, 'info', undefined, ts && ts.getTime());
  /**
   * If we decide to make this a dom event instead, then use the line below:
  return this.capture('dom', {subtype: 'load'}, 'info', undefined, ts && ts.getTime());
  */
};

Telemeter.prototype.captureConnectivityChange = function(type, rollbarUUID) {
  return this.captureNetwork({change: type}, 'connectivity', rollbarUUID);
};

// Only intended to be used internally by the notifier
Telemeter.prototype._captureRollbarItem = function(item) {
  if (!this.options.includeItemsInTelemetry) {
    return;
  }
  if (item.err) {
    return this.captureError(item.err, item.level, item.uuid, item.timestamp);
  }
  if (item.message) {
    return this.captureLog(item.message, item.level, item.uuid, item.timestamp);
  }
  if (item.custom) {
    return this.capture('log', item.custom, item.level, item.uuid, item.timestamp);
  }
};

Telemeter.prototype.push = function(e) {
  this.queue.push(e);
  if (this.queue.length > this.maxQueueSize) {
    this.queue.shift();
  }
};

function getLevel(type, level) {
  if (level) {
    return level;
  }
  var defaultLevel = {
    error: 'error',
    manual: 'info'
  };
  return defaultLevel[type] || 'info';
}

module.exports = Telemeter;


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

var _ = __webpack_require__(87);
var helpers = __webpack_require__(94);
var truncation = __webpack_require__(95);

var defaultOptions = {
  hostname: 'api.rollbar.com',
  path: '/api/1/item/',
  search: null,
  version: '1',
  protocol: 'https:',
  port: 443
};

/**
 * Api is an object that encapsulates methods of communicating with
 * the Rollbar API.  It is a standard interface with some parts implemented
 * differently for server or browser contexts.  It is an object that should
 * be instantiated when used so it can contain non-global options that may
 * be different for another instance of RollbarApi.
 *
 * @param options {
 *    accessToken: the accessToken to use for posting items to rollbar
 *    endpoint: an alternative endpoint to send errors to
 *        must be a valid, fully qualified URL.
 *        The default is: https://api.rollbar.com/api/1/item
 *    proxy: if you wish to proxy requests provide an object
 *        with the following keys:
 *          host or hostname (required): foo.example.com
 *          port (optional): 123
 *          protocol (optional): https
 * }
 */
function Api(options, t, u, j) {
  this.options = options;
  this.transport = t;
  this.url = u;
  this.jsonBackup = j;
  this.accessToken = options.accessToken;
  this.transportOptions = _getTransport(options, u);
}

/**
 *
 * @param data
 * @param callback
 */
Api.prototype.postItem = function(data, callback) {
  var transportOptions = helpers.transportOptions(this.transportOptions, 'POST');
  var payload = helpers.buildPayload(this.accessToken, data, this.jsonBackup);
  this.transport.post(this.accessToken, transportOptions, payload, callback);
};

/**
 *
 * @param data
 * @param callback
 */
Api.prototype.buildJsonPayload = function(data, callback) {
  var payload = helpers.buildPayload(this.accessToken, data, this.jsonBackup);

  var stringifyResult = truncation.truncate(payload);
  if (stringifyResult.error) {
    if (callback) {
      callback(stringifyResult.error);
    }
    return null;
  }

  return stringifyResult.value;
};

/**
 *
 * @param jsonPayload
 * @param callback
 */
Api.prototype.postJsonPayload = function(jsonPayload, callback) {
  var transportOptions = helpers.transportOptions(this.transportOptions, 'POST');
  this.transport.postJsonPayload(this.accessToken, transportOptions, jsonPayload, callback);
};

Api.prototype.configure = function(options) {
  var oldOptions = this.oldOptions;
  this.options = _.merge(oldOptions, options);
  this.transportOptions = _getTransport(this.options, this.url);
  if (this.options.accessToken !== undefined) {
    this.accessToken = this.options.accessToken;
  }
  return this;
};

function _getTransport(options, url) {
  return helpers.getTransportFromOptions(options, defaultOptions, url);
}

module.exports = Api;


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

var _ = __webpack_require__(87);

function buildPayload(accessToken, data, jsonBackup) {
  if (!_.isType(data.context, 'string')) {
    var contextResult = _.stringify(data.context, jsonBackup);
    if (contextResult.error) {
      data.context = 'Error: could not serialize \'context\'';
    } else {
      data.context = contextResult.value || '';
    }
    if (data.context.length > 255) {
      data.context = data.context.substr(0, 255);
    }
  }
  return {
    access_token: accessToken,
    data: data
  };
}

function getTransportFromOptions(options, defaults, url) {
  var hostname = defaults.hostname;
  var protocol = defaults.protocol;
  var port = defaults.port;
  var path = defaults.path;
  var search = defaults.search;

  var proxy = options.proxy;
  if (options.endpoint) {
    var opts = url.parse(options.endpoint);
    hostname = opts.hostname;
    protocol = opts.protocol;
    port = opts.port;
    path = opts.pathname;
    search = opts.search;
  }
  return {
    hostname: hostname,
    protocol: protocol,
    port: port,
    path: path,
    search: search,
    proxy: proxy
  };
}

function transportOptions(transport, method) {
  var protocol = transport.protocol || 'https:';
  var port = transport.port || (protocol === 'http:' ? 80 : protocol === 'https:' ? 443 : undefined);
  var hostname = transport.hostname;
  var path = transport.path;
  if (transport.search) {
    path = path + transport.search;
  }
  if (transport.proxy) {
    path = protocol + '//' + hostname + path;
    hostname = transport.proxy.host || transport.proxy.hostname;
    port = transport.proxy.port;
    protocol = transport.proxy.protocol || protocol;
  }
  return {
    protocol: protocol,
    hostname: hostname,
    path: path,
    port: port,
    method: method
  };
}

function appendPathToPath(base, path) {
  var baseTrailingSlash = /\/$/.test(base);
  var pathBeginningSlash = /^\//.test(path);

  if (baseTrailingSlash && pathBeginningSlash) {
    path = path.substring(1);
  } else if (!baseTrailingSlash && !pathBeginningSlash) {
    path = '/' + path;
  }

  return base + path;
}

module.exports = {
  buildPayload: buildPayload,
  getTransportFromOptions: getTransportFromOptions,
  transportOptions: transportOptions,
  appendPathToPath: appendPathToPath
};


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

var _ = __webpack_require__(87);

function raw(payload, jsonBackup) {
  return [payload, _.stringify(payload, jsonBackup)];
}

function selectFrames(frames, range) {
  var len = frames.length;
  if (len > range * 2) {
    return frames.slice(0, range).concat(frames.slice(len - range));
  }
  return frames;
}

function truncateFrames(payload, jsonBackup, range) {
  range = (typeof range === 'undefined') ? 30 : range;
  var body = payload.data.body;
  var frames;
  if (body.trace_chain) {
    var chain = body.trace_chain;
    for (var i = 0; i < chain.length; i++) {
      frames = chain[i].frames;
      frames = selectFrames(frames, range);
      chain[i].frames = frames;
    }
  } else if (body.trace) {
    frames = body.trace.frames;
    frames = selectFrames(frames, range);
    body.trace.frames = frames;
  }
  return [payload, _.stringify(payload, jsonBackup)];
}

function maybeTruncateValue(len, val) {
  if (!val) {
    return val;
  }
  if (val.length > len) {
    return val.slice(0, len - 3).concat('...');
  }
  return val;
}

function truncateStrings(len, payload, jsonBackup) {
  function truncator(k, v, seen) {
    switch (_.typeName(v)) {
      case 'string':
        return maybeTruncateValue(len, v);
      case 'object':
      case 'array':
        return _.traverse(v, truncator, seen);
      default:
        return v;
    }
  }
  payload = _.traverse(payload, truncator, []);
  return [payload, _.stringify(payload, jsonBackup)];
}

function truncateTraceData(traceData) {
  if (traceData.exception) {
    delete traceData.exception.description;
    traceData.exception.message = maybeTruncateValue(255, traceData.exception.message);
  }
  traceData.frames = selectFrames(traceData.frames, 1);
  return traceData;
}

function minBody(payload, jsonBackup) {
  var body = payload.data.body;
  if (body.trace_chain) {
    var chain = body.trace_chain;
    for (var i = 0; i < chain.length; i++) {
      chain[i] = truncateTraceData(chain[i]);
    }
  } else if (body.trace) {
    body.trace = truncateTraceData(body.trace);
  }
  return [payload, _.stringify(payload, jsonBackup)];
}

function needsTruncation(payload, maxSize) {
  return _.maxByteSize(payload) > maxSize;
}

function truncate(payload, jsonBackup, maxSize) {
  maxSize = (typeof maxSize === 'undefined') ? (512 * 1024) : maxSize;
  var strategies = [
    raw,
    truncateFrames,
    truncateStrings.bind(null, 1024),
    truncateStrings.bind(null, 512),
    truncateStrings.bind(null, 256),
    minBody
  ];
  var strategy, results, result;

  while ((strategy = strategies.shift())) {
    results = strategy(payload, jsonBackup);
    payload = results[0];
    result = results[1];
    if (result.error || !needsTruncation(result.value, maxSize)) {
      return result;
    }
  }
  return result;
}

module.exports = {
  truncate: truncate,

  /* for testing */
  raw: raw,
  truncateFrames: truncateFrames,
  truncateStrings: truncateStrings,
  maybeTruncateValue: maybeTruncateValue
};


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var verbose = true;

var logger = {
  /* eslint-disable no-console */
  log: function() {
    if (verbose) {
      console.log.apply(console, arguments);
    }
  },
  error: function() {
    if (verbose) {
      console.error.apply(console, arguments);
    }
  },
  /* eslint-enable no-console */
  setVerbose: function(val) {
    verbose = val;
  }
};

module.exports = logger;


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

var _ = __webpack_require__(87);
var truncation = __webpack_require__(95);
var logger = __webpack_require__(96);

var http = __webpack_require__(10);
var https = __webpack_require__(11);
var jsonBackup = __webpack_require__(98);

var MAX_RATE_LIMIT_INTERVAL = 60;

/*
 * accessToken may be embedded in payload but that should not be assumed
 *
 * options: {
 *   hostname
 *   protocol
 *   path
 *   port
 *   method
 * }
 *
 * params is an object containing key/value pairs to be
 *    appended to the path as 'key=value&key=value'
 *
 * payload is an unserialized object
 */
function Transport() {
  this.rateLimitExpires = 0;
}

Transport.prototype.get = function(accessToken, options, params, callback, transportFactory) {
  var t;
  if (!callback || !_.isFunction(callback)) {
    callback = function() {};
  }
  options = options || {};
  _.addParamsAndAccessTokenToPath(accessToken, options, params);
  options.headers = _headers(accessToken, options);
  if (transportFactory) {
    t = transportFactory(options);
  } else {
    t = _transport(options);
  }
  if (!t) {
    logger.error('Unknown transport based on given protocol: ' + options.protocol);
    return callback(new Error('Unknown transport'));
  }
  var req = t.request(options, function(resp) {
    this.handleResponse(resp, callback);
  }.bind(this));
  req.on('error', function(err) {
    callback(err);
  });
  req.end();
}

Transport.prototype.post = function(accessToken, options, payload, callback, transportFactory) {
  var t;
  if (!callback || !_.isFunction(callback)) {
    callback = function() {};
  }
  if (_currentTime() < this.rateLimitExpires) {
    return callback(new Error('Exceeded rate limit'));
  }
  options = options || {};
  if (!payload) {
    return callback(new Error('Cannot send empty request'));
  }
  var stringifyResult = truncation.truncate(payload, jsonBackup);
  if (stringifyResult.error) {
    logger.error('Problem stringifying payload. Giving up');
    return callback(stringifyResult.error);
  }
  var writeData = stringifyResult.value;
  options.headers = _headers(accessToken, options, writeData);
  if (transportFactory) {
    t = transportFactory(options);
  } else {
    t = _transport(options);
  }
  if (!t) {
    logger.error('Unknown transport based on given protocol: ' + options.protocol);
    return callback(new Error('Unknown transport'));
  }
  var req = t.request(options, function(resp) {
    this.handleResponse(resp, _wrapPostCallback(callback));
  }.bind(this));
  req.on('error', function(err) {
    callback(err);
  });
  if (writeData) {
    req.write(writeData);
  }
  req.end();
}

Transport.prototype.updateRateLimit = function(resp) {
  var remaining = parseInt(resp.headers['x-rate-limit-remaining'] || 0);
  var remainingSeconds = Math.min(MAX_RATE_LIMIT_INTERVAL, resp.headers['x-rate-limit-remaining-seconds'] || 0);
  var currentTime = _currentTime();

  if ((resp.statusCode === 429) && (remaining === 0)) {
    this.rateLimitExpires = currentTime + remainingSeconds;
  } else {
    this.rateLimitExpires = currentTime;
  }
}

Transport.prototype.handleResponse = function(resp, callback) {
  this.updateRateLimit(resp);

  var respData = [];
  resp.setEncoding('utf8');
  resp.on('data', function(chunk) {
    respData.push(chunk);
  });

  resp.on('end', function() {
    respData = respData.join('');
    _parseApiResponse(respData, callback);
  });
}

/** Helpers **/

function _headers(accessToken, options, data) {
  var headers = (options && options.headers) || {};
  headers['Content-Type'] = 'application/json';
  if (data) {
    try {
      headers['Content-Length'] = Buffer.byteLength(data, 'utf8');
    } catch (e) {
      logger.error('Could not get the content length of the data');
    }
  }
  headers['X-Rollbar-Access-Token'] = accessToken;
  return headers;
}

function _transport(options) {
  return {'http:': http, 'https:': https}[options.protocol];
}

function _parseApiResponse(data, callback) {
  var parsedData = _.jsonParse(data);
  if (parsedData.error) {
    logger.error('Could not parse api response, err: ' + parsedData.error);
    return callback(parsedData.error);
  }
  data = parsedData.value;

  if (data.err) {
    logger.error('Received error: ' + data.message);
    return callback(new Error('Api error: ' + (data.message || 'Unknown error')));
  }

  callback(null, data);
}

function _wrapPostCallback(callback) {
  return function(err, data) {
    if (err) {
      return callback(err);
    }
    if (data.result && data.result.uuid) {
      logger.log([
          'Successful api response.',
          ' Link: https://rollbar.com/occurrence/uuid/?uuid=' + data.result.uuid
      ].join(''));
    } else {
      logger.log('Successful api response');
    }
    callback(null, data.result);
  }
}

function _currentTime() {
  return Math.floor(Date.now() / 1000);
}

module.exports = Transport;


/***/ }),
/* 98 */
/***/ (function(module, exports) {

exports = module.exports = stringify
exports.getSerialize = serializer

function stringify(obj, replacer, spaces, cycleReplacer) {
  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)
}

function serializer(replacer, cycleReplacer) {
  var stack = [], keys = []

  if (cycleReplacer == null) cycleReplacer = function(key, value) {
    if (stack[0] === value) return "[Circular ~]"
    return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]"
  }

  return function(key, value) {
    if (stack.length > 0) {
      var thisPos = stack.indexOf(this)
      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)
      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)
      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)
    }
    else stack.push(value)

    return replacer == null ? value : replacer.call(this, key, value)
  }
}


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

var async = __webpack_require__(100);
var parser = __webpack_require__(101);
var requestIp = __webpack_require__(116);
var url = __webpack_require__(4);
var _ = __webpack_require__(87);

function baseData(item, options, callback) {
  var environment = (options.payload && options.payload.environment) || options.environment;
  var data = {
    timestamp: Math.round(item.timestamp / 1000),
    environment: item.environment || environment,
    level: item.level || 'error',
    language: 'javascript',
    framework: item.framework || options.framework,
    uuid: item.uuid,
    notifier: JSON.parse(JSON.stringify(options.notifier))
  };

  if (options.codeVersion) {
    data.code_version = options.codeVersion;
  } else if (options.code_version) {
    data.code_version = options.code_version;
  }

  var props = Object.getOwnPropertyNames(item.custom || {});
  props.forEach(function (name) {
    if (!data.hasOwnProperty(name)) {
      data[name] = item.custom[name];
    }
  });

  data.server = {
    host: options.host,
    argv: process.argv.concat(),
    pid: process.pid
  };

  if (options.branch) {
    data.server.branch = options.branch;
  }
  if (options.root) {
    data.server.root = options.root;
  }

  item.data = data;
  callback(null, item);
}

function addMessageData(item, options, callback) {
  item.data = item.data || {};
  item.data.body = item.data.body || {};
  var message = item.message || 'Item sent with null or missing arguments.';
  item.data.body.message = {
    body: message
  };
  callback(null, item);
}

function addErrorData(item, options, callback) {
  if (item.stackInfo) {
    item.data = item.data || {};
    item.data.body = item.data.body || {};
    item.data.body.trace_chain = item.stackInfo;
  }
  callback(null, item);
}

function addBody(item, options, callback) {
  if (item.stackInfo) {
    addErrorData(item, options, callback);
  } else {
    addMessageData(item, options, callback);
  }
}

function handleItemWithError(item, options, callback) {
  if (!item.err) {
    return callback(null, item);
  }

  var err = item.err;
  var errors = [];
  var chain = [];
  do {
    errors.push(err);
    err = err.nested;
  } while (err !== undefined);
  item.stackInfo = chain;

  var cb = function(e) {
    if (e) {
      item.message = item.err.message || item.err.description || item.message || String(item.err);
      item.diagnostic.buildTraceData = e.message;
      delete item.stackInfo;
    }
    callback(null, item);
  };
  async.eachSeries(errors, _buildTraceData(chain, options), cb);
}

function addRequestData(item, options, callback) {
  item.data = item.data || {};

  var req = item.request;
  if (!req) {
    callback(null, item);
    return;
  }

  if (options.addRequestData && _.isFunction(options.addRequestData)) {
    options.addRequestData(item.data, req);
    callback(null, item);
    return;
  }

  var requestData = _buildRequestData(req);
  _.filterIp(requestData, options.captureIp);
  item.data.request = requestData;

  if (req.route) {
    item.data.context = req.route.path;
  } else {
    try {
      item.data.context = req.app._router.matchRequest(req).path;
    } catch (ignore) {
      // Ignored
    }
  }

  var captureEmail = options.captureEmail;
  var captureUsername = options.captureUsername;
  if (req.rollbar_person) {
    var person = req.rollbar_person;
    if (!captureEmail && person.email) {
      person.email = null;
    }
    if (!captureUsername && person.username) {
      person.username = null;
    }
    item.data.person = person;
  } else if (req.user) {
    item.data.person = {id: req.user.id};
    if (req.user.username && captureUsername) {
      item.data.person.username = req.user.username;
    }
    if (req.user.email && captureEmail) {
      item.data.person.email = req.user.email;
    }
  } else if (req.user_id || req.userId) {
    var userId = req.user_id || req.userId;
    if (_.isFunction(userId)) {
      userId = userId();
    }
    item.data.person = {id: userId};
  }

  callback(null, item);
}

function addLambdaData(item, options, callback) {
  var c = item.lambdaContext;
  if (!c) {
    callback(null, item);
    return;
  }

  var data = {
    remainingTimeInMillis: c.getRemainingTimeInMillis(),
    callbackWaitsForEmptyEventLoop: c.callbackWaitsForEmptyEventLoop,
    functionName: c.functionName,
    functionVersion: c.functionVersion,
    arn: c.invokedFunctionArn,
    requestId: c.awsRequestId
  };

  item.data = item.data || {};
  item.data.custom = item.data.custom || {};
  item.data.custom.lambda = data;

  callback(null, item);
}

function scrubPayload(item, options, callback) {
  var scrubHeaders = options.scrubHeaders || [];
  var scrubFields = options.scrubFields || [];
  scrubFields = scrubHeaders.concat(scrubFields);

  parseRequestBody(item.data.request, options);
  item.data = _.scrub(item.data, scrubFields);
  serializeRequestBody(item.data.request, options);

  callback(null, item);
}

function parseRequestBody(req, options) {
  if (!req || !options.scrubRequestBody) { return }

  try {
    if (_.isString(req.body) && _isJsonContentType(req)) {
      req.body = JSON.parse(req.body);
    }
  } catch (e) {
    req.body = null;
    req.error = 'request.body parse failed: ' + e.message;
  }
}

function serializeRequestBody(req, options) {
  if (!req || !options.scrubRequestBody) { return }

  try {
    if (_.isObject(req.body) && _isJsonContentType(req)) {
      req.body = JSON.stringify(req.body);
    }
  } catch (e) {
    req.body = null;
    req.error = 'request.body serialization failed: ' + e.message;
  }
}

/** Helpers **/

function _isJsonContentType(req) {
  return req.headers && req.headers['content-type'] && req.headers['content-type'].includes('json');
}

function _buildTraceData(chain, options) {
  return function(ex, cb) {
    parser.parseException(ex, options, function (err, errData) {
      if (err) {
        return cb(err);
      }

      chain.push({
        frames: errData.frames,
        exception: {
          class: errData['class'],
          message: errData.message
        }
      });

      return cb(null);
    });
  };
}

function _extractIp(req) {
  var ip = req.ip;
  if (!ip) {
    ip = requestIp.getClientIp(req);
  }
  return ip;
}

function _buildRequestData(req) {
  var headers = req.headers || {};
  var host = headers.host || '<no host>';
  var proto = req.protocol || ((req.socket && req.socket.encrypted) ? 'https' : 'http' );
  var parsedUrl;
  if (_.isType(req.url, 'string')) {
    parsedUrl = url.parse(req.url, true);
  } else {
    parsedUrl = req.url || {};
  }
  parsedUrl.protocol = parsedUrl.protocol || proto;
  parsedUrl.host = parsedUrl.host || host;
  var reqUrl = url.format(parsedUrl);
  var data = {
    url: reqUrl,
    user_ip: _extractIp(req),
    headers: headers,
    method: req.method
  };
  if (parsedUrl.search && parsedUrl.search.length > 0) {
    data.GET = parsedUrl.query;
  }

  var body = req.body || req.payload;
  if (body) {
    var bodyParams = {};
    if (_.isIterable(body)) {
      for (var k in body) {
        if (Object.prototype.hasOwnProperty.call(body, k)) {
          bodyParams[k] = body[k];
        }
      }
      data[req.method] = bodyParams;
    } else {
      data.body = body;
    }
  }
  return data;
}

module.exports = {
  baseData: baseData,
  handleItemWithError: handleItemWithError,
  addBody: addBody,
  addMessageData: addMessageData,
  addErrorData: addErrorData,
  addRequestData: addRequestData,
  addLambdaData: addLambdaData,
  scrubPayload: scrubPayload
};


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * async
 * https://github.com/caolan/async
 *
 * Copyright 2010-2014 Caolan McMahon
 * Released under the MIT license
<<<<<<< HEAD
 */!function(){var n,r,o={};function s(){}function a(e){var t=!1;return function(){if(t)throw new Error("Callback was already called.");t=!0,e.apply(this,arguments)}}function c(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}null!=(n="object"==typeof window&&this===window?window:"object"==typeof global&&this===global?global:this)&&(r=n.async),o.noConflict=function(){return n.async=r,o};var u=Object.prototype.toString,l=Array.isArray||function(e){return"[object Array]"===u.call(e)};function p(e){return l(e)||"number"==typeof e.length&&e.length>=0&&e.length%1==0}function d(e,t){return p(e)?h(e,t):function(e,t){h(v(e),(function(n){t(e[n],n)}))}(e,t)}function h(e,t){for(var n=-1,i=e.length;++n<i;)t(e[n],n,e)}function f(e,t){for(var n=-1,i=e.length,r=Array(i);++n<i;)r[n]=t(e[n],n,e);return r}function m(e){return f(Array(e),(function(e,t){return t}))}var g,v=Object.keys||function(e){var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push(n);return t};function x(e){var t,n,i=-1;return p(e)?(t=e.length,function(){return++i<t?i:null}):(n=v(e),t=n.length,function(){return++i<t?n[i]:null})}function b(e,t){t=t||0;var n=-1,i=e.length;t&&(i=(i-=t)<0?0:i);for(var r=Array(i);++n<i;)r[n]=e[n+t];return r}function y(e){return function(t,n,i){return e(t,i)}}function w(e){return function(t,n,i){i=c(i||s);var r=x(t=t||[]);if(e<=0)return i(null);var o=!1,u=0,l=!1;!function s(){if(o&&u<=0)return i(null);for(;u<e&&!l;){var c=r();if(null===c)return o=!0,void(u<=0&&i(null));u+=1,n(t[c],c,a((function(e){u-=1,e?(i(e),l=!0):s()})))}}()}}function k(e){return function(t,n,i){return e(o.eachOf,t,n,i)}}function E(e){return function(t,n,i){return e(o.eachOfSeries,t,n,i)}}function _(e,t,n,i){i=c(i||s);var r=[];e(t,(function(e,t,i){n(e,(function(e,n){r[t]=n,i(e)}))}),(function(e){i(e,r)}))}function S(e,t,n,i){var r=[];e(t=f(t,(function(e,t){return{index:t,value:e}})),(function(e,t,i){n(e.value,(function(t){t&&r.push(e),i()}))}),(function(){i(f(r.sort((function(e,t){return e.index-t.index})),(function(e){return e.value})))}))}function I(e,t,n,i){var r=[];e(t=f(t,(function(e,t){return{index:t,value:e}})),(function(e,t,i){n(e.value,(function(t){t||r.push(e),i()}))}),(function(){i(f(r.sort((function(e,t){return e.index-t.index})),(function(e){return e.value})))}))}function P(e,t,n,i){e(t,(function(e,t,r){n(e,(function(t){t?(i(e),i=s):r()}))}),(function(){i()}))}function T(e,t,n){n=n||s;var i=p(t)?[]:{};e(t,(function(e,t,n){e((function(e){var r=b(arguments,1);r.length<=1&&(r=r[0]),i[t]=r,n(e)}))}),(function(e){n(e,i)}))}function C(e,t,n,i){var r=[];e(t,(function(e,t,i){n(e,(function(e,t){r=r.concat(t||[]),i(e)}))}),(function(e){i(e,r)}))}function A(e,t,n){if(null==t)t=1;else if(0===t)throw new Error("Concurrency must not be zero");function i(e,t,n,i){if(null!=i&&"function"!=typeof i)throw new Error("task callback must be a function");if(e.started=!0,l(t)||(t=[t]),0===t.length&&e.idle())return o.setImmediate((function(){e.drain()}));h(t,(function(t){var r={data:t,callback:i||s};n?e.tasks.unshift(r):e.tasks.push(r),e.tasks.length===e.concurrency&&e.saturated()})),o.setImmediate(e.process)}function r(e,t){return function(){c-=1;var n=arguments;h(t,(function(e){e.callback.apply(e,n)})),e.tasks.length+c===0&&e.drain(),e.process()}}var c=0,u={tasks:[],concurrency:t,saturated:s,empty:s,drain:s,started:!1,paused:!1,push:function(e,t){i(u,e,!1,t)},kill:function(){u.drain=s,u.tasks=[]},unshift:function(e,t){i(u,e,!0,t)},process:function(){if(!u.paused&&c<u.concurrency&&u.tasks.length)for(;c<u.concurrency&&u.tasks.length;){var t=n?u.tasks.splice(0,n):u.tasks.splice(0,u.tasks.length),i=f(t,(function(e){return e.data}));0===u.tasks.length&&u.empty(),c+=1;var o=a(r(u,t));e(i,o)}},length:function(){return u.tasks.length},running:function(){return c},idle:function(){return u.tasks.length+c===0},pause:function(){u.paused=!0},resume:function(){if(!1!==u.paused){u.paused=!1;for(var e=Math.min(u.concurrency,u.tasks.length),t=1;t<=e;t++)o.setImmediate(u.process)}}};return u}function O(e){return function(t){var n=b(arguments,1);t.apply(null,n.concat([function(t){var n=b(arguments,1);"undefined"!=typeof console&&(t?console.error&&console.error(t):console[e]&&h(n,(function(t){console[e](t)})))}]))}}function D(e){return function(t,n,i){e(m(t),n,i)}}function L(e,t){function n(){var n=this,i=b(arguments),r=i.pop();return e(t,(function(e,t,r){e.apply(n,i.concat([r]))}),r)}if(arguments.length>2){var i=b(arguments,2);return n.apply(this,i)}return n}function R(e){return function(){var t=b(arguments),n=t.pop();t.push((function(){var e=arguments;i?o.setImmediate((function(){n.apply(null,e)})):n.apply(null,e)}));var i=!0;e.apply(this,t),i=!1}}"function"==typeof setImmediate&&(g=setImmediate),"undefined"!=typeof process&&process.nextTick?(o.nextTick=process.nextTick,o.setImmediate=g?function(e){g(e)}:o.nextTick):g?(o.nextTick=function(e){g(e)},o.setImmediate=o.nextTick):(o.nextTick=function(e){setTimeout(e,0)},o.setImmediate=o.nextTick),o.forEach=o.each=function(e,t,n){return o.eachOf(e,y(t),n)},o.forEachSeries=o.eachSeries=function(e,t,n){return o.eachOfSeries(e,y(t),n)},o.forEachLimit=o.eachLimit=function(e,t,n,i){return w(t)(e,y(n),i)},o.forEachOf=o.eachOf=function(e,t,n){n=c(n||s);var i=p(e=e||[])?e.length:v(e).length,r=0;if(!i)return n(null);function o(e){e?n(e):(r+=1)>=i&&n(null)}d(e,(function(n,i){t(e[i],i,a(o))}))},o.forEachOfSeries=o.eachOfSeries=function(e,t,n){n=c(n||s);var i=x(e=e||[]),r=i();!function s(){var c=!0;if(null===r)return n(null);t(e[r],r,a((function(e){if(e)n(e);else{if(null===(r=i()))return n(null);c?o.nextTick(s):s()}}))),c=!1}()},o.forEachOfLimit=o.eachOfLimit=function(e,t,n,i){w(t)(e,n,i)},o.map=k(_),o.mapSeries=E(_),o.mapLimit=function(e,t,n,i){return function(e){return function(e,t){return function(n,i,r){return t(w(e),n,i,r)}}(e,_)}(t)(e,n,i)},o.inject=o.foldl=o.reduce=function(e,t,n,i){o.eachOfSeries(e,(function(e,i,r){n(t,e,(function(e,n){t=n,r(e)}))}),(function(e){i(e||null,t)}))},o.foldr=o.reduceRight=function(e,t,n,i){var r=f(e,(function(e){return e})).reverse();o.reduce(r,t,n,i)},o.select=o.filter=k(S),o.selectSeries=o.filterSeries=E(S),o.reject=k(I),o.rejectSeries=E(I),o.detect=k(P),o.detectSeries=E(P),o.any=o.some=function(e,t,n){o.eachOf(e,(function(e,i,r){t(e,(function(e){e&&(n(!0),n=s),r()}))}),(function(){n(!1)}))},o.all=o.every=function(e,t,n){o.eachOf(e,(function(e,i,r){t(e,(function(e){e||(n(!1),n=s),r()}))}),(function(){n(!0)}))},o.sortBy=function(e,t,n){function i(e,t){var n=e.criteria,i=t.criteria;return n<i?-1:n>i?1:0}o.map(e,(function(e,n){t(e,(function(t,i){t?n(t):n(null,{value:e,criteria:i})}))}),(function(e,t){if(e)return n(e);n(null,f(t.sort(i),(function(e){return e.value})))}))},o.auto=function(e,t){t=c(t||s);var n=v(e),i=n.length;if(!i)return t(null);var r={},a=[];function u(e){a.unshift(e)}function p(){i--,h(a.slice(0),(function(e){e()}))}u((function(){i||t(null,r)})),h(n,(function(n){var i=l(e[n])?e[n]:[e[n]];function s(e){var i=b(arguments,1);if(i.length<=1&&(i=i[0]),e){var s={};h(v(r),(function(e){s[e]=r[e]})),s[n]=i,t(e,s)}else r[n]=i,o.setImmediate(p)}for(var c,d=i.slice(0,Math.abs(i.length-1))||[],f=d.length;f--;){if(!(c=e[d[f]]))throw new Error("Has inexistant dependency");if(l(c)&&~c.indexOf(n))throw new Error("Has cyclic dependencies")}function m(){return e=function(e,t){return e&&r.hasOwnProperty(t)},t=!0,h(d,(function(n,i,r){t=e(t,n,i,r)})),t&&!r.hasOwnProperty(n);var e,t}m()?i[i.length-1](s,r):u((function e(){m()&&(!function(e){for(var t=0;t<a.length;t+=1)if(a[t]===e)return void a.splice(t,1)}(e),i[i.length-1](s,r))}))}))},o.retry=function(e,t,n){var i=[];function r(r,s){function a(e,t){return function(n){e((function(e,i){n(!e||t,{err:e,result:i})}),s)}}for(;e;)i.push(a(t,!(e-=1)));o.series(i,(function(e,t){t=t[t.length-1],(r||n)(t.err,t.result)}))}return"function"==typeof e&&(n=t,t=e,e=5),e=parseInt(e,10)||5,n?r():r},o.waterfall=function(e,t){if(t=c(t||s),!l(e)){var n=new Error("First argument to waterfall must be an array of functions");return t(n)}if(!e.length)return t();!function e(n){return function(i){if(i)t.apply(null,arguments);else{var r=b(arguments,1),o=n.next();o?r.push(e(o)):r.push(t),R(n).apply(null,r)}}}(o.iterator(e))()},o.parallel=function(e,t){T(o.eachOf,e,t)},o.parallelLimit=function(e,t,n){T(w(t),e,n)},o.series=function(e,t){t=t||s;var n=p(e)?[]:{};o.eachOfSeries(e,(function(e,t,i){e((function(e){var r=b(arguments,1);r.length<=1&&(r=r[0]),n[t]=r,i(e)}))}),(function(e){t(e,n)}))},o.iterator=function(e){return function t(n){function i(){return e.length&&e[n].apply(null,arguments),i.next()}return i.next=function(){return n<e.length-1?t(n+1):null},i}(0)},o.apply=function(e){var t=b(arguments,1);return function(){return e.apply(null,t.concat(b(arguments)))}},o.concat=k(C),o.concatSeries=E(C),o.whilst=function(e,t,n){e()?t((function(i){if(i)return n(i);o.whilst(e,t,n)})):n(null)},o.doWhilst=function(e,t,n){e((function(i){if(i)return n(i);var r=b(arguments,1);t.apply(null,r)?o.doWhilst(e,t,n):n(null)}))},o.until=function(e,t,n){e()?n(null):t((function(i){if(i)return n(i);o.until(e,t,n)}))},o.doUntil=function(e,t,n){e((function(i){if(i)return n(i);var r=b(arguments,1);t.apply(null,r)?n(null):o.doUntil(e,t,n)}))},o.queue=function(e,t){return A((function(t,n){e(t[0],n)}),t,1)},o.priorityQueue=function(e,t){function n(e,t){return e.priority-t.priority}var i=o.queue(e,t);return i.push=function(e,t,r){!function(e,t,i,r){if(null!=r&&"function"!=typeof r)throw new Error("task callback must be a function");if(e.started=!0,l(t)||(t=[t]),0===t.length)return o.setImmediate((function(){e.drain()}));h(t,(function(t){var a={data:t,priority:i,callback:"function"==typeof r?r:s};e.tasks.splice(function(e,t,n){for(var i=-1,r=e.length-1;i<r;){var o=i+(r-i+1>>>1);n(t,e[o])>=0?i=o:r=o-1}return i}(e.tasks,a,n)+1,0,a),e.tasks.length===e.concurrency&&e.saturated(),o.setImmediate(e.process)}))}(i,e,t,r)},delete i.unshift,i},o.cargo=function(e,t){return A(e,1,t)},o.log=O("log"),o.dir=O("dir"),o.memoize=function(e,t){var n={},i={};function r(){var r=b(arguments),s=r.pop(),a=t.apply(null,r);a in n?o.nextTick((function(){s.apply(null,n[a])})):a in i?i[a].push(s):(i[a]=[s],e.apply(null,r.concat([function(){n[a]=b(arguments);var e=i[a];delete i[a];for(var t=0,r=e.length;t<r;t++)e[t].apply(null,arguments)}])))}return t=t||function(e){return e},r.memo=n,r.unmemoized=e,r},o.unmemoize=function(e){return function(){return(e.unmemoized||e).apply(null,arguments)}},o.times=D(o.map),o.timesSeries=D(o.mapSeries),o.timesLimit=function(e,t,n,i){return o.mapLimit(m(e),t,n,i)},o.seq=function(){var e=arguments;return function(){var t=this,n=b(arguments),i=n.slice(-1)[0];"function"==typeof i?n.pop():i=s,o.reduce(e,n,(function(e,n,i){n.apply(t,e.concat([function(){var e=arguments[0],t=b(arguments,1);i(e,t)}]))}),(function(e,n){i.apply(t,[e].concat(n))}))}},o.compose=function(){return o.seq.apply(null,Array.prototype.reverse.call(arguments))},o.applyEach=function(){var e=b(arguments);return L.apply(null,[o.eachOf].concat(e))},o.applyEachSeries=function(){var e=b(arguments);return L.apply(null,[o.eachOfSeries].concat(e))},o.forever=function(e,t){var n=a(t||s),i=R(e);!function e(t){if(t)return n(t);i(e)}()},o.ensureAsync=R,e.exports?e.exports=o:void 0===(i=function(){return o}.apply(t,[]))||(e.exports=i)}()},function(e,t,n){var i=n(72),r=n(27),o=n(73).ArraySet,s=n(147).MappingList;function a(e){e||(e={}),this._file=r.getArg(e,"file",null),this._sourceRoot=r.getArg(e,"sourceRoot",null),this._skipValidation=r.getArg(e,"skipValidation",!1),this._sources=new o,this._names=new o,this._mappings=new s,this._sourcesContents=null}a.prototype._version=3,a.fromSourceMap=function(e){var t=e.sourceRoot,n=new a({file:e.file,sourceRoot:t});return e.eachMapping((function(e){var i={generated:{line:e.generatedLine,column:e.generatedColumn}};null!=e.source&&(i.source=e.source,null!=t&&(i.source=r.relative(t,i.source)),i.original={line:e.originalLine,column:e.originalColumn},null!=e.name&&(i.name=e.name)),n.addMapping(i)})),e.sources.forEach((function(t){var i=e.sourceContentFor(t);null!=i&&n.setSourceContent(t,i)})),n},a.prototype.addMapping=function(e){var t=r.getArg(e,"generated"),n=r.getArg(e,"original",null),i=r.getArg(e,"source",null),o=r.getArg(e,"name",null);this._skipValidation||this._validateMapping(t,n,i,o),null!=i&&(i=String(i),this._sources.has(i)||this._sources.add(i)),null!=o&&(o=String(o),this._names.has(o)||this._names.add(o)),this._mappings.add({generatedLine:t.line,generatedColumn:t.column,originalLine:null!=n&&n.line,originalColumn:null!=n&&n.column,source:i,name:o})},a.prototype.setSourceContent=function(e,t){var n=e;null!=this._sourceRoot&&(n=r.relative(this._sourceRoot,n)),null!=t?(this._sourcesContents||(this._sourcesContents=Object.create(null)),this._sourcesContents[r.toSetString(n)]=t):this._sourcesContents&&(delete this._sourcesContents[r.toSetString(n)],0===Object.keys(this._sourcesContents).length&&(this._sourcesContents=null))},a.prototype.applySourceMap=function(e,t,n){var i=t;if(null==t){if(null==e.file)throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.');i=e.file}var s=this._sourceRoot;null!=s&&(i=r.relative(s,i));var a=new o,c=new o;this._mappings.unsortedForEach((function(t){if(t.source===i&&null!=t.originalLine){var o=e.originalPositionFor({line:t.originalLine,column:t.originalColumn});null!=o.source&&(t.source=o.source,null!=n&&(t.source=r.join(n,t.source)),null!=s&&(t.source=r.relative(s,t.source)),t.originalLine=o.line,t.originalColumn=o.column,null!=o.name&&(t.name=o.name))}var u=t.source;null==u||a.has(u)||a.add(u);var l=t.name;null==l||c.has(l)||c.add(l)}),this),this._sources=a,this._names=c,e.sources.forEach((function(t){var i=e.sourceContentFor(t);null!=i&&(null!=n&&(t=r.join(n,t)),null!=s&&(t=r.relative(s,t)),this.setSourceContent(t,i))}),this)},a.prototype._validateMapping=function(e,t,n,i){if(t&&"number"!=typeof t.line&&"number"!=typeof t.column)throw new Error("original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.");if((!(e&&"line"in e&&"column"in e&&e.line>0&&e.column>=0)||t||n||i)&&!(e&&"line"in e&&"column"in e&&t&&"line"in t&&"column"in t&&e.line>0&&e.column>=0&&t.line>0&&t.column>=0&&n))throw new Error("Invalid mapping: "+JSON.stringify({generated:e,source:n,original:t,name:i}))},a.prototype._serializeMappings=function(){for(var e,t,n,o,s=0,a=1,c=0,u=0,l=0,p=0,d="",h=this._mappings.toArray(),f=0,m=h.length;f<m;f++){if(e="",(t=h[f]).generatedLine!==a)for(s=0;t.generatedLine!==a;)e+=";",a++;else if(f>0){if(!r.compareByGeneratedPositionsInflated(t,h[f-1]))continue;e+=","}e+=i.encode(t.generatedColumn-s),s=t.generatedColumn,null!=t.source&&(o=this._sources.indexOf(t.source),e+=i.encode(o-p),p=o,e+=i.encode(t.originalLine-1-u),u=t.originalLine-1,e+=i.encode(t.originalColumn-c),c=t.originalColumn,null!=t.name&&(n=this._names.indexOf(t.name),e+=i.encode(n-l),l=n)),d+=e}return d},a.prototype._generateSourcesContent=function(e,t){return e.map((function(e){if(!this._sourcesContents)return null;null!=t&&(e=r.relative(t,e));var n=r.toSetString(e);return Object.prototype.hasOwnProperty.call(this._sourcesContents,n)?this._sourcesContents[n]:null}),this)},a.prototype.toJSON=function(){var e={version:this._version,sources:this._sources.toArray(),names:this._names.toArray(),mappings:this._serializeMappings()};return null!=this._file&&(e.file=this._file),null!=this._sourceRoot&&(e.sourceRoot=this._sourceRoot),this._sourcesContents&&(e.sourcesContent=this._generateSourcesContent(e.sources,e.sourceRoot)),e},a.prototype.toString=function(){return JSON.stringify(this.toJSON())},t.SourceMapGenerator=a},function(e,t,n){var i=n(146);t.encode=function(e){var t,n="",r=function(e){return e<0?1+(-e<<1):0+(e<<1)}(e);do{t=31&r,(r>>>=5)>0&&(t|=32),n+=i.encode(t)}while(r>0);return n},t.decode=function(e,t,n){var r,o,s,a,c=e.length,u=0,l=0;do{if(t>=c)throw new Error("Expected more digits in base 64 VLQ value.");if(-1===(o=i.decode(e.charCodeAt(t++))))throw new Error("Invalid base64 digit: "+e.charAt(t-1));r=!!(32&o),u+=(o&=31)<<l,l+=5}while(r);n.value=(a=(s=u)>>1,1==(1&s)?-a:a),n.rest=t}},function(e,t,n){var i=n(27),r=Object.prototype.hasOwnProperty,o="undefined"!=typeof Map;function s(){this._array=[],this._set=o?new Map:Object.create(null)}s.fromArray=function(e,t){for(var n=new s,i=0,r=e.length;i<r;i++)n.add(e[i],t);return n},s.prototype.size=function(){return o?this._set.size:Object.getOwnPropertyNames(this._set).length},s.prototype.add=function(e,t){var n=o?e:i.toSetString(e),s=o?this.has(e):r.call(this._set,n),a=this._array.length;s&&!t||this._array.push(e),s||(o?this._set.set(e,a):this._set[n]=a)},s.prototype.has=function(e){if(o)return this._set.has(e);var t=i.toSetString(e);return r.call(this._set,t)},s.prototype.indexOf=function(e){if(o){var t=this._set.get(e);if(t>=0)return t}else{var n=i.toSetString(e);if(r.call(this._set,n))return this._set[n]}throw new Error('"'+e+'" is not in the set.')},s.prototype.at=function(e){if(e>=0&&e<this._array.length)return this._array[e];throw new Error("No element indexed by "+e)},s.prototype.toArray=function(){return this._array.slice()},t.ArraySet=s},function(e,t,n){"use strict";class i extends HTMLElement{constructor(e){super(),this.name=e}init(e){this.install=e,this.install.emit("encountered-fatal-error"),this.innerHTML=`\n    <div class="content">\n      <p>\n        We've encountered an error!\n        Please email <a href="mailto:feedback@kite.com">feedback@kite.com</a>\n        with the contents of the error message below to get help.\n      </p>\n    </div>\n    <br>\n    <div class="status">\n      <h4>${e.state.error.message}</h4>\n      <pre>${e.state.error.stack}</pre>\n    </div>\n    `}release(){}}customElements.define("kite-atom-install-error",i),e.exports=i},function(e,t,n){"use strict";const i=n(10),r=n(4),o=n(42),s=n(14);e.exports=class{constructor(e,t,n="",o=!1){this.hostname=e,this.port=t,this.base=n,this.protocol=o?r:i,this.cookies={}}request(e,t,n){return new Promise((i,r)=>{let s;if(e.hostname=this.hostname,this.port>0&&(e.port=this.port),e.path=this.base+e.path,e.headers=e.headers||{},this.writeCookies(e.headers),"multipart/form-data"===e.headers["Content-Type"]||"multipart/form-data"===e.headers["content-type"]){delete e.headers["Content-Type"],delete e.headers["content-type"],s=new o;for(const e in t)s.append(e,t[e]);const n=s.getHeaders();for(const t in n)e.headers[t]=n[t]}const a=this.protocol.request(e,e=>{this.readCookies(e),i(e)});a.on("error",e=>r(e)),null!=n&&a.setTimeout(n,()=>r(new Error("timeout"))),s?s.pipe(a):(t&&a.write(t),a.end())})}readCookies(e){s.parseSetCookies(e.headers["set-cookie"]).forEach(e=>{this.cookies[e.Name]=e})}writeCookies(e){const t=[];for(var n in this.cookies)t.push(this.cookies[n]);t.length&&(e.Cookies=s.dumpCookies(t))}}},function(e,t,n){"use strict";const i=n(14);e.exports=class{constructor(e,t,n,i){n=n||"",i=i||!1,this.hostname=e,this.port=t,this.base=n,this.protocol=i?"https":"http",this.cookies={}}request(e,t,n){const i=this.port&&-1!==this.port?`${this.hostname}:${this.port}`:this.hostname,r=`${this.protocol}://${i}${this.base}${e.path}`,o=e.method||"GET";return new Promise((i,s)=>{const a=new XMLHttpRequest;if(a.addEventListener("error",s),a.addEventListener("abort",s),a.addEventListener("load",()=>{const t=a.responseText;i(((e,t,n,i={})=>{const r={statusCode:e,req:n,on(e,n){switch(e){case"data":n(t);break;case"end":n()}}};for(let e in i)r[e]=i[e];return r.headers=r.headers||{},r})(a.status,t,{method:o,path:e.path,url:r}))}),a.open(o,r),n&&(a.timeout=n,a.ontimeout=()=>{s(new Error("Request Timeout"))}),e.headers){if("multipart/form-data"===e.headers["Content-Type"]||"multipart/form-data"===e.headers["content-type"]){delete e.headers["Content-Type"],delete e.headers["content-type"];const n=new FormData;for(const e in t)n.append(e,t[e]);t=n}for(const t in e.headers)a.setRequestHeader(t,e.headers[t])}e.headers&&e.headers["Cache-Control"]||a.setRequestHeader("Cache-Control","no-cache, must-revalidate"),a.send(t)})}readCookies(e){i.parseSetCookies(e.headers["set-cookie"]).forEach(e=>{this.cookies[e.Name]=e})}writeCookies(e){var t=[];for(var n in this.cookies)t.push(this.cookies[n]);t.length&&(e.Cookies=i.dumpCookies(t))}}},function(e,t,n){"use strict";e.exports={checkArgumentKeys:function(e,t,n,...i){const r=[];if(i.forEach((e,n)=>{null==t[e]&&r.push(e)}),r.length)throw new Error(`Missing mandatory key${r.length>1?"s":""} ${r.join(", ")} in argument ${n} of ${e.name}`)},checkArguments:function(e,...t){const[n,i]=function(e){const[,t,n]=/(\w+)\(([^\)]+)\)/.exec(e.toString());return[t,n.split(/,\s*/)]}(e),r=[];if(t.forEach((e,t)=>{null==e&&r.push(i[t])}),r.length)throw new Error(`Missing argument${r.length>1?"s":""} ${r.join(", ")} in ${n}`)},merge:function(e,t){const n={};for(const t in e)n[t]=e[t];for(const e in t)n[e]=t[e];return n},reject:function(e,t){const n={};for(const i in t)i!==e&&(n[i]=t[i]);return n}}},function(e,t,n){"use strict";const i=n(44);function r(e){return encodeURI(e).replace(/^([A-Z]):/,"/windows/$1").replace(/\/|\\|%5C/g,":")}e.exports={cleanPath:r,onboardingFilePath:function(e,t){return["/clientapi/plugins/onboarding_file",["editor="+e,"language="+t].join("&")].join("?")},hoverPath:function(e,t,n,o,s){const a=i(t);return[`/api/buffer/${o}/${r(e)}/${a}/hover`,["cursor_runes="+n,"offset_encoding="+s].join("&")].join("?")},membersPath:function(e,t,n){return[`/api/editor/value/${e}/members`,["offset="+t,"limit="+n].join("&")].join("?")},projectDirPath:function(e){return"/clientapi/projectdir?filename="+encodeURI(e)},shouldNotifyPath:function(e){return"/clientapi/permissions/notify?filename="+encodeURI(e)},statusPath:function(e){return"/clientapi/status?filename="+encodeURI(e)},usagesPath:function(e,t,n){return[`/api/editor/value/${e}/usages`,["offset="+t,"limit="+n].join("&")].join("?")}}},function(e,t,n){"use strict";e.exports=class extends Error{get type(){return"bad_status"}constructor(e,t){super(e),this.data=t,Error.captureStackTrace(this,this.constructor)}}},function(e,t,n){"use strict";const i=n(5),r=n(1),o=n(3),{Logger:s}=n(33),a=o.join(o.dirname(atom.config.getUserConfigPath()||r.homedir()),"kite-config.json");var c=null;!function(){try{s.verbose(`initializing localconfig from ${a}...`);var e=i.readFileSync(a,{encoding:"utf8"});c=JSON.parse(e)}catch(e){c={}}}(),e.exports={get:function(e,t){return e in c?c[e]:t},set:function(e,t){var n;c[e]=t,n=JSON.stringify(c,null,2),!atom.inSpecMode()&&i.writeFile(a,n,"utf8",e=>{e&&s.error("failed to persist localconfig to "+a,e)})}}},function(e,t,n){"use strict";const i=n(1),r=n(26),o=n(23),s=n(30),a=n(79),{STATES:c}=n(15),u=n(48),l=n(183);e.exports={STATES:c,adapter:(()=>{switch(i.platform()){case"darwin":return n(184);case"win32":return n(185);case"linux":return n(186);default:return n(187)}})(),emitter:new r,client:new u("localhost","46624"),toggleRequestDebug(){this.client instanceof u?this.client=new l(this.client.hostname,this.client.port):this.client=new u(this.client.hostname,this.client.port)},onDidFailRequest(e){return this.emitter.on("did-fail-request",e),{dispose:()=>{this.emitter.removeListener("did-fail-request",e)}}},request(e,t,n){return this.client.request(e,t,n).catch(()=>{let n=Promise.resolve();return o.shouldAddCatchProcessing(e.path)&&(n=n.then(()=>this.isKiteSupported()).then(()=>this.isKiteInstalled()).then(()=>this.isKiteRunning())),n.then(()=>{throw new s("Kite could not be reached when attempting a request",{state:c.UNREACHABLE,request:e,requestData:t})})}).then(n=>n.statusCode>=400?o.handleResponseData(n).then(i=>{throw new a("bad_status",{responseStatus:n.statusCode,request:e,requestData:t,response:n,responseData:i})}):n).catch(e=>{throw this.emitter.emit("did-fail-request",e),e})},checkHealth(){const e=([e])=>{throw e};return this.isKiteSupported().then(()=>o.anyPromise([this.isKiteInstalled(),this.isKiteEnterpriseInstalled()]).catch(e)).then(()=>o.anyPromise([this.isKiteRunning(),this.isKiteEnterpriseRunning()]).catch(e)).then(()=>this.isKiteReachable()).then(()=>c.READY).catch(e=>{if(!e.data||null==e.data.state)throw e;return e.data.state})},handleState(){return this.checkHealth()},isKiteSupported(){return this.adapter.isKiteSupported()?Promise.resolve():Promise.reject(new s("Kite is currently not support on your platform",{state:c.UNSUPPORTED}))},isKiteInstalled(){return this.adapter.isKiteInstalled()},isKiteRunning(){return this.adapter.isKiteRunning()},canInstallKite(){return this.isKiteSupported().then(()=>o.reversePromise(this.adapter.isKiteInstalled(),new s("Kite is already installed",{state:c.INSTALLED})))},installKite(e){return this.adapter.installKite(e)},downloadKiteRelease(e){return this.adapter.downloadKiteRelease(e)},downloadKite(e,t){return this.adapter.downloadKite(e,t)},canRunKite(){return this.isKiteInstalled().then(()=>o.reversePromise(this.isKiteRunning(),new s("Kite is already runnning",{state:c.RUNNING})))},runKiteWithCopilot(){return this.adapter.runKiteWithCopilot()},runKite(){return this.adapter.runKite()},runKiteAndWait(e,t){return this.runKite().then(()=>this.waitForKite(e,t))},isKiteReachable(){return this.client.request({path:"/clientapi/ping",method:"GET"},null,200)},waitForKite(e,t){return o.retryPromise(()=>this.isKiteReachable(),e,t)},isKiteEnterpriseInstalled(){return this.adapter.isKiteEnterpriseInstalled()},isKiteEnterpriseRunning(){return this.adapter.isKiteEnterpriseRunning()},canRunKiteEnterprise(){return this.isKiteEnterpriseInstalled().then(()=>o.reversePromise(this.isKiteEnterpriseRunning(),new s("Kite Enterprise is already runnning",{state:c.RUNNING})))},runKiteEnterprise(){return this.adapter.runKiteEnterprise()},runKiteEnterpriseAndWait(e,t){return this.runKiteEnterprise().then(()=>this.waitForKite(e,t))},hasBothKiteInstalled(){return this.adapter.hasBothKiteInstalled()},hasManyKiteInstallation(){return this.adapter.hasManyKiteInstallation()},hasManyKiteEnterpriseInstallation(){return this.adapter.hasManyKiteEnterpriseInstallation()},isAdmin(){return this.adapter.isAdmin()},arch(){return this.adapter.arch()},isOSSupported(){return this.adapter.isOSSupported()},isOSVersionSupported(){return this.adapter.isOSVersionSupported()},isUserAuthenticated(){return this.client.request({path:"/clientapi/user",method:"GET"}).then(e=>{switch(e.statusCode){case 200:return o.handleResponseData(e);case 401:throw new s("Kite is not authenticated",{state:c.UNLOGGED});default:return o.handleResponseData(e).then(t=>{throw new a("Invalid response status when checking Kite authentication",{responseStatus:e.statusCode,request:{path:"/clientapi/user",method:"GET"},response:e,responseData:t})})}})}}},function(e){e.exports=JSON.parse('{"name":"kite","main":"./dist/main","version":"0.178.0","description":"Python coding assistant featuring AI-powered autocompletions, advanced function signatures, and instant documentation","repository":"https://github.com/kiteco/atom-plugin","keywords":[],"license":"SEE LICENSE IN LICENSE","engines":{"atom":">=1.0.0 <2.0.0"},"scripts":{"lint":"eslint .","lint:fix":"eslint --fix .","build-prod":"webpack --config config/webpack.config.js --mode production","prepublishOnly":"rm -rf node_modules && rm -f package-lock.json && apm install && rm -rf dist && npm run build-prod","build-dev":"webpack --config config/webpack.config.js --mode none","clean-dev-install":"apm unlink && rm -rf node_modules && rm -f package-lock.json && apm install && rm -rf dist && npm run build-dev && apm link"},"configSchema":{"showGoBetaNotification":{"type":"boolean","default":true,"title":"Show Go beta notification","description":"Whether or not to show the Go beta notification."},"showWelcomeNotificationOnStartup":{"type":"boolean","default":true,"title":"Show welcome notification on startup","description":"Whether or not to show the Kite welcome notification on startup."},"enableCompletions":{"type":"boolean","default":true,"title":"Enable completions","description":"Automatically show completions from Kite as you type."},"enableHoverUI":{"type":"boolean","default":true,"title":"Enable hover","description":"Show a quick summary of a symbol when you hover your mouse over it."},"enableSnippets":{"type":"boolean","default":true,"title":"Enable snippets","description":"Enable snippets feature."},"maxVisibleSuggestionsAlongSignature":{"type":"integer","default":5,"title":"Completions limit with function signature","description":"Maximum number of completions that can be shown when a function signature is also shown."},"loggingLevel":{"type":"string","default":"info","enum":["silly","verbose","debug","info","warning","error"],"title":"Logging level","description":"The verbosity level of Kite logs."},"pollingInterval":{"type":"integer","default":15000,"min":1000,"max":60000,"title":"Polling interval","description":"Interval in milliseconds at which the Kite package polls Kite Engine to get the status of the current file."},"developerMode":{"type":"boolean","default":false,"title":"Developer mode","description":"Displays JSON data from Kite Engine that\'s used when rendering a UI element."},"startKiteAtStartup":{"type":"boolean","default":true,"title":"Start Kite Engine on startup","description":"Automatically start Kite Engine on editor startup if it\'s not already running."},"signatureKwargsVisible":{"type":"boolean","default":false,"title":"Show function keyword arguments","description":"Show inferred keyword arguments for a function when the function signature panel is shown"},"signaturePopularPatternsVisible":{"type":"boolean","default":false,"title":"Show function call examples","description":"Show examples on how to call a function when the function signature panel is shown"}},"providedServices":{"autocomplete.provider":{"versions":{"2.0.0":"completions"}}},"consumedServices":{"status-bar":{"versions":{"^1.0.0":"consumeStatusBar"}}},"dependencies":{"analytics-node":"^3.1.1","element-resize-detector":"^1.1.11","fuzzaldrin-plus":"^0.4.1","getmac":"1.2.1","kite-api":"=3.12.0","kite-connector":"=3.12.0","kite-installer":"=3.16.0","lodash":"^4.17.11","md5":"^2.2.0","rollbar":"^2.3.8","tiny-relative-date":"^1.3.0","underscore-plus":"^1"},"devDependencies":{"@babel/core":"^7.4.3","@babel/preset-env":"^7.4.3","babel-eslint":"^6.1.2","babel-loader":"^8.0.5","editors-json-tests":"git://github.com/kiteco/editors-json-tests.git#master","eslint":"^4.18.2","eslint-config":"^0.3.0","eslint-config-fbjs":"^1.1.1","eslint-plugin-babel":"^3.3.0","eslint-plugin-flowtype":"^2.29.1","eslint-plugin-jasmine":"^2.2.0","eslint-plugin-prefer-object-spread":"^1.1.0","eslint-plugin-react":"^5.2.2","fbjs":"^0.8.6","file-loader":"^5.1.0","javascript-obfuscator":"^0.8.3","sinon":"^2.3.5","webpack":"^4.30.0","webpack-cli":"^3.3.0"}}')},function(e,t,n){"use strict";const i=n(44),{Point:r,Range:o}=n(0),{head:s}=n(2);function a(e){return"/api/editor/value/"+e}function c(e){return encodeURI(e).replace(/^([A-Z]):/,"/windows/$1").replace(/\/|\\|%5C/g,":")}function u(e){return"kite-atom-internal://"+e}function l(e){return`${p(e.start)}/${p(e.end)}`}function p(e){return`${e.row}:${e.column}`}e.exports={accountPath:function(){return"/api/account/user"},authorizedPath:function(e){return"/clientapi/permissions/authorized?filename="+encodeURI(e.getPath())},examplePath:function(e){return"/api/python/curation/"+e},hoverPath:function(e,t){t=o.fromObject(t);const n=i(e.getText());return[`/api/buffer/atom/${c(e.getPath())}/${n}/hover`,["selection_begin_runes="+e.getBuffer().characterIndexForPosition(t.start),"selection_end_runes="+e.getBuffer().characterIndexForPosition(t.end)].join("&")].join("?")},hoverPositionPath:function(e,t){t=r.fromObject(t);const n=i(e.getText());return[`/api/buffer/atom/${c(e.getPath())}/${n}/hover`,"cursor_runes="+e.getBuffer().characterIndexForPosition(t)].join("?")},internalExpandPositionURL:function(e){return u("expand-position/"+p(e))},internalExpandURL:function(e){return u("expand/"+e)},internalGotoIdURL:function(e){return u("goto-id/"+e)},internalGotoPositionURL:function(e){return u("goto-position/"+p(e))},internalGotoRangeURL:function(e){return u("goto-range/"+l(e))},internalGotoURL:function(e){return u(`goto/${encodeURI(e.filename)}:${e.line}`)},internalOpenPositionInWebURL:function(e){return u("open-position/"+p(e))},internalOpenRangeInWebURL:function(e){return u("open-range/"+l(e))},internalURL:u,languagesPath:function(){return"/clientapi/languages"},membersPath:function(e,t=0,n=999){return[`/api/editor/value/${e}/members`,["offset="+t,"limit="+n].join("&")].join("?")},metricsCounterPath:function(){return"/clientapi/metrics/counters"},openExampleInWebURL:function(e){return"http://localhost:46624/clientapi/desktoplogin?d=/examples/python/"+function(e){return encodeURI(String(e)).replace(/;/g,"%3B")}(e)},projectDirPath:function(e){return["/clientapi/projectdir","filename="+encodeURI(e)].join("?")},reportPath:function(e){return a(s(s(e.symbol).value).id)},searchPath:function(e,t=0,n=10){return["/api/editor/search",["q="+encodeURI(e),"offset="+t,"limit="+n].join("&")].join("?")},serializeRangeForPath:l,shouldNotifyPath:function(e){return["/clientapi/permissions/notify","filename="+encodeURI(e)].join("?")},signaturePath:function(){return"/clientapi/editor/signatures"},statusPath:function(e){return["/clientapi/status","filename="+encodeURI(e)].join("?")},symbolReportPath:function(e){return"/api/editor/symbol/"+e},tokensPath:function(e){const t=i(e.getText());return`/api/buffer/atom/${c(e.getPath())}/${t}/tokens`},usagePath:function(e){return"/api/editor/usages/"+e},usagesPath:function(e,t=0,n=999){return[`/api/editor/value/${e}/usages`,["offset="+t,"limit="+n].join("&")].join("?")},valueReportPath:a}},function(e,t,n){const i=n(3),{head:r,compact:o,flatten:s,detailGet:a,detailLang:c,getDetails:u,getFunctionDetails:l}=n(2),{symbolLabel:p,symbolType:d,valueLabel:h,valueType:f,idIsEmpty:m,memberLabel:g,parameterName:v,parameterType:x,parameterDefault:b,symbolReturnType:y}=n(36),{highlightChunk:w,wrapLine:k,wrapPre:E}=n(50);function _(e){return E(e.split("\n").map(w).map(k).join(""))}function S(e){return e.replace(/(\()/g,"$1​")}function I(e){return e.replace(/([\(\.])/g,"$1​")}function P(e){return(e||"").replace(/<body>/,"").replace(/<\/body>/,"")}function T(e){const{symbol:t}=e,n=r(t.value);return""+(e.report&&e.report.description_html&&""!==e.report.description_html?P(e.report.description_html):""!=n.synopsis?n.synopsis:t.synopsis)}function C(e,t){return`\n  <div class="expand-header split-line">\n    <span class="name"><code>${I(e)}</code></span>\n    <span class="type">${t}</span>\n  </div>`}function A(e,t,{help:n=""}={}){return`<section class="${i=e,i.toLowerCase().replace(/\s+/g,"-")}">\n    <h4>${e}${n}</h4>\n    <div class="section-content">\n      ${t}\n    </div>\n  </section>`;var i}function O(e){return`<li data-name="${e.title}">\n    <i class="icon icon-so"></i>\n    <a href="${e.url}" class="link so-link">\n      <span class="title">${e.title}</span>\n      <i class="icon icon-chevron-right"></i>\n    </a>\n  </li>`}function D(e){return`<li data-name="${e.title}">\n    <a href="kite-atom-internal://example/${e.id}" class="example">\n      <span class="title">${e.title}</span>\n      <i class="icon icon-chevron-right"></i>\n    </a>\n  </li>`}function L(e){const t=i.basename(e.filename),n=["kite-atom-internal://goto/"+R(e.filename),e.line,e.begin_runes].join(":");return`<div class="usage-container">\n    <li class="usage">\n      ${_(S(e.code.trim()))}\n      <div class="links">\n        <i class="icon icon-file-code"></i>\n        <a href="${n}">${t}<span class="line-colon">:</span>${e.line}</a>\n      </div>\n    </li>\n  </div>`}function R(e){return e.replace(/^\//,"")}function N(e){const t=m(e.id)?g(e):`<a href="kite-atom-internal://member/${e.id}">${g(e)}</a>`;if(e.value){const n=r(e.value).kind,i=r(e.value).synopsis,o=i?`<p>${i}</p>`:"";return`<li data-name="${e.name}">\n    <div class="split-line">\n      <span class="name">${t}</span>\n      <span class="type"><code>${n}</code></span>\n    </div>\n    ${o}\n    </li>`}return""}function K(e,t,n,i){return e<=i?"":`<a href="kite-atom-internal://members-list/${t.id}"\n          class="more-members">All ${e} ${"type"===t.kind?"attributes":"members"}\n          <i class="icon icon-chevron-right"></i>\n          </a>`}function j(e,t="",n=!1){return e?`<dt class="split-line ${n?"highlight":""}">\n      <span class="name"><code>${v(e,t)}${b(e)}</code></span>\n      <span class="type"><code>${x(e)}</code></span>\n    </dt>\n    <dd>${e.synopsis}</dd>\n    `:""}e.exports={debugData:function(e){return atom.config.get("kite.developerMode")?`<div class="debug">\n        ${_(JSON.stringify(e,null,2))}\n      </div>`:""},highlightCode:_,pluralize:(e,t,n)=>1===e?t:n,renderDefinition:function(e){const t=e.report&&e.report.definition;if(t&&t.filename&&""!==t.filename.trim()){return A("Definition",`\n    <ul>\n      <li>\n        <i class="icon icon-file-code"></i>\n        <a href="${`kite-atom-internal://goto/${encodeURI(R(t.filename))}:${t.line}`}" class="file">\n          <span class="title">${i.basename(t.filename)}<span class="line-colon">:</span>${t.line}</span>\n        </a>\n      </li>\n    </ul>`)}return""},renderDocs:function(e){const t=T(e);return t&&""!==t.trim()?`<section class="summary collapsible collapse">\n        <h4>Description</h4>\n        <div class="description section-content">${t}</div>\n      </section>`:""},renderExample:D,renderExamples:function(e,t=2){return e.report&&e.report.examples&&e.report.examples.length?A("How to",`\n      <ul>${e.report.examples.slice(0,t).map(D).join("")}</ul>\n      ${function(e,t,n){const i=t.value?t.value.id:t.symbol.id?t.symbol.id:t.symbol.value.id?t.symbol.value.id:t.symbol.value[0].id;return e<=n?"":`<a href="kite-atom-internal://examples-list/${i}"\n          class="more-examples">All ${e} examples\n          <i class="icon icon-chevron-right"></i>\n          </a>`}(e.report.examples.length,e,t)}\n    `):""},renderExtend:function(e){return""},renderHeader:C,renderInvocations:function(e){return""},renderLink:O,renderLinks:function(e,t=2){return e.report&&e.report.links&&e.report.links.length?A("Links",`\n      <ul>${e.report.links.slice(0,t).map(O).join("")}</ul>\n      ${function(e,t,n){return e<=n?"":`<a href="kite-atom-internal://links-list/${t.value?t.value.id:t.symbol.id}"\n          class="more-links">All ${e} links\n          <i class="icon icon-chevron-right"></i></a>`}(e.report.links.length,e,t)}\n    `):""},renderMember:N,renderMembers:function(e,t){if(!e||!e.details)return"";const n=u(e,"type","module"),{members:i,total_members:r}=n;return 0===i.length?"":A("Popular members",null!=t?`\n        <ul class='code'>\n          ${i.slice(0,t).map(e=>N(e)).join("")}\n        </ul>\n        ${K(r-t,e,t)}`:`\n        <ul class='code'>\n          ${i.map(e=>N(e)).join("")}\n        </ul>\n        ${r>i.length?K(r,e,t):""}`)},renderParameter:j,renderParameters:function(e){const t=l(e),n=o(s(function(e){switch(c(e)){case"python":return[e?e.parameters||a(e,"constructor","parameters"):null,e?a(e,"vararg"):null,e?a(e,"kwarg"):null];case"javascript":return[e?e.parameters:null,e?a(e,"rest"):null];default:return[e?e.parameters:null]}}(t)));return t&&n.length?A("Parameters",`\n    <dl>\n      ${t.parameters?t.parameters.map(e=>j(e)).join(""):""}\n      ${function(e){switch(c(e)){case"python":return[j(a(e,"vararg"),"*"),j(a(e,"kwarg"),"**")].join("");case"javascript":return[j(a(e,"rest"),"…")].join("");default:return""}}(t)}\n    </dl>`):""},renderReturnType:function(e){const t=y(e);return""!==t?A("Returns",`<code>${t}</code>`):""},renderSymbolHeader:function(e){return C(p(e),d(e))},renderUsages:function(e){return e.report&&e.report.usages&&e.report.usages.length?A("Examples from your code",`<ul class="usages-box">\n        ${e.report.usages.map(L).join("")}\n      </ul>`,{help:'<a href="https://help.kite.com/article/58-why-kite-is-cloud-powered"\n          title="This section is visible just to you. Click to learn more."\n          class="learn-more icon icon-question"></a>'}):""},renderValueHeader:function(e){return C(h(e),f(e))},section:A,symbolDescription:T,valueDescription:function(e){const{value:t}=e;return`<div class="description">${e.report&&e.report.description_html&&""!==e.report.description_html?P(e.report.description_html):t.synopsis}</div>`},wrapAfterParenthesis:S,wrapAfterParenthesisAndDots:I}},function(e,t,n){"use strict";const i=n(5),r=n(3),o=r.resolve(__dirname,"..","assets"),s=String(i.readFileSync(r.join(o,"kitesync.svg"))),a=String(i.readFileSync(r.join(o,"logo-no-text.svg"))),c=String(i.readFileSync(r.join(o,"logo-small.svg")));class u extends HTMLElement{static initClass(){return customElements.define("kite-logo",this),this}constructor(){super(),this.hasAttribute("sync")?this.innerHTML=s:this.hasAttribute("small")?this.innerHTML=c:this.innerHTML=a}}e.exports=u.initClass()},function(e,t,n){"use strict";const{TextEditor:i,CompositeDisposable:r,Emitter:o}=n(0),s=n(208),{DisposableEvent:a}=n(2),{SEARCH_DEBOUNCE:c,SEARCH_QUERY_EVENT:u,SEARCH_QUERY_SELECTION_EVENT:l,DEFAULT_QUERY_SELECTION_EVENT:p,SEARCH_NAV_DOWN:d,SEARCH_NAV_UP:h}=n(24);class f extends HTMLElement{constructor(e){super(),this.parent=e,this.searchInput=new i({placeholderText:"How do I...",mini:!0}),this.searchInputView=this.searchInput.getElement(),this.appendLogo(),this.cursorPos=[0,0],this.instantiate()}appendLogo(){const e=document.createElement("span");e.className="ksg-kite-logo",this.searchInputView.appendChild(e)}instantiate(){this.emitter||(this.emitter=new o),this.subscriptions||(this.subscriptions=new r),this.wrapper||(this.wrapper=document.createElement("div"),this.wrapper.setAttribute("class","kite-ksg-search-wrapper")),this.loading=!1,this.shouldCancelChangeQuery=!1;const e=s(e=>{this.shouldCancelChangeQuery?this.shouldCancelChangeQuery=!1:this.emitter&&this.emitter.emit(u,{query:this.searchInput.getText()})},c,{leading:!0});this.subscriptions.add(this.searchInput.onDidChange(e)),this.subscriptions.add(this.searchInput.onWillInsertText(()=>{if(0===this.searchInput.getText().length){n(11).record("ksg_query","started")}})),this.subscriptions.add(new a(this,"keydown",e=>{switch(e.code){case"ArrowDown":this.searchResults&&this.searchResults.moveSelection(d);break;case"ArrowUp":this.searchResults&&this.searchResults.moveSelection(h);break;case"Enter":if(this.searchResults&&this.searchResults.hasSelected()){const e=this.searchResults.isDefaultSelected();this.shouldCancelChangeQuery=!0,this.searchInput.setText(this.searchResults.selectedQuery),this.clearSearchResults(),e?this.emitter.emit(p,{query:this.searchInput.getText()}):this.emitter.emit(l,{query:this.searchInput.getText()})}else if(this.searchInput.getText()&&this.searchResults){const e=this.searchResults.onlyResultIsDefault();this.clearSearchResults(),e?this.emitter.emit(p,{query:this.searchInput.getText()}):this.emitter.emit(l,{query:this.searchInput.getText()})}}})),this.wrapper.appendChild(this.searchInputView),this.appendChild(this.wrapper),this.instantiated=!0}blurSearchBar(){this.blur(),this.searchInputView&&this.searchInputView.blur()}connectedCallback(){!this.instantiated&&this.instantiate(),this.setFocus()}disconnectedCallback(){this.dispose()}dispose(){this.clearSearchResults(),this.instantiated=!1,this.searchInput&&this.searchInput.setText(""),this.searchResults&&this.searchResults.dispose(),this.searchResults=null,this.wrapper&&this.wrapper.parentNode&&this.wrapper.parentNode.removeChild(this.wrapper),this.wrapper&&this.searchInputView&&this.wrapper.removeChild(this.searchInputView),this.wrapper=null,this.subscriptions&&this.subscriptions.dispose(),this.emitter&&this.emitter.dispose(),delete this.subscriptions,delete this.emitter}onSearchQueryEvent(e){return this.emitter.on(u,e)}onSearchQuerySelection(e){return this.emitter.on(l,e)}onDefaultQuerySelection(e){return this.emitter.on(p,e)}clearSearchResults(){this.searchResults&&this.searchResults.clear()}toggleLoading(){}updateView({payload:e,data:t}){if(this.toggleLoading(),this.searchResults||(this.searchResults=new m,this.wrapper.appendChild(this.searchResults),this.subscriptions.add(this.searchResults.onResultPropagation(({resultText:e,type:t})=>{switch(this.shouldCancelChangeQuery=!0,this.searchResults.clear(),t){case l:this.searchInput.setText(e),this.emitter.emit(l,{query:this.searchInput.getText()});break;default:this.emitter.emit(p,{query:e})}}))),this.parent&&this.parent.codeBlocksElem&&this.parent.codeBlocksElem.loading)return;if(this.clearSearchResults(),"error"===e)return void this.parent.toggleErrorMessage(!0);this.parent.toggleErrorMessage(!1),t&&t.completions&&t.completions.length>0&&this.searchResults.appendResults(t.completions,t.query),t&&t.query&&!t.completions&&this.searchResults.appendResults([t.query],t.query),this.searchInput.getText()&&(this.focus(),this.searchResults.appendDefault(this.searchInput.getText()))}setFocus(){this.searchInputView.focus(),this.searchInput.moveToBottom()}}class m extends HTMLElement{constructor(){super(),this.selectedIdx=null,this.results=[],this.emitter=new o,this.subscriptions=new r}dispose(){this.clear(),this.emitter&&this.emitter.dispose(),this.subscriptions&&this.subscriptions.dispose()}onlyResultIsDefault(){return 1===this.results.length&&this.results[0]instanceof v}appendResults(e,t){const n=document.createDocumentFragment();e.forEach(e=>{const i=new g(e,t,this);i.initialize(),i.id=this.results.length,n.appendChild(i),this.results.push(i),this.subscriptions.add(i.onResultClick(e=>{this.emitter.emit("did-search-result-propagate",{resultText:e,type:l})}))}),this.appendChild(n),this.classList.add("bordered")}appendDefault(e){const t=new v(e,this);t.initialize(),t.id=this.results.length,this.subscriptions.add(t.onResultClick(e=>{this.emitter.emit("did-search-result-propagate",{resultText:e,type:p})})),this.results.push(t),this.appendChild(t),this.classList.add("bordered")}onResultPropagation(e){return this.emitter.on("did-search-result-propagate",e)}moveSelection(e){if(this.results&&this.results.length)switch(e){case d:null===this.selectedIdx?(this.selectedIdx=0,this.results[this.selectedIdx].toggleHighlight()):this.selectedIdx<this.results.length-1&&(this.results[this.selectedIdx].toggleHighlight(),this.selectedIdx++,this.results[this.selectedIdx].toggleHighlight());break;case h:null!==this.selectedIdx&&(this.results[this.selectedIdx].toggleHighlight(),0===this.selectedIdx?this.selectedIdx=null:(this.selectedIdx--,this.results[this.selectedIdx].toggleHighlight()))}}get selectedQuery(){if(null!==this.selectedIdx){const e=this.results[this.selectedIdx];return e instanceof v?e.query:e.resultText}return null}isDefaultSelected(){return null!==this.selectedIdx&&this.results[this.selectedIdx]instanceof v}hasSelected(){return null!==this.selectedIdx}clearHighlight(){null!==this.selectedIdx&&(this.results[this.selectedIdx].toggleHighlight(),this.selectedIdx=null)}clear(){for(;this.lastChild;)this.lastChild.dispose&&this.lastChild.dispose(),this.removeChild(this.lastChild);this.selectedIdx=null,this.results=[],this.classList.remove("bordered")}}class g extends HTMLElement{constructor(e,t,n){super(),this.parent=n,this.emitter=new o,this.subscriptions=new r,this.resultText=e,this.query=t,this.isHighlighted=!1}initialize(){this.subscriptions.add(new a(this,"click",this.clickHandler));const e=this.resultContent;e.onmouseover=()=>{this.parent.clearHighlight(),this.parent.selectedIdx=this.id,this.toggleHighlight()},this.appendChild(e)}get resultContent(){const e=document.createElement("div"),t=document.createElement("span");return t.classList.add("ksg-search-result-remainder"),this.resultText.startsWith(this.query)?(e.appendChild(document.createTextNode(this.query)),t.textContent=this.resultText.substring(this.query.length)):t.textContent=this.resultText,e.appendChild(t),e}clickHandler(e){this.emitter.emit("search-result-clicked",this.resultText)}dispose(){this.emitter&&this.emitter.dispose(),this.subscriptions&&this.subscriptions.dispose()}onResultClick(e){return this.emitter.on("search-result-clicked",e)}toggleHighlight(){this.isHighlighted?this.classList.remove("highlight-result"):this.classList.add("highlight-result"),this.isHighlighted=!this.isHighlighted}}class v extends g{constructor(e,t){super(null,e,t)}get resultContent(){const e=document.createElement("div"),t=document.createElement("span");t.classList.add("plain-text"),t.textContent="Search for ",e.appendChild(t);const n=document.createTextNode(this.query);e.appendChild(n);const i=document.createElement("span");return i.classList.add("plain-text"),i.textContent=" on Google ⇗",e.appendChild(i),e}clickHandler(e){this.emitter.emit("default-result-clicked",this.query)}onResultClick(e){return this.emitter.on("default-result-clicked",e)}}customElements.define("kite-ksg-search-results",m),customElements.define("kite-ksg-search-result",g),customElements.define("kite-ksg-default-search-result",v),customElements.define("kite-ksg-search",f),e.exports={KSGSearch:f,KSGDefaultSearchResult:v,KSGSearchResult:g,KSGSearchResults:m}},function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},function(e,t,n){var i=n(210),r="object"==typeof self&&self&&self.Object===Object&&self,o=i||r||Function("return this")();e.exports=o},function(e,t,n){var i=n(88).Symbol;e.exports=i},function(e,t,n){var i=n(19),r=n(55).Stream,o=n(91);function s(){this.writable=!1,this.readable=!0,this.dataSize=0,this.maxDataSize=2097152,this.pauseStreams=!0,this._released=!1,this._streams=[],this._currentStream=null,this._insideLoop=!1,this._pendingNext=!1}e.exports=s,i.inherits(s,r),s.create=function(e){var t=new this;for(var n in e=e||{})t[n]=e[n];return t},s.isStreamLike=function(e){return"function"!=typeof e&&"string"!=typeof e&&"boolean"!=typeof e&&"number"!=typeof e&&!Buffer.isBuffer(e)},s.prototype.append=function(e){if(s.isStreamLike(e)){if(!(e instanceof o)){var t=o.create(e,{maxDataSize:1/0,pauseStream:this.pauseStreams});e.on("data",this._checkDataSize.bind(this)),e=t}this._handleErrors(e),this.pauseStreams&&e.pause()}return this._streams.push(e),this},s.prototype.pipe=function(e,t){return r.prototype.pipe.call(this,e,t),this.resume(),e},s.prototype._getNext=function(){if(this._currentStream=null,this._insideLoop)this._pendingNext=!0;else{this._insideLoop=!0;try{do{this._pendingNext=!1,this._realGetNext()}while(this._pendingNext)}finally{this._insideLoop=!1}}},s.prototype._realGetNext=function(){var e=this._streams.shift();void 0!==e?"function"==typeof e?e(function(e){s.isStreamLike(e)&&(e.on("data",this._checkDataSize.bind(this)),this._handleErrors(e)),this._pipeNext(e)}.bind(this)):this._pipeNext(e):this.end()},s.prototype._pipeNext=function(e){if(this._currentStream=e,s.isStreamLike(e))return e.on("end",this._getNext.bind(this)),void e.pipe(this,{end:!1});var t=e;this.write(t),this._getNext()},s.prototype._handleErrors=function(e){var t=this;e.on("error",(function(e){t._emitError(e)}))},s.prototype.write=function(e){this.emit("data",e)},s.prototype.pause=function(){this.pauseStreams&&(this.pauseStreams&&this._currentStream&&"function"==typeof this._currentStream.pause&&this._currentStream.pause(),this.emit("pause"))},s.prototype.resume=function(){this._released||(this._released=!0,this.writable=!0,this._getNext()),this.pauseStreams&&this._currentStream&&"function"==typeof this._currentStream.resume&&this._currentStream.resume(),this.emit("resume")},s.prototype.end=function(){this._reset(),this.emit("end")},s.prototype.destroy=function(){this._reset(),this.emit("close")},s.prototype._reset=function(){this.writable=!1,this._streams=[],this._currentStream=null},s.prototype._checkDataSize=function(){if(this._updateDataSize(),!(this.dataSize<=this.maxDataSize)){var e="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this._emitError(new Error(e))}},s.prototype._updateDataSize=function(){this.dataSize=0;var e=this;this._streams.forEach((function(t){t.dataSize&&(e.dataSize+=t.dataSize)})),this._currentStream&&this._currentStream.dataSize&&(this.dataSize+=this._currentStream.dataSize)},s.prototype._emitError=function(e){this._reset(),this.emit("error",e)}},function(e,t,n){var i=n(55).Stream,r=n(19);function o(){this.source=null,this.dataSize=0,this.maxDataSize=1048576,this.pauseStream=!0,this._maxDataSizeExceeded=!1,this._released=!1,this._bufferedEvents=[]}e.exports=o,r.inherits(o,i),o.create=function(e,t){var n=new this;for(var i in t=t||{})n[i]=t[i];n.source=e;var r=e.emit;return e.emit=function(){return n._handleEmit(arguments),r.apply(e,arguments)},e.on("error",(function(){})),n.pauseStream&&e.pause(),n},Object.defineProperty(o.prototype,"readable",{configurable:!0,enumerable:!0,get:function(){return this.source.readable}}),o.prototype.setEncoding=function(){return this.source.setEncoding.apply(this.source,arguments)},o.prototype.resume=function(){this._released||this.release(),this.source.resume()},o.prototype.pause=function(){this.source.pause()},o.prototype.release=function(){this._released=!0,this._bufferedEvents.forEach(function(e){this.emit.apply(this,e)}.bind(this)),this._bufferedEvents=[]},o.prototype.pipe=function(){var e=i.prototype.pipe.apply(this,arguments);return this.resume(),e},o.prototype._handleEmit=function(e){this._released?this.emit.apply(this,e):("data"===e[0]&&(this.dataSize+=e[1].length,this._checkIfMaxDataSizeExceeded()),this._bufferedEvents.push(e))},o.prototype._checkIfMaxDataSizeExceeded=function(){if(!(this._maxDataSizeExceeded||this.dataSize<=this.maxDataSize)){this._maxDataSizeExceeded=!0;var e="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this.emit("error",new Error(e))}}},function(e,t,n){"use strict";
/*!
 * mime-types
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i,r,o,s=n(93),a=n(3).extname,c=/^\s*([^;\s]*)(?:;|\s|$)/,u=/^text\//i;function l(e){if(!e||"string"!=typeof e)return!1;var t=c.exec(e),n=t&&s[t[1].toLowerCase()];return n&&n.charset?n.charset:!(!t||!u.test(t[1]))&&"UTF-8"}t.charset=l,t.charsets={lookup:l},t.contentType=function(e){if(!e||"string"!=typeof e)return!1;var n=-1===e.indexOf("/")?t.lookup(e):e;if(!n)return!1;if(-1===n.indexOf("charset")){var i=t.charset(n);i&&(n+="; charset="+i.toLowerCase())}return n},t.extension=function(e){if(!e||"string"!=typeof e)return!1;var n=c.exec(e),i=n&&t.extensions[n[1].toLowerCase()];if(!i||!i.length)return!1;return i[0]},t.extensions=Object.create(null),t.lookup=function(e){if(!e||"string"!=typeof e)return!1;var n=a("x."+e).toLowerCase().substr(1);if(!n)return!1;return t.types[n]||!1},t.types=Object.create(null),i=t.extensions,r=t.types,o=["nginx","apache",void 0,"iana"],Object.keys(s).forEach((function(e){var t=s[e],n=t.extensions;if(n&&n.length){i[e]=n;for(var a=0;a<n.length;a++){var c=n[a];if(r[c]){var u=o.indexOf(s[r[c]].source),l=o.indexOf(t.source);if("application/octet-stream"!==r[c]&&(u>l||u===l&&"application/"===r[c].substr(0,12)))continue}r[c]=e}}}))},function(e,t,n){
/*!
 * mime-db
 * Copyright(c) 2014 Jonathan Ong
 * MIT Licensed
 */
e.exports=n(94)},function(e){e.exports=JSON.parse('{"application/1d-interleaved-parityfec":{"source":"iana"},"application/3gpdash-qoe-report+xml":{"source":"iana","compressible":true},"application/3gpp-ims+xml":{"source":"iana","compressible":true},"application/a2l":{"source":"iana"},"application/activemessage":{"source":"iana"},"application/activity+json":{"source":"iana","compressible":true},"application/alto-costmap+json":{"source":"iana","compressible":true},"application/alto-costmapfilter+json":{"source":"iana","compressible":true},"application/alto-directory+json":{"source":"iana","compressible":true},"application/alto-endpointcost+json":{"source":"iana","compressible":true},"application/alto-endpointcostparams+json":{"source":"iana","compressible":true},"application/alto-endpointprop+json":{"source":"iana","compressible":true},"application/alto-endpointpropparams+json":{"source":"iana","compressible":true},"application/alto-error+json":{"source":"iana","compressible":true},"application/alto-networkmap+json":{"source":"iana","compressible":true},"application/alto-networkmapfilter+json":{"source":"iana","compressible":true},"application/aml":{"source":"iana"},"application/andrew-inset":{"source":"iana","extensions":["ez"]},"application/applefile":{"source":"iana"},"application/applixware":{"source":"apache","extensions":["aw"]},"application/atf":{"source":"iana"},"application/atfx":{"source":"iana"},"application/atom+xml":{"source":"iana","compressible":true,"extensions":["atom"]},"application/atomcat+xml":{"source":"iana","compressible":true,"extensions":["atomcat"]},"application/atomdeleted+xml":{"source":"iana","compressible":true,"extensions":["atomdeleted"]},"application/atomicmail":{"source":"iana"},"application/atomsvc+xml":{"source":"iana","compressible":true,"extensions":["atomsvc"]},"application/atsc-dwd+xml":{"source":"iana","compressible":true,"extensions":["dwd"]},"application/atsc-held+xml":{"source":"iana","compressible":true,"extensions":["held"]},"application/atsc-rdt+json":{"source":"iana","compressible":true},"application/atsc-rsat+xml":{"source":"iana","compressible":true,"extensions":["rsat"]},"application/atxml":{"source":"iana"},"application/auth-policy+xml":{"source":"iana","compressible":true},"application/bacnet-xdd+zip":{"source":"iana","compressible":false},"application/batch-smtp":{"source":"iana"},"application/bdoc":{"compressible":false,"extensions":["bdoc"]},"application/beep+xml":{"source":"iana","compressible":true},"application/calendar+json":{"source":"iana","compressible":true},"application/calendar+xml":{"source":"iana","compressible":true,"extensions":["xcs"]},"application/call-completion":{"source":"iana"},"application/cals-1840":{"source":"iana"},"application/cbor":{"source":"iana"},"application/cbor-seq":{"source":"iana"},"application/cccex":{"source":"iana"},"application/ccmp+xml":{"source":"iana","compressible":true},"application/ccxml+xml":{"source":"iana","compressible":true,"extensions":["ccxml"]},"application/cdfx+xml":{"source":"iana","compressible":true,"extensions":["cdfx"]},"application/cdmi-capability":{"source":"iana","extensions":["cdmia"]},"application/cdmi-container":{"source":"iana","extensions":["cdmic"]},"application/cdmi-domain":{"source":"iana","extensions":["cdmid"]},"application/cdmi-object":{"source":"iana","extensions":["cdmio"]},"application/cdmi-queue":{"source":"iana","extensions":["cdmiq"]},"application/cdni":{"source":"iana"},"application/cea":{"source":"iana"},"application/cea-2018+xml":{"source":"iana","compressible":true},"application/cellml+xml":{"source":"iana","compressible":true},"application/cfw":{"source":"iana"},"application/clue+xml":{"source":"iana","compressible":true},"application/clue_info+xml":{"source":"iana","compressible":true},"application/cms":{"source":"iana"},"application/cnrp+xml":{"source":"iana","compressible":true},"application/coap-group+json":{"source":"iana","compressible":true},"application/coap-payload":{"source":"iana"},"application/commonground":{"source":"iana"},"application/conference-info+xml":{"source":"iana","compressible":true},"application/cose":{"source":"iana"},"application/cose-key":{"source":"iana"},"application/cose-key-set":{"source":"iana"},"application/cpl+xml":{"source":"iana","compressible":true},"application/csrattrs":{"source":"iana"},"application/csta+xml":{"source":"iana","compressible":true},"application/cstadata+xml":{"source":"iana","compressible":true},"application/csvm+json":{"source":"iana","compressible":true},"application/cu-seeme":{"source":"apache","extensions":["cu"]},"application/cwt":{"source":"iana"},"application/cybercash":{"source":"iana"},"application/dart":{"compressible":true},"application/dash+xml":{"source":"iana","compressible":true,"extensions":["mpd"]},"application/dashdelta":{"source":"iana"},"application/davmount+xml":{"source":"iana","compressible":true,"extensions":["davmount"]},"application/dca-rft":{"source":"iana"},"application/dcd":{"source":"iana"},"application/dec-dx":{"source":"iana"},"application/dialog-info+xml":{"source":"iana","compressible":true},"application/dicom":{"source":"iana"},"application/dicom+json":{"source":"iana","compressible":true},"application/dicom+xml":{"source":"iana","compressible":true},"application/dii":{"source":"iana"},"application/dit":{"source":"iana"},"application/dns":{"source":"iana"},"application/dns+json":{"source":"iana","compressible":true},"application/dns-message":{"source":"iana"},"application/docbook+xml":{"source":"apache","compressible":true,"extensions":["dbk"]},"application/dskpp+xml":{"source":"iana","compressible":true},"application/dssc+der":{"source":"iana","extensions":["dssc"]},"application/dssc+xml":{"source":"iana","compressible":true,"extensions":["xdssc"]},"application/dvcs":{"source":"iana"},"application/ecmascript":{"source":"iana","compressible":true,"extensions":["ecma","es"]},"application/edi-consent":{"source":"iana"},"application/edi-x12":{"source":"iana","compressible":false},"application/edifact":{"source":"iana","compressible":false},"application/efi":{"source":"iana"},"application/emergencycalldata.comment+xml":{"source":"iana","compressible":true},"application/emergencycalldata.control+xml":{"source":"iana","compressible":true},"application/emergencycalldata.deviceinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.ecall.msd":{"source":"iana"},"application/emergencycalldata.providerinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.serviceinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.subscriberinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.veds+xml":{"source":"iana","compressible":true},"application/emma+xml":{"source":"iana","compressible":true,"extensions":["emma"]},"application/emotionml+xml":{"source":"iana","compressible":true,"extensions":["emotionml"]},"application/encaprtp":{"source":"iana"},"application/epp+xml":{"source":"iana","compressible":true},"application/epub+zip":{"source":"iana","compressible":false,"extensions":["epub"]},"application/eshop":{"source":"iana"},"application/exi":{"source":"iana","extensions":["exi"]},"application/expect-ct-report+json":{"source":"iana","compressible":true},"application/fastinfoset":{"source":"iana"},"application/fastsoap":{"source":"iana"},"application/fdt+xml":{"source":"iana","compressible":true,"extensions":["fdt"]},"application/fhir+json":{"source":"iana","compressible":true},"application/fhir+xml":{"source":"iana","compressible":true},"application/fido.trusted-apps+json":{"compressible":true},"application/fits":{"source":"iana"},"application/flexfec":{"source":"iana"},"application/font-sfnt":{"source":"iana"},"application/font-tdpfr":{"source":"iana","extensions":["pfr"]},"application/font-woff":{"source":"iana","compressible":false},"application/framework-attributes+xml":{"source":"iana","compressible":true},"application/geo+json":{"source":"iana","compressible":true,"extensions":["geojson"]},"application/geo+json-seq":{"source":"iana"},"application/geopackage+sqlite3":{"source":"iana"},"application/geoxacml+xml":{"source":"iana","compressible":true},"application/gltf-buffer":{"source":"iana"},"application/gml+xml":{"source":"iana","compressible":true,"extensions":["gml"]},"application/gpx+xml":{"source":"apache","compressible":true,"extensions":["gpx"]},"application/gxf":{"source":"apache","extensions":["gxf"]},"application/gzip":{"source":"iana","compressible":false,"extensions":["gz"]},"application/h224":{"source":"iana"},"application/held+xml":{"source":"iana","compressible":true},"application/hjson":{"extensions":["hjson"]},"application/http":{"source":"iana"},"application/hyperstudio":{"source":"iana","extensions":["stk"]},"application/ibe-key-request+xml":{"source":"iana","compressible":true},"application/ibe-pkg-reply+xml":{"source":"iana","compressible":true},"application/ibe-pp-data":{"source":"iana"},"application/iges":{"source":"iana"},"application/im-iscomposing+xml":{"source":"iana","compressible":true},"application/index":{"source":"iana"},"application/index.cmd":{"source":"iana"},"application/index.obj":{"source":"iana"},"application/index.response":{"source":"iana"},"application/index.vnd":{"source":"iana"},"application/inkml+xml":{"source":"iana","compressible":true,"extensions":["ink","inkml"]},"application/iotp":{"source":"iana"},"application/ipfix":{"source":"iana","extensions":["ipfix"]},"application/ipp":{"source":"iana"},"application/isup":{"source":"iana"},"application/its+xml":{"source":"iana","compressible":true,"extensions":["its"]},"application/java-archive":{"source":"apache","compressible":false,"extensions":["jar","war","ear"]},"application/java-serialized-object":{"source":"apache","compressible":false,"extensions":["ser"]},"application/java-vm":{"source":"apache","compressible":false,"extensions":["class"]},"application/javascript":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["js","mjs"]},"application/jf2feed+json":{"source":"iana","compressible":true},"application/jose":{"source":"iana"},"application/jose+json":{"source":"iana","compressible":true},"application/jrd+json":{"source":"iana","compressible":true},"application/json":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["json","map"]},"application/json-patch+json":{"source":"iana","compressible":true},"application/json-seq":{"source":"iana"},"application/json5":{"extensions":["json5"]},"application/jsonml+json":{"source":"apache","compressible":true,"extensions":["jsonml"]},"application/jwk+json":{"source":"iana","compressible":true},"application/jwk-set+json":{"source":"iana","compressible":true},"application/jwt":{"source":"iana"},"application/kpml-request+xml":{"source":"iana","compressible":true},"application/kpml-response+xml":{"source":"iana","compressible":true},"application/ld+json":{"source":"iana","compressible":true,"extensions":["jsonld"]},"application/lgr+xml":{"source":"iana","compressible":true,"extensions":["lgr"]},"application/link-format":{"source":"iana"},"application/load-control+xml":{"source":"iana","compressible":true},"application/lost+xml":{"source":"iana","compressible":true,"extensions":["lostxml"]},"application/lostsync+xml":{"source":"iana","compressible":true},"application/lxf":{"source":"iana"},"application/mac-binhex40":{"source":"iana","extensions":["hqx"]},"application/mac-compactpro":{"source":"apache","extensions":["cpt"]},"application/macwriteii":{"source":"iana"},"application/mads+xml":{"source":"iana","compressible":true,"extensions":["mads"]},"application/manifest+json":{"charset":"UTF-8","compressible":true,"extensions":["webmanifest"]},"application/marc":{"source":"iana","extensions":["mrc"]},"application/marcxml+xml":{"source":"iana","compressible":true,"extensions":["mrcx"]},"application/mathematica":{"source":"iana","extensions":["ma","nb","mb"]},"application/mathml+xml":{"source":"iana","compressible":true,"extensions":["mathml"]},"application/mathml-content+xml":{"source":"iana","compressible":true},"application/mathml-presentation+xml":{"source":"iana","compressible":true},"application/mbms-associated-procedure-description+xml":{"source":"iana","compressible":true},"application/mbms-deregister+xml":{"source":"iana","compressible":true},"application/mbms-envelope+xml":{"source":"iana","compressible":true},"application/mbms-msk+xml":{"source":"iana","compressible":true},"application/mbms-msk-response+xml":{"source":"iana","compressible":true},"application/mbms-protection-description+xml":{"source":"iana","compressible":true},"application/mbms-reception-report+xml":{"source":"iana","compressible":true},"application/mbms-register+xml":{"source":"iana","compressible":true},"application/mbms-register-response+xml":{"source":"iana","compressible":true},"application/mbms-schedule+xml":{"source":"iana","compressible":true},"application/mbms-user-service-description+xml":{"source":"iana","compressible":true},"application/mbox":{"source":"iana","extensions":["mbox"]},"application/media-policy-dataset+xml":{"source":"iana","compressible":true},"application/media_control+xml":{"source":"iana","compressible":true},"application/mediaservercontrol+xml":{"source":"iana","compressible":true,"extensions":["mscml"]},"application/merge-patch+json":{"source":"iana","compressible":true},"application/metalink+xml":{"source":"apache","compressible":true,"extensions":["metalink"]},"application/metalink4+xml":{"source":"iana","compressible":true,"extensions":["meta4"]},"application/mets+xml":{"source":"iana","compressible":true,"extensions":["mets"]},"application/mf4":{"source":"iana"},"application/mikey":{"source":"iana"},"application/mipc":{"source":"iana"},"application/mmt-aei+xml":{"source":"iana","compressible":true,"extensions":["maei"]},"application/mmt-usd+xml":{"source":"iana","compressible":true,"extensions":["musd"]},"application/mods+xml":{"source":"iana","compressible":true,"extensions":["mods"]},"application/moss-keys":{"source":"iana"},"application/moss-signature":{"source":"iana"},"application/mosskey-data":{"source":"iana"},"application/mosskey-request":{"source":"iana"},"application/mp21":{"source":"iana","extensions":["m21","mp21"]},"application/mp4":{"source":"iana","extensions":["mp4s","m4p"]},"application/mpeg4-generic":{"source":"iana"},"application/mpeg4-iod":{"source":"iana"},"application/mpeg4-iod-xmt":{"source":"iana"},"application/mrb-consumer+xml":{"source":"iana","compressible":true,"extensions":["xdf"]},"application/mrb-publish+xml":{"source":"iana","compressible":true,"extensions":["xdf"]},"application/msc-ivr+xml":{"source":"iana","compressible":true},"application/msc-mixer+xml":{"source":"iana","compressible":true},"application/msword":{"source":"iana","compressible":false,"extensions":["doc","dot"]},"application/mud+json":{"source":"iana","compressible":true},"application/multipart-core":{"source":"iana"},"application/mxf":{"source":"iana","extensions":["mxf"]},"application/n-quads":{"source":"iana","extensions":["nq"]},"application/n-triples":{"source":"iana","extensions":["nt"]},"application/nasdata":{"source":"iana"},"application/news-checkgroups":{"source":"iana"},"application/news-groupinfo":{"source":"iana"},"application/news-transmission":{"source":"iana"},"application/nlsml+xml":{"source":"iana","compressible":true},"application/node":{"source":"iana"},"application/nss":{"source":"iana"},"application/ocsp-request":{"source":"iana"},"application/ocsp-response":{"source":"iana"},"application/octet-stream":{"source":"iana","compressible":false,"extensions":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/oda":{"source":"iana","extensions":["oda"]},"application/odm+xml":{"source":"iana","compressible":true},"application/odx":{"source":"iana"},"application/oebps-package+xml":{"source":"iana","compressible":true,"extensions":["opf"]},"application/ogg":{"source":"iana","compressible":false,"extensions":["ogx"]},"application/omdoc+xml":{"source":"apache","compressible":true,"extensions":["omdoc"]},"application/onenote":{"source":"apache","extensions":["onetoc","onetoc2","onetmp","onepkg"]},"application/oscore":{"source":"iana"},"application/oxps":{"source":"iana","extensions":["oxps"]},"application/p2p-overlay+xml":{"source":"iana","compressible":true,"extensions":["relo"]},"application/parityfec":{"source":"iana"},"application/passport":{"source":"iana"},"application/patch-ops-error+xml":{"source":"iana","compressible":true,"extensions":["xer"]},"application/pdf":{"source":"iana","compressible":false,"extensions":["pdf"]},"application/pdx":{"source":"iana"},"application/pem-certificate-chain":{"source":"iana"},"application/pgp-encrypted":{"source":"iana","compressible":false,"extensions":["pgp"]},"application/pgp-keys":{"source":"iana"},"application/pgp-signature":{"source":"iana","extensions":["asc","sig"]},"application/pics-rules":{"source":"apache","extensions":["prf"]},"application/pidf+xml":{"source":"iana","compressible":true},"application/pidf-diff+xml":{"source":"iana","compressible":true},"application/pkcs10":{"source":"iana","extensions":["p10"]},"application/pkcs12":{"source":"iana"},"application/pkcs7-mime":{"source":"iana","extensions":["p7m","p7c"]},"application/pkcs7-signature":{"source":"iana","extensions":["p7s"]},"application/pkcs8":{"source":"iana","extensions":["p8"]},"application/pkcs8-encrypted":{"source":"iana"},"application/pkix-attr-cert":{"source":"iana","extensions":["ac"]},"application/pkix-cert":{"source":"iana","extensions":["cer"]},"application/pkix-crl":{"source":"iana","extensions":["crl"]},"application/pkix-pkipath":{"source":"iana","extensions":["pkipath"]},"application/pkixcmp":{"source":"iana","extensions":["pki"]},"application/pls+xml":{"source":"iana","compressible":true,"extensions":["pls"]},"application/poc-settings+xml":{"source":"iana","compressible":true},"application/postscript":{"source":"iana","compressible":true,"extensions":["ai","eps","ps"]},"application/ppsp-tracker+json":{"source":"iana","compressible":true},"application/problem+json":{"source":"iana","compressible":true},"application/problem+xml":{"source":"iana","compressible":true},"application/provenance+xml":{"source":"iana","compressible":true,"extensions":["provx"]},"application/prs.alvestrand.titrax-sheet":{"source":"iana"},"application/prs.cww":{"source":"iana","extensions":["cww"]},"application/prs.hpub+zip":{"source":"iana","compressible":false},"application/prs.nprend":{"source":"iana"},"application/prs.plucker":{"source":"iana"},"application/prs.rdf-xml-crypt":{"source":"iana"},"application/prs.xsf+xml":{"source":"iana","compressible":true},"application/pskc+xml":{"source":"iana","compressible":true,"extensions":["pskcxml"]},"application/qsig":{"source":"iana"},"application/raml+yaml":{"compressible":true,"extensions":["raml"]},"application/raptorfec":{"source":"iana"},"application/rdap+json":{"source":"iana","compressible":true},"application/rdf+xml":{"source":"iana","compressible":true,"extensions":["rdf","owl"]},"application/reginfo+xml":{"source":"iana","compressible":true,"extensions":["rif"]},"application/relax-ng-compact-syntax":{"source":"iana","extensions":["rnc"]},"application/remote-printing":{"source":"iana"},"application/reputon+json":{"source":"iana","compressible":true},"application/resource-lists+xml":{"source":"iana","compressible":true,"extensions":["rl"]},"application/resource-lists-diff+xml":{"source":"iana","compressible":true,"extensions":["rld"]},"application/rfc+xml":{"source":"iana","compressible":true},"application/riscos":{"source":"iana"},"application/rlmi+xml":{"source":"iana","compressible":true},"application/rls-services+xml":{"source":"iana","compressible":true,"extensions":["rs"]},"application/route-apd+xml":{"source":"iana","compressible":true,"extensions":["rapd"]},"application/route-s-tsid+xml":{"source":"iana","compressible":true,"extensions":["sls"]},"application/route-usd+xml":{"source":"iana","compressible":true,"extensions":["rusd"]},"application/rpki-ghostbusters":{"source":"iana","extensions":["gbr"]},"application/rpki-manifest":{"source":"iana","extensions":["mft"]},"application/rpki-publication":{"source":"iana"},"application/rpki-roa":{"source":"iana","extensions":["roa"]},"application/rpki-updown":{"source":"iana"},"application/rsd+xml":{"source":"apache","compressible":true,"extensions":["rsd"]},"application/rss+xml":{"source":"apache","compressible":true,"extensions":["rss"]},"application/rtf":{"source":"iana","compressible":true,"extensions":["rtf"]},"application/rtploopback":{"source":"iana"},"application/rtx":{"source":"iana"},"application/samlassertion+xml":{"source":"iana","compressible":true},"application/samlmetadata+xml":{"source":"iana","compressible":true},"application/sbml+xml":{"source":"iana","compressible":true,"extensions":["sbml"]},"application/scaip+xml":{"source":"iana","compressible":true},"application/scim+json":{"source":"iana","compressible":true},"application/scvp-cv-request":{"source":"iana","extensions":["scq"]},"application/scvp-cv-response":{"source":"iana","extensions":["scs"]},"application/scvp-vp-request":{"source":"iana","extensions":["spq"]},"application/scvp-vp-response":{"source":"iana","extensions":["spp"]},"application/sdp":{"source":"iana","extensions":["sdp"]},"application/secevent+jwt":{"source":"iana"},"application/senml+cbor":{"source":"iana"},"application/senml+json":{"source":"iana","compressible":true},"application/senml+xml":{"source":"iana","compressible":true,"extensions":["senmlx"]},"application/senml-exi":{"source":"iana"},"application/sensml+cbor":{"source":"iana"},"application/sensml+json":{"source":"iana","compressible":true},"application/sensml+xml":{"source":"iana","compressible":true,"extensions":["sensmlx"]},"application/sensml-exi":{"source":"iana"},"application/sep+xml":{"source":"iana","compressible":true},"application/sep-exi":{"source":"iana"},"application/session-info":{"source":"iana"},"application/set-payment":{"source":"iana"},"application/set-payment-initiation":{"source":"iana","extensions":["setpay"]},"application/set-registration":{"source":"iana"},"application/set-registration-initiation":{"source":"iana","extensions":["setreg"]},"application/sgml":{"source":"iana"},"application/sgml-open-catalog":{"source":"iana"},"application/shf+xml":{"source":"iana","compressible":true,"extensions":["shf"]},"application/sieve":{"source":"iana","extensions":["siv","sieve"]},"application/simple-filter+xml":{"source":"iana","compressible":true},"application/simple-message-summary":{"source":"iana"},"application/simplesymbolcontainer":{"source":"iana"},"application/sipc":{"source":"iana"},"application/slate":{"source":"iana"},"application/smil":{"source":"iana"},"application/smil+xml":{"source":"iana","compressible":true,"extensions":["smi","smil"]},"application/smpte336m":{"source":"iana"},"application/soap+fastinfoset":{"source":"iana"},"application/soap+xml":{"source":"iana","compressible":true},"application/sparql-query":{"source":"iana","extensions":["rq"]},"application/sparql-results+xml":{"source":"iana","compressible":true,"extensions":["srx"]},"application/spirits-event+xml":{"source":"iana","compressible":true},"application/sql":{"source":"iana"},"application/srgs":{"source":"iana","extensions":["gram"]},"application/srgs+xml":{"source":"iana","compressible":true,"extensions":["grxml"]},"application/sru+xml":{"source":"iana","compressible":true,"extensions":["sru"]},"application/ssdl+xml":{"source":"apache","compressible":true,"extensions":["ssdl"]},"application/ssml+xml":{"source":"iana","compressible":true,"extensions":["ssml"]},"application/stix+json":{"source":"iana","compressible":true},"application/swid+xml":{"source":"iana","compressible":true,"extensions":["swidtag"]},"application/tamp-apex-update":{"source":"iana"},"application/tamp-apex-update-confirm":{"source":"iana"},"application/tamp-community-update":{"source":"iana"},"application/tamp-community-update-confirm":{"source":"iana"},"application/tamp-error":{"source":"iana"},"application/tamp-sequence-adjust":{"source":"iana"},"application/tamp-sequence-adjust-confirm":{"source":"iana"},"application/tamp-status-query":{"source":"iana"},"application/tamp-status-response":{"source":"iana"},"application/tamp-update":{"source":"iana"},"application/tamp-update-confirm":{"source":"iana"},"application/tar":{"compressible":true},"application/taxii+json":{"source":"iana","compressible":true},"application/tei+xml":{"source":"iana","compressible":true,"extensions":["tei","teicorpus"]},"application/tetra_isi":{"source":"iana"},"application/thraud+xml":{"source":"iana","compressible":true,"extensions":["tfi"]},"application/timestamp-query":{"source":"iana"},"application/timestamp-reply":{"source":"iana"},"application/timestamped-data":{"source":"iana","extensions":["tsd"]},"application/tlsrpt+gzip":{"source":"iana"},"application/tlsrpt+json":{"source":"iana","compressible":true},"application/tnauthlist":{"source":"iana"},"application/toml":{"compressible":true,"extensions":["toml"]},"application/trickle-ice-sdpfrag":{"source":"iana"},"application/trig":{"source":"iana"},"application/ttml+xml":{"source":"iana","compressible":true,"extensions":["ttml"]},"application/tve-trigger":{"source":"iana"},"application/tzif":{"source":"iana"},"application/tzif-leap":{"source":"iana"},"application/ulpfec":{"source":"iana"},"application/urc-grpsheet+xml":{"source":"iana","compressible":true},"application/urc-ressheet+xml":{"source":"iana","compressible":true,"extensions":["rsheet"]},"application/urc-targetdesc+xml":{"source":"iana","compressible":true},"application/urc-uisocketdesc+xml":{"source":"iana","compressible":true},"application/vcard+json":{"source":"iana","compressible":true},"application/vcard+xml":{"source":"iana","compressible":true},"application/vemmi":{"source":"iana"},"application/vividence.scriptfile":{"source":"apache"},"application/vnd.1000minds.decision-model+xml":{"source":"iana","compressible":true,"extensions":["1km"]},"application/vnd.3gpp-prose+xml":{"source":"iana","compressible":true},"application/vnd.3gpp-prose-pc3ch+xml":{"source":"iana","compressible":true},"application/vnd.3gpp-v2x-local-service-information":{"source":"iana"},"application/vnd.3gpp.access-transfer-events+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.bsf+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.gmop+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mc-signalling-ear":{"source":"iana"},"application/vnd.3gpp.mcdata-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-payload":{"source":"iana"},"application/vnd.3gpp.mcdata-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-signalling":{"source":"iana"},"application/vnd.3gpp.mcdata-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-floor-request+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-location-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-mbms-usage-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-signed+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-ue-init-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-affiliation-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-location-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-mbms-usage-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-transmission-request+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mid-call+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.pic-bw-large":{"source":"iana","extensions":["plb"]},"application/vnd.3gpp.pic-bw-small":{"source":"iana","extensions":["psb"]},"application/vnd.3gpp.pic-bw-var":{"source":"iana","extensions":["pvb"]},"application/vnd.3gpp.sms":{"source":"iana"},"application/vnd.3gpp.sms+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.srvcc-ext+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.srvcc-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.state-and-event-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.ussd+xml":{"source":"iana","compressible":true},"application/vnd.3gpp2.bcmcsinfo+xml":{"source":"iana","compressible":true},"application/vnd.3gpp2.sms":{"source":"iana"},"application/vnd.3gpp2.tcap":{"source":"iana","extensions":["tcap"]},"application/vnd.3lightssoftware.imagescal":{"source":"iana"},"application/vnd.3m.post-it-notes":{"source":"iana","extensions":["pwn"]},"application/vnd.accpac.simply.aso":{"source":"iana","extensions":["aso"]},"application/vnd.accpac.simply.imp":{"source":"iana","extensions":["imp"]},"application/vnd.acucobol":{"source":"iana","extensions":["acu"]},"application/vnd.acucorp":{"source":"iana","extensions":["atc","acutc"]},"application/vnd.adobe.air-application-installer-package+zip":{"source":"apache","compressible":false,"extensions":["air"]},"application/vnd.adobe.flash.movie":{"source":"iana"},"application/vnd.adobe.formscentral.fcdt":{"source":"iana","extensions":["fcdt"]},"application/vnd.adobe.fxp":{"source":"iana","extensions":["fxp","fxpl"]},"application/vnd.adobe.partial-upload":{"source":"iana"},"application/vnd.adobe.xdp+xml":{"source":"iana","compressible":true,"extensions":["xdp"]},"application/vnd.adobe.xfdf":{"source":"iana","extensions":["xfdf"]},"application/vnd.aether.imp":{"source":"iana"},"application/vnd.afpc.afplinedata":{"source":"iana"},"application/vnd.afpc.afplinedata-pagedef":{"source":"iana"},"application/vnd.afpc.foca-charset":{"source":"iana"},"application/vnd.afpc.foca-codedfont":{"source":"iana"},"application/vnd.afpc.foca-codepage":{"source":"iana"},"application/vnd.afpc.modca":{"source":"iana"},"application/vnd.afpc.modca-formdef":{"source":"iana"},"application/vnd.afpc.modca-mediummap":{"source":"iana"},"application/vnd.afpc.modca-objectcontainer":{"source":"iana"},"application/vnd.afpc.modca-overlay":{"source":"iana"},"application/vnd.afpc.modca-pagesegment":{"source":"iana"},"application/vnd.ah-barcode":{"source":"iana"},"application/vnd.ahead.space":{"source":"iana","extensions":["ahead"]},"application/vnd.airzip.filesecure.azf":{"source":"iana","extensions":["azf"]},"application/vnd.airzip.filesecure.azs":{"source":"iana","extensions":["azs"]},"application/vnd.amadeus+json":{"source":"iana","compressible":true},"application/vnd.amazon.ebook":{"source":"apache","extensions":["azw"]},"application/vnd.amazon.mobi8-ebook":{"source":"iana"},"application/vnd.americandynamics.acc":{"source":"iana","extensions":["acc"]},"application/vnd.amiga.ami":{"source":"iana","extensions":["ami"]},"application/vnd.amundsen.maze+xml":{"source":"iana","compressible":true},"application/vnd.android.ota":{"source":"iana"},"application/vnd.android.package-archive":{"source":"apache","compressible":false,"extensions":["apk"]},"application/vnd.anki":{"source":"iana"},"application/vnd.anser-web-certificate-issue-initiation":{"source":"iana","extensions":["cii"]},"application/vnd.anser-web-funds-transfer-initiation":{"source":"apache","extensions":["fti"]},"application/vnd.antix.game-component":{"source":"iana","extensions":["atx"]},"application/vnd.apache.thrift.binary":{"source":"iana"},"application/vnd.apache.thrift.compact":{"source":"iana"},"application/vnd.apache.thrift.json":{"source":"iana"},"application/vnd.api+json":{"source":"iana","compressible":true},"application/vnd.aplextor.warrp+json":{"source":"iana","compressible":true},"application/vnd.apothekende.reservation+json":{"source":"iana","compressible":true},"application/vnd.apple.installer+xml":{"source":"iana","compressible":true,"extensions":["mpkg"]},"application/vnd.apple.keynote":{"source":"iana","extensions":["keynote"]},"application/vnd.apple.mpegurl":{"source":"iana","extensions":["m3u8"]},"application/vnd.apple.numbers":{"source":"iana","extensions":["numbers"]},"application/vnd.apple.pages":{"source":"iana","extensions":["pages"]},"application/vnd.apple.pkpass":{"compressible":false,"extensions":["pkpass"]},"application/vnd.arastra.swi":{"source":"iana"},"application/vnd.aristanetworks.swi":{"source":"iana","extensions":["swi"]},"application/vnd.artisan+json":{"source":"iana","compressible":true},"application/vnd.artsquare":{"source":"iana"},"application/vnd.astraea-software.iota":{"source":"iana","extensions":["iota"]},"application/vnd.audiograph":{"source":"iana","extensions":["aep"]},"application/vnd.autopackage":{"source":"iana"},"application/vnd.avalon+json":{"source":"iana","compressible":true},"application/vnd.avistar+xml":{"source":"iana","compressible":true},"application/vnd.balsamiq.bmml+xml":{"source":"iana","compressible":true,"extensions":["bmml"]},"application/vnd.balsamiq.bmpr":{"source":"iana"},"application/vnd.banana-accounting":{"source":"iana"},"application/vnd.bbf.usp.error":{"source":"iana"},"application/vnd.bbf.usp.msg":{"source":"iana"},"application/vnd.bbf.usp.msg+json":{"source":"iana","compressible":true},"application/vnd.bekitzur-stech+json":{"source":"iana","compressible":true},"application/vnd.bint.med-content":{"source":"iana"},"application/vnd.biopax.rdf+xml":{"source":"iana","compressible":true},"application/vnd.blink-idb-value-wrapper":{"source":"iana"},"application/vnd.blueice.multipass":{"source":"iana","extensions":["mpm"]},"application/vnd.bluetooth.ep.oob":{"source":"iana"},"application/vnd.bluetooth.le.oob":{"source":"iana"},"application/vnd.bmi":{"source":"iana","extensions":["bmi"]},"application/vnd.bpf":{"source":"iana"},"application/vnd.bpf3":{"source":"iana"},"application/vnd.businessobjects":{"source":"iana","extensions":["rep"]},"application/vnd.byu.uapi+json":{"source":"iana","compressible":true},"application/vnd.cab-jscript":{"source":"iana"},"application/vnd.canon-cpdl":{"source":"iana"},"application/vnd.canon-lips":{"source":"iana"},"application/vnd.capasystems-pg+json":{"source":"iana","compressible":true},"application/vnd.cendio.thinlinc.clientconf":{"source":"iana"},"application/vnd.century-systems.tcp_stream":{"source":"iana"},"application/vnd.chemdraw+xml":{"source":"iana","compressible":true,"extensions":["cdxml"]},"application/vnd.chess-pgn":{"source":"iana"},"application/vnd.chipnuts.karaoke-mmd":{"source":"iana","extensions":["mmd"]},"application/vnd.ciedi":{"source":"iana"},"application/vnd.cinderella":{"source":"iana","extensions":["cdy"]},"application/vnd.cirpack.isdn-ext":{"source":"iana"},"application/vnd.citationstyles.style+xml":{"source":"iana","compressible":true,"extensions":["csl"]},"application/vnd.claymore":{"source":"iana","extensions":["cla"]},"application/vnd.cloanto.rp9":{"source":"iana","extensions":["rp9"]},"application/vnd.clonk.c4group":{"source":"iana","extensions":["c4g","c4d","c4f","c4p","c4u"]},"application/vnd.cluetrust.cartomobile-config":{"source":"iana","extensions":["c11amc"]},"application/vnd.cluetrust.cartomobile-config-pkg":{"source":"iana","extensions":["c11amz"]},"application/vnd.coffeescript":{"source":"iana"},"application/vnd.collabio.xodocuments.document":{"source":"iana"},"application/vnd.collabio.xodocuments.document-template":{"source":"iana"},"application/vnd.collabio.xodocuments.presentation":{"source":"iana"},"application/vnd.collabio.xodocuments.presentation-template":{"source":"iana"},"application/vnd.collabio.xodocuments.spreadsheet":{"source":"iana"},"application/vnd.collabio.xodocuments.spreadsheet-template":{"source":"iana"},"application/vnd.collection+json":{"source":"iana","compressible":true},"application/vnd.collection.doc+json":{"source":"iana","compressible":true},"application/vnd.collection.next+json":{"source":"iana","compressible":true},"application/vnd.comicbook+zip":{"source":"iana","compressible":false},"application/vnd.comicbook-rar":{"source":"iana"},"application/vnd.commerce-battelle":{"source":"iana"},"application/vnd.commonspace":{"source":"iana","extensions":["csp"]},"application/vnd.contact.cmsg":{"source":"iana","extensions":["cdbcmsg"]},"application/vnd.coreos.ignition+json":{"source":"iana","compressible":true},"application/vnd.cosmocaller":{"source":"iana","extensions":["cmc"]},"application/vnd.crick.clicker":{"source":"iana","extensions":["clkx"]},"application/vnd.crick.clicker.keyboard":{"source":"iana","extensions":["clkk"]},"application/vnd.crick.clicker.palette":{"source":"iana","extensions":["clkp"]},"application/vnd.crick.clicker.template":{"source":"iana","extensions":["clkt"]},"application/vnd.crick.clicker.wordbank":{"source":"iana","extensions":["clkw"]},"application/vnd.criticaltools.wbs+xml":{"source":"iana","compressible":true,"extensions":["wbs"]},"application/vnd.cryptii.pipe+json":{"source":"iana","compressible":true},"application/vnd.crypto-shade-file":{"source":"iana"},"application/vnd.ctc-posml":{"source":"iana","extensions":["pml"]},"application/vnd.ctct.ws+xml":{"source":"iana","compressible":true},"application/vnd.cups-pdf":{"source":"iana"},"application/vnd.cups-postscript":{"source":"iana"},"application/vnd.cups-ppd":{"source":"iana","extensions":["ppd"]},"application/vnd.cups-raster":{"source":"iana"},"application/vnd.cups-raw":{"source":"iana"},"application/vnd.curl":{"source":"iana"},"application/vnd.curl.car":{"source":"apache","extensions":["car"]},"application/vnd.curl.pcurl":{"source":"apache","extensions":["pcurl"]},"application/vnd.cyan.dean.root+xml":{"source":"iana","compressible":true},"application/vnd.cybank":{"source":"iana"},"application/vnd.d2l.coursepackage1p0+zip":{"source":"iana","compressible":false},"application/vnd.dart":{"source":"iana","compressible":true,"extensions":["dart"]},"application/vnd.data-vision.rdz":{"source":"iana","extensions":["rdz"]},"application/vnd.datapackage+json":{"source":"iana","compressible":true},"application/vnd.dataresource+json":{"source":"iana","compressible":true},"application/vnd.debian.binary-package":{"source":"iana"},"application/vnd.dece.data":{"source":"iana","extensions":["uvf","uvvf","uvd","uvvd"]},"application/vnd.dece.ttml+xml":{"source":"iana","compressible":true,"extensions":["uvt","uvvt"]},"application/vnd.dece.unspecified":{"source":"iana","extensions":["uvx","uvvx"]},"application/vnd.dece.zip":{"source":"iana","extensions":["uvz","uvvz"]},"application/vnd.denovo.fcselayout-link":{"source":"iana","extensions":["fe_launch"]},"application/vnd.desmume.movie":{"source":"iana"},"application/vnd.dir-bi.plate-dl-nosuffix":{"source":"iana"},"application/vnd.dm.delegation+xml":{"source":"iana","compressible":true},"application/vnd.dna":{"source":"iana","extensions":["dna"]},"application/vnd.document+json":{"source":"iana","compressible":true},"application/vnd.dolby.mlp":{"source":"apache","extensions":["mlp"]},"application/vnd.dolby.mobile.1":{"source":"iana"},"application/vnd.dolby.mobile.2":{"source":"iana"},"application/vnd.doremir.scorecloud-binary-document":{"source":"iana"},"application/vnd.dpgraph":{"source":"iana","extensions":["dpg"]},"application/vnd.dreamfactory":{"source":"iana","extensions":["dfac"]},"application/vnd.drive+json":{"source":"iana","compressible":true},"application/vnd.ds-keypoint":{"source":"apache","extensions":["kpxx"]},"application/vnd.dtg.local":{"source":"iana"},"application/vnd.dtg.local.flash":{"source":"iana"},"application/vnd.dtg.local.html":{"source":"iana"},"application/vnd.dvb.ait":{"source":"iana","extensions":["ait"]},"application/vnd.dvb.dvbj":{"source":"iana"},"application/vnd.dvb.esgcontainer":{"source":"iana"},"application/vnd.dvb.ipdcdftnotifaccess":{"source":"iana"},"application/vnd.dvb.ipdcesgaccess":{"source":"iana"},"application/vnd.dvb.ipdcesgaccess2":{"source":"iana"},"application/vnd.dvb.ipdcesgpdd":{"source":"iana"},"application/vnd.dvb.ipdcroaming":{"source":"iana"},"application/vnd.dvb.iptv.alfec-base":{"source":"iana"},"application/vnd.dvb.iptv.alfec-enhancement":{"source":"iana"},"application/vnd.dvb.notif-aggregate-root+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-container+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-generic+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-msglist+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-registration-request+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-registration-response+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-init+xml":{"source":"iana","compressible":true},"application/vnd.dvb.pfr":{"source":"iana"},"application/vnd.dvb.service":{"source":"iana","extensions":["svc"]},"application/vnd.dxr":{"source":"iana"},"application/vnd.dynageo":{"source":"iana","extensions":["geo"]},"application/vnd.dzr":{"source":"iana"},"application/vnd.easykaraoke.cdgdownload":{"source":"iana"},"application/vnd.ecdis-update":{"source":"iana"},"application/vnd.ecip.rlp":{"source":"iana"},"application/vnd.ecowin.chart":{"source":"iana","extensions":["mag"]},"application/vnd.ecowin.filerequest":{"source":"iana"},"application/vnd.ecowin.fileupdate":{"source":"iana"},"application/vnd.ecowin.series":{"source":"iana"},"application/vnd.ecowin.seriesrequest":{"source":"iana"},"application/vnd.ecowin.seriesupdate":{"source":"iana"},"application/vnd.efi.img":{"source":"iana"},"application/vnd.efi.iso":{"source":"iana"},"application/vnd.emclient.accessrequest+xml":{"source":"iana","compressible":true},"application/vnd.enliven":{"source":"iana","extensions":["nml"]},"application/vnd.enphase.envoy":{"source":"iana"},"application/vnd.eprints.data+xml":{"source":"iana","compressible":true},"application/vnd.epson.esf":{"source":"iana","extensions":["esf"]},"application/vnd.epson.msf":{"source":"iana","extensions":["msf"]},"application/vnd.epson.quickanime":{"source":"iana","extensions":["qam"]},"application/vnd.epson.salt":{"source":"iana","extensions":["slt"]},"application/vnd.epson.ssf":{"source":"iana","extensions":["ssf"]},"application/vnd.ericsson.quickcall":{"source":"iana"},"application/vnd.espass-espass+zip":{"source":"iana","compressible":false},"application/vnd.eszigno3+xml":{"source":"iana","compressible":true,"extensions":["es3","et3"]},"application/vnd.etsi.aoc+xml":{"source":"iana","compressible":true},"application/vnd.etsi.asic-e+zip":{"source":"iana","compressible":false},"application/vnd.etsi.asic-s+zip":{"source":"iana","compressible":false},"application/vnd.etsi.cug+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvcommand+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvdiscovery+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvprofile+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-bc+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-cod+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-npvr+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvservice+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsync+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvueprofile+xml":{"source":"iana","compressible":true},"application/vnd.etsi.mcid+xml":{"source":"iana","compressible":true},"application/vnd.etsi.mheg5":{"source":"iana"},"application/vnd.etsi.overload-control-policy-dataset+xml":{"source":"iana","compressible":true},"application/vnd.etsi.pstn+xml":{"source":"iana","compressible":true},"application/vnd.etsi.sci+xml":{"source":"iana","compressible":true},"application/vnd.etsi.simservs+xml":{"source":"iana","compressible":true},"application/vnd.etsi.timestamp-token":{"source":"iana"},"application/vnd.etsi.tsl+xml":{"source":"iana","compressible":true},"application/vnd.etsi.tsl.der":{"source":"iana"},"application/vnd.eudora.data":{"source":"iana"},"application/vnd.evolv.ecig.profile":{"source":"iana"},"application/vnd.evolv.ecig.settings":{"source":"iana"},"application/vnd.evolv.ecig.theme":{"source":"iana"},"application/vnd.exstream-empower+zip":{"source":"iana","compressible":false},"application/vnd.exstream-package":{"source":"iana"},"application/vnd.ezpix-album":{"source":"iana","extensions":["ez2"]},"application/vnd.ezpix-package":{"source":"iana","extensions":["ez3"]},"application/vnd.f-secure.mobile":{"source":"iana"},"application/vnd.fastcopy-disk-image":{"source":"iana"},"application/vnd.fdf":{"source":"iana","extensions":["fdf"]},"application/vnd.fdsn.mseed":{"source":"iana","extensions":["mseed"]},"application/vnd.fdsn.seed":{"source":"iana","extensions":["seed","dataless"]},"application/vnd.ffsns":{"source":"iana"},"application/vnd.ficlab.flb+zip":{"source":"iana","compressible":false},"application/vnd.filmit.zfc":{"source":"iana"},"application/vnd.fints":{"source":"iana"},"application/vnd.firemonkeys.cloudcell":{"source":"iana"},"application/vnd.flographit":{"source":"iana","extensions":["gph"]},"application/vnd.fluxtime.clip":{"source":"iana","extensions":["ftc"]},"application/vnd.font-fontforge-sfd":{"source":"iana"},"application/vnd.framemaker":{"source":"iana","extensions":["fm","frame","maker","book"]},"application/vnd.frogans.fnc":{"source":"iana","extensions":["fnc"]},"application/vnd.frogans.ltf":{"source":"iana","extensions":["ltf"]},"application/vnd.fsc.weblaunch":{"source":"iana","extensions":["fsc"]},"application/vnd.fujitsu.oasys":{"source":"iana","extensions":["oas"]},"application/vnd.fujitsu.oasys2":{"source":"iana","extensions":["oa2"]},"application/vnd.fujitsu.oasys3":{"source":"iana","extensions":["oa3"]},"application/vnd.fujitsu.oasysgp":{"source":"iana","extensions":["fg5"]},"application/vnd.fujitsu.oasysprs":{"source":"iana","extensions":["bh2"]},"application/vnd.fujixerox.art-ex":{"source":"iana"},"application/vnd.fujixerox.art4":{"source":"iana"},"application/vnd.fujixerox.ddd":{"source":"iana","extensions":["ddd"]},"application/vnd.fujixerox.docuworks":{"source":"iana","extensions":["xdw"]},"application/vnd.fujixerox.docuworks.binder":{"source":"iana","extensions":["xbd"]},"application/vnd.fujixerox.docuworks.container":{"source":"iana"},"application/vnd.fujixerox.hbpl":{"source":"iana"},"application/vnd.fut-misnet":{"source":"iana"},"application/vnd.futoin+cbor":{"source":"iana"},"application/vnd.futoin+json":{"source":"iana","compressible":true},"application/vnd.fuzzysheet":{"source":"iana","extensions":["fzs"]},"application/vnd.genomatix.tuxedo":{"source":"iana","extensions":["txd"]},"application/vnd.gentics.grd+json":{"source":"iana","compressible":true},"application/vnd.geo+json":{"source":"iana","compressible":true},"application/vnd.geocube+xml":{"source":"iana","compressible":true},"application/vnd.geogebra.file":{"source":"iana","extensions":["ggb"]},"application/vnd.geogebra.tool":{"source":"iana","extensions":["ggt"]},"application/vnd.geometry-explorer":{"source":"iana","extensions":["gex","gre"]},"application/vnd.geonext":{"source":"iana","extensions":["gxt"]},"application/vnd.geoplan":{"source":"iana","extensions":["g2w"]},"application/vnd.geospace":{"source":"iana","extensions":["g3w"]},"application/vnd.gerber":{"source":"iana"},"application/vnd.globalplatform.card-content-mgt":{"source":"iana"},"application/vnd.globalplatform.card-content-mgt-response":{"source":"iana"},"application/vnd.gmx":{"source":"iana","extensions":["gmx"]},"application/vnd.google-apps.document":{"compressible":false,"extensions":["gdoc"]},"application/vnd.google-apps.presentation":{"compressible":false,"extensions":["gslides"]},"application/vnd.google-apps.spreadsheet":{"compressible":false,"extensions":["gsheet"]},"application/vnd.google-earth.kml+xml":{"source":"iana","compressible":true,"extensions":["kml"]},"application/vnd.google-earth.kmz":{"source":"iana","compressible":false,"extensions":["kmz"]},"application/vnd.gov.sk.e-form+xml":{"source":"iana","compressible":true},"application/vnd.gov.sk.e-form+zip":{"source":"iana","compressible":false},"application/vnd.gov.sk.xmldatacontainer+xml":{"source":"iana","compressible":true},"application/vnd.grafeq":{"source":"iana","extensions":["gqf","gqs"]},"application/vnd.gridmp":{"source":"iana"},"application/vnd.groove-account":{"source":"iana","extensions":["gac"]},"application/vnd.groove-help":{"source":"iana","extensions":["ghf"]},"application/vnd.groove-identity-message":{"source":"iana","extensions":["gim"]},"application/vnd.groove-injector":{"source":"iana","extensions":["grv"]},"application/vnd.groove-tool-message":{"source":"iana","extensions":["gtm"]},"application/vnd.groove-tool-template":{"source":"iana","extensions":["tpl"]},"application/vnd.groove-vcard":{"source":"iana","extensions":["vcg"]},"application/vnd.hal+json":{"source":"iana","compressible":true},"application/vnd.hal+xml":{"source":"iana","compressible":true,"extensions":["hal"]},"application/vnd.handheld-entertainment+xml":{"source":"iana","compressible":true,"extensions":["zmm"]},"application/vnd.hbci":{"source":"iana","extensions":["hbci"]},"application/vnd.hc+json":{"source":"iana","compressible":true},"application/vnd.hcl-bireports":{"source":"iana"},"application/vnd.hdt":{"source":"iana"},"application/vnd.heroku+json":{"source":"iana","compressible":true},"application/vnd.hhe.lesson-player":{"source":"iana","extensions":["les"]},"application/vnd.hp-hpgl":{"source":"iana","extensions":["hpgl"]},"application/vnd.hp-hpid":{"source":"iana","extensions":["hpid"]},"application/vnd.hp-hps":{"source":"iana","extensions":["hps"]},"application/vnd.hp-jlyt":{"source":"iana","extensions":["jlt"]},"application/vnd.hp-pcl":{"source":"iana","extensions":["pcl"]},"application/vnd.hp-pclxl":{"source":"iana","extensions":["pclxl"]},"application/vnd.httphone":{"source":"iana"},"application/vnd.hydrostatix.sof-data":{"source":"iana","extensions":["sfd-hdstx"]},"application/vnd.hyper+json":{"source":"iana","compressible":true},"application/vnd.hyper-item+json":{"source":"iana","compressible":true},"application/vnd.hyperdrive+json":{"source":"iana","compressible":true},"application/vnd.hzn-3d-crossword":{"source":"iana"},"application/vnd.ibm.afplinedata":{"source":"iana"},"application/vnd.ibm.electronic-media":{"source":"iana"},"application/vnd.ibm.minipay":{"source":"iana","extensions":["mpy"]},"application/vnd.ibm.modcap":{"source":"iana","extensions":["afp","listafp","list3820"]},"application/vnd.ibm.rights-management":{"source":"iana","extensions":["irm"]},"application/vnd.ibm.secure-container":{"source":"iana","extensions":["sc"]},"application/vnd.iccprofile":{"source":"iana","extensions":["icc","icm"]},"application/vnd.ieee.1905":{"source":"iana"},"application/vnd.igloader":{"source":"iana","extensions":["igl"]},"application/vnd.imagemeter.folder+zip":{"source":"iana","compressible":false},"application/vnd.imagemeter.image+zip":{"source":"iana","compressible":false},"application/vnd.immervision-ivp":{"source":"iana","extensions":["ivp"]},"application/vnd.immervision-ivu":{"source":"iana","extensions":["ivu"]},"application/vnd.ims.imsccv1p1":{"source":"iana"},"application/vnd.ims.imsccv1p2":{"source":"iana"},"application/vnd.ims.imsccv1p3":{"source":"iana"},"application/vnd.ims.lis.v2.result+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolconsumerprofile+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolproxy+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolproxy.id+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolsettings+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolsettings.simple+json":{"source":"iana","compressible":true},"application/vnd.informedcontrol.rms+xml":{"source":"iana","compressible":true},"application/vnd.informix-visionary":{"source":"iana"},"application/vnd.infotech.project":{"source":"iana"},"application/vnd.infotech.project+xml":{"source":"iana","compressible":true},"application/vnd.innopath.wamp.notification":{"source":"iana"},"application/vnd.insors.igm":{"source":"iana","extensions":["igm"]},"application/vnd.intercon.formnet":{"source":"iana","extensions":["xpw","xpx"]},"application/vnd.intergeo":{"source":"iana","extensions":["i2g"]},"application/vnd.intertrust.digibox":{"source":"iana"},"application/vnd.intertrust.nncp":{"source":"iana"},"application/vnd.intu.qbo":{"source":"iana","extensions":["qbo"]},"application/vnd.intu.qfx":{"source":"iana","extensions":["qfx"]},"application/vnd.iptc.g2.catalogitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.conceptitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.knowledgeitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.newsitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.newsmessage+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.packageitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.planningitem+xml":{"source":"iana","compressible":true},"application/vnd.ipunplugged.rcprofile":{"source":"iana","extensions":["rcprofile"]},"application/vnd.irepository.package+xml":{"source":"iana","compressible":true,"extensions":["irp"]},"application/vnd.is-xpr":{"source":"iana","extensions":["xpr"]},"application/vnd.isac.fcs":{"source":"iana","extensions":["fcs"]},"application/vnd.iso11783-10+zip":{"source":"iana","compressible":false},"application/vnd.jam":{"source":"iana","extensions":["jam"]},"application/vnd.japannet-directory-service":{"source":"iana"},"application/vnd.japannet-jpnstore-wakeup":{"source":"iana"},"application/vnd.japannet-payment-wakeup":{"source":"iana"},"application/vnd.japannet-registration":{"source":"iana"},"application/vnd.japannet-registration-wakeup":{"source":"iana"},"application/vnd.japannet-setstore-wakeup":{"source":"iana"},"application/vnd.japannet-verification":{"source":"iana"},"application/vnd.japannet-verification-wakeup":{"source":"iana"},"application/vnd.jcp.javame.midlet-rms":{"source":"iana","extensions":["rms"]},"application/vnd.jisp":{"source":"iana","extensions":["jisp"]},"application/vnd.joost.joda-archive":{"source":"iana","extensions":["joda"]},"application/vnd.jsk.isdn-ngn":{"source":"iana"},"application/vnd.kahootz":{"source":"iana","extensions":["ktz","ktr"]},"application/vnd.kde.karbon":{"source":"iana","extensions":["karbon"]},"application/vnd.kde.kchart":{"source":"iana","extensions":["chrt"]},"application/vnd.kde.kformula":{"source":"iana","extensions":["kfo"]},"application/vnd.kde.kivio":{"source":"iana","extensions":["flw"]},"application/vnd.kde.kontour":{"source":"iana","extensions":["kon"]},"application/vnd.kde.kpresenter":{"source":"iana","extensions":["kpr","kpt"]},"application/vnd.kde.kspread":{"source":"iana","extensions":["ksp"]},"application/vnd.kde.kword":{"source":"iana","extensions":["kwd","kwt"]},"application/vnd.kenameaapp":{"source":"iana","extensions":["htke"]},"application/vnd.kidspiration":{"source":"iana","extensions":["kia"]},"application/vnd.kinar":{"source":"iana","extensions":["kne","knp"]},"application/vnd.koan":{"source":"iana","extensions":["skp","skd","skt","skm"]},"application/vnd.kodak-descriptor":{"source":"iana","extensions":["sse"]},"application/vnd.las":{"source":"iana"},"application/vnd.las.las+json":{"source":"iana","compressible":true},"application/vnd.las.las+xml":{"source":"iana","compressible":true,"extensions":["lasxml"]},"application/vnd.laszip":{"source":"iana"},"application/vnd.leap+json":{"source":"iana","compressible":true},"application/vnd.liberty-request+xml":{"source":"iana","compressible":true},"application/vnd.llamagraphics.life-balance.desktop":{"source":"iana","extensions":["lbd"]},"application/vnd.llamagraphics.life-balance.exchange+xml":{"source":"iana","compressible":true,"extensions":["lbe"]},"application/vnd.logipipe.circuit+zip":{"source":"iana","compressible":false},"application/vnd.loom":{"source":"iana"},"application/vnd.lotus-1-2-3":{"source":"iana","extensions":["123"]},"application/vnd.lotus-approach":{"source":"iana","extensions":["apr"]},"application/vnd.lotus-freelance":{"source":"iana","extensions":["pre"]},"application/vnd.lotus-notes":{"source":"iana","extensions":["nsf"]},"application/vnd.lotus-organizer":{"source":"iana","extensions":["org"]},"application/vnd.lotus-screencam":{"source":"iana","extensions":["scm"]},"application/vnd.lotus-wordpro":{"source":"iana","extensions":["lwp"]},"application/vnd.macports.portpkg":{"source":"iana","extensions":["portpkg"]},"application/vnd.mapbox-vector-tile":{"source":"iana"},"application/vnd.marlin.drm.actiontoken+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.conftoken+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.license+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.mdcf":{"source":"iana"},"application/vnd.mason+json":{"source":"iana","compressible":true},"application/vnd.maxmind.maxmind-db":{"source":"iana"},"application/vnd.mcd":{"source":"iana","extensions":["mcd"]},"application/vnd.medcalcdata":{"source":"iana","extensions":["mc1"]},"application/vnd.mediastation.cdkey":{"source":"iana","extensions":["cdkey"]},"application/vnd.meridian-slingshot":{"source":"iana"},"application/vnd.mfer":{"source":"iana","extensions":["mwf"]},"application/vnd.mfmp":{"source":"iana","extensions":["mfm"]},"application/vnd.micro+json":{"source":"iana","compressible":true},"application/vnd.micrografx.flo":{"source":"iana","extensions":["flo"]},"application/vnd.micrografx.igx":{"source":"iana","extensions":["igx"]},"application/vnd.microsoft.portable-executable":{"source":"iana"},"application/vnd.microsoft.windows.thumbnail-cache":{"source":"iana"},"application/vnd.miele+json":{"source":"iana","compressible":true},"application/vnd.mif":{"source":"iana","extensions":["mif"]},"application/vnd.minisoft-hp3000-save":{"source":"iana"},"application/vnd.mitsubishi.misty-guard.trustweb":{"source":"iana"},"application/vnd.mobius.daf":{"source":"iana","extensions":["daf"]},"application/vnd.mobius.dis":{"source":"iana","extensions":["dis"]},"application/vnd.mobius.mbk":{"source":"iana","extensions":["mbk"]},"application/vnd.mobius.mqy":{"source":"iana","extensions":["mqy"]},"application/vnd.mobius.msl":{"source":"iana","extensions":["msl"]},"application/vnd.mobius.plc":{"source":"iana","extensions":["plc"]},"application/vnd.mobius.txf":{"source":"iana","extensions":["txf"]},"application/vnd.mophun.application":{"source":"iana","extensions":["mpn"]},"application/vnd.mophun.certificate":{"source":"iana","extensions":["mpc"]},"application/vnd.motorola.flexsuite":{"source":"iana"},"application/vnd.motorola.flexsuite.adsi":{"source":"iana"},"application/vnd.motorola.flexsuite.fis":{"source":"iana"},"application/vnd.motorola.flexsuite.gotap":{"source":"iana"},"application/vnd.motorola.flexsuite.kmr":{"source":"iana"},"application/vnd.motorola.flexsuite.ttc":{"source":"iana"},"application/vnd.motorola.flexsuite.wem":{"source":"iana"},"application/vnd.motorola.iprm":{"source":"iana"},"application/vnd.mozilla.xul+xml":{"source":"iana","compressible":true,"extensions":["xul"]},"application/vnd.ms-3mfdocument":{"source":"iana"},"application/vnd.ms-artgalry":{"source":"iana","extensions":["cil"]},"application/vnd.ms-asf":{"source":"iana"},"application/vnd.ms-cab-compressed":{"source":"iana","extensions":["cab"]},"application/vnd.ms-color.iccprofile":{"source":"apache"},"application/vnd.ms-excel":{"source":"iana","compressible":false,"extensions":["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-excel.addin.macroenabled.12":{"source":"iana","extensions":["xlam"]},"application/vnd.ms-excel.sheet.binary.macroenabled.12":{"source":"iana","extensions":["xlsb"]},"application/vnd.ms-excel.sheet.macroenabled.12":{"source":"iana","extensions":["xlsm"]},"application/vnd.ms-excel.template.macroenabled.12":{"source":"iana","extensions":["xltm"]},"application/vnd.ms-fontobject":{"source":"iana","compressible":true,"extensions":["eot"]},"application/vnd.ms-htmlhelp":{"source":"iana","extensions":["chm"]},"application/vnd.ms-ims":{"source":"iana","extensions":["ims"]},"application/vnd.ms-lrm":{"source":"iana","extensions":["lrm"]},"application/vnd.ms-office.activex+xml":{"source":"iana","compressible":true},"application/vnd.ms-officetheme":{"source":"iana","extensions":["thmx"]},"application/vnd.ms-opentype":{"source":"apache","compressible":true},"application/vnd.ms-outlook":{"compressible":false,"extensions":["msg"]},"application/vnd.ms-package.obfuscated-opentype":{"source":"apache"},"application/vnd.ms-pki.seccat":{"source":"apache","extensions":["cat"]},"application/vnd.ms-pki.stl":{"source":"apache","extensions":["stl"]},"application/vnd.ms-playready.initiator+xml":{"source":"iana","compressible":true},"application/vnd.ms-powerpoint":{"source":"iana","compressible":false,"extensions":["ppt","pps","pot"]},"application/vnd.ms-powerpoint.addin.macroenabled.12":{"source":"iana","extensions":["ppam"]},"application/vnd.ms-powerpoint.presentation.macroenabled.12":{"source":"iana","extensions":["pptm"]},"application/vnd.ms-powerpoint.slide.macroenabled.12":{"source":"iana","extensions":["sldm"]},"application/vnd.ms-powerpoint.slideshow.macroenabled.12":{"source":"iana","extensions":["ppsm"]},"application/vnd.ms-powerpoint.template.macroenabled.12":{"source":"iana","extensions":["potm"]},"application/vnd.ms-printdevicecapabilities+xml":{"source":"iana","compressible":true},"application/vnd.ms-printing.printticket+xml":{"source":"apache","compressible":true},"application/vnd.ms-printschematicket+xml":{"source":"iana","compressible":true},"application/vnd.ms-project":{"source":"iana","extensions":["mpp","mpt"]},"application/vnd.ms-tnef":{"source":"iana"},"application/vnd.ms-windows.devicepairing":{"source":"iana"},"application/vnd.ms-windows.nwprinting.oob":{"source":"iana"},"application/vnd.ms-windows.printerpairing":{"source":"iana"},"application/vnd.ms-windows.wsd.oob":{"source":"iana"},"application/vnd.ms-wmdrm.lic-chlg-req":{"source":"iana"},"application/vnd.ms-wmdrm.lic-resp":{"source":"iana"},"application/vnd.ms-wmdrm.meter-chlg-req":{"source":"iana"},"application/vnd.ms-wmdrm.meter-resp":{"source":"iana"},"application/vnd.ms-word.document.macroenabled.12":{"source":"iana","extensions":["docm"]},"application/vnd.ms-word.template.macroenabled.12":{"source":"iana","extensions":["dotm"]},"application/vnd.ms-works":{"source":"iana","extensions":["wps","wks","wcm","wdb"]},"application/vnd.ms-wpl":{"source":"iana","extensions":["wpl"]},"application/vnd.ms-xpsdocument":{"source":"iana","compressible":false,"extensions":["xps"]},"application/vnd.msa-disk-image":{"source":"iana"},"application/vnd.mseq":{"source":"iana","extensions":["mseq"]},"application/vnd.msign":{"source":"iana"},"application/vnd.multiad.creator":{"source":"iana"},"application/vnd.multiad.creator.cif":{"source":"iana"},"application/vnd.music-niff":{"source":"iana"},"application/vnd.musician":{"source":"iana","extensions":["mus"]},"application/vnd.muvee.style":{"source":"iana","extensions":["msty"]},"application/vnd.mynfc":{"source":"iana","extensions":["taglet"]},"application/vnd.ncd.control":{"source":"iana"},"application/vnd.ncd.reference":{"source":"iana"},"application/vnd.nearst.inv+json":{"source":"iana","compressible":true},"application/vnd.nervana":{"source":"iana"},"application/vnd.netfpx":{"source":"iana"},"application/vnd.neurolanguage.nlu":{"source":"iana","extensions":["nlu"]},"application/vnd.nimn":{"source":"iana"},"application/vnd.nintendo.nitro.rom":{"source":"iana"},"application/vnd.nintendo.snes.rom":{"source":"iana"},"application/vnd.nitf":{"source":"iana","extensions":["ntf","nitf"]},"application/vnd.noblenet-directory":{"source":"iana","extensions":["nnd"]},"application/vnd.noblenet-sealer":{"source":"iana","extensions":["nns"]},"application/vnd.noblenet-web":{"source":"iana","extensions":["nnw"]},"application/vnd.nokia.catalogs":{"source":"iana"},"application/vnd.nokia.conml+wbxml":{"source":"iana"},"application/vnd.nokia.conml+xml":{"source":"iana","compressible":true},"application/vnd.nokia.iptv.config+xml":{"source":"iana","compressible":true},"application/vnd.nokia.isds-radio-presets":{"source":"iana"},"application/vnd.nokia.landmark+wbxml":{"source":"iana"},"application/vnd.nokia.landmark+xml":{"source":"iana","compressible":true},"application/vnd.nokia.landmarkcollection+xml":{"source":"iana","compressible":true},"application/vnd.nokia.n-gage.ac+xml":{"source":"iana","compressible":true,"extensions":["ac"]},"application/vnd.nokia.n-gage.data":{"source":"iana","extensions":["ngdat"]},"application/vnd.nokia.n-gage.symbian.install":{"source":"iana","extensions":["n-gage"]},"application/vnd.nokia.ncd":{"source":"iana"},"application/vnd.nokia.pcd+wbxml":{"source":"iana"},"application/vnd.nokia.pcd+xml":{"source":"iana","compressible":true},"application/vnd.nokia.radio-preset":{"source":"iana","extensions":["rpst"]},"application/vnd.nokia.radio-presets":{"source":"iana","extensions":["rpss"]},"application/vnd.novadigm.edm":{"source":"iana","extensions":["edm"]},"application/vnd.novadigm.edx":{"source":"iana","extensions":["edx"]},"application/vnd.novadigm.ext":{"source":"iana","extensions":["ext"]},"application/vnd.ntt-local.content-share":{"source":"iana"},"application/vnd.ntt-local.file-transfer":{"source":"iana"},"application/vnd.ntt-local.ogw_remote-access":{"source":"iana"},"application/vnd.ntt-local.sip-ta_remote":{"source":"iana"},"application/vnd.ntt-local.sip-ta_tcp_stream":{"source":"iana"},"application/vnd.oasis.opendocument.chart":{"source":"iana","extensions":["odc"]},"application/vnd.oasis.opendocument.chart-template":{"source":"iana","extensions":["otc"]},"application/vnd.oasis.opendocument.database":{"source":"iana","extensions":["odb"]},"application/vnd.oasis.opendocument.formula":{"source":"iana","extensions":["odf"]},"application/vnd.oasis.opendocument.formula-template":{"source":"iana","extensions":["odft"]},"application/vnd.oasis.opendocument.graphics":{"source":"iana","compressible":false,"extensions":["odg"]},"application/vnd.oasis.opendocument.graphics-template":{"source":"iana","extensions":["otg"]},"application/vnd.oasis.opendocument.image":{"source":"iana","extensions":["odi"]},"application/vnd.oasis.opendocument.image-template":{"source":"iana","extensions":["oti"]},"application/vnd.oasis.opendocument.presentation":{"source":"iana","compressible":false,"extensions":["odp"]},"application/vnd.oasis.opendocument.presentation-template":{"source":"iana","extensions":["otp"]},"application/vnd.oasis.opendocument.spreadsheet":{"source":"iana","compressible":false,"extensions":["ods"]},"application/vnd.oasis.opendocument.spreadsheet-template":{"source":"iana","extensions":["ots"]},"application/vnd.oasis.opendocument.text":{"source":"iana","compressible":false,"extensions":["odt"]},"application/vnd.oasis.opendocument.text-master":{"source":"iana","extensions":["odm"]},"application/vnd.oasis.opendocument.text-template":{"source":"iana","extensions":["ott"]},"application/vnd.oasis.opendocument.text-web":{"source":"iana","extensions":["oth"]},"application/vnd.obn":{"source":"iana"},"application/vnd.ocf+cbor":{"source":"iana"},"application/vnd.oftn.l10n+json":{"source":"iana","compressible":true},"application/vnd.oipf.contentaccessdownload+xml":{"source":"iana","compressible":true},"application/vnd.oipf.contentaccessstreaming+xml":{"source":"iana","compressible":true},"application/vnd.oipf.cspg-hexbinary":{"source":"iana"},"application/vnd.oipf.dae.svg+xml":{"source":"iana","compressible":true},"application/vnd.oipf.dae.xhtml+xml":{"source":"iana","compressible":true},"application/vnd.oipf.mippvcontrolmessage+xml":{"source":"iana","compressible":true},"application/vnd.oipf.pae.gem":{"source":"iana"},"application/vnd.oipf.spdiscovery+xml":{"source":"iana","compressible":true},"application/vnd.oipf.spdlist+xml":{"source":"iana","compressible":true},"application/vnd.oipf.ueprofile+xml":{"source":"iana","compressible":true},"application/vnd.oipf.userprofile+xml":{"source":"iana","compressible":true},"application/vnd.olpc-sugar":{"source":"iana","extensions":["xo"]},"application/vnd.oma-scws-config":{"source":"iana"},"application/vnd.oma-scws-http-request":{"source":"iana"},"application/vnd.oma-scws-http-response":{"source":"iana"},"application/vnd.oma.bcast.associated-procedure-parameter+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.drm-trigger+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.imd+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.ltkm":{"source":"iana"},"application/vnd.oma.bcast.notification+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.provisioningtrigger":{"source":"iana"},"application/vnd.oma.bcast.sgboot":{"source":"iana"},"application/vnd.oma.bcast.sgdd+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.sgdu":{"source":"iana"},"application/vnd.oma.bcast.simple-symbol-container":{"source":"iana"},"application/vnd.oma.bcast.smartcard-trigger+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.sprov+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.stkm":{"source":"iana"},"application/vnd.oma.cab-address-book+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-feature-handler+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-pcc+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-subs-invite+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-user-prefs+xml":{"source":"iana","compressible":true},"application/vnd.oma.dcd":{"source":"iana"},"application/vnd.oma.dcdc":{"source":"iana"},"application/vnd.oma.dd2+xml":{"source":"iana","compressible":true,"extensions":["dd2"]},"application/vnd.oma.drm.risd+xml":{"source":"iana","compressible":true},"application/vnd.oma.group-usage-list+xml":{"source":"iana","compressible":true},"application/vnd.oma.lwm2m+json":{"source":"iana","compressible":true},"application/vnd.oma.lwm2m+tlv":{"source":"iana"},"application/vnd.oma.pal+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.detailed-progress-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.final-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.groups+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.invocation-descriptor+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.optimized-progress-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.push":{"source":"iana"},"application/vnd.oma.scidm.messages+xml":{"source":"iana","compressible":true},"application/vnd.oma.xcap-directory+xml":{"source":"iana","compressible":true},"application/vnd.omads-email+xml":{"source":"iana","compressible":true},"application/vnd.omads-file+xml":{"source":"iana","compressible":true},"application/vnd.omads-folder+xml":{"source":"iana","compressible":true},"application/vnd.omaloc-supl-init":{"source":"iana"},"application/vnd.onepager":{"source":"iana"},"application/vnd.onepagertamp":{"source":"iana"},"application/vnd.onepagertamx":{"source":"iana"},"application/vnd.onepagertat":{"source":"iana"},"application/vnd.onepagertatp":{"source":"iana"},"application/vnd.onepagertatx":{"source":"iana"},"application/vnd.openblox.game+xml":{"source":"iana","compressible":true,"extensions":["obgx"]},"application/vnd.openblox.game-binary":{"source":"iana"},"application/vnd.openeye.oeb":{"source":"iana"},"application/vnd.openofficeorg.extension":{"source":"apache","extensions":["oxt"]},"application/vnd.openstreetmap.data+xml":{"source":"iana","compressible":true,"extensions":["osm"]},"application/vnd.openxmlformats-officedocument.custom-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.customxmlproperties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawing+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.chart+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.extended-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{"source":"iana","compressible":false,"extensions":["pptx"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slide":{"source":"iana","extensions":["sldx"]},"application/vnd.openxmlformats-officedocument.presentationml.slide+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slideshow":{"source":"iana","extensions":["ppsx"]},"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.tags+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.template":{"source":"iana","extensions":["potx"]},"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{"source":"iana","compressible":false,"extensions":["xlsx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.template":{"source":"iana","extensions":["xltx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.theme+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.themeoverride+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.vmldrawing":{"source":"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{"source":"iana","compressible":false,"extensions":["docx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.template":{"source":"iana","extensions":["dotx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.core-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.relationships+xml":{"source":"iana","compressible":true},"application/vnd.oracle.resource+json":{"source":"iana","compressible":true},"application/vnd.orange.indata":{"source":"iana"},"application/vnd.osa.netdeploy":{"source":"iana"},"application/vnd.osgeo.mapguide.package":{"source":"iana","extensions":["mgp"]},"application/vnd.osgi.bundle":{"source":"iana"},"application/vnd.osgi.dp":{"source":"iana","extensions":["dp"]},"application/vnd.osgi.subsystem":{"source":"iana","extensions":["esa"]},"application/vnd.otps.ct-kip+xml":{"source":"iana","compressible":true},"application/vnd.oxli.countgraph":{"source":"iana"},"application/vnd.pagerduty+json":{"source":"iana","compressible":true},"application/vnd.palm":{"source":"iana","extensions":["pdb","pqa","oprc"]},"application/vnd.panoply":{"source":"iana"},"application/vnd.paos.xml":{"source":"iana"},"application/vnd.patentdive":{"source":"iana"},"application/vnd.patientecommsdoc":{"source":"iana"},"application/vnd.pawaafile":{"source":"iana","extensions":["paw"]},"application/vnd.pcos":{"source":"iana"},"application/vnd.pg.format":{"source":"iana","extensions":["str"]},"application/vnd.pg.osasli":{"source":"iana","extensions":["ei6"]},"application/vnd.piaccess.application-licence":{"source":"iana"},"application/vnd.picsel":{"source":"iana","extensions":["efif"]},"application/vnd.pmi.widget":{"source":"iana","extensions":["wg"]},"application/vnd.poc.group-advertisement+xml":{"source":"iana","compressible":true},"application/vnd.pocketlearn":{"source":"iana","extensions":["plf"]},"application/vnd.powerbuilder6":{"source":"iana","extensions":["pbd"]},"application/vnd.powerbuilder6-s":{"source":"iana"},"application/vnd.powerbuilder7":{"source":"iana"},"application/vnd.powerbuilder7-s":{"source":"iana"},"application/vnd.powerbuilder75":{"source":"iana"},"application/vnd.powerbuilder75-s":{"source":"iana"},"application/vnd.preminet":{"source":"iana"},"application/vnd.previewsystems.box":{"source":"iana","extensions":["box"]},"application/vnd.proteus.magazine":{"source":"iana","extensions":["mgz"]},"application/vnd.psfs":{"source":"iana"},"application/vnd.publishare-delta-tree":{"source":"iana","extensions":["qps"]},"application/vnd.pvi.ptid1":{"source":"iana","extensions":["ptid"]},"application/vnd.pwg-multiplexed":{"source":"iana"},"application/vnd.pwg-xhtml-print+xml":{"source":"iana","compressible":true},"application/vnd.qualcomm.brew-app-res":{"source":"iana"},"application/vnd.quarantainenet":{"source":"iana"},"application/vnd.quark.quarkxpress":{"source":"iana","extensions":["qxd","qxt","qwd","qwt","qxl","qxb"]},"application/vnd.quobject-quoxdocument":{"source":"iana"},"application/vnd.radisys.moml+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-conf+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-conn+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-dialog+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-stream+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-conf+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-base+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-fax-detect+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-fax-sendrecv+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-group+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-speech+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-transform+xml":{"source":"iana","compressible":true},"application/vnd.rainstor.data":{"source":"iana"},"application/vnd.rapid":{"source":"iana"},"application/vnd.rar":{"source":"iana"},"application/vnd.realvnc.bed":{"source":"iana","extensions":["bed"]},"application/vnd.recordare.musicxml":{"source":"iana","extensions":["mxl"]},"application/vnd.recordare.musicxml+xml":{"source":"iana","compressible":true,"extensions":["musicxml"]},"application/vnd.renlearn.rlprint":{"source":"iana"},"application/vnd.restful+json":{"source":"iana","compressible":true},"application/vnd.rig.cryptonote":{"source":"iana","extensions":["cryptonote"]},"application/vnd.rim.cod":{"source":"apache","extensions":["cod"]},"application/vnd.rn-realmedia":{"source":"apache","extensions":["rm"]},"application/vnd.rn-realmedia-vbr":{"source":"apache","extensions":["rmvb"]},"application/vnd.route66.link66+xml":{"source":"iana","compressible":true,"extensions":["link66"]},"application/vnd.rs-274x":{"source":"iana"},"application/vnd.ruckus.download":{"source":"iana"},"application/vnd.s3sms":{"source":"iana"},"application/vnd.sailingtracker.track":{"source":"iana","extensions":["st"]},"application/vnd.sbm.cid":{"source":"iana"},"application/vnd.sbm.mid2":{"source":"iana"},"application/vnd.scribus":{"source":"iana"},"application/vnd.sealed.3df":{"source":"iana"},"application/vnd.sealed.csf":{"source":"iana"},"application/vnd.sealed.doc":{"source":"iana"},"application/vnd.sealed.eml":{"source":"iana"},"application/vnd.sealed.mht":{"source":"iana"},"application/vnd.sealed.net":{"source":"iana"},"application/vnd.sealed.ppt":{"source":"iana"},"application/vnd.sealed.tiff":{"source":"iana"},"application/vnd.sealed.xls":{"source":"iana"},"application/vnd.sealedmedia.softseal.html":{"source":"iana"},"application/vnd.sealedmedia.softseal.pdf":{"source":"iana"},"application/vnd.seemail":{"source":"iana","extensions":["see"]},"application/vnd.sema":{"source":"iana","extensions":["sema"]},"application/vnd.semd":{"source":"iana","extensions":["semd"]},"application/vnd.semf":{"source":"iana","extensions":["semf"]},"application/vnd.shade-save-file":{"source":"iana"},"application/vnd.shana.informed.formdata":{"source":"iana","extensions":["ifm"]},"application/vnd.shana.informed.formtemplate":{"source":"iana","extensions":["itp"]},"application/vnd.shana.informed.interchange":{"source":"iana","extensions":["iif"]},"application/vnd.shana.informed.package":{"source":"iana","extensions":["ipk"]},"application/vnd.shootproof+json":{"source":"iana","compressible":true},"application/vnd.shopkick+json":{"source":"iana","compressible":true},"application/vnd.sigrok.session":{"source":"iana"},"application/vnd.simtech-mindmapper":{"source":"iana","extensions":["twd","twds"]},"application/vnd.siren+json":{"source":"iana","compressible":true},"application/vnd.smaf":{"source":"iana","extensions":["mmf"]},"application/vnd.smart.notebook":{"source":"iana"},"application/vnd.smart.teacher":{"source":"iana","extensions":["teacher"]},"application/vnd.software602.filler.form+xml":{"source":"iana","compressible":true,"extensions":["fo"]},"application/vnd.software602.filler.form-xml-zip":{"source":"iana"},"application/vnd.solent.sdkm+xml":{"source":"iana","compressible":true,"extensions":["sdkm","sdkd"]},"application/vnd.spotfire.dxp":{"source":"iana","extensions":["dxp"]},"application/vnd.spotfire.sfs":{"source":"iana","extensions":["sfs"]},"application/vnd.sqlite3":{"source":"iana"},"application/vnd.sss-cod":{"source":"iana"},"application/vnd.sss-dtf":{"source":"iana"},"application/vnd.sss-ntf":{"source":"iana"},"application/vnd.stardivision.calc":{"source":"apache","extensions":["sdc"]},"application/vnd.stardivision.draw":{"source":"apache","extensions":["sda"]},"application/vnd.stardivision.impress":{"source":"apache","extensions":["sdd"]},"application/vnd.stardivision.math":{"source":"apache","extensions":["smf"]},"application/vnd.stardivision.writer":{"source":"apache","extensions":["sdw","vor"]},"application/vnd.stardivision.writer-global":{"source":"apache","extensions":["sgl"]},"application/vnd.stepmania.package":{"source":"iana","extensions":["smzip"]},"application/vnd.stepmania.stepchart":{"source":"iana","extensions":["sm"]},"application/vnd.street-stream":{"source":"iana"},"application/vnd.sun.wadl+xml":{"source":"iana","compressible":true,"extensions":["wadl"]},"application/vnd.sun.xml.calc":{"source":"apache","extensions":["sxc"]},"application/vnd.sun.xml.calc.template":{"source":"apache","extensions":["stc"]},"application/vnd.sun.xml.draw":{"source":"apache","extensions":["sxd"]},"application/vnd.sun.xml.draw.template":{"source":"apache","extensions":["std"]},"application/vnd.sun.xml.impress":{"source":"apache","extensions":["sxi"]},"application/vnd.sun.xml.impress.template":{"source":"apache","extensions":["sti"]},"application/vnd.sun.xml.math":{"source":"apache","extensions":["sxm"]},"application/vnd.sun.xml.writer":{"source":"apache","extensions":["sxw"]},"application/vnd.sun.xml.writer.global":{"source":"apache","extensions":["sxg"]},"application/vnd.sun.xml.writer.template":{"source":"apache","extensions":["stw"]},"application/vnd.sus-calendar":{"source":"iana","extensions":["sus","susp"]},"application/vnd.svd":{"source":"iana","extensions":["svd"]},"application/vnd.swiftview-ics":{"source":"iana"},"application/vnd.symbian.install":{"source":"apache","extensions":["sis","sisx"]},"application/vnd.syncml+xml":{"source":"iana","compressible":true,"extensions":["xsm"]},"application/vnd.syncml.dm+wbxml":{"source":"iana","extensions":["bdm"]},"application/vnd.syncml.dm+xml":{"source":"iana","compressible":true,"extensions":["xdm"]},"application/vnd.syncml.dm.notification":{"source":"iana"},"application/vnd.syncml.dmddf+wbxml":{"source":"iana"},"application/vnd.syncml.dmddf+xml":{"source":"iana","compressible":true,"extensions":["ddf"]},"application/vnd.syncml.dmtnds+wbxml":{"source":"iana"},"application/vnd.syncml.dmtnds+xml":{"source":"iana","compressible":true},"application/vnd.syncml.ds.notification":{"source":"iana"},"application/vnd.tableschema+json":{"source":"iana","compressible":true},"application/vnd.tao.intent-module-archive":{"source":"iana","extensions":["tao"]},"application/vnd.tcpdump.pcap":{"source":"iana","extensions":["pcap","cap","dmp"]},"application/vnd.think-cell.ppttc+json":{"source":"iana","compressible":true},"application/vnd.tmd.mediaflex.api+xml":{"source":"iana","compressible":true},"application/vnd.tml":{"source":"iana"},"application/vnd.tmobile-livetv":{"source":"iana","extensions":["tmo"]},"application/vnd.tri.onesource":{"source":"iana"},"application/vnd.trid.tpt":{"source":"iana","extensions":["tpt"]},"application/vnd.triscape.mxs":{"source":"iana","extensions":["mxs"]},"application/vnd.trueapp":{"source":"iana","extensions":["tra"]},"application/vnd.truedoc":{"source":"iana"},"application/vnd.ubisoft.webplayer":{"source":"iana"},"application/vnd.ufdl":{"source":"iana","extensions":["ufd","ufdl"]},"application/vnd.uiq.theme":{"source":"iana","extensions":["utz"]},"application/vnd.umajin":{"source":"iana","extensions":["umj"]},"application/vnd.unity":{"source":"iana","extensions":["unityweb"]},"application/vnd.uoml+xml":{"source":"iana","compressible":true,"extensions":["uoml"]},"application/vnd.uplanet.alert":{"source":"iana"},"application/vnd.uplanet.alert-wbxml":{"source":"iana"},"application/vnd.uplanet.bearer-choice":{"source":"iana"},"application/vnd.uplanet.bearer-choice-wbxml":{"source":"iana"},"application/vnd.uplanet.cacheop":{"source":"iana"},"application/vnd.uplanet.cacheop-wbxml":{"source":"iana"},"application/vnd.uplanet.channel":{"source":"iana"},"application/vnd.uplanet.channel-wbxml":{"source":"iana"},"application/vnd.uplanet.list":{"source":"iana"},"application/vnd.uplanet.list-wbxml":{"source":"iana"},"application/vnd.uplanet.listcmd":{"source":"iana"},"application/vnd.uplanet.listcmd-wbxml":{"source":"iana"},"application/vnd.uplanet.signal":{"source":"iana"},"application/vnd.uri-map":{"source":"iana"},"application/vnd.valve.source.material":{"source":"iana"},"application/vnd.vcx":{"source":"iana","extensions":["vcx"]},"application/vnd.vd-study":{"source":"iana"},"application/vnd.vectorworks":{"source":"iana"},"application/vnd.vel+json":{"source":"iana","compressible":true},"application/vnd.verimatrix.vcas":{"source":"iana"},"application/vnd.veryant.thin":{"source":"iana"},"application/vnd.ves.encrypted":{"source":"iana"},"application/vnd.vidsoft.vidconference":{"source":"iana"},"application/vnd.visio":{"source":"iana","extensions":["vsd","vst","vss","vsw"]},"application/vnd.visionary":{"source":"iana","extensions":["vis"]},"application/vnd.vividence.scriptfile":{"source":"iana"},"application/vnd.vsf":{"source":"iana","extensions":["vsf"]},"application/vnd.wap.sic":{"source":"iana"},"application/vnd.wap.slc":{"source":"iana"},"application/vnd.wap.wbxml":{"source":"iana","extensions":["wbxml"]},"application/vnd.wap.wmlc":{"source":"iana","extensions":["wmlc"]},"application/vnd.wap.wmlscriptc":{"source":"iana","extensions":["wmlsc"]},"application/vnd.webturbo":{"source":"iana","extensions":["wtb"]},"application/vnd.wfa.p2p":{"source":"iana"},"application/vnd.wfa.wsc":{"source":"iana"},"application/vnd.windows.devicepairing":{"source":"iana"},"application/vnd.wmc":{"source":"iana"},"application/vnd.wmf.bootstrap":{"source":"iana"},"application/vnd.wolfram.mathematica":{"source":"iana"},"application/vnd.wolfram.mathematica.package":{"source":"iana"},"application/vnd.wolfram.player":{"source":"iana","extensions":["nbp"]},"application/vnd.wordperfect":{"source":"iana","extensions":["wpd"]},"application/vnd.wqd":{"source":"iana","extensions":["wqd"]},"application/vnd.wrq-hp3000-labelled":{"source":"iana"},"application/vnd.wt.stf":{"source":"iana","extensions":["stf"]},"application/vnd.wv.csp+wbxml":{"source":"iana"},"application/vnd.wv.csp+xml":{"source":"iana","compressible":true},"application/vnd.wv.ssp+xml":{"source":"iana","compressible":true},"application/vnd.xacml+json":{"source":"iana","compressible":true},"application/vnd.xara":{"source":"iana","extensions":["xar"]},"application/vnd.xfdl":{"source":"iana","extensions":["xfdl"]},"application/vnd.xfdl.webform":{"source":"iana"},"application/vnd.xmi+xml":{"source":"iana","compressible":true},"application/vnd.xmpie.cpkg":{"source":"iana"},"application/vnd.xmpie.dpkg":{"source":"iana"},"application/vnd.xmpie.plan":{"source":"iana"},"application/vnd.xmpie.ppkg":{"source":"iana"},"application/vnd.xmpie.xlim":{"source":"iana"},"application/vnd.yamaha.hv-dic":{"source":"iana","extensions":["hvd"]},"application/vnd.yamaha.hv-script":{"source":"iana","extensions":["hvs"]},"application/vnd.yamaha.hv-voice":{"source":"iana","extensions":["hvp"]},"application/vnd.yamaha.openscoreformat":{"source":"iana","extensions":["osf"]},"application/vnd.yamaha.openscoreformat.osfpvg+xml":{"source":"iana","compressible":true,"extensions":["osfpvg"]},"application/vnd.yamaha.remote-setup":{"source":"iana"},"application/vnd.yamaha.smaf-audio":{"source":"iana","extensions":["saf"]},"application/vnd.yamaha.smaf-phrase":{"source":"iana","extensions":["spf"]},"application/vnd.yamaha.through-ngn":{"source":"iana"},"application/vnd.yamaha.tunnel-udpencap":{"source":"iana"},"application/vnd.yaoweme":{"source":"iana"},"application/vnd.yellowriver-custom-menu":{"source":"iana","extensions":["cmp"]},"application/vnd.youtube.yt":{"source":"iana"},"application/vnd.zul":{"source":"iana","extensions":["zir","zirz"]},"application/vnd.zzazz.deck+xml":{"source":"iana","compressible":true,"extensions":["zaz"]},"application/voicexml+xml":{"source":"iana","compressible":true,"extensions":["vxml"]},"application/voucher-cms+json":{"source":"iana","compressible":true},"application/vq-rtcpxr":{"source":"iana"},"application/wasm":{"compressible":true,"extensions":["wasm"]},"application/watcherinfo+xml":{"source":"iana","compressible":true},"application/webpush-options+json":{"source":"iana","compressible":true},"application/whoispp-query":{"source":"iana"},"application/whoispp-response":{"source":"iana"},"application/widget":{"source":"iana","extensions":["wgt"]},"application/winhlp":{"source":"apache","extensions":["hlp"]},"application/wita":{"source":"iana"},"application/wordperfect5.1":{"source":"iana"},"application/wsdl+xml":{"source":"iana","compressible":true,"extensions":["wsdl"]},"application/wspolicy+xml":{"source":"iana","compressible":true,"extensions":["wspolicy"]},"application/x-7z-compressed":{"source":"apache","compressible":false,"extensions":["7z"]},"application/x-abiword":{"source":"apache","extensions":["abw"]},"application/x-ace-compressed":{"source":"apache","extensions":["ace"]},"application/x-amf":{"source":"apache"},"application/x-apple-diskimage":{"source":"apache","extensions":["dmg"]},"application/x-arj":{"compressible":false,"extensions":["arj"]},"application/x-authorware-bin":{"source":"apache","extensions":["aab","x32","u32","vox"]},"application/x-authorware-map":{"source":"apache","extensions":["aam"]},"application/x-authorware-seg":{"source":"apache","extensions":["aas"]},"application/x-bcpio":{"source":"apache","extensions":["bcpio"]},"application/x-bdoc":{"compressible":false,"extensions":["bdoc"]},"application/x-bittorrent":{"source":"apache","extensions":["torrent"]},"application/x-blorb":{"source":"apache","extensions":["blb","blorb"]},"application/x-bzip":{"source":"apache","compressible":false,"extensions":["bz"]},"application/x-bzip2":{"source":"apache","compressible":false,"extensions":["bz2","boz"]},"application/x-cbr":{"source":"apache","extensions":["cbr","cba","cbt","cbz","cb7"]},"application/x-cdlink":{"source":"apache","extensions":["vcd"]},"application/x-cfs-compressed":{"source":"apache","extensions":["cfs"]},"application/x-chat":{"source":"apache","extensions":["chat"]},"application/x-chess-pgn":{"source":"apache","extensions":["pgn"]},"application/x-chrome-extension":{"extensions":["crx"]},"application/x-cocoa":{"source":"nginx","extensions":["cco"]},"application/x-compress":{"source":"apache"},"application/x-conference":{"source":"apache","extensions":["nsc"]},"application/x-cpio":{"source":"apache","extensions":["cpio"]},"application/x-csh":{"source":"apache","extensions":["csh"]},"application/x-deb":{"compressible":false},"application/x-debian-package":{"source":"apache","extensions":["deb","udeb"]},"application/x-dgc-compressed":{"source":"apache","extensions":["dgc"]},"application/x-director":{"source":"apache","extensions":["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]},"application/x-doom":{"source":"apache","extensions":["wad"]},"application/x-dtbncx+xml":{"source":"apache","compressible":true,"extensions":["ncx"]},"application/x-dtbook+xml":{"source":"apache","compressible":true,"extensions":["dtb"]},"application/x-dtbresource+xml":{"source":"apache","compressible":true,"extensions":["res"]},"application/x-dvi":{"source":"apache","compressible":false,"extensions":["dvi"]},"application/x-envoy":{"source":"apache","extensions":["evy"]},"application/x-eva":{"source":"apache","extensions":["eva"]},"application/x-font-bdf":{"source":"apache","extensions":["bdf"]},"application/x-font-dos":{"source":"apache"},"application/x-font-framemaker":{"source":"apache"},"application/x-font-ghostscript":{"source":"apache","extensions":["gsf"]},"application/x-font-libgrx":{"source":"apache"},"application/x-font-linux-psf":{"source":"apache","extensions":["psf"]},"application/x-font-pcf":{"source":"apache","extensions":["pcf"]},"application/x-font-snf":{"source":"apache","extensions":["snf"]},"application/x-font-speedo":{"source":"apache"},"application/x-font-sunos-news":{"source":"apache"},"application/x-font-type1":{"source":"apache","extensions":["pfa","pfb","pfm","afm"]},"application/x-font-vfont":{"source":"apache"},"application/x-freearc":{"source":"apache","extensions":["arc"]},"application/x-futuresplash":{"source":"apache","extensions":["spl"]},"application/x-gca-compressed":{"source":"apache","extensions":["gca"]},"application/x-glulx":{"source":"apache","extensions":["ulx"]},"application/x-gnumeric":{"source":"apache","extensions":["gnumeric"]},"application/x-gramps-xml":{"source":"apache","extensions":["gramps"]},"application/x-gtar":{"source":"apache","extensions":["gtar"]},"application/x-gzip":{"source":"apache"},"application/x-hdf":{"source":"apache","extensions":["hdf"]},"application/x-httpd-php":{"compressible":true,"extensions":["php"]},"application/x-install-instructions":{"source":"apache","extensions":["install"]},"application/x-iso9660-image":{"source":"apache","extensions":["iso"]},"application/x-java-archive-diff":{"source":"nginx","extensions":["jardiff"]},"application/x-java-jnlp-file":{"source":"apache","compressible":false,"extensions":["jnlp"]},"application/x-javascript":{"compressible":true},"application/x-keepass2":{"extensions":["kdbx"]},"application/x-latex":{"source":"apache","compressible":false,"extensions":["latex"]},"application/x-lua-bytecode":{"extensions":["luac"]},"application/x-lzh-compressed":{"source":"apache","extensions":["lzh","lha"]},"application/x-makeself":{"source":"nginx","extensions":["run"]},"application/x-mie":{"source":"apache","extensions":["mie"]},"application/x-mobipocket-ebook":{"source":"apache","extensions":["prc","mobi"]},"application/x-mpegurl":{"compressible":false},"application/x-ms-application":{"source":"apache","extensions":["application"]},"application/x-ms-shortcut":{"source":"apache","extensions":["lnk"]},"application/x-ms-wmd":{"source":"apache","extensions":["wmd"]},"application/x-ms-wmz":{"source":"apache","extensions":["wmz"]},"application/x-ms-xbap":{"source":"apache","extensions":["xbap"]},"application/x-msaccess":{"source":"apache","extensions":["mdb"]},"application/x-msbinder":{"source":"apache","extensions":["obd"]},"application/x-mscardfile":{"source":"apache","extensions":["crd"]},"application/x-msclip":{"source":"apache","extensions":["clp"]},"application/x-msdos-program":{"extensions":["exe"]},"application/x-msdownload":{"source":"apache","extensions":["exe","dll","com","bat","msi"]},"application/x-msmediaview":{"source":"apache","extensions":["mvb","m13","m14"]},"application/x-msmetafile":{"source":"apache","extensions":["wmf","wmz","emf","emz"]},"application/x-msmoney":{"source":"apache","extensions":["mny"]},"application/x-mspublisher":{"source":"apache","extensions":["pub"]},"application/x-msschedule":{"source":"apache","extensions":["scd"]},"application/x-msterminal":{"source":"apache","extensions":["trm"]},"application/x-mswrite":{"source":"apache","extensions":["wri"]},"application/x-netcdf":{"source":"apache","extensions":["nc","cdf"]},"application/x-ns-proxy-autoconfig":{"compressible":true,"extensions":["pac"]},"application/x-nzb":{"source":"apache","extensions":["nzb"]},"application/x-perl":{"source":"nginx","extensions":["pl","pm"]},"application/x-pilot":{"source":"nginx","extensions":["prc","pdb"]},"application/x-pkcs12":{"source":"apache","compressible":false,"extensions":["p12","pfx"]},"application/x-pkcs7-certificates":{"source":"apache","extensions":["p7b","spc"]},"application/x-pkcs7-certreqresp":{"source":"apache","extensions":["p7r"]},"application/x-rar-compressed":{"source":"apache","compressible":false,"extensions":["rar"]},"application/x-redhat-package-manager":{"source":"nginx","extensions":["rpm"]},"application/x-research-info-systems":{"source":"apache","extensions":["ris"]},"application/x-sea":{"source":"nginx","extensions":["sea"]},"application/x-sh":{"source":"apache","compressible":true,"extensions":["sh"]},"application/x-shar":{"source":"apache","extensions":["shar"]},"application/x-shockwave-flash":{"source":"apache","compressible":false,"extensions":["swf"]},"application/x-silverlight-app":{"source":"apache","extensions":["xap"]},"application/x-sql":{"source":"apache","extensions":["sql"]},"application/x-stuffit":{"source":"apache","compressible":false,"extensions":["sit"]},"application/x-stuffitx":{"source":"apache","extensions":["sitx"]},"application/x-subrip":{"source":"apache","extensions":["srt"]},"application/x-sv4cpio":{"source":"apache","extensions":["sv4cpio"]},"application/x-sv4crc":{"source":"apache","extensions":["sv4crc"]},"application/x-t3vm-image":{"source":"apache","extensions":["t3"]},"application/x-tads":{"source":"apache","extensions":["gam"]},"application/x-tar":{"source":"apache","compressible":true,"extensions":["tar"]},"application/x-tcl":{"source":"apache","extensions":["tcl","tk"]},"application/x-tex":{"source":"apache","extensions":["tex"]},"application/x-tex-tfm":{"source":"apache","extensions":["tfm"]},"application/x-texinfo":{"source":"apache","extensions":["texinfo","texi"]},"application/x-tgif":{"source":"apache","extensions":["obj"]},"application/x-ustar":{"source":"apache","extensions":["ustar"]},"application/x-virtualbox-hdd":{"compressible":true,"extensions":["hdd"]},"application/x-virtualbox-ova":{"compressible":true,"extensions":["ova"]},"application/x-virtualbox-ovf":{"compressible":true,"extensions":["ovf"]},"application/x-virtualbox-vbox":{"compressible":true,"extensions":["vbox"]},"application/x-virtualbox-vbox-extpack":{"compressible":false,"extensions":["vbox-extpack"]},"application/x-virtualbox-vdi":{"compressible":true,"extensions":["vdi"]},"application/x-virtualbox-vhd":{"compressible":true,"extensions":["vhd"]},"application/x-virtualbox-vmdk":{"compressible":true,"extensions":["vmdk"]},"application/x-wais-source":{"source":"apache","extensions":["src"]},"application/x-web-app-manifest+json":{"compressible":true,"extensions":["webapp"]},"application/x-www-form-urlencoded":{"source":"iana","compressible":true},"application/x-x509-ca-cert":{"source":"apache","extensions":["der","crt","pem"]},"application/x-xfig":{"source":"apache","extensions":["fig"]},"application/x-xliff+xml":{"source":"apache","compressible":true,"extensions":["xlf"]},"application/x-xpinstall":{"source":"apache","compressible":false,"extensions":["xpi"]},"application/x-xz":{"source":"apache","extensions":["xz"]},"application/x-zmachine":{"source":"apache","extensions":["z1","z2","z3","z4","z5","z6","z7","z8"]},"application/x400-bp":{"source":"iana"},"application/xacml+xml":{"source":"iana","compressible":true},"application/xaml+xml":{"source":"apache","compressible":true,"extensions":["xaml"]},"application/xcap-att+xml":{"source":"iana","compressible":true,"extensions":["xav"]},"application/xcap-caps+xml":{"source":"iana","compressible":true,"extensions":["xca"]},"application/xcap-diff+xml":{"source":"iana","compressible":true,"extensions":["xdf"]},"application/xcap-el+xml":{"source":"iana","compressible":true,"extensions":["xel"]},"application/xcap-error+xml":{"source":"iana","compressible":true,"extensions":["xer"]},"application/xcap-ns+xml":{"source":"iana","compressible":true,"extensions":["xns"]},"application/xcon-conference-info+xml":{"source":"iana","compressible":true},"application/xcon-conference-info-diff+xml":{"source":"iana","compressible":true},"application/xenc+xml":{"source":"iana","compressible":true,"extensions":["xenc"]},"application/xhtml+xml":{"source":"iana","compressible":true,"extensions":["xhtml","xht"]},"application/xhtml-voice+xml":{"source":"apache","compressible":true},"application/xliff+xml":{"source":"iana","compressible":true,"extensions":["xlf"]},"application/xml":{"source":"iana","compressible":true,"extensions":["xml","xsl","xsd","rng"]},"application/xml-dtd":{"source":"iana","compressible":true,"extensions":["dtd"]},"application/xml-external-parsed-entity":{"source":"iana"},"application/xml-patch+xml":{"source":"iana","compressible":true},"application/xmpp+xml":{"source":"iana","compressible":true},"application/xop+xml":{"source":"iana","compressible":true,"extensions":["xop"]},"application/xproc+xml":{"source":"apache","compressible":true,"extensions":["xpl"]},"application/xslt+xml":{"source":"iana","compressible":true,"extensions":["xslt"]},"application/xspf+xml":{"source":"apache","compressible":true,"extensions":["xspf"]},"application/xv+xml":{"source":"iana","compressible":true,"extensions":["mxml","xhvml","xvml","xvm"]},"application/yang":{"source":"iana","extensions":["yang"]},"application/yang-data+json":{"source":"iana","compressible":true},"application/yang-data+xml":{"source":"iana","compressible":true},"application/yang-patch+json":{"source":"iana","compressible":true},"application/yang-patch+xml":{"source":"iana","compressible":true},"application/yin+xml":{"source":"iana","compressible":true,"extensions":["yin"]},"application/zip":{"source":"iana","compressible":false,"extensions":["zip"]},"application/zlib":{"source":"iana"},"application/zstd":{"source":"iana"},"audio/1d-interleaved-parityfec":{"source":"iana"},"audio/32kadpcm":{"source":"iana"},"audio/3gpp":{"source":"iana","compressible":false,"extensions":["3gpp"]},"audio/3gpp2":{"source":"iana"},"audio/aac":{"source":"iana"},"audio/ac3":{"source":"iana"},"audio/adpcm":{"source":"apache","extensions":["adp"]},"audio/amr":{"source":"iana"},"audio/amr-wb":{"source":"iana"},"audio/amr-wb+":{"source":"iana"},"audio/aptx":{"source":"iana"},"audio/asc":{"source":"iana"},"audio/atrac-advanced-lossless":{"source":"iana"},"audio/atrac-x":{"source":"iana"},"audio/atrac3":{"source":"iana"},"audio/basic":{"source":"iana","compressible":false,"extensions":["au","snd"]},"audio/bv16":{"source":"iana"},"audio/bv32":{"source":"iana"},"audio/clearmode":{"source":"iana"},"audio/cn":{"source":"iana"},"audio/dat12":{"source":"iana"},"audio/dls":{"source":"iana"},"audio/dsr-es201108":{"source":"iana"},"audio/dsr-es202050":{"source":"iana"},"audio/dsr-es202211":{"source":"iana"},"audio/dsr-es202212":{"source":"iana"},"audio/dv":{"source":"iana"},"audio/dvi4":{"source":"iana"},"audio/eac3":{"source":"iana"},"audio/encaprtp":{"source":"iana"},"audio/evrc":{"source":"iana"},"audio/evrc-qcp":{"source":"iana"},"audio/evrc0":{"source":"iana"},"audio/evrc1":{"source":"iana"},"audio/evrcb":{"source":"iana"},"audio/evrcb0":{"source":"iana"},"audio/evrcb1":{"source":"iana"},"audio/evrcnw":{"source":"iana"},"audio/evrcnw0":{"source":"iana"},"audio/evrcnw1":{"source":"iana"},"audio/evrcwb":{"source":"iana"},"audio/evrcwb0":{"source":"iana"},"audio/evrcwb1":{"source":"iana"},"audio/evs":{"source":"iana"},"audio/flexfec":{"source":"iana"},"audio/fwdred":{"source":"iana"},"audio/g711-0":{"source":"iana"},"audio/g719":{"source":"iana"},"audio/g722":{"source":"iana"},"audio/g7221":{"source":"iana"},"audio/g723":{"source":"iana"},"audio/g726-16":{"source":"iana"},"audio/g726-24":{"source":"iana"},"audio/g726-32":{"source":"iana"},"audio/g726-40":{"source":"iana"},"audio/g728":{"source":"iana"},"audio/g729":{"source":"iana"},"audio/g7291":{"source":"iana"},"audio/g729d":{"source":"iana"},"audio/g729e":{"source":"iana"},"audio/gsm":{"source":"iana"},"audio/gsm-efr":{"source":"iana"},"audio/gsm-hr-08":{"source":"iana"},"audio/ilbc":{"source":"iana"},"audio/ip-mr_v2.5":{"source":"iana"},"audio/isac":{"source":"apache"},"audio/l16":{"source":"iana"},"audio/l20":{"source":"iana"},"audio/l24":{"source":"iana","compressible":false},"audio/l8":{"source":"iana"},"audio/lpc":{"source":"iana"},"audio/melp":{"source":"iana"},"audio/melp1200":{"source":"iana"},"audio/melp2400":{"source":"iana"},"audio/melp600":{"source":"iana"},"audio/midi":{"source":"apache","extensions":["mid","midi","kar","rmi"]},"audio/mobile-xmf":{"source":"iana","extensions":["mxmf"]},"audio/mp3":{"compressible":false,"extensions":["mp3"]},"audio/mp4":{"source":"iana","compressible":false,"extensions":["m4a","mp4a"]},"audio/mp4a-latm":{"source":"iana"},"audio/mpa":{"source":"iana"},"audio/mpa-robust":{"source":"iana"},"audio/mpeg":{"source":"iana","compressible":false,"extensions":["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/mpeg4-generic":{"source":"iana"},"audio/musepack":{"source":"apache"},"audio/ogg":{"source":"iana","compressible":false,"extensions":["oga","ogg","spx"]},"audio/opus":{"source":"iana"},"audio/parityfec":{"source":"iana"},"audio/pcma":{"source":"iana"},"audio/pcma-wb":{"source":"iana"},"audio/pcmu":{"source":"iana"},"audio/pcmu-wb":{"source":"iana"},"audio/prs.sid":{"source":"iana"},"audio/qcelp":{"source":"iana"},"audio/raptorfec":{"source":"iana"},"audio/red":{"source":"iana"},"audio/rtp-enc-aescm128":{"source":"iana"},"audio/rtp-midi":{"source":"iana"},"audio/rtploopback":{"source":"iana"},"audio/rtx":{"source":"iana"},"audio/s3m":{"source":"apache","extensions":["s3m"]},"audio/silk":{"source":"apache","extensions":["sil"]},"audio/smv":{"source":"iana"},"audio/smv-qcp":{"source":"iana"},"audio/smv0":{"source":"iana"},"audio/sp-midi":{"source":"iana"},"audio/speex":{"source":"iana"},"audio/t140c":{"source":"iana"},"audio/t38":{"source":"iana"},"audio/telephone-event":{"source":"iana"},"audio/tetra_acelp":{"source":"iana"},"audio/tone":{"source":"iana"},"audio/uemclip":{"source":"iana"},"audio/ulpfec":{"source":"iana"},"audio/usac":{"source":"iana"},"audio/vdvi":{"source":"iana"},"audio/vmr-wb":{"source":"iana"},"audio/vnd.3gpp.iufp":{"source":"iana"},"audio/vnd.4sb":{"source":"iana"},"audio/vnd.audiokoz":{"source":"iana"},"audio/vnd.celp":{"source":"iana"},"audio/vnd.cisco.nse":{"source":"iana"},"audio/vnd.cmles.radio-events":{"source":"iana"},"audio/vnd.cns.anp1":{"source":"iana"},"audio/vnd.cns.inf1":{"source":"iana"},"audio/vnd.dece.audio":{"source":"iana","extensions":["uva","uvva"]},"audio/vnd.digital-winds":{"source":"iana","extensions":["eol"]},"audio/vnd.dlna.adts":{"source":"iana"},"audio/vnd.dolby.heaac.1":{"source":"iana"},"audio/vnd.dolby.heaac.2":{"source":"iana"},"audio/vnd.dolby.mlp":{"source":"iana"},"audio/vnd.dolby.mps":{"source":"iana"},"audio/vnd.dolby.pl2":{"source":"iana"},"audio/vnd.dolby.pl2x":{"source":"iana"},"audio/vnd.dolby.pl2z":{"source":"iana"},"audio/vnd.dolby.pulse.1":{"source":"iana"},"audio/vnd.dra":{"source":"iana","extensions":["dra"]},"audio/vnd.dts":{"source":"iana","extensions":["dts"]},"audio/vnd.dts.hd":{"source":"iana","extensions":["dtshd"]},"audio/vnd.dts.uhd":{"source":"iana"},"audio/vnd.dvb.file":{"source":"iana"},"audio/vnd.everad.plj":{"source":"iana"},"audio/vnd.hns.audio":{"source":"iana"},"audio/vnd.lucent.voice":{"source":"iana","extensions":["lvp"]},"audio/vnd.ms-playready.media.pya":{"source":"iana","extensions":["pya"]},"audio/vnd.nokia.mobile-xmf":{"source":"iana"},"audio/vnd.nortel.vbk":{"source":"iana"},"audio/vnd.nuera.ecelp4800":{"source":"iana","extensions":["ecelp4800"]},"audio/vnd.nuera.ecelp7470":{"source":"iana","extensions":["ecelp7470"]},"audio/vnd.nuera.ecelp9600":{"source":"iana","extensions":["ecelp9600"]},"audio/vnd.octel.sbc":{"source":"iana"},"audio/vnd.presonus.multitrack":{"source":"iana"},"audio/vnd.qcelp":{"source":"iana"},"audio/vnd.rhetorex.32kadpcm":{"source":"iana"},"audio/vnd.rip":{"source":"iana","extensions":["rip"]},"audio/vnd.rn-realaudio":{"compressible":false},"audio/vnd.sealedmedia.softseal.mpeg":{"source":"iana"},"audio/vnd.vmx.cvsd":{"source":"iana"},"audio/vnd.wave":{"compressible":false},"audio/vorbis":{"source":"iana","compressible":false},"audio/vorbis-config":{"source":"iana"},"audio/wav":{"compressible":false,"extensions":["wav"]},"audio/wave":{"compressible":false,"extensions":["wav"]},"audio/webm":{"source":"apache","compressible":false,"extensions":["weba"]},"audio/x-aac":{"source":"apache","compressible":false,"extensions":["aac"]},"audio/x-aiff":{"source":"apache","extensions":["aif","aiff","aifc"]},"audio/x-caf":{"source":"apache","compressible":false,"extensions":["caf"]},"audio/x-flac":{"source":"apache","extensions":["flac"]},"audio/x-m4a":{"source":"nginx","extensions":["m4a"]},"audio/x-matroska":{"source":"apache","extensions":["mka"]},"audio/x-mpegurl":{"source":"apache","extensions":["m3u"]},"audio/x-ms-wax":{"source":"apache","extensions":["wax"]},"audio/x-ms-wma":{"source":"apache","extensions":["wma"]},"audio/x-pn-realaudio":{"source":"apache","extensions":["ram","ra"]},"audio/x-pn-realaudio-plugin":{"source":"apache","extensions":["rmp"]},"audio/x-realaudio":{"source":"nginx","extensions":["ra"]},"audio/x-tta":{"source":"apache"},"audio/x-wav":{"source":"apache","extensions":["wav"]},"audio/xm":{"source":"apache","extensions":["xm"]},"chemical/x-cdx":{"source":"apache","extensions":["cdx"]},"chemical/x-cif":{"source":"apache","extensions":["cif"]},"chemical/x-cmdf":{"source":"apache","extensions":["cmdf"]},"chemical/x-cml":{"source":"apache","extensions":["cml"]},"chemical/x-csml":{"source":"apache","extensions":["csml"]},"chemical/x-pdb":{"source":"apache"},"chemical/x-xyz":{"source":"apache","extensions":["xyz"]},"font/collection":{"source":"iana","extensions":["ttc"]},"font/otf":{"source":"iana","compressible":true,"extensions":["otf"]},"font/sfnt":{"source":"iana"},"font/ttf":{"source":"iana","compressible":true,"extensions":["ttf"]},"font/woff":{"source":"iana","extensions":["woff"]},"font/woff2":{"source":"iana","extensions":["woff2"]},"image/aces":{"source":"iana","extensions":["exr"]},"image/apng":{"compressible":false,"extensions":["apng"]},"image/avci":{"source":"iana"},"image/avcs":{"source":"iana"},"image/bmp":{"source":"iana","compressible":true,"extensions":["bmp"]},"image/cgm":{"source":"iana","extensions":["cgm"]},"image/dicom-rle":{"source":"iana","extensions":["drle"]},"image/emf":{"source":"iana","extensions":["emf"]},"image/fits":{"source":"iana","extensions":["fits"]},"image/g3fax":{"source":"iana","extensions":["g3"]},"image/gif":{"source":"iana","compressible":false,"extensions":["gif"]},"image/heic":{"source":"iana","extensions":["heic"]},"image/heic-sequence":{"source":"iana","extensions":["heics"]},"image/heif":{"source":"iana","extensions":["heif"]},"image/heif-sequence":{"source":"iana","extensions":["heifs"]},"image/hej2k":{"source":"iana","extensions":["hej2"]},"image/hsj2":{"source":"iana","extensions":["hsj2"]},"image/ief":{"source":"iana","extensions":["ief"]},"image/jls":{"source":"iana","extensions":["jls"]},"image/jp2":{"source":"iana","compressible":false,"extensions":["jp2","jpg2"]},"image/jpeg":{"source":"iana","compressible":false,"extensions":["jpeg","jpg","jpe"]},"image/jph":{"source":"iana","extensions":["jph"]},"image/jphc":{"source":"iana","extensions":["jhc"]},"image/jpm":{"source":"iana","compressible":false,"extensions":["jpm"]},"image/jpx":{"source":"iana","compressible":false,"extensions":["jpx","jpf"]},"image/jxr":{"source":"iana","extensions":["jxr"]},"image/jxra":{"source":"iana","extensions":["jxra"]},"image/jxrs":{"source":"iana","extensions":["jxrs"]},"image/jxs":{"source":"iana","extensions":["jxs"]},"image/jxsc":{"source":"iana","extensions":["jxsc"]},"image/jxsi":{"source":"iana","extensions":["jxsi"]},"image/jxss":{"source":"iana","extensions":["jxss"]},"image/ktx":{"source":"iana","extensions":["ktx"]},"image/naplps":{"source":"iana"},"image/pjpeg":{"compressible":false},"image/png":{"source":"iana","compressible":false,"extensions":["png"]},"image/prs.btif":{"source":"iana","extensions":["btif"]},"image/prs.pti":{"source":"iana","extensions":["pti"]},"image/pwg-raster":{"source":"iana"},"image/sgi":{"source":"apache","extensions":["sgi"]},"image/svg+xml":{"source":"iana","compressible":true,"extensions":["svg","svgz"]},"image/t38":{"source":"iana","extensions":["t38"]},"image/tiff":{"source":"iana","compressible":false,"extensions":["tif","tiff"]},"image/tiff-fx":{"source":"iana","extensions":["tfx"]},"image/vnd.adobe.photoshop":{"source":"iana","compressible":true,"extensions":["psd"]},"image/vnd.airzip.accelerator.azv":{"source":"iana","extensions":["azv"]},"image/vnd.cns.inf2":{"source":"iana"},"image/vnd.dece.graphic":{"source":"iana","extensions":["uvi","uvvi","uvg","uvvg"]},"image/vnd.djvu":{"source":"iana","extensions":["djvu","djv"]},"image/vnd.dvb.subtitle":{"source":"iana","extensions":["sub"]},"image/vnd.dwg":{"source":"iana","extensions":["dwg"]},"image/vnd.dxf":{"source":"iana","extensions":["dxf"]},"image/vnd.fastbidsheet":{"source":"iana","extensions":["fbs"]},"image/vnd.fpx":{"source":"iana","extensions":["fpx"]},"image/vnd.fst":{"source":"iana","extensions":["fst"]},"image/vnd.fujixerox.edmics-mmr":{"source":"iana","extensions":["mmr"]},"image/vnd.fujixerox.edmics-rlc":{"source":"iana","extensions":["rlc"]},"image/vnd.globalgraphics.pgb":{"source":"iana"},"image/vnd.microsoft.icon":{"source":"iana","extensions":["ico"]},"image/vnd.mix":{"source":"iana"},"image/vnd.mozilla.apng":{"source":"iana"},"image/vnd.ms-dds":{"extensions":["dds"]},"image/vnd.ms-modi":{"source":"iana","extensions":["mdi"]},"image/vnd.ms-photo":{"source":"apache","extensions":["wdp"]},"image/vnd.net-fpx":{"source":"iana","extensions":["npx"]},"image/vnd.radiance":{"source":"iana"},"image/vnd.sealed.png":{"source":"iana"},"image/vnd.sealedmedia.softseal.gif":{"source":"iana"},"image/vnd.sealedmedia.softseal.jpg":{"source":"iana"},"image/vnd.svf":{"source":"iana"},"image/vnd.tencent.tap":{"source":"iana","extensions":["tap"]},"image/vnd.valve.source.texture":{"source":"iana","extensions":["vtf"]},"image/vnd.wap.wbmp":{"source":"iana","extensions":["wbmp"]},"image/vnd.xiff":{"source":"iana","extensions":["xif"]},"image/vnd.zbrush.pcx":{"source":"iana","extensions":["pcx"]},"image/webp":{"source":"apache","extensions":["webp"]},"image/wmf":{"source":"iana","extensions":["wmf"]},"image/x-3ds":{"source":"apache","extensions":["3ds"]},"image/x-cmu-raster":{"source":"apache","extensions":["ras"]},"image/x-cmx":{"source":"apache","extensions":["cmx"]},"image/x-freehand":{"source":"apache","extensions":["fh","fhc","fh4","fh5","fh7"]},"image/x-icon":{"source":"apache","compressible":true,"extensions":["ico"]},"image/x-jng":{"source":"nginx","extensions":["jng"]},"image/x-mrsid-image":{"source":"apache","extensions":["sid"]},"image/x-ms-bmp":{"source":"nginx","compressible":true,"extensions":["bmp"]},"image/x-pcx":{"source":"apache","extensions":["pcx"]},"image/x-pict":{"source":"apache","extensions":["pic","pct"]},"image/x-portable-anymap":{"source":"apache","extensions":["pnm"]},"image/x-portable-bitmap":{"source":"apache","extensions":["pbm"]},"image/x-portable-graymap":{"source":"apache","extensions":["pgm"]},"image/x-portable-pixmap":{"source":"apache","extensions":["ppm"]},"image/x-rgb":{"source":"apache","extensions":["rgb"]},"image/x-tga":{"source":"apache","extensions":["tga"]},"image/x-xbitmap":{"source":"apache","extensions":["xbm"]},"image/x-xcf":{"compressible":false},"image/x-xpixmap":{"source":"apache","extensions":["xpm"]},"image/x-xwindowdump":{"source":"apache","extensions":["xwd"]},"message/cpim":{"source":"iana"},"message/delivery-status":{"source":"iana"},"message/disposition-notification":{"source":"iana","extensions":["disposition-notification"]},"message/external-body":{"source":"iana"},"message/feedback-report":{"source":"iana"},"message/global":{"source":"iana","extensions":["u8msg"]},"message/global-delivery-status":{"source":"iana","extensions":["u8dsn"]},"message/global-disposition-notification":{"source":"iana","extensions":["u8mdn"]},"message/global-headers":{"source":"iana","extensions":["u8hdr"]},"message/http":{"source":"iana","compressible":false},"message/imdn+xml":{"source":"iana","compressible":true},"message/news":{"source":"iana"},"message/partial":{"source":"iana","compressible":false},"message/rfc822":{"source":"iana","compressible":true,"extensions":["eml","mime"]},"message/s-http":{"source":"iana"},"message/sip":{"source":"iana"},"message/sipfrag":{"source":"iana"},"message/tracking-status":{"source":"iana"},"message/vnd.si.simp":{"source":"iana"},"message/vnd.wfa.wsc":{"source":"iana","extensions":["wsc"]},"model/3mf":{"source":"iana","extensions":["3mf"]},"model/gltf+json":{"source":"iana","compressible":true,"extensions":["gltf"]},"model/gltf-binary":{"source":"iana","compressible":true,"extensions":["glb"]},"model/iges":{"source":"iana","compressible":false,"extensions":["igs","iges"]},"model/mesh":{"source":"iana","compressible":false,"extensions":["msh","mesh","silo"]},"model/stl":{"source":"iana","extensions":["stl"]},"model/vnd.collada+xml":{"source":"iana","compressible":true,"extensions":["dae"]},"model/vnd.dwf":{"source":"iana","extensions":["dwf"]},"model/vnd.flatland.3dml":{"source":"iana"},"model/vnd.gdl":{"source":"iana","extensions":["gdl"]},"model/vnd.gs-gdl":{"source":"apache"},"model/vnd.gs.gdl":{"source":"iana"},"model/vnd.gtw":{"source":"iana","extensions":["gtw"]},"model/vnd.moml+xml":{"source":"iana","compressible":true},"model/vnd.mts":{"source":"iana","extensions":["mts"]},"model/vnd.opengex":{"source":"iana","extensions":["ogex"]},"model/vnd.parasolid.transmit.binary":{"source":"iana","extensions":["x_b"]},"model/vnd.parasolid.transmit.text":{"source":"iana","extensions":["x_t"]},"model/vnd.rosette.annotated-data-model":{"source":"iana"},"model/vnd.usdz+zip":{"source":"iana","compressible":false,"extensions":["usdz"]},"model/vnd.valve.source.compiled-map":{"source":"iana","extensions":["bsp"]},"model/vnd.vtu":{"source":"iana","extensions":["vtu"]},"model/vrml":{"source":"iana","compressible":false,"extensions":["wrl","vrml"]},"model/x3d+binary":{"source":"apache","compressible":false,"extensions":["x3db","x3dbz"]},"model/x3d+fastinfoset":{"source":"iana","extensions":["x3db"]},"model/x3d+vrml":{"source":"apache","compressible":false,"extensions":["x3dv","x3dvz"]},"model/x3d+xml":{"source":"iana","compressible":true,"extensions":["x3d","x3dz"]},"model/x3d-vrml":{"source":"iana","extensions":["x3dv"]},"multipart/alternative":{"source":"iana","compressible":false},"multipart/appledouble":{"source":"iana"},"multipart/byteranges":{"source":"iana"},"multipart/digest":{"source":"iana"},"multipart/encrypted":{"source":"iana","compressible":false},"multipart/form-data":{"source":"iana","compressible":false},"multipart/header-set":{"source":"iana"},"multipart/mixed":{"source":"iana"},"multipart/multilingual":{"source":"iana"},"multipart/parallel":{"source":"iana"},"multipart/related":{"source":"iana","compressible":false},"multipart/report":{"source":"iana"},"multipart/signed":{"source":"iana","compressible":false},"multipart/vnd.bint.med-plus":{"source":"iana"},"multipart/voice-message":{"source":"iana"},"multipart/x-mixed-replace":{"source":"iana"},"text/1d-interleaved-parityfec":{"source":"iana"},"text/cache-manifest":{"source":"iana","compressible":true,"extensions":["appcache","manifest"]},"text/calendar":{"source":"iana","extensions":["ics","ifb"]},"text/calender":{"compressible":true},"text/cmd":{"compressible":true},"text/coffeescript":{"extensions":["coffee","litcoffee"]},"text/css":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["css"]},"text/csv":{"source":"iana","compressible":true,"extensions":["csv"]},"text/csv-schema":{"source":"iana"},"text/directory":{"source":"iana"},"text/dns":{"source":"iana"},"text/ecmascript":{"source":"iana"},"text/encaprtp":{"source":"iana"},"text/enriched":{"source":"iana"},"text/flexfec":{"source":"iana"},"text/fwdred":{"source":"iana"},"text/grammar-ref-list":{"source":"iana"},"text/html":{"source":"iana","compressible":true,"extensions":["html","htm","shtml"]},"text/jade":{"extensions":["jade"]},"text/javascript":{"source":"iana","compressible":true},"text/jcr-cnd":{"source":"iana"},"text/jsx":{"compressible":true,"extensions":["jsx"]},"text/less":{"compressible":true,"extensions":["less"]},"text/markdown":{"source":"iana","compressible":true,"extensions":["markdown","md"]},"text/mathml":{"source":"nginx","extensions":["mml"]},"text/mdx":{"compressible":true,"extensions":["mdx"]},"text/mizar":{"source":"iana"},"text/n3":{"source":"iana","compressible":true,"extensions":["n3"]},"text/parameters":{"source":"iana"},"text/parityfec":{"source":"iana"},"text/plain":{"source":"iana","compressible":true,"extensions":["txt","text","conf","def","list","log","in","ini"]},"text/provenance-notation":{"source":"iana"},"text/prs.fallenstein.rst":{"source":"iana"},"text/prs.lines.tag":{"source":"iana","extensions":["dsc"]},"text/prs.prop.logic":{"source":"iana"},"text/raptorfec":{"source":"iana"},"text/red":{"source":"iana"},"text/rfc822-headers":{"source":"iana"},"text/richtext":{"source":"iana","compressible":true,"extensions":["rtx"]},"text/rtf":{"source":"iana","compressible":true,"extensions":["rtf"]},"text/rtp-enc-aescm128":{"source":"iana"},"text/rtploopback":{"source":"iana"},"text/rtx":{"source":"iana"},"text/sgml":{"source":"iana","extensions":["sgml","sgm"]},"text/shex":{"extensions":["shex"]},"text/slim":{"extensions":["slim","slm"]},"text/strings":{"source":"iana"},"text/stylus":{"extensions":["stylus","styl"]},"text/t140":{"source":"iana"},"text/tab-separated-values":{"source":"iana","compressible":true,"extensions":["tsv"]},"text/troff":{"source":"iana","extensions":["t","tr","roff","man","me","ms"]},"text/turtle":{"source":"iana","charset":"UTF-8","extensions":["ttl"]},"text/ulpfec":{"source":"iana"},"text/uri-list":{"source":"iana","compressible":true,"extensions":["uri","uris","urls"]},"text/vcard":{"source":"iana","compressible":true,"extensions":["vcard"]},"text/vnd.a":{"source":"iana"},"text/vnd.abc":{"source":"iana"},"text/vnd.ascii-art":{"source":"iana"},"text/vnd.curl":{"source":"iana","extensions":["curl"]},"text/vnd.curl.dcurl":{"source":"apache","extensions":["dcurl"]},"text/vnd.curl.mcurl":{"source":"apache","extensions":["mcurl"]},"text/vnd.curl.scurl":{"source":"apache","extensions":["scurl"]},"text/vnd.debian.copyright":{"source":"iana"},"text/vnd.dmclientscript":{"source":"iana"},"text/vnd.dvb.subtitle":{"source":"iana","extensions":["sub"]},"text/vnd.esmertec.theme-descriptor":{"source":"iana"},"text/vnd.ficlab.flt":{"source":"iana"},"text/vnd.fly":{"source":"iana","extensions":["fly"]},"text/vnd.fmi.flexstor":{"source":"iana","extensions":["flx"]},"text/vnd.gml":{"source":"iana"},"text/vnd.graphviz":{"source":"iana","extensions":["gv"]},"text/vnd.hgl":{"source":"iana"},"text/vnd.in3d.3dml":{"source":"iana","extensions":["3dml"]},"text/vnd.in3d.spot":{"source":"iana","extensions":["spot"]},"text/vnd.iptc.newsml":{"source":"iana"},"text/vnd.iptc.nitf":{"source":"iana"},"text/vnd.latex-z":{"source":"iana"},"text/vnd.motorola.reflex":{"source":"iana"},"text/vnd.ms-mediapackage":{"source":"iana"},"text/vnd.net2phone.commcenter.command":{"source":"iana"},"text/vnd.radisys.msml-basic-layout":{"source":"iana"},"text/vnd.senx.warpscript":{"source":"iana"},"text/vnd.si.uricatalogue":{"source":"iana"},"text/vnd.sosi":{"source":"iana"},"text/vnd.sun.j2me.app-descriptor":{"source":"iana","extensions":["jad"]},"text/vnd.trolltech.linguist":{"source":"iana"},"text/vnd.wap.si":{"source":"iana"},"text/vnd.wap.sl":{"source":"iana"},"text/vnd.wap.wml":{"source":"iana","extensions":["wml"]},"text/vnd.wap.wmlscript":{"source":"iana","extensions":["wmls"]},"text/vtt":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["vtt"]},"text/x-asm":{"source":"apache","extensions":["s","asm"]},"text/x-c":{"source":"apache","extensions":["c","cc","cxx","cpp","h","hh","dic"]},"text/x-component":{"source":"nginx","extensions":["htc"]},"text/x-fortran":{"source":"apache","extensions":["f","for","f77","f90"]},"text/x-gwt-rpc":{"compressible":true},"text/x-handlebars-template":{"extensions":["hbs"]},"text/x-java-source":{"source":"apache","extensions":["java"]},"text/x-jquery-tmpl":{"compressible":true},"text/x-lua":{"extensions":["lua"]},"text/x-markdown":{"compressible":true,"extensions":["mkd"]},"text/x-nfo":{"source":"apache","extensions":["nfo"]},"text/x-opml":{"source":"apache","extensions":["opml"]},"text/x-org":{"compressible":true,"extensions":["org"]},"text/x-pascal":{"source":"apache","extensions":["p","pas"]},"text/x-processing":{"compressible":true,"extensions":["pde"]},"text/x-sass":{"extensions":["sass"]},"text/x-scss":{"extensions":["scss"]},"text/x-setext":{"source":"apache","extensions":["etx"]},"text/x-sfv":{"source":"apache","extensions":["sfv"]},"text/x-suse-ymp":{"compressible":true,"extensions":["ymp"]},"text/x-uuencode":{"source":"apache","extensions":["uu"]},"text/x-vcalendar":{"source":"apache","extensions":["vcs"]},"text/x-vcard":{"source":"apache","extensions":["vcf"]},"text/xml":{"source":"iana","compressible":true,"extensions":["xml"]},"text/xml-external-parsed-entity":{"source":"iana"},"text/yaml":{"extensions":["yaml","yml"]},"video/1d-interleaved-parityfec":{"source":"iana"},"video/3gpp":{"source":"iana","extensions":["3gp","3gpp"]},"video/3gpp-tt":{"source":"iana"},"video/3gpp2":{"source":"iana","extensions":["3g2"]},"video/bmpeg":{"source":"iana"},"video/bt656":{"source":"iana"},"video/celb":{"source":"iana"},"video/dv":{"source":"iana"},"video/encaprtp":{"source":"iana"},"video/flexfec":{"source":"iana"},"video/h261":{"source":"iana","extensions":["h261"]},"video/h263":{"source":"iana","extensions":["h263"]},"video/h263-1998":{"source":"iana"},"video/h263-2000":{"source":"iana"},"video/h264":{"source":"iana","extensions":["h264"]},"video/h264-rcdo":{"source":"iana"},"video/h264-svc":{"source":"iana"},"video/h265":{"source":"iana"},"video/iso.segment":{"source":"iana"},"video/jpeg":{"source":"iana","extensions":["jpgv"]},"video/jpeg2000":{"source":"iana"},"video/jpm":{"source":"apache","extensions":["jpm","jpgm"]},"video/mj2":{"source":"iana","extensions":["mj2","mjp2"]},"video/mp1s":{"source":"iana"},"video/mp2p":{"source":"iana"},"video/mp2t":{"source":"iana","extensions":["ts"]},"video/mp4":{"source":"iana","compressible":false,"extensions":["mp4","mp4v","mpg4"]},"video/mp4v-es":{"source":"iana"},"video/mpeg":{"source":"iana","compressible":false,"extensions":["mpeg","mpg","mpe","m1v","m2v"]},"video/mpeg4-generic":{"source":"iana"},"video/mpv":{"source":"iana"},"video/nv":{"source":"iana"},"video/ogg":{"source":"iana","compressible":false,"extensions":["ogv"]},"video/parityfec":{"source":"iana"},"video/pointer":{"source":"iana"},"video/quicktime":{"source":"iana","compressible":false,"extensions":["qt","mov"]},"video/raptorfec":{"source":"iana"},"video/raw":{"source":"iana"},"video/rtp-enc-aescm128":{"source":"iana"},"video/rtploopback":{"source":"iana"},"video/rtx":{"source":"iana"},"video/smpte291":{"source":"iana"},"video/smpte292m":{"source":"iana"},"video/ulpfec":{"source":"iana"},"video/vc1":{"source":"iana"},"video/vc2":{"source":"iana"},"video/vnd.cctv":{"source":"iana"},"video/vnd.dece.hd":{"source":"iana","extensions":["uvh","uvvh"]},"video/vnd.dece.mobile":{"source":"iana","extensions":["uvm","uvvm"]},"video/vnd.dece.mp4":{"source":"iana"},"video/vnd.dece.pd":{"source":"iana","extensions":["uvp","uvvp"]},"video/vnd.dece.sd":{"source":"iana","extensions":["uvs","uvvs"]},"video/vnd.dece.video":{"source":"iana","extensions":["uvv","uvvv"]},"video/vnd.directv.mpeg":{"source":"iana"},"video/vnd.directv.mpeg-tts":{"source":"iana"},"video/vnd.dlna.mpeg-tts":{"source":"iana"},"video/vnd.dvb.file":{"source":"iana","extensions":["dvb"]},"video/vnd.fvt":{"source":"iana","extensions":["fvt"]},"video/vnd.hns.video":{"source":"iana"},"video/vnd.iptvforum.1dparityfec-1010":{"source":"iana"},"video/vnd.iptvforum.1dparityfec-2005":{"source":"iana"},"video/vnd.iptvforum.2dparityfec-1010":{"source":"iana"},"video/vnd.iptvforum.2dparityfec-2005":{"source":"iana"},"video/vnd.iptvforum.ttsavc":{"source":"iana"},"video/vnd.iptvforum.ttsmpeg2":{"source":"iana"},"video/vnd.motorola.video":{"source":"iana"},"video/vnd.motorola.videop":{"source":"iana"},"video/vnd.mpegurl":{"source":"iana","extensions":["mxu","m4u"]},"video/vnd.ms-playready.media.pyv":{"source":"iana","extensions":["pyv"]},"video/vnd.nokia.interleaved-multimedia":{"source":"iana"},"video/vnd.nokia.mp4vr":{"source":"iana"},"video/vnd.nokia.videovoip":{"source":"iana"},"video/vnd.objectvideo":{"source":"iana"},"video/vnd.radgamettools.bink":{"source":"iana"},"video/vnd.radgamettools.smacker":{"source":"iana"},"video/vnd.sealed.mpeg1":{"source":"iana"},"video/vnd.sealed.mpeg4":{"source":"iana"},"video/vnd.sealed.swf":{"source":"iana"},"video/vnd.sealedmedia.softseal.mov":{"source":"iana"},"video/vnd.uvvu.mp4":{"source":"iana","extensions":["uvu","uvvu"]},"video/vnd.vivo":{"source":"iana","extensions":["viv"]},"video/vnd.youtube.yt":{"source":"iana"},"video/vp8":{"source":"iana"},"video/webm":{"source":"apache","compressible":false,"extensions":["webm"]},"video/x-f4v":{"source":"apache","extensions":["f4v"]},"video/x-fli":{"source":"apache","extensions":["fli"]},"video/x-flv":{"source":"apache","compressible":false,"extensions":["flv"]},"video/x-m4v":{"source":"apache","extensions":["m4v"]},"video/x-matroska":{"source":"apache","compressible":false,"extensions":["mkv","mk3d","mks"]},"video/x-mng":{"source":"apache","extensions":["mng"]},"video/x-ms-asf":{"source":"apache","extensions":["asf","asx"]},"video/x-ms-vob":{"source":"apache","extensions":["vob"]},"video/x-ms-wm":{"source":"apache","extensions":["wm"]},"video/x-ms-wmv":{"source":"apache","compressible":false,"extensions":["wmv"]},"video/x-ms-wmx":{"source":"apache","extensions":["wmx"]},"video/x-ms-wvx":{"source":"apache","extensions":["wvx"]},"video/x-msvideo":{"source":"apache","extensions":["avi"]},"video/x-sgi-movie":{"source":"apache","extensions":["movie"]},"video/x-smv":{"source":"apache","extensions":["smv"]},"x-conference/x-cooltalk":{"source":"apache","extensions":["ice"]},"x-shader/x-fragment":{"compressible":true},"x-shader/x-vertex":{"compressible":true}}')},function(e,t,n){e.exports={parallel:n(96),serial:n(98),serialOrdered:n(61)}},function(e,t,n){var i=n(56),r=n(59),o=n(60);e.exports=function(e,t,n){var s=r(e);for(;s.index<(s.keyedList||e).length;)i(e,t,s,(function(e,t){e?n(e,t):0!==Object.keys(s.jobs).length||n(null,s.results)})),s.index++;return o.bind(s,n)}},function(e,t){e.exports=function(e){var t="function"==typeof setImmediate?setImmediate:"object"==typeof process&&"function"==typeof process.nextTick?process.nextTick:null;t?t(e):setTimeout(e,0)}},function(e,t,n){var i=n(61);e.exports=function(e,t,n){return i(e,t,null,n)}},function(e,t){e.exports=function(e,t){return Object.keys(t).forEach((function(n){e[n]=e[n]||t[n]})),e}},function(e,t,n){"use strict";const i=n(1),r=n(5),o=n(3),s=n(4),a=n(8),c=n(6),u=n(18),{STATES:l}=n(12),p={RELEASE_URL:"https://alpha.kite.com/release/dls/mac/current",APPS_PATH:"/Applications/",KITE_DMG_PATH:"/tmp/Kite.dmg",KITE_VOLUME_PATH:"/Volumes/Kite/",KITE_APP_PATH:{mounted:"/Volumes/Kite/Kite.app",defaultInstalled:"/Applications/Kite.app"},KITE_SIDEBAR_PATH:"/Applications/Kite.app/Contents/MacOS/KiteSidebar.app",KITE_BUNDLE_ID:"com.kite.Kite",SESSION_FILE_PATH:o.join(i.homedir(),".kite","session.json"),get releaseURL(){return this.RELEASE_URL},get downloadPath(){return this.KITE_DMG_PATH},get installPath(){return this.allInstallPaths[0]},get allInstallPaths(){let e=String(a.spawnSync("mdfind",['kMDItemCFBundleIdentifier = "com.kite.Kite"']).stdout).trim().split("\n");return-1===e.indexOf(this.KITE_APP_PATH.defaultInstalled)&&this.checkDefaultAppPath()&&e.push(this.KITE_APP_PATH.defaultInstalled),e.filter(e=>""!==e)},get enterpriseInstallPath(){return this.allEnterpriseInstallPaths[0]},get allEnterpriseInstallPaths(){return String(a.spawnSync("mdfind",['kMDItemCFBundleIdentifier = "enterprise.kite.Kite"']).stdout).trim().split("\n")},get sessionFilePath(){return this.SESSION_FILE_PATH},isAdmin(){try{const e=c.whoami();return String(a.execSync("dscacheutil -q group -a name admin")).split("\n").filter(e=>/^users:/.test(e))[0].trim().replace(/users:\s+/,"").split(/\s/g).includes(e)}catch(e){return!1}},arch:()=>i.arch(),isOSSupported:()=>!0,isOSVersionSupported:()=>parseFloat(i.release())>=14,isKiteSupported(){return this.isOSVersionSupported()},checkDefaultAppPath(){return r.existsSync(this.KITE_APP_PATH.defaultInstalled)},isKiteInstalled(){return c.spawnPromise("mdfind",['kMDItemCFBundleIdentifier = "com.kite.Kite"'],"mdfind_error","Unable to run mdfind and verify that Kite is installed").then(e=>{if(!(e&&""!==e.trim()||this.checkDefaultAppPath()))throw new u("Unable to find Kite application install using mdfind",{state:l.UNINSTALLED})})},hasManyKiteInstallation(){return this.allInstallPaths.length>1},hasManyKiteEnterpriseInstallation(){return this.allEnterpriseInstallPaths.length>1},hasBothKiteInstalled(){return Promise.all([this.isKiteInstalled(),this.isKiteEnterpriseInstalled()])},isKiteEnterpriseInstalled:()=>c.spawnPromise("mdfind",['kMDItemCFBundleIdentifier = "enterprise.kite.Kite"'],"mdfind_error","Unable to run mdfind and verify that kite enterprise is installed").then(e=>{if(!e||""===e.trim())throw new u("Unable to find Kite Enterprise application install using mdfind",{state:l.UNINSTALLED})}),downloadKiteRelease(e){return this.downloadKite(this.releaseURL,e||{})},downloadKite(e,t){return t=t||{},this.streamKiteDownload(e,t.onDownloadProgress).then(()=>c.guardCall(t.onDownload)).then(()=>t.install&&this.installKite(t))},streamKiteDownload(e,t){const n=s.request(e);return n.end(),c.followRedirections(n).then(e=>{if(t){const n=parseInt(e.headers["content-length"],10);let i=0;e.on("data",e=>{i+=e.length,t(i,n,i/n)})}return c.promisifyStream(e.pipe(r.createWriteStream(this.downloadPath))).then(()=>new Promise((e,t)=>{setTimeout(e,100)}))})},installKite(e){return e=e||{},c.guardCall(e.onInstallStart),c.spawnPromise("hdiutil",["attach","-nobrowse",this.KITE_DMG_PATH],"mount_error","Unable to mount Kite.dmg").then(()=>c.guardCall(e.onMount)).then(()=>c.spawnPromise("cp",["-r",this.KITE_APP_PATH.mounted,this.APPS_PATH],"cp_error","Unable to copy Kite.app in the applications directory")).then(()=>c.guardCall(e.onCopy)).then(()=>c.spawnPromise("hdiutil",["detach",this.KITE_VOLUME_PATH],"unmount_error","Unable to unmount Kite.dmg")).then(()=>c.guardCall(e.onUnmount)).then(()=>c.spawnPromise("rm",[this.KITE_DMG_PATH],"rm_error","Unable to remove Kite.dmg")).then(()=>c.guardCall(e.onRemove)).then(()=>c.retryPromise(()=>this.isKiteInstalled(),10,1500))},isKiteRunning:()=>c.spawnPromise("/bin/ps",["-axco","command"],{encoding:"utf8"},"ps_error","Unable to run the ps command and verify that Kite is running").then(e=>{if(!e.split("\n").some(e=>/^Kite$/.test(e)))throw new u("Kite process could not be found in the processes list",{state:l.NOT_RUNNING})}),runKiteWithCopilot(){const e=Object.assign({},process.env);return delete e.ELECTRON_RUN_AS_NODE,c.spawnPromise("open",["-a",this.installPath,"--args","--plugin-launch-with-copilot","--channel=autocomplete-python"],{env:e},"open_error","Unable to run the open command to start Kite")},runKite(){const e=Object.assign({},process.env);return delete e.ELECTRON_RUN_AS_NODE,this.isKiteRunning().catch(()=>c.spawnPromise("defaults",["write","com.kite.Kite","shouldReopenSidebar","0"],"defaults_error","Unable to run defaults command").then(()=>c.spawnPromise("open",["-a",this.installPath,"--args","--plugin-launch","--channel=autocomplete-python"],{env:e},"open_error","Unable to run the open command to start Kite")))},isKiteEnterpriseRunning:()=>c.spawnPromise("/bin/ps",["-axco","command"],{encoding:"utf8"},"ps_error","Unable to run the ps command and verify that Kite enterprise is running").then(e=>{if(!e.split("\n").some(e=>/^KiteEnterprise$/.test(e)))throw new u("Kite Enterprise process could not be found in the processes list",{state:l.NOT_RUNNING})}),runKiteEnterprise(){const e=Object.assign({},process.env);return delete e.ELECTRON_RUN_AS_NODE,c.spawnPromise("defaults",["write","enterprise.kite.Kite","shouldReopenSidebar","0"],"defaults_error","Unable to run defaults command").then(()=>c.spawnPromise("open",["-a",this.enterpriseInstallPath],{env:e},"open_error","Unable to run the open command and start Kite enterprise"))}};e.exports=p},function(e,t,n){"use strict";const i=n(1),r=n(5),o=n(3),s=n(4),a=n(8),c=n(6),u=n(18),l=n(40),{STATES:p}=n(12),d=`"${o.join(__dirname,"read-key.bat")}"`;o.join(__dirname,"read-arch.bat");let h;const f={RELEASE_URL:"https://alpha.kite.com/release/dls/windows/current",KITE_INSTALLER_PATH:o.join(i.tmpdir(),"KiteSetup.exe"),SESSION_FILE_PATH:o.join(process.env.LOCALAPPDATA,"Kite","session.json"),set KITE_EXE_PATH(e){h=e},get KITE_EXE_PATH(){if(!h){let e,t;t=process.env.ProgramW6432?o.join(process.env.ProgramW6432,"Kite"):"C:\\Program Files\\Kite";try{const n=String(a.execSync(d)).trim();e="not found"!==n?n:t}catch(n){e=t}h=o.join(e,"kited.exe")}return h},get releaseURL(){return this.RELEASE_URL},get downloadPath(){return this.KITE_INSTALLER_PATH},get installPath(){return this.KITE_EXE_PATH},get enterpriseInstallPath(){return null},get allInstallPaths(){return[this.installPath]},get allEnterpriseInstallPaths(){return[]},get sessionFilePath(){return this.SESSION_FILE_PATH},isAdmin(){try{return a.execSync("net session"),!0}catch(e){return!1}},arch:()=>"64bit",isOSSupported:()=>!0,isOSVersionSupported(){return parseFloat(i.release())>=6.1&&"64bit"===this.arch()},isKiteSupported(){return this.isOSVersionSupported()},isKiteInstalled(){return new Promise((e,t)=>{r.exists(this.KITE_EXE_PATH,n=>{n?e():t(new u("",{state:p.UNINSTALLED}))})})},isKiteEnterpriseInstalled:()=>Promise.reject(new u("Kite Enterprise is currently not supported on windows",{state:p.UNSUPPORTED})),hasManyKiteInstallation(){return this.allInstallPaths.length>1},hasManyKiteEnterpriseInstallation(){return this.allEnterpriseInstallPaths.length>1},hasBothKiteInstalled(){return Promise.all([this.isKiteInstalled(),this.isKiteEnterpriseInstalled()])},downloadKiteRelease(e){return this.downloadKite(this.releaseURL,e||{})},downloadKite(e,t){return t=t||{},this.streamKiteDownload(e,t.onDownloadProgress).then(()=>c.guardCall(t.onDownload)).then(()=>t.install&&this.installKite(t))},streamKiteDownload(e,t){const n=s.request(e);return n.end(),c.followRedirections(n).then(e=>{if(t){const n=parseInt(e.headers["content-length"],10);let i=0;e.on("data",e=>{i+=e.length,t(i,n,i/n)})}return c.promisifyStream(e.pipe(r.createWriteStream(this.downloadPath))).then(()=>new Promise((e,t)=>{setTimeout(e,100)}))})},installKite(e){e=e||{};var t=Object.create(process.env);return t.KITE_SKIP_ONBOARDING="1",c.guardCall(e.onInstallStart),c.execPromise(`"${this.KITE_INSTALLER_PATH}" --skip-onboarding --plugin-launch --channel=autocomplete-python`,{env:t},"kite_install_error","Unable to run Kite installer").then(()=>c.guardCall(e.onCopy)).then(()=>r.unlinkSync(this.KITE_INSTALLER_PATH)).then(()=>c.guardCall(e.onRemove))},isKiteRunning:()=>c.spawnPromise("tasklist","tasklist_error","Unable to run the tasklist command and verify whether kite is running or not").then(e=>{if(e.split("\n").every(e=>-1===e.indexOf("kited.exe")))throw new u("Unable to find kited.exe process in the tasks list",{state:p.NOT_RUNNING})}),runKiteWithCopilot(){var e=Object.create(process.env);return delete e.ELECTRON_RUN_AS_NODE,new Promise((t,n)=>{try{a.spawn(this.KITE_EXE_PATH,["--plugin-launch-with-copilot","--channel=autocomplete-python"],{detached:!0,env:e}),t()}catch(t){n(new l("kite_exe_error",{message:"Unable to run kite executable",callStack:t.stack,cmd:this.KITE_EXE_PATH,options:{detached:!0,env:e}}))}})},runKite(){return this.isKiteRunning().catch(()=>{var e=Object.create(process.env);e.KITE_SKIP_ONBOARDING="1",delete e.ELECTRON_RUN_AS_NODE;try{a.spawn(this.KITE_EXE_PATH,["--plugin-launch","--channel=autocomplete-python"],{detached:!0,env:e})}catch(t){throw new l("kite_exe_error",{message:"Unable to run kite executable",callStack:t.stack,cmd:this.KITE_EXE_PATH,options:{detached:!0,env:e}})}})},isKiteEnterpriseRunning:()=>Promise.reject(new u("Kite Enterprise is currently not supported on windows",{state:p.UNSUPPORTED})),runKiteEnterprise:()=>Promise.reject(new u("Kite Enterprise is currently not supported on windows",{state:p.UNSUPPORTED}))};e.exports=f},function(e,t,n){"use strict";const i=n(1),r=n(5),o=n(3),s=n(4),a=n(8),c=n(6),u=n(18),l=n(40),{STATES:p}=n(12),d={RELEASE_URL:"https://linux.kite.com/dls/linux/current",SESSION_FILE_PATH:o.join(i.homedir(),".kite","session.json"),KITE_INSTALLER_PATH:o.join(i.tmpdir(),"kite-installer.sh"),KITED_PATH:o.join(i.homedir(),".local","share","kite","kited"),KITED_PROCESS:/kited/,KITE_CURRENT_LINK:o.join(i.homedir(),".local","share","kite","current"),memKitedInstallPath:null,get releaseURL(){return this.RELEASE_URL},get downloadPath(){return this.KITE_INSTALLER_PATH},get installPath(){return this.memKitedInstallPath||(this.memKitedInstallPath=this.KITED_PATH),this.memKitedInstallPath},resetInstallPath(){this.memKitedInstallPath=null},get allInstallPaths(){return[this.installPath]},get enterpriseInstallPath(){return null},get allEnterpriseInstallPaths(){return null},get sessionFilePath(){return this.SESSION_FILE_PATH},hasManyKiteInstallation(){return this.allInstallPaths.length>1},hasManyKiteEnterpriseInstallation:()=>!1,isAdmin(){try{const e=c.whoami();return String(a.execSync("getent group root adm admin sudo")).split("\n").map(e=>e.substring(e.lastIndexOf(":")+1)).reduce((e,t)=>(t.split(",").forEach(t=>e.push(t.trim())),e),[]).includes(e)}catch(e){try{const e=i.userInfo();return 0===e.uid||"root"===e.username}catch(e){return!1}}},arch:()=>i.arch(),isOSSupported:()=>!0,isOSVersionSupported:()=>"x64"===i.arch(),isKiteSupported(){return this.isOSSupported()&&this.isOSVersionSupported()},isKiteInstalled(){return new Promise((e,t)=>{r.exists(this.installPath,n=>{n?e():t(new u("",{state:p.UNINSTALLED}))})})},downloadKiteRelease(e){return this.downloadKite(this.releaseURL,e||{})},downloadKite(e,t){return t=t||{},this.downloadKiteInstallerScript(e,t.onDownloadProgress).then(()=>this.streamKiteDownload(this.downloadPath,t.onDownloadProgress)).then(()=>c.guardCall(t.onDownload)).then(()=>t.install&&this.installKite(t))},downloadKiteInstallerScript(e,t){const n=s.request(e);return n.end(),t&&t(0,100,0),c.followRedirections(n).then(e=>c.promisifyStream(e.pipe(r.createWriteStream(this.downloadPath))).then(()=>r.chmodSync(this.downloadPath,448)).then(()=>new Promise((e,t)=>{setTimeout(e,100)})))},streamKiteDownload:(e,t)=>new Promise((n,i)=>{try{const r=a.spawn(e,["--download"],{shell:!0});if(r.on("close",(function(t){if(0===t)n(r);else{const n=new Error;i(new l("kited_error",{message:`Unable to download Kite. Unexpected exit code ${t}.`,stderr:"",stdout:"",callStack:n.stack,cmd:e+" --download",options:["--download"]}))}})),t){let e=-1;r.stdout.on("data",n=>{let i,r,o=n.toString("utf8"),s=/Download: (\d+)\/(\d+)/g;for(;null!==(r=s.exec(o));)i=r;if(i){let n=parseInt(i[1],10),r=parseInt(i[2],10);n>=0&&r>=n&&n>e&&(e=n,t(n,r,n/r))}})}}catch(e){console.error(e),i(e)}}),installKite(e){return e=e||{},c.guardCall(e.onInstallStart),c.spawnPromise(this.KITE_INSTALLER_PATH,["--install"],{shell:!0},"kite-installer install error","unable to install kite with "+this.KITE_INSTALLER_PATH).then(()=>this.resetInstallPath()).then(()=>c.guardCall(e.onMount)).then(()=>r.unlinkSync(this.KITE_INSTALLER_PATH)).then(()=>c.guardCall(e.onRemove))},isKiteRunning(){return c.spawnPromise("/bin/ps",["-axo","pid,command"],{encoding:"utf-8"},"ps_error","unable to run the ps command and verify that Kite is running").then(e=>{if(!e.split("\n").some(e=>this.KITED_PROCESS.test(e)))throw new u("Kite process could not be found in the processes list",{state:p.NOT_RUNNING})})},runKiteWithCopilot(){const e=Object.assign({},process.env);return e.SKIP_KITE_ONBOARDING="1",delete e.ELECTRON_RUN_AS_NODE,new Promise((t,n)=>{try{if(!r.existsSync(this.installPath))throw new Error("kited is not installed");a.spawn(this.installPath,["--plugin-launch-with-copilot","--channel=autocomplete-python"],{detached:!0,stdio:"ignore",env:e}),t()}catch(t){n(new l("kited_error",{message:t.message&&"kited is not installed"===t.message||"unable to run kited binary",callStack:t.stack,cmd:this.installPath,options:{detached:!0,env:e}}))}})},runKite(){return this.isKiteRunning().catch(()=>{const e=Object.assign({},process.env);e.SKIP_KITE_ONBOARDING="1",delete e.ELECTRON_RUN_AS_NODE;try{if(!r.existsSync(this.installPath))throw new Error("kited is not installed");a.spawn(this.installPath,["--plugin-launch","--channel=autocomplete-python"],{detached:!0,stdio:"ignore",env:e})}catch(t){throw new l("kited_error",{message:t.message&&"kited is not installed"===t.message||"unable to run kited binary",callStack:t.stack,cmd:this.installPath,options:{detached:!0,env:e}})}})},hasBothKiteInstalled(){return Promise.all([this.isKiteInstalled(),this.isKiteEnterpriseInstalled()])},isKiteEnterpriseInstalled(){return this.notSupported()},isKiteEnterpriseRunning(){return this.notSupported()},runKiteEnterprise(){return this.notSupported()},notSupported:()=>Promise.reject(new u("Your platform is currently not supported",{state:p.UNSUPPORTED}))};e.exports=d},function(e,t,n){"use strict";const i=n(18),{STATES:r}=n(12);e.exports={get releaseURL(){return null},get downloadPath(){return null},get installPath(){return null},get allInstallPaths(){return null},get enterpriseInstallPath(){return null},get allEnterpriseInstallPaths(){return null},get sessionFilePath(){return null},hasManyKiteInstallation:()=>!1,hasManyKiteEnterpriseInstallation:()=>!1,isAdmin:()=>!1,arch:()=>null,isOSSupported:()=>!1,isOSVersionSupported:()=>!1,isKiteSupported:()=>!1,isKiteInstalled(){return this.notSupported()},downloadKite(e){return this.notSupported()},installKite(e){return this.notSupported()},isKiteRunning(){return this.notSupported()},runKite(){return this.notSupported()},hasBothKiteInstalled(){return Promise.all([this.isKiteInstalled(),this.isKiteEnterpriseInstalled()])},isKiteEnterpriseInstalled(){return this.notSupported()},isKiteEnterpriseRunning(){return this.notSupported()},runKiteEnterprise(){return this.notSupported()},notSupported:()=>Promise.reject(new i("Your platform is currently not supported",{state:r.UNSUPPORTED}))}},function(e,t,n){"use strict";e.exports=class{constructor(e){this.store=e}get(e){return(this.content?Promise.resolve(this.content):this.store.get().then(e=>function(e){return e?JSON.parse(e):e}(e)).then(e=>(this.content=e,e))).then(t=>function(e,t){if(!e)return t;return e.split(/\./g).reduce((e,t)=>null==e?e:e[t],t)}(e,t))}set(e,t){return this.get().then(n=>this.store.set(function(e){return JSON.stringify(e)}(function(e,t,n){n||(n={});return e.split(/\./g).reduce((e,i,r,o)=>r===o.length-1?(e[i]=t,n):null==e[i]?(e[i]={},e[i]):e[i],n)}(e,t,n))))}}},function(e,t,n){"use strict";e.exports=class{constructor(){}set(e){return this.content=e,Promise.resolve()}get(){return Promise.resolve(this.content)}}},function(e,t){const n=75*Math.pow(2,10),i=Math.pow(2,21);e.exports={MAX_FILE_SIZE:n,MAX_PAYLOAD_SIZE:i}},function(e,t,n){"use strict";e.exports={checkArgumentKeys:function(e,t,n,...i){const r=[];if(i.forEach((e,n)=>{null==t[e]&&r.push(e)}),r.length)throw new Error(`Missing mandatory key${r.length>1?"s":""} ${r.join(", ")} in argument ${n} of ${e.name}`)},checkArguments:function(e,...t){const[n,i]=function(e){const[,t,n]=/(\w+)\(([^\)]+)\)/.exec(e.toString());return[t,n.split(/,\s*/)]}(e),r=[];if(t.forEach((e,t)=>{null==e&&r.push(i[t])}),r.length)throw new Error(`Missing argument${r.length>1?"s":""} ${r.join(", ")} in ${n}`)},merge:function(e,t){const n={};for(const t in e)n[t]=e[t];for(const e in t)n[e]=t[e];return n},reject:function(e,t){const n={};for(const i in t)i!==e&&(n[i]=t[i]);return n}}},function(e,t,n){"use strict";const i=n(44);function r(e){return encodeURI(e).replace(/^([A-Z]):/,"/windows/$1").replace(/\/|\\|%5C/g,":")}e.exports={cleanPath:r,onboardingFilePath:function(e,t){return["/clientapi/plugins/onboarding_file",["editor="+e,"language="+t].join("&")].join("?")},hoverPath:function(e,t,n,o,s){const a=i(t);return[`/api/buffer/${o}/${r(e)}/${a}/hover`,["cursor_runes="+n,"offset_encoding="+s].join("&")].join("?")},membersPath:function(e,t,n){return[`/api/editor/value/${e}/members`,["offset="+t,"limit="+n].join("&")].join("?")},projectDirPath:function(e){return"/clientapi/projectdir?filename="+encodeURI(e)},shouldNotifyPath:function(e){return"/clientapi/permissions/notify?filename="+encodeURI(e)},statusPath:function(e){return"/clientapi/status?filename="+encodeURI(e)},usagesPath:function(e,t,n){return[`/api/editor/value/${e}/usages`,["offset="+t,"limit="+n].join("&")].join("?")}}},function(e,t){var n,i;n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i={rotl:function(e,t){return e<<t|e>>>32-t},rotr:function(e,t){return e<<32-t|e>>>t},endian:function(e){if(e.constructor==Number)return 16711935&i.rotl(e,8)|4278255360&i.rotl(e,24);for(var t=0;t<e.length;t++)e[t]=i.endian(e[t]);return e},randomBytes:function(e){for(var t=[];e>0;e--)t.push(Math.floor(256*Math.random()));return t},bytesToWords:function(e){for(var t=[],n=0,i=0;n<e.length;n++,i+=8)t[i>>>5]|=e[n]<<24-i%32;return t},wordsToBytes:function(e){for(var t=[],n=0;n<32*e.length;n+=8)t.push(e[n>>>5]>>>24-n%32&255);return t},bytesToHex:function(e){for(var t=[],n=0;n<e.length;n++)t.push((e[n]>>>4).toString(16)),t.push((15&e[n]).toString(16));return t.join("")},hexToBytes:function(e){for(var t=[],n=0;n<e.length;n+=2)t.push(parseInt(e.substr(n,2),16));return t},bytesToBase64:function(e){for(var t=[],i=0;i<e.length;i+=3)for(var r=e[i]<<16|e[i+1]<<8|e[i+2],o=0;o<4;o++)8*i+6*o<=8*e.length?t.push(n.charAt(r>>>6*(3-o)&63)):t.push("=");return t.join("")},base64ToBytes:function(e){e=e.replace(/[^A-Z0-9+\/]/gi,"");for(var t=[],i=0,r=0;i<e.length;r=++i%4)0!=r&&t.push((n.indexOf(e.charAt(i-1))&Math.pow(2,-2*r+8)-1)<<2*r|n.indexOf(e.charAt(i))>>>6-2*r);return t}},e.exports=i},function(e,t){function n(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
e.exports=function(e){return null!=e&&(n(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&n(e.slice(0,0))}(e)||!!e._isBuffer)}},function(e,t,n){"use strict";e.exports=function(e){var t=null;return{trackUncaught:()=>{null===t&&(t=window.onerror,window.onerror=(t,n,i,r,o)=>{e.trackEvent("uncaught error",{uncaughtError:{msg:t,url:n,line:i,col:r}})})},ignoreUncaught:()=>{null!==t&&(window.onerror=t,t=null)}}}},function(e,t,n){"use strict";e.exports={log(){}}},function(e,t,n){"use strict";const{LEVELS:i}=n(12);e.exports={TRACE_ALL:!1,METHODS:{[i.SILLY]:"debug"in console?"debug":"log",[i.VERBOSE]:"debug"in console?"debug":"log",[i.DEBUG]:"log",[i.INFO]:"info"in console?"info":"log",[i.WARNING]:"warn"in console?"warn":"error",[i.ERROR]:"error"},log(e,...t){console[this.METHODS[e]](...t)}}},function(e,t,n){var i=n(10),r=n(4),o=n(38),s=n(115).Buffer,a=n(19),c={http:i,https:r},u=function(e,t){var n={};if(!e)throw new Error("The Mixpanel Client needs a Mixpanel token: `init(token)`");n.config={test:!1,debug:!1,verbose:!1,host:"api.mixpanel.com",protocol:"http"},n.token=e,n.send_request=function(e,t,i){i=i||function(){};var r={data:new s(JSON.stringify(t)).toString("base64"),ip:0,verbose:n.config.verbose?1:0},a=c[n.config.protocol];if(!a)throw new Error("Mixpanel Initialization Error: Unsupported protocol "+n.config.protocol+". Supported protocols are: "+Object.keys(c));if("/import"===e){var u=n.config.key;if(!u)throw new Error("The Mixpanel Client needs a Mixpanel api key when importing old events: `init(token, { key: ... })`");r.api_key=u}var l={host:n.config.host,port:n.config.port,headers:{}};n.config.test&&(r.test=1);var p=o.stringify(r);l.path=[e,"?",p].join(""),a.get(l,(function(e){var t="";e.on("data",(function(e){t+=e})),e.on("end",(function(){var e;if(n.config.verbose)try{var r=JSON.parse(t);1!=r.status&&(e=new Error("Mixpanel Server Error: "+r.error))}catch(t){e=new Error("Could not parse response from Mixpanel")}else e="1"!==t?new Error("Mixpanel Server Error: "+t):void 0;i(e)}))})).on("error",(function(e){n.config.debug&&console.log("Got Error: "+e.message),i(e)}))},n.track=function(e,t,i){"function"!=typeof t&&t||(i=t,t={});var r="number"==typeof t.time?"/import":"/track";t.token=n.token,t.mp_lib="node";var o={event:e,properties:t};n.config.debug&&(console.log("Sending the following event to Mixpanel:"),console.log(o)),n.send_request(r,o,i)};var i=function(e){if(void 0===e)throw new Error("Import methods require you to specify the time of the event");return"[object Date]"===Object.prototype.toString.call(e)&&(e=Math.floor(e.getTime()/1e3)),e};n.import=function(e,t,r,o){"function"!=typeof r&&r||(o=r,r={}),r.time=i(t),n.track(e,r,o)},n.import_batch=function(e,t,r){var o=50,s=e.length,a=s,c=0,u=0,l=[];"function"!=typeof t&&t||(r=t,t={}),t.max_batch_size&&(a=t.max_batch_size,t.max_batch_size<o&&(o=t.max_batch_size));var p=function(){for(var t,a=[],d=u;d<s&&d<u+o;d++)(t=e[d].properties).time=i(t.time),t.token||(t.token=n.token),a.push(e[d]);a.length>0&&(n.send_request("/import",a,(function(e){c+=a.length,e&&l.push(e),c<s?p():r&&r(l)})),u+=o)};n.config.debug&&console.log("Sending "+e.length+" events to Mixpanel in "+Math.ceil(s/o)+" requests");for(var d=0;d<a;d+=o)p()},n.alias=function(e,t,i){var r={distinct_id:e,alias:t};n.track("$create_alias",r,i)},n.people={set_once:function(e,t,n,i,r){var o={};"object"==typeof t?("object"==typeof n?(r=i,i=n):r=n,o=t):(o[t]=n,"function"!=typeof i&&i||(r=i)),(i=i||{}).set_once=!0,this._set(e,o,r,i)},set:function(e,t,n,i,r){var o={};"object"==typeof t?("object"==typeof n?(r=i,i=n):r=n,o=t):(o[t]=n,"function"!=typeof i&&i||(r=i)),this._set(e,o,r,i)},_set:function(e,t,i,o){var s=(o=o||{})&&o.set_once?"$set_once":"$set",a={$token:n.token,$distinct_id:e};a[s]=t,"ip"in t&&(a.$ip=t.ip,delete t.ip),t.$ignore_time&&(a.$ignore_time=t.$ignore_time,delete t.$ignore_time),a=r(a,o),n.config.debug&&(console.log("Sending the following data to Mixpanel (Engage):"),console.log(a)),n.send_request("/engage",a,i)},increment:function(e,t,i,o,s){var a={};"object"==typeof t?("object"==typeof i?(s=o,o=i):s=i,Object.keys(t).forEach((function(e){var i=t[e];isNaN(parseFloat(i))?n.config.debug&&(console.error("Invalid increment value passed to mixpanel.people.increment - must be a number"),console.error("Passed "+e+":"+i)):a[e]=i}))):"number"!=typeof i&&i?"function"==typeof i?(s=i,a[t]=1):(s=o,o="object"==typeof i?i:{},a[t]=1):(i=i||1,a[t]=i,"function"==typeof o&&(s=o));var c={$add:a,$token:n.token,$distinct_id:e};c=r(c,o),n.config.debug&&(console.log("Sending the following data to Mixpanel (Engage):"),console.log(c)),n.send_request("/engage",c,s)},append:function(e,t,i,o,s){var a={};"object"==typeof t?("object"==typeof i?(s=o,o=i):s=i,Object.keys(t).forEach((function(e){a[e]=t[e]}))):(a[t]=i,"function"==typeof o&&(s=o));var c={$append:a,$token:n.token,$distinct_id:e};c=r(c,o),n.config.debug&&(console.log("Sending the following data to Mixpanel (Engage):"),console.log(c)),n.send_request("/engage",c,s)},track_charge:function(e,t,i,o,s){if("function"!=typeof i&&i?"function"!=typeof o&&o||(s=o||function(){},(i.$ignore_time||i.hasOwnProperty("$ip"))&&(o={},Object.keys(i).forEach((function(e){o[e]=i[e],delete i[e]})))):(s=i||function(){},i={}),"number"!=typeof t&&(t=parseFloat(t),isNaN(t)))console.error("Invalid value passed to mixpanel.people.track_charge - must be a number");else{if(i.$amount=t,i.hasOwnProperty("$time")){var a=i.$time;"[object Date]"===Object.prototype.toString.call(a)&&(i.$time=a.toISOString())}var c={$append:{$transactions:i},$token:n.token,$distinct_id:e};c=r(c,o),n.config.debug&&(console.log("Sending the following data to Mixpanel (Engage):"),console.log(c)),n.send_request("/engage",c,s)}},clear_charges:function(e,t,i){var o={$set:{$transactions:[]},$token:n.token,$distinct_id:e};"function"==typeof t&&(i=t),o=r(o,t),n.config.debug&&console.log("Clearing this user's charges:",e),n.send_request("/engage",o,i)},delete_user:function(e,t,i){var o={$delete:"",$token:n.token,$distinct_id:e};"function"==typeof t&&(i=t),o=r(o,t),n.config.debug&&console.log("Deleting the user from engage:",e),n.send_request("/engage",o,i)},union:function(e,t,i,o){var s={};"object"!=typeof t||a.isArray(t)?n.config.debug&&console.error("Invalid value passed to mixpanel.people.union - data must be an object with array values"):(Object.keys(t).forEach((function(e){var i=t[e];if(a.isArray(i)){var r=i.filter((function(e){return"string"==typeof e||"number"==typeof e}));r.length>0&&(s[e]=r)}else{if("string"!=typeof i&&"number"!=typeof i)return void(n.config.debug&&(console.error("Invalid argument passed to mixpanel.people.union - values must be a scalar value or array"),console.error("Passed "+e+":",i)));s[e]=[i]}})),0!==Object.keys(s).length&&(t={$union:s,$token:n.token,$distinct_id:e},"function"==typeof i&&(o=i),t=r(t,i),n.config.debug&&(console.log("Sending the following data to Mixpanel (Engage):"),console.log(t)),n.send_request("/engage",t,o)))},unset:function(e,t,i,o){var s=[];if(a.isArray(t))s=t;else{if("string"!=typeof t)return void(n.config.debug&&(console.error("Invalid argument passed to mixpanel.people.unset - must be a string or array"),console.error("Passed: "+t)));s=[t]}var c={$unset:s,$token:n.token,$distinct_id:e};"function"==typeof i&&(o=i),c=r(c,i),n.config.debug&&(console.log("Sending the following data to Mixpanel (Engage):"),console.log(c)),n.send_request("/engage",c,o)}};var r=function(e,t){return t&&(t.$ignore_alias&&(e.$ignore_alias=t.$ignore_alias),t.$ignore_time&&(e.$ignore_time=t.$ignore_time),t.hasOwnProperty("$ip")&&(e.$ip=t.$ip),t.hasOwnProperty("$time")&&(e.$time=i(t.$time))),e};return n.set_config=function(e){for(var t in e)if(e.hasOwnProperty(t))if("host"==t){n.config.host=e[t].split(":")[0];var i=e[t].split(":")[1];i&&(n.config.port=Number(i))}else n.config[t]=e[t]},t&&n.set_config(t),n};e.exports={Client:function(e){return console.warn("The function `Client(token)` is deprecated.  It is now called `init(token)`."),u(e)},init:u}},function(e,t){e.exports=require("buffer")},function(e,t,n){"use strict";const i=n(5),r=n(1),o=n(3),s=n(35),a="undefined"!=typeof atom&&atom.config.getUserConfigPath()?o.join(o.dirname(atom.config.getUserConfigPath()),"kite-config.json"):o.join(r.homedir(),".kite","kite-config.json");var c=null;try{s.verbose(`initializing localconfig from ${a}...`);var u=i.readFileSync(a,{encoding:"utf8"});c=JSON.parse(u)}catch(e){c={}}e.exports={get:function(e,t){return e in c?c[e]:t},set:function(e,t){c[e]=t,function(){var e=JSON.stringify(c,null,2);i.writeFile(a,e,"utf8",e=>{e&&s.error("failed to persist localconfig to "+a,e)})}()}}},function(e){e.exports=JSON.parse('{"_from":"kite-installer@=3.16.0","_id":"kite-installer@3.16.0","_inBundle":false,"_integrity":"sha512-/VutstuMOxKrGuyLaGN15y5T3lqCq3lCe+uLGOb2dN9MwWmSneZHgU/9eaPpozIwjHKpEenR1f5s4Y7ESPa0lA==","_location":"/kite-installer","_phantomChildren":{"form-data":"2.5.1","md5":"2.2.1"},"_requested":{"type":"version","registry":true,"raw":"kite-installer@=3.16.0","name":"kite-installer","escapedName":"kite-installer","rawSpec":"=3.16.0","saveSpec":null,"fetchSpec":"=3.16.0"},"_requiredBy":["/"],"_resolved":"https://registry.npmjs.org/kite-installer/-/kite-installer-3.16.0.tgz","_shasum":"745471719998bf491975695edf513e0297e1a91a","_spec":"kite-installer@=3.16.0","_where":"/Users/tcheang/go/src/github.com/kiteco/atom-plugin","author":{"name":"Daniel Hung"},"bundleDependencies":false,"consumedServices":{"status-bar":{"versions":{"^1.0.0":"consumeStatusBar"}}},"dependencies":{"kite-api":"=3.9.0","kite-connector":"=3.10.0","mixpanel":"^0.5.0","rollbar":"^2.4.4"},"deprecated":false,"description":"Javascript library to install and manage Kite","devDependencies":{"babel-eslint":"^7.1.1","codecov":"^3.6.5","eslint":"^3.6.0","eslint-config":"^0.3.0","eslint-config-fbjs":"^1.1.1","eslint-plugin-babel":"^4.0.0","eslint-plugin-flowtype":"^2.29.1","eslint-plugin-jasmine":"^2.2.0","eslint-plugin-prefer-object-spread":"^1.1.0","eslint-plugin-react":"^6.8.0","expect.js":"^0.3.1","fbjs":"^0.8.6","jsdom":"^9.8.3","mocha":"^5.2.0","mocha-jsdom":"^1.1.0","nyc":"^13.0.1","sinon":"^2.3.5"},"keywords":[],"license":"SEE LICENSE IN LICENSE","main":"./lib/index.js","name":"kite-installer","scripts":{"coverage":"npm run lcov_report && codecov","lcov_report":"nyc report --reporter=lcov","lint":"eslint .","lint:fix":"eslint --fix .","test":"nyc mocha --timeout 20000 --recursive test/*.test.js test/**/*.test.js","test-nocov":"mocha --timeout 20000 --recursive test/*.test.js test/**/*.test.js"},"version":"3.16.0"}')},function(e,t,n){"use strict";const i=n(17),r=n(54),{STATES:o}=n(12),s={STATES:o,get support(){return r.adapter},get releaseURL(){return this.support.releaseURL},get downloadPath(){return this.support.downloadPath},get installPath(){return this.support.installPath},client:{request:(...e)=>i.request(...e).catch(e=>{if(e.resp)return e.resp;throw e})}};[["handleState","checkHealth"],["pathInWhitelist","isPathWhitelisted"]].forEach(([e,t])=>{s[e]=(...e)=>i[t](...e)}),["arch","isAdmin","isOSSupported","isOSVersionSupported","hasManyKiteInstallation","hasManyKiteEnterpriseInstallation","hasBothKiteInstalled"].forEach(e=>{s[e]=(...t)=>r.adapter[e](...t)}),["isKiteSupported","isKiteInstalled","isKiteEnterpriseInstalled","canInstallKite","downloadKiteRelease","downloadKite","installKite","isKiteRunning","canRunKite","runKite","runKiteAndWait","isKiteEnterpriseRunning","canRunKiteEnterprise","runKiteEnterprise","runKiteEnterpriseAndWait","isKiteReachable","waitForKite","isUserAuthenticated","canAuthenticateUser","authenticateUser","authenticateSessionID","isPathWhitelisted","canWhitelistPath","whitelistPath","blacklistPath","saveUserID"].forEach(e=>{s[e]=(...t)=>i[e](...t)}),e.exports=s},function(e,t,n){const i=n(120),r=n(121),o=n(122),s=n(123),a=n(124),c=n(125),u=n(65),l=n(127),p=n(128),d=n(67),h=n(157),f=n(158),m=n(159),g=n(160),v=n(161),x=n(17);e.exports={Authenticate:i,BranchStep:r,CheckEmail:o,CreateAccount:s,Download:a,RunKiteWithCopilot:c,Flow:u,GetEmail:l,InputEmail:p,Install:d,KiteVsJedi:h,Login:f,ParallelSteps:m,VoidStep:v,atom:()=>{const e=n(162),t=n(163),d=n(164),b=n(165),y=n(74),w=n(166),k=n(167),E=n(168),_=n(169),S=n(170);return{InstallElement:e,InputEmailElement:t,InstallWaitElement:d,InstallEndElement:b,InstallErrorElement:y,KiteVsJediElement:w,LoginElement:k,InstallErrorView:_,InstallPlugin:S,defaultFlow:()=>[new r([{match:e=>x.isAdmin(),step:new l({name:"get-email"})},{match:e=>!x.isAdmin(),step:new v({name:"not-admin",view:new E("kite_installer_not_admin_step")})}],{name:"admin-check"}),new p({name:"input-email",view:new t("kite_installer_input_email_step")}),new o({name:"check-email",failureStep:"input-email"}),new r([{match:e=>e.account.exists,step:new f({name:"login",view:new k("kite_installer_login_step"),failureStep:"account-switch",backStep:"input-email"})},{match:e=>!e.account.exists,step:new s({name:"create-account"})}],{name:"account-switch"}),new m([new u([new a({name:"download"}),new c({name:"launch-copilot"}),new i({name:"authenticate"}),new S({name:"install-plugin"})],{name:"download-flow"}),new g({name:"wait-step",view:new d("kite_installer_wait_step")})],{name:"download-and-wait"}),new r([{match:e=>!e.error,step:new v({name:"end",view:new b("kite_installer_install_end_step")})},{match:e=>e.error,step:new v({name:"error",view:new y("kite_installer_install_error_step")})}],{name:"termination"})],autocompletePythonFlow:()=>[new h({name:"kite-vs-jedi",view:new w("kite_installer_choose_kite_step")}),new m([new u([new a({name:"download"}),new S({name:"install-plugin"}),new c({name:"launch-copilot"})],{name:"download-flow"}),new g({name:"wait-step",view:new d("kite_installer_wait_step")})],{name:"download-and-wait"}),new r([{match:e=>!e.error,step:new v({name:"end",view:new b("kite_installer_install_end_step")})},{match:e=>e.error,step:new v({name:"error",view:new y("kite_installer_install_error_step")})}],{name:"termination"})]}}}},function(e,t,n){"use strict";const i=n(7),r=n(17),{retryPromise:o}=n(6),s=n(20);e.exports=class extends i{constructor(e={}){super(e),this.cooldown=e.cooldown||1500,this.tries=e.tries||10}start(e,t){let n;return t.updateState({authenticate:{done:!1}}),n=e.account&&e.account.sessionId?o(()=>r.authenticateSessionID(e.account.sessionId),this.tries,this.cooldown):Promise.resolve(),n.then(()=>{s.Tracker.trackEvent("kite_installer_user_authenticated"),t.updateState({authenticate:{done:!0}})})}}},function(e,t,n){"use strict";const i=n(7);e.exports=class extends i{constructor(e,t){super(t),this.branches=e}start(e){return new Promise((t,n)=>{const i=this.branches.reduce((t,n)=>t||(n.match(e)?{step:n.step,data:e}:null),null);i?t(i):n()})}}},function(e,t,n){"use strict";const i=n(7),r=n(34);e.exports=class extends i{start({account:e}){return e.skipped?Promise.resolve({skipped:!0}):r.checkEmail(e).catch(e=>{if(e.resp)return e.resp;throw e}).then(()=>({error:null,account:{email:e.email,invalid:!1,exists:!1,hasPassword:!1,reason:null}})).catch(t=>{if(!t.data||!t.data.response)throw t;{const n=JSON.parse(t.data.responseData);switch(t.data.responseStatus){case 403:case 404:case 409:if(n.email_invalid){const t=new Error(n.fail_reason);throw t.data={account:{email:e.email,invalid:n.email_invalid,exists:n.account_exists,hasPassword:n.has_password,reason:n.fail_reason}},t}return{error:null,account:{email:e.email,invalid:n.email_invalid,exists:n.account_exists,hasPassword:n.has_password,reason:n.fail_reason}}}}})}}},function(e,t,n){"use strict";const i=n(7),r=n(34),o=n(6);e.exports=class extends i{start({account:{email:e}},t){return r.createAccount({email:e}).then(e=>{const t=o.parseSetCookies(e.headers["set-cookie"]);return{account:{sessionId:o.findCookie(t,"kite-session").Value}}})}}},function(e,t,n){"use strict";const i=n(17),{retryPromise:r}=n(6),o=n(20),s=n(7);e.exports=class extends s{constructor(e){super(e),this.installInterval=1500,this.runInterval=2500}start(e,t){return i.downloadKiteRelease({reinstall:!0,onDownloadProgress:(e,n,i)=>{t.updateState({download:{length:e,total:n,ratio:i}})}}).then(()=>(o.Tracker.trackEvent("kite_installer_kite_app_downloaded"),t.updateState({download:{done:!0},install:{done:!1}}),r(()=>i.installKite(),5,this.installInterval))).then(()=>r(()=>i.isKiteInstalled(),10,this.installInterval)).then(()=>(o.Tracker.trackEvent("kite_installer_kite_app_installed"),t.updateState({install:{done:!0},running:{done:!1}}),i.runKiteAndWait(30,this.runInterval).then(()=>{o.Tracker.trackEvent("kite_installer_kite_app_started"),t.updateState({running:{done:!0}})})))}}},function(e,t,n){"use strict";const i=n(17),{retryPromise:r}=n(6),o=n(7);e.exports=class extends o{constructor(e){super(e),this.runInterval=2500}start(e,t){return r(()=>i.isKiteInstalled(),10,this.installInterval).then(()=>i.runKiteWithCopilot().then(()=>{t.updateState({running:{done:!0}})}))}}},function(e,t,n){"use strict";const i=n(64);class r extends HTMLElement{constructor(e){super(),this.name=e,this.className="kite-install-status",this.classList.add("inline-block"),this.subscriptions=new i,this.currentStatusText=""}destroyTile(){this.subscriptions&&(this.subscriptions.dispose(),this.subscriptions=null),this.statusBarTile&&(this.statusBarTile.destroy(),this.statusBarTile=null)}init(e,t){this.subscriptions.add(atom.tooltips.add(this,{title:"Kite will start automatically after being installed"})),this.statusBarTile=t.addRightTile({item:this}),this.subscriptions.add(e.on("encountered-fatal-error",e=>{console.log("fatal status bar error: "+e),this.destroyTile()})),this.subscriptions.add(e.onDidFailStep(({error:e})=>{console.log("fatal status bar error:"+(e&&e.message)),this.destroyTile()})),this.subscriptions.add(e.observeState(e=>{let t;e.download&&(t="Downloading Kite"),(e.download&&e.download.done||e.install)&&(t="Installing Kite"),e.running&&(t="Starting Kite"),e.plugin&&(e.plugin.done?(this.destroyTile(),t=""):t="Installing Kite plugin"),t&&t!==this.currentStatusText&&(this.currentStatusText=t,this.innerHTML=`<span class="loading loading-spinner-tiny inline-block icon"></span><span class="text"> ${t}</span>`)}))}release(){}}customElements.define("kite-atom-install-statusbar",r),e.exports=r},function(e,t,n){"use strict";const i=n(5),r=n(1),o=n(3),s=n(35),{Tracker:a}=n(20),c=n(7);e.exports=class extends c{start(){return new Promise((e,t)=>{const n=String(i.readFileSync(o.join(r.homedir(),".gitconfig"))).split("\n").filter(e=>/^\s*email\s=/.test(e))[0];e({account:{email:n?n.split("=")[1].trim():void 0}})}).catch(e=>(a.trackEvent("error parsing gitconfig",{error:e.message}),s.error("error parsing gitconfig:",e),{account:{email:void 0}}))}}},function(e,t,n){"use strict";const i=n(7);e.exports=class extends i{start(e,t){return new Promise((e,n)=>{this.subscriptions.add(t.on("did-submit-email",t=>{e({account:t})})),this.subscriptions.add(t.on("did-skip-email",t=>{e({account:t})}))})}}},function(e,t,n){var i=n(19),r=n(1),o=n(130),s=n(131),a=n(9),c=n(138),u=n(45),l=n(140),p=n(32),d=n(69),h=n(141),f=n(155),m=n(156);function g(e,t){if(a.isType(e,"string")){var n=e;(e={}).accessToken=n}void 0!==e.minimumLevel&&(e.reportLevel=e.minimumLevel,delete e.minimumLevel),this.options=a.handleOptions(g.defaultOptions,e),this.options._configuredOptions=e,delete this.options.maxItems,this.options.environment=this.options.environment||"unspecified",u.setVerbose(this.options.verbose),this.lambdaContext=null,this.lambdaTimeoutHandle=null;var i=new l,r=new c(this.options,i,p,d);this.client=t||new s(this.options,r,u,"server"),this.client.notifier.addTransform(h.baseData).addTransform(h.handleItemWithError).addTransform(h.addBody).addTransform(f.addMessageWithError).addTransform(f.addTelemetryData).addTransform(h.addRequestData).addTransform(h.addLambdaData).addTransform(f.addConfigToPayload).addTransform(h.scrubPayload).addTransform(f.userTransform(u)).addTransform(f.addConfiguredOptions).addTransform(f.addDiagnosticKeys).addTransform(f.itemToPayload),this.client.queue.addPredicate(m.checkLevel).addPredicate(m.userCheckIgnore(u)).addPredicate(m.urlIsNotBlacklisted(u)).addPredicate(m.urlIsWhitelisted(u)).addPredicate(m.messageIsIgnored(u)),this.setupUnhandledCapture()}var v=null;function x(e){var t="Rollbar is not initialized";u.error(t),e&&e(new Error(t))}function b(e){for(var t=0,n=e.length;t<n;++t)if(a.isFunction(e[t]))return e[t]}function y(e,t){var n=function(e,n){t(e,n)};n._rollbarHandler=!0;for(var i=process.listeners(e),r=i.length,o=0;o<r;++o)i[o]._rollbarHandler&&process.removeListener(e,i[o]);process.on(e,n)}function w(e,t){Error.call(this),Error.captureStackTrace(this,this.constructor),this.message=e,this.nested=t,this.name=this.constructor.name}g.init=function(e,t){return v?v.global(e).configure(e):v=new g(e,t)},g.prototype.global=function(e){return delete(e=a.handleOptions(e)).maxItems,this.client.global(e),this},g.global=function(e){if(v)return v.global(e);x()},g.prototype.configure=function(e,t){var n=this.options,i={};return t&&(i={payload:t}),this.options=a.handleOptions(n,e,i),this.options._configuredOptions=a.handleOptions(n._configuredOptions,e,i),delete this.options.maxItems,u.setVerbose(this.options.verbose),this.client.configure(e,t),this.setupUnhandledCapture(),this},g.configure=function(e,t){if(v)return v.configure(e,t);x()},g.prototype.lastError=function(){return this.client.lastError},g.lastError=function(){if(v)return v.lastError();x()},g.prototype.log=function(){var e=this._createItem(arguments),t=e.uuid;return this.client.log(e),{uuid:t}},g.log=function(){if(v)return v.log.apply(v,arguments);var e=b(arguments);x(e)},g.prototype.debug=function(){var e=this._createItem(arguments),t=e.uuid;return this.client.debug(e),{uuid:t}},g.debug=function(){if(v)return v.debug.apply(v,arguments);var e=b(arguments);x(e)},g.prototype.info=function(){var e=this._createItem(arguments),t=e.uuid;return this.client.info(e),{uuid:t}},g.info=function(){if(v)return v.info.apply(v,arguments);var e=b(arguments);x(e)},g.prototype.warn=function(){var e=this._createItem(arguments),t=e.uuid;return this.client.warn(e),{uuid:t}},g.warn=function(){if(v)return v.warn.apply(v,arguments);var e=b(arguments);x(e)},g.prototype.warning=function(){var e=this._createItem(arguments),t=e.uuid;return this.client.warning(e),{uuid:t}},g.warning=function(){if(v)return v.warning.apply(v,arguments);var e=b(arguments);x(e)},g.prototype.error=function(){var e=this._createItem(arguments),t=e.uuid;return this.client.error(e),{uuid:t}},g.error=function(){if(v)return v.error.apply(v,arguments);var e=b(arguments);x(e)},g.prototype._uncaughtError=function(){var e=this._createItem(arguments);e._isUncaught=!0;var t=e.uuid;return this.client.error(e),{uuid:t}},g.prototype.critical=function(){var e=this._createItem(arguments),t=e.uuid;return this.client.critical(e),{uuid:t}},g.critical=function(){if(v)return v.critical.apply(v,arguments);var e=b(arguments);x(e)},g.prototype.buildJsonPayload=function(e){return this.client.buildJsonPayload(e)},g.buildJsonPayload=function(){if(v)return v.buildJsonPayload.apply(v,arguments);x()},g.prototype.sendJsonPayload=function(e){return this.client.sendJsonPayload(e)},g.sendJsonPayload=function(){if(v)return v.sendJsonPayload.apply(v,arguments);x()},g.prototype.wait=function(e){this.client.wait(e)},g.wait=function(e){if(v)return v.wait(e);var t=b(arguments);x(t)},g.prototype.errorHandler=function(){return function(e,t,n,i){var r=function(r){return r&&u.error("Error reporting to rollbar, ignoring: "+r),i(e,t,n)};return e?e instanceof Error?this.error(e,t,r):this.error("Error: "+e,t,r):i(e,t,n)}.bind(this)},g.errorHandler=function(){if(v)return v.errorHandler();x()},g.prototype.lambdaHandler=function(e,t){return e.length<=2?this.asyncLambdaHandler(e,t):this.syncLambdaHandler(e,t)},g.prototype.asyncLambdaHandler=function(e,t){var n=this,i=function(e,t){var i={originalEvent:e,originalRequestId:t.awsRequestId};n.error("Function timed out",i)},r=n.options.captureLambdaTimeouts;return function(o,s){return new Promise((function(a,c){if(n.lambdaContext=s,r){var u=(t||i).bind(null,o,s);n.lambdaTimeoutHandle=setTimeout(u,s.getRemainingTimeInMillis()-1e3)}e(o,s).then((function(e){clearTimeout(n.lambdaTimeoutHandle),a(e)})).catch((function(e){n.error(e),n.wait((function(){clearTimeout(n.lambdaTimeoutHandle),c(e)}))}))}))}},g.prototype.syncLambdaHandler=function(e,t){var n=this,i=function(e,t,i){var r={originalEvent:e,originalRequestId:t.awsRequestId};n.error("Function timed out",r)},r=n.options.captureLambdaTimeouts;return function(o,s,a){if(n.lambdaContext=s,r){var c=(t||i).bind(null,o,s,a);n.lambdaTimeoutHandle=setTimeout(c,s.getRemainingTimeInMillis()-1e3)}try{e(o,s,(function(e,t){e&&n.error(e),n.wait((function(){clearTimeout(n.lambdaTimeoutHandle),a(e,t)}))}))}catch(e){n.error(e),n.wait((function(){throw clearTimeout(n.lambdaTimeoutHandle),e}))}}},g.lambdaHandler=function(e){if(v)return v.lambdaHandler(e);x()},g.prototype.wrapCallback=function(e){return function(e,t){return function(){var n=arguments[0];return n&&e.error(n),t.apply(this,arguments)}}(this,e)},g.wrapCallback=function(e){if(v)return v.wrapCallback(e);x()},g.prototype.captureEvent=function(){var e=a.createTelemetryEvent(arguments);return this.client.captureEvent(e.type,e.metadata,e.level)},g.captureEvent=function(){if(v)return v.captureEvent.apply(v,arguments);x()},g.prototype.reportMessage=function(e,t,n,i){return u.log("reportMessage is deprecated"),a.isFunction(this[t])?this[t](e,n,i):this.error(e,n,i)},g.reportMessage=function(e,t,n,i){if(v)return v.reportMessage(e,t,n,i);x(i)},g.prototype.reportMessageWithPayloadData=function(e,t,n,i){return u.log("reportMessageWithPayloadData is deprecated"),this.error(e,n,t,i)},g.reportMessageWithPayloadData=function(e,t,n,i){if(v)return v.reportMessageWithPayloadData(e,t,n,i);x(i)},g.prototype.handleError=function(e,t,n){return u.log("handleError is deprecated"),this.error(e,t,n)},g.handleError=function(e,t,n){if(v)return v.handleError(e,t,n);x(n)},g.prototype.handleErrorWithPayloadData=function(e,t,n,i){return u.log("handleErrorWithPayloadData is deprecated"),this.error(e,n,t,i)},g.handleErrorWithPayloadData=function(e,t,n,i){if(v)return v.handleErrorWithPayloadData(e,t,n,i);x(i)},g.handleUncaughtExceptions=function(e,t){if(v)return(t=t||{}).accessToken=e,v.configure(t);x()},g.handleUnhandledRejections=function(e,t){if(v)return(t=t||{}).accessToken=e,v.configure(t);x()},g.handleUncaughtExceptionsAndRejections=function(e,t){if(v)return(t=t||{}).accessToken=e,v.configure(t);x()},g.prototype._createItem=function(e){return a.createItem(e,u,this,["headers","protocol","url","method","body","route"],this.lambdaContext)},g.prototype.setupUnhandledCapture=function(){(this.options.captureUncaught||this.options.handleUncaughtExceptions)&&this.handleUncaughtExceptions(),(this.options.captureUnhandledRejections||this.options.handleUnhandledRejections)&&this.handleUnhandledRejections()},g.prototype.handleUncaughtExceptions=function(){var e=!!this.options.exitOnUncaughtException;delete this.options.exitOnUncaughtException,y("uncaughtException",function(t){(this.options.captureUncaught||this.options.handleUncaughtExceptions)&&(this._uncaughtError(t,(function(e){e&&(u.error("Encountered error while handling an uncaught exception."),u.error(e))})),e&&setImmediate(function(){this.wait((function(){process.exit(1)}))}.bind(this)))}.bind(this))},g.prototype.handleUnhandledRejections=function(){y("unhandledRejection",function(e){(this.options.captureUnhandledRejections||this.options.handleUnhandledRejections)&&this._uncaughtError(e,(function(e){e&&(u.error("Encountered error while handling an uncaught exception."),u.error(e))}))}.bind(this))},i.inherits(w,Error),g.Error=w,g.defaultOptions={host:r.hostname(),environment:"production",framework:"node-js",showReportedMessageTraces:!1,notifier:{name:"node_rollbar",version:o.version},scrubHeaders:o.defaults.server.scrubHeaders,scrubFields:o.defaults.server.scrubFields,addRequestData:null,reportLevel:o.defaults.reportLevel,verbose:!1,enabled:!0,transmit:!0,sendConfig:!1,includeItemsInTelemetry:!1,captureEmail:!1,captureUsername:!1,captureIp:!0,captureLambdaTimeouts:!0,ignoreDuplicateErrors:!0,scrubRequestBody:!0},e.exports=g},function(e){e.exports=JSON.parse('{"_from":"rollbar@^2.3.8","_id":"rollbar@2.15.0","_inBundle":false,"_integrity":"sha512-imEL4FOng650XZq0ZoqAI8wCfWZ5UE+4rRJwwwxthyzTdKOeDAObz/trMohc/ULn1WCo9Cz3T6ozn9Awd5kGTg==","_location":"/rollbar","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"rollbar@^2.3.8","name":"rollbar","escapedName":"rollbar","rawSpec":"^2.3.8","saveSpec":null,"fetchSpec":"^2.3.8"},"_requiredBy":["/","/kite-installer"],"_resolved":"https://registry.npmjs.org/rollbar/-/rollbar-2.15.0.tgz","_shasum":"1291116a2b6273a22f2e4b5d1b3eb9880e1b5dac","_spec":"rollbar@^2.3.8","_where":"/Users/tcheang/go/src/github.com/kiteco/atom-plugin","browser":"dist/rollbar.umd.min.js","bugs":{"url":"https://github.com/rollbar/rollbar.js/issues"},"bundleDependencies":false,"cdn":{"host":"cdn.rollbar.com"},"defaults":{"endpoint":"api.rollbar.com/api/1/item/","browser":{"scrubFields":["pw","pass","passwd","password","secret","confirm_password","confirmPassword","password_confirmation","passwordConfirmation","access_token","accessToken","X-Rollbar-Access-Token","secret_key","secretKey","secretToken","cc-number","card number","cardnumber","cardnum","ccnum","ccnumber","cc num","creditcardnumber","credit card number","newcreditcardnumber","new credit card","creditcardno","credit card no","card#","card #","cc-csc","cvc","cvc2","cvv2","ccv2","security code","card verification","name on credit card","name on card","nameoncard","cardholder","card holder","name des karteninhabers","ccname","card type","cardtype","cc type","cctype","payment type","expiration date","expirationdate","expdate","cc-exp","ccmonth","ccyear"]},"server":{"scrubHeaders":["authorization","www-authorization","http_authorization","omniauth.auth","cookie","oauth-access-token","x-access-token","x_csrf_token","http_x_csrf_token","x-csrf-token"],"scrubFields":["pw","pass","passwd","password","password_confirmation","passwordConfirmation","confirm_password","confirmPassword","secret","secret_token","secretToken","secret_key","secretKey","api_key","access_token","accessToken","authenticity_token","oauth_token","token","user_session_secret","request.session.csrf","request.session._csrf","request.params._csrf","request.cookie","request.cookies"]},"reactNative":{"rewriteFilenamePatterns":["^.*/[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}/[^/]*.app/(.*)$","^.*/[0-9A-Fa-f]{64}/codepush_ios/(.*)$","^.*/[0-9A-Fa-f]{64}/codepush_android/(.*)$","^.*/[0-9A-Fa-f]{64}/CodePush/(.*)$"]},"logLevel":"debug","reportLevel":"debug","uncaughtErrorLevel":"error","maxItems":0,"itemsPerMin":60},"dependencies":{"async":"~1.2.1","buffer-from":"~1.1.1","console-polyfill":"0.3.0","debug":"2.6.9","decache":"^3.0.5","error-stack-parser":"^2.0.4","json-stringify-safe":"~5.0.0","lru-cache":"~2.2.1","request-ip":"~2.0.1","source-map":"^0.5.7","uuid":"3.0.x"},"deprecated":false,"description":"Error tracking and logging from JS to Rollbar","devDependencies":{"babel-core":"^6.26.3","babel-eslint":"^10.0.3","babel-loader":"^8.0.4","bluebird":"^3.3.5","browserstack-api":"0.0.5","chai":"^4.2.0","chalk":"^1.1.1","eslint":"^6.8.0","eslint-loader":"^3.0.3","express":"^4.16.4","glob":"^5.0.14","grunt":"^1.0.4","grunt-bumpup":"^0.6.3","grunt-cli":"^1.3.2","grunt-contrib-concat":"~0.3.0","grunt-contrib-connect":"^2.1.0","grunt-contrib-copy":"~0.5.0","grunt-contrib-jshint":"^2.1.0","grunt-contrib-uglify":"^4.0.0","grunt-contrib-watch":"^1.1.0","grunt-karma":"^3.0.2","grunt-mocha":"^1.2.0","grunt-parallel":"^0.5.1","grunt-text-replace":"^0.4.0","grunt-vows":"^0.4.2","grunt-webpack":"^3.1.3","istanbul-instrumenter-loader":"^3.0.1","jade":"~0.27.7","jasmine-core":"^2.3.4","jquery-mockjax":"^2.5.0","karma":"^4.4.1","karma-browserstack-launcher":"^1.5.1","karma-chai":"^0.1.0","karma-chrome-launcher":"^2.2.0","karma-expect":"^1.1.0","karma-firefox-launcher":"^0.1.6","karma-html2js-preprocessor":"^1.1.0","karma-jquery":"^0.1.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-requirejs":"^0.2.2","karma-safari-launcher":"^0.1.1","karma-sinon":"^1.0.4","karma-sourcemap-loader":"^0.3.5","karma-webpack":"^4.0.2","mocha":"^5.2.0","mootools":"^1.5.1","natives":"^1.1.6","node-libs-browser":"^0.5.2","request":"^2.88.0","requirejs":"^2.1.20","script-loader":"0.6.1","sinon":"^8.1.1","stackframe":"^0.2.2","strict-loader":"^1.2.0","time-grunt":"^1.0.0","vows":"^0.8.3","webpack":"^4.41.5","webpack-dev-server":"^3.10.3"},"homepage":"https://github.com/rollbar/rollbar.js#readme","license":"MIT","main":"src/server/rollbar.js","name":"rollbar","optionalDependencies":{"decache":"^3.0.5"},"plugins":{"jquery":{"version":"0.0.8"}},"repository":{"type":"git","url":"git+ssh://git@github.com/rollbar/rollbar.js.git"},"scripts":{"build":"grunt","lint":"eslint . --ext .js","test":"grunt test","test-browser":"grunt test-browser","test-server":"grunt test-server","test_ci":"grunt test"},"types":"./index.d.ts","version":"2.15.0"}')},function(e,t,n){var i=n(132),r=n(135),o=n(136),s=n(137),a=n(9);function c(e,t,n,i){this.options=a.merge(e),this.logger=n,c.rateLimiter.configureGlobal(this.options),c.rateLimiter.setPlatformOptions(i,this.options),this.api=t,this.queue=new r(c.rateLimiter,t,n,this.options),this.notifier=new o(this.queue,this.options),this.telemeter=new s(this.options),this.lastError=null,this.lastErrorHash="none"}c.rateLimiter=new i({maxItems:0,itemsPerMinute:60}),c.prototype.global=function(e){return c.rateLimiter.configureGlobal(e),this},c.prototype.configure=function(e,t){var n=this.options,i={};return t&&(i={payload:t}),this.options=a.merge(n,e,i),this.notifier&&this.notifier.configure(this.options),this.telemeter&&this.telemeter.configure(this.options),this.global(this.options),this},c.prototype.log=function(e){var t=this._defaultLogLevel();return this._log(t,e)},c.prototype.debug=function(e){this._log("debug",e)},c.prototype.info=function(e){this._log("info",e)},c.prototype.warn=function(e){this._log("warning",e)},c.prototype.warning=function(e){this._log("warning",e)},c.prototype.error=function(e){this._log("error",e)},c.prototype.critical=function(e){this._log("critical",e)},c.prototype.wait=function(e){this.queue.wait(e)},c.prototype.captureEvent=function(e,t,n){return this.telemeter.captureEvent(e,t,n)},c.prototype.captureDomContentLoaded=function(e){return this.telemeter.captureDomContentLoaded(e)},c.prototype.captureLoad=function(e){return this.telemeter.captureLoad(e)},c.prototype.buildJsonPayload=function(e){return this.api.buildJsonPayload(e)},c.prototype.sendJsonPayload=function(e){this.api.postJsonPayload(e)},c.prototype._log=function(e,t){var n;if(t.callback&&(n=t.callback,delete t.callback),this.options.ignoreDuplicateErrors&&this._sameAsLastError(t)){if(n){var i=new Error("ignored identical item");i.item=t,n(i)}}else try{t.level=t.level||e,this.telemeter._captureRollbarItem(t),t.telemetryEvents=this.telemeter.copyEvents(),this.notifier.log(t,n)}catch(e){this.logger.error(e)}},c.prototype._defaultLogLevel=function(){return this.options.logLevel||"debug"},c.prototype._sameAsLastError=function(e){if(!e._isUncaught)return!1;var t=function(e){var t=e.message||"",n=(e.err||{}).stack||String(e.err);return t+"::"+n}(e);return this.lastErrorHash===t||(this.lastError=e.err,this.lastErrorHash=t,!1)},e.exports=c},function(e,t,n){var i=n(9);function r(e){this.startTime=i.now(),this.counter=0,this.perMinCounter=0,this.platform=null,this.platformOptions={},this.configureGlobal(e)}function o(e,t,n){return!e.ignoreRateLimit&&t>=1&&n>t}function s(e,t,n,i,r,o,s){var a=null;return n&&(n=new Error(n)),n||i||(a=function(e,t,n,i,r){var o,s=t.environment||t.payload&&t.payload.environment;o=r?"item per minute limit reached, ignoring errors until timeout":"maxItems has been hit, ignoring errors until reset.";var a={body:{message:{body:o,extra:{maxItems:n,itemsPerMinute:i}}},language:"javascript",environment:s,notifier:{version:t.notifier&&t.notifier.version||t.version}};"browser"===e?(a.platform="browser",a.framework="browser-js",a.notifier.name="rollbar-browser-js"):"server"===e?(a.framework=t.framework||"node-js",a.notifier.name=t.notifier.name):"react-native"===e&&(a.framework=t.framework||"react-native",a.notifier.name=t.notifier.name);return a}(e,t,r,o,s)),{error:n,shouldSend:i,payload:a}}r.globalSettings={startTime:i.now(),maxItems:void 0,itemsPerMinute:void 0},r.prototype.configureGlobal=function(e){void 0!==e.startTime&&(r.globalSettings.startTime=e.startTime),void 0!==e.maxItems&&(r.globalSettings.maxItems=e.maxItems),void 0!==e.itemsPerMinute&&(r.globalSettings.itemsPerMinute=e.itemsPerMinute)},r.prototype.shouldSend=function(e,t){var n=(t=t||i.now())-this.startTime;(n<0||n>=6e4)&&(this.startTime=t,this.perMinCounter=0);var a=r.globalSettings.maxItems,c=r.globalSettings.itemsPerMinute;if(o(e,a,this.counter))return s(this.platform,this.platformOptions,a+" max items reached",!1);if(o(e,c,this.perMinCounter))return s(this.platform,this.platformOptions,c+" items per minute reached",!1);this.counter++,this.perMinCounter++;var u=!o(e,a,this.counter),l=u;return u=u&&!o(e,c,this.perMinCounter),s(this.platform,this.platformOptions,null,u,a,c,l)},r.prototype.setPlatformOptions=function(e,t){this.platform=e,this.platformOptions=t},e.exports=r},function(e,t,n){"use strict";var i=Object.prototype.hasOwnProperty,r=Object.prototype.toString,o=function(e){if(!e||"[object Object]"!==r.call(e))return!1;var t,n=i.call(e,"constructor"),o=e.constructor&&e.constructor.prototype&&i.call(e.constructor.prototype,"isPrototypeOf");if(e.constructor&&!n&&!o)return!1;for(t in e);return void 0===t||i.call(e,t)};e.exports=function e(){var t,n,i,r,s,a={},c=null,u=arguments.length;for(t=0;t<u;t++)if(null!=(c=arguments[t]))for(s in c)n=a[s],a!==(i=c[s])&&(i&&o(i)?(r=n&&o(n)?n:{},a[s]=e(r,i)):void 0!==i&&(a[s]=i));return a}},function(e,t){e.exports=function(e){var t,n,i,r,o,s,a,c,u,l,p,d,h,f=/[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;function m(e){return e<10?"0"+e:e}function g(){return this.valueOf()}function v(e){return f.lastIndex=0,f.test(e)?'"'+e.replace(f,(function(e){var t=i[e];return"string"==typeof t?t:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)}))+'"':'"'+e+'"'}"function"!=typeof Date.prototype.toJSON&&(Date.prototype.toJSON=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+m(this.getUTCMonth()+1)+"-"+m(this.getUTCDate())+"T"+m(this.getUTCHours())+":"+m(this.getUTCMinutes())+":"+m(this.getUTCSeconds())+"Z":null},Boolean.prototype.toJSON=g,Number.prototype.toJSON=g,String.prototype.toJSON=g),"function"!=typeof e.stringify&&(i={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},e.stringify=function(e,i,o){var s;if(t="",n="","number"==typeof o)for(s=0;s<o;s+=1)n+=" ";else"string"==typeof o&&(n=o);if(r=i,i&&"function"!=typeof i&&("object"!=typeof i||"number"!=typeof i.length))throw new Error("JSON.stringify");return function e(i,o){var s,a,c,u,l,p=t,d=o[i];switch(d&&"object"==typeof d&&"function"==typeof d.toJSON&&(d=d.toJSON(i)),"function"==typeof r&&(d=r.call(o,i,d)),typeof d){case"string":return v(d);case"number":return isFinite(d)?String(d):"null";case"boolean":case"null":return String(d);case"object":if(!d)return"null";if(t+=n,l=[],"[object Array]"===Object.prototype.toString.apply(d)){for(u=d.length,s=0;s<u;s+=1)l[s]=e(s,d)||"null";return c=0===l.length?"[]":t?"[\n"+t+l.join(",\n"+t)+"\n"+p+"]":"["+l.join(",")+"]",t=p,c}if(r&&"object"==typeof r)for(u=r.length,s=0;s<u;s+=1)"string"==typeof r[s]&&(c=e(a=r[s],d))&&l.push(v(a)+(t?": ":":")+c);else for(a in d)Object.prototype.hasOwnProperty.call(d,a)&&(c=e(a,d))&&l.push(v(a)+(t?": ":":")+c);return c=0===l.length?"{}":t?"{\n"+t+l.join(",\n"+t)+"\n"+p+"}":"{"+l.join(",")+"}",t=p,c}}("",{"":e})}),"function"!=typeof e.parse&&(e.parse=(l={"\\":"\\",'"':'"',"/":"/",t:"\t",n:"\n",r:"\r",f:"\f",b:"\b"},p={go:function(){o="ok"},firstokey:function(){c=u,o="colon"},okey:function(){c=u,o="colon"},ovalue:function(){o="ocomma"},firstavalue:function(){o="acomma"},avalue:function(){o="acomma"}},d={go:function(){o="ok"},ovalue:function(){o="ocomma"},firstavalue:function(){o="acomma"},avalue:function(){o="acomma"}},h={"{":{go:function(){s.push({state:"ok"}),a={},o="firstokey"},ovalue:function(){s.push({container:a,state:"ocomma",key:c}),a={},o="firstokey"},firstavalue:function(){s.push({container:a,state:"acomma"}),a={},o="firstokey"},avalue:function(){s.push({container:a,state:"acomma"}),a={},o="firstokey"}},"}":{firstokey:function(){var e=s.pop();u=a,a=e.container,c=e.key,o=e.state},ocomma:function(){var e=s.pop();a[c]=u,u=a,a=e.container,c=e.key,o=e.state}},"[":{go:function(){s.push({state:"ok"}),a=[],o="firstavalue"},ovalue:function(){s.push({container:a,state:"ocomma",key:c}),a=[],o="firstavalue"},firstavalue:function(){s.push({container:a,state:"acomma"}),a=[],o="firstavalue"},avalue:function(){s.push({container:a,state:"acomma"}),a=[],o="firstavalue"}},"]":{firstavalue:function(){var e=s.pop();u=a,a=e.container,c=e.key,o=e.state},acomma:function(){var e=s.pop();a.push(u),u=a,a=e.container,c=e.key,o=e.state}},":":{colon:function(){if(Object.hasOwnProperty.call(a,c))throw new SyntaxError("Duplicate key '"+c+'"');o="ovalue"}},",":{ocomma:function(){a[c]=u,o="okey"},acomma:function(){a.push(u),o="avalue"}},true:{go:function(){u=!0,o="ok"},ovalue:function(){u=!0,o="ocomma"},firstavalue:function(){u=!0,o="acomma"},avalue:function(){u=!0,o="acomma"}},false:{go:function(){u=!1,o="ok"},ovalue:function(){u=!1,o="ocomma"},firstavalue:function(){u=!1,o="acomma"},avalue:function(){u=!1,o="acomma"}},null:{go:function(){u=null,o="ok"},ovalue:function(){u=null,o="ocomma"},firstavalue:function(){u=null,o="acomma"},avalue:function(){u=null,o="acomma"}}},function(e,t){var n,i,r=/^[\u0020\t\n\r]*(?:([,:\[\]{}]|true|false|null)|(-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)|"((?:[^\r\n\t\\\"]|\\(?:["\\\/trnfb]|u[0-9a-fA-F]{4}))*)")/;o="go",s=[];try{for(;n=r.exec(e);)n[1]?h[n[1]][o]():n[2]?(u=+n[2],d[o]()):(i=n[3],u=i.replace(/\\(?:u(.{4})|([^u]))/g,(function(e,t,n){return t?String.fromCharCode(parseInt(t,16)):l[n]})),p[o]()),e=e.slice(n[0].length)}catch(e){o=e}if("ok"!==o||/[^\u0020\t\n\r]/.test(e))throw o instanceof SyntaxError?o:new SyntaxError("JSON");return"function"==typeof t?function e(n,i){var r,o,s=n[i];if(s&&"object"==typeof s)for(r in u)Object.prototype.hasOwnProperty.call(s,r)&&(void 0!==(o=e(s,r))?s[r]=o:delete s[r]);return t.call(n,i,s)}({"":u},""):u}))}},function(e,t,n){var i=n(9);function r(e,t,n,i){this.rateLimiter=e,this.api=t,this.logger=n,this.options=i,this.predicates=[],this.pendingItems=[],this.pendingRequests=[],this.retryQueue=[],this.retryHandle=null,this.waitCallback=null,this.waitIntervalID=null}r.prototype.configure=function(e){this.api&&this.api.configure(e);var t=this.options;return this.options=i.merge(t,e),this},r.prototype.addPredicate=function(e){return i.isFunction(e)&&this.predicates.push(e),this},r.prototype.addPendingItem=function(e){this.pendingItems.push(e)},r.prototype.removePendingItem=function(e){var t=this.pendingItems.indexOf(e);-1!==t&&this.pendingItems.splice(t,1)},r.prototype.addItem=function(e,t,n,r){t&&i.isFunction(t)||(t=function(){});var o=this._applyPredicates(e);if(o.stop)return this.removePendingItem(r),void t(o.err);if(this._maybeLog(e,n),this.removePendingItem(r),this.options.transmit){this.pendingRequests.push(e);try{this._makeApiRequest(e,function(n,i){this._dequeuePendingRequest(e),t(n,i)}.bind(this))}catch(n){this._dequeuePendingRequest(e),t(n)}}else t(new Error("Transmit disabled"))},r.prototype.wait=function(e){i.isFunction(e)&&(this.waitCallback=e,this._maybeCallWait()||(this.waitIntervalID&&(this.waitIntervalID=clearInterval(this.waitIntervalID)),this.waitIntervalID=setInterval(function(){this._maybeCallWait()}.bind(this),500)))},r.prototype._applyPredicates=function(e){for(var t=null,n=0,i=this.predicates.length;n<i;n++)if(!(t=this.predicates[n](e,this.options))||void 0!==t.err)return{stop:!0,err:t.err};return{stop:!1,err:null}},r.prototype._makeApiRequest=function(e,t){var n=this.rateLimiter.shouldSend(e);n.shouldSend?this.api.postItem(e,function(n,i){n?this._maybeRetry(n,e,t):t(n,i)}.bind(this)):n.error?t(n.error):this.api.postItem(n.payload,t)};var o=["ECONNRESET","ENOTFOUND","ESOCKETTIMEDOUT","ETIMEDOUT","ECONNREFUSED","EHOSTUNREACH","EPIPE","EAI_AGAIN"];r.prototype._maybeRetry=function(e,t,n){var i=!1;if(this.options.retryInterval)for(var r=0,s=o.length;r<s;r++)if(e.code===o[r]){i=!0;break}i?this._retryApiRequest(t,n):n(e)},r.prototype._retryApiRequest=function(e,t){this.retryQueue.push({item:e,callback:t}),this.retryHandle||(this.retryHandle=setInterval(function(){for(;this.retryQueue.length;){var e=this.retryQueue.shift();this._makeApiRequest(e.item,e.callback)}}.bind(this),this.options.retryInterval))},r.prototype._dequeuePendingRequest=function(e){var t=this.pendingRequests.indexOf(e);-1!==t&&(this.pendingRequests.splice(t,1),this._maybeCallWait())},r.prototype._maybeLog=function(e,t){if(this.logger&&this.options.verbose){var n=t;if(n=(n=n||i.get(e,"body.trace.exception.message"))||i.get(e,"body.trace_chain.0.exception.message"))return void this.logger.error(n);(n=i.get(e,"body.message.body"))&&this.logger.log(n)}},r.prototype._maybeCallWait=function(){return!(!i.isFunction(this.waitCallback)||0!==this.pendingItems.length||0!==this.pendingRequests.length)&&(this.waitIntervalID&&(this.waitIntervalID=clearInterval(this.waitIntervalID)),this.waitCallback(),!0)},e.exports=r},function(e,t,n){var i=n(9);function r(e,t){this.queue=e,this.options=t,this.transforms=[],this.diagnostic={}}r.prototype.configure=function(e){this.queue&&this.queue.configure(e);var t=this.options;return this.options=i.merge(t,e),this},r.prototype.addTransform=function(e){return i.isFunction(e)&&this.transforms.push(e),this},r.prototype.log=function(e,t){if(t&&i.isFunction(t)||(t=function(){}),!this.options.enabled)return t(new Error("Rollbar is not enabled"));this.queue.addPendingItem(e);var n=e.err;this._applyTransforms(e,function(i,r){if(i)return this.queue.removePendingItem(e),t(i,null);this.queue.addItem(r,t,n,e)}.bind(this))},r.prototype._applyTransforms=function(e,t){var n=-1,i=this.transforms.length,r=this.transforms,o=this.options,s=function(e,a){e?t(e,null):++n!==i?r[n](a,o,s):t(null,a)};s(null,e)},e.exports=r},function(e,t,n){var i=n(9);function r(e){this.queue=[],this.options=i.merge(e);var t=this.options.maxTelemetryEvents||100;this.maxQueueSize=Math.max(0,Math.min(t,100))}function o(e,t){if(t)return t;return{error:"error",manual:"info"}[e]||"info"}r.prototype.configure=function(e){var t=this.options;this.options=i.merge(t,e);var n=this.options.maxTelemetryEvents||100,r=Math.max(0,Math.min(n,100)),o=0;this.maxQueueSize>r&&(o=this.maxQueueSize-r),this.maxQueueSize=r,this.queue.splice(0,o)},r.prototype.copyEvents=function(){var e=Array.prototype.slice.call(this.queue,0);if(i.isFunction(this.options.filterTelemetry))try{for(var t=e.length;t--;)this.options.filterTelemetry(e[t])&&e.splice(t,1)}catch(e){this.options.filterTelemetry=null}return e},r.prototype.capture=function(e,t,n,r,s){var a={level:o(e,n),type:e,timestamp_ms:s||i.now(),body:t,source:"client"};r&&(a.uuid=r);try{if(i.isFunction(this.options.filterTelemetry)&&this.options.filterTelemetry(a))return!1}catch(e){this.options.filterTelemetry=null}return this.push(a),a},r.prototype.captureEvent=function(e,t,n,i){return this.capture(e,t,n,i)},r.prototype.captureError=function(e,t,n,i){var r={message:e.message||String(e)};return e.stack&&(r.stack=e.stack),this.capture("error",r,t,n,i)},r.prototype.captureLog=function(e,t,n,i){return this.capture("log",{message:e},t,n,i)},r.prototype.captureNetwork=function(e,t,n,i){t=t||"xhr",e.subtype=e.subtype||t,i&&(e.request=i);var r=this.levelFromStatus(e.status_code);return this.capture("network",e,r,n)},r.prototype.levelFromStatus=function(e){return e>=200&&e<400?"info":0===e||e>=400?"error":"info"},r.prototype.captureDom=function(e,t,n,i,r){var o={subtype:e,element:t};return void 0!==n&&(o.value=n),void 0!==i&&(o.checked=i),this.capture("dom",o,"info",r)},r.prototype.captureNavigation=function(e,t,n){return this.capture("navigation",{from:e,to:t},"info",n)},r.prototype.captureDomContentLoaded=function(e){return this.capture("navigation",{subtype:"DOMContentLoaded"},"info",void 0,e&&e.getTime())},r.prototype.captureLoad=function(e){return this.capture("navigation",{subtype:"load"},"info",void 0,e&&e.getTime())},r.prototype.captureConnectivityChange=function(e,t){return this.captureNetwork({change:e},"connectivity",t)},r.prototype._captureRollbarItem=function(e){if(this.options.includeItemsInTelemetry)return e.err?this.captureError(e.err,e.level,e.uuid,e.timestamp):e.message?this.captureLog(e.message,e.level,e.uuid,e.timestamp):e.custom?this.capture("log",e.custom,e.level,e.uuid,e.timestamp):void 0},r.prototype.push=function(e){this.queue.push(e),this.queue.length>this.maxQueueSize&&this.queue.shift()},e.exports=r},function(e,t,n){var i=n(9),r=n(139),o=n(68),s={hostname:"api.rollbar.com",path:"/api/1/item/",search:null,version:"1",protocol:"https:",port:443};function a(e,t,n,i){this.options=e,this.transport=t,this.url=n,this.jsonBackup=i,this.accessToken=e.accessToken,this.transportOptions=c(e,n)}function c(e,t){return r.getTransportFromOptions(e,s,t)}a.prototype.postItem=function(e,t){var n=r.transportOptions(this.transportOptions,"POST"),i=r.buildPayload(this.accessToken,e,this.jsonBackup);this.transport.post(this.accessToken,n,i,t)},a.prototype.buildJsonPayload=function(e,t){var n=r.buildPayload(this.accessToken,e,this.jsonBackup),i=o.truncate(n);return i.error?(t&&t(i.error),null):i.value},a.prototype.postJsonPayload=function(e,t){var n=r.transportOptions(this.transportOptions,"POST");this.transport.postJsonPayload(this.accessToken,n,e,t)},a.prototype.configure=function(e){var t=this.oldOptions;return this.options=i.merge(t,e),this.transportOptions=c(this.options,this.url),void 0!==this.options.accessToken&&(this.accessToken=this.options.accessToken),this},e.exports=a},function(e,t,n){var i=n(9);e.exports={buildPayload:function(e,t,n){if(!i.isType(t.context,"string")){var r=i.stringify(t.context,n);r.error?t.context="Error: could not serialize 'context'":t.context=r.value||"",t.context.length>255&&(t.context=t.context.substr(0,255))}return{access_token:e,data:t}},getTransportFromOptions:function(e,t,n){var i=t.hostname,r=t.protocol,o=t.port,s=t.path,a=t.search,c=e.proxy;if(e.endpoint){var u=n.parse(e.endpoint);i=u.hostname,r=u.protocol,o=u.port,s=u.pathname,a=u.search}return{hostname:i,protocol:r,port:o,path:s,search:a,proxy:c}},transportOptions:function(e,t){var n=e.protocol||"https:",i=e.port||("http:"===n?80:"https:"===n?443:void 0),r=e.hostname,o=e.path;return e.search&&(o+=e.search),e.proxy&&(o=n+"//"+r+o,r=e.proxy.host||e.proxy.hostname,i=e.proxy.port,n=e.proxy.protocol||n),{protocol:n,hostname:r,path:o,port:i,method:t}},appendPathToPath:function(e,t){var n=/\/$/.test(e),i=/^\//.test(t);return n&&i?t=t.substring(1):n||i||(t="/"+t),e+t}}},function(e,t,n){var i=n(9),r=n(68),o=n(45),s=n(10),a=n(4),c=n(69);function u(){this.rateLimitExpires=0}function l(e,t,n){var i=t&&t.headers||{};if(i["Content-Type"]="application/json",n)try{i["Content-Length"]=Buffer.byteLength(n,"utf8")}catch(e){o.error("Could not get the content length of the data")}return i["X-Rollbar-Access-Token"]=e,i}function p(e){return{"http:":s,"https:":a}[e.protocol]}function d(){return Math.floor(Date.now()/1e3)}u.prototype.get=function(e,t,n,r,s){var a;if(r&&i.isFunction(r)||(r=function(){}),t=t||{},i.addParamsAndAccessTokenToPath(e,t,n),t.headers=l(e,t),!(a=s?s(t):p(t)))return o.error("Unknown transport based on given protocol: "+t.protocol),r(new Error("Unknown transport"));var c=a.request(t,function(e){this.handleResponse(e,r)}.bind(this));c.on("error",(function(e){r(e)})),c.end()},u.prototype.post=function(e,t,n,s,a){var u;if(s&&i.isFunction(s)||(s=function(){}),d()<this.rateLimitExpires)return s(new Error("Exceeded rate limit"));if(t=t||{},!n)return s(new Error("Cannot send empty request"));var h=r.truncate(n,c);if(h.error)return o.error("Problem stringifying payload. Giving up"),s(h.error);var f=h.value;if(t.headers=l(e,t,f),!(u=a?a(t):p(t)))return o.error("Unknown transport based on given protocol: "+t.protocol),s(new Error("Unknown transport"));var m=u.request(t,function(e){this.handleResponse(e,function(e){return function(t,n){if(t)return e(t);n.result&&n.result.uuid?o.log(["Successful api response."," Link: https://rollbar.com/occurrence/uuid/?uuid="+n.result.uuid].join("")):o.log("Successful api response"),e(null,n.result)}}(s))}.bind(this));m.on("error",(function(e){s(e)})),f&&m.write(f),m.end()},u.prototype.updateRateLimit=function(e){var t=parseInt(e.headers["x-rate-limit-remaining"]||0),n=Math.min(60,e.headers["x-rate-limit-remaining-seconds"]||0),i=d();429===e.statusCode&&0===t?this.rateLimitExpires=i+n:this.rateLimitExpires=i},u.prototype.handleResponse=function(e,t){this.updateRateLimit(e);var n=[];e.setEncoding("utf8"),e.on("data",(function(e){n.push(e)})),e.on("end",(function(){!function(e,t){var n=i.jsonParse(e);if(n.error)return o.error("Could not parse api response, err: "+n.error),t(n.error);if((e=n.value).err)return o.error("Received error: "+e.message),t(new Error("Api error: "+(e.message||"Unknown error")));t(null,e)}(n=n.join(""),t)}))},e.exports=u},function(e,t,n){var i=n(70),r=n(142),o=n(153),s=n(32),a=n(9);function c(e,t,n){e.data=e.data||{},e.data.body=e.data.body||{};var i=e.message||"Item sent with null or missing arguments.";e.data.body.message={body:i},n(null,e)}function u(e,t,n){e.stackInfo&&(e.data=e.data||{},e.data.body=e.data.body||{},e.data.body.trace_chain=e.stackInfo),n(null,e)}function l(e){return e.headers&&e.headers["content-type"]&&e.headers["content-type"].includes("json")}function p(e){var t=e.ip;return t||(t=o.getClientIp(e)),t}e.exports={baseData:function(e,t,n){var i=t.payload&&t.payload.environment||t.environment,r={timestamp:Math.round(e.timestamp/1e3),environment:e.environment||i,level:e.level||"error",language:"javascript",framework:e.framework||t.framework,uuid:e.uuid,notifier:JSON.parse(JSON.stringify(t.notifier))};t.codeVersion?r.code_version=t.codeVersion:t.code_version&&(r.code_version=t.code_version),Object.getOwnPropertyNames(e.custom||{}).forEach((function(t){r.hasOwnProperty(t)||(r[t]=e.custom[t])})),r.server={host:t.host,argv:process.argv.concat(),pid:process.pid},t.branch&&(r.server.branch=t.branch),t.root&&(r.server.root=t.root),e.data=r,n(null,e)},handleItemWithError:function(e,t,n){if(!e.err)return n(null,e);var o=e.err,s=[],a=[];do{s.push(o),o=o.nested}while(void 0!==o);e.stackInfo=a,i.eachSeries(s,function(e,t){return function(n,i){r.parseException(n,t,(function(t,n){return t?i(t):(e.push({frames:n.frames,exception:{class:n.class,message:n.message}}),i(null))}))}}(a,t),(function(t){t&&(e.message=e.err.message||e.err.description||e.message||String(e.err),e.diagnostic.buildTraceData=t.message,delete e.stackInfo),n(null,e)}))},addBody:function(e,t,n){e.stackInfo?u(e,0,n):c(e,0,n)},addMessageData:c,addErrorData:u,addRequestData:function(e,t,n){e.data=e.data||{};var i=e.request;if(i){if(t.addRequestData&&a.isFunction(t.addRequestData))return t.addRequestData(e.data,i),void n(null,e);var r=function(e){var t,n=e.headers||{},i=n.host||"<no host>",r=e.protocol||(e.socket&&e.socket.encrypted?"https":"http");t=a.isType(e.url,"string")?s.parse(e.url,!0):e.url||{};t.protocol=t.protocol||r,t.host=t.host||i;var o={url:s.format(t),user_ip:p(e),headers:n,method:e.method};t.search&&t.search.length>0&&(o.GET=t.query);var c=e.body||e.payload;if(c){var u={};if(a.isIterable(c)){for(var l in c)Object.prototype.hasOwnProperty.call(c,l)&&(u[l]=c[l]);o[e.method]=u}else o.body=c}return o}(i);if(a.filterIp(r,t.captureIp),e.data.request=r,i.route)e.data.context=i.route.path;else try{e.data.context=i.app._router.matchRequest(i).path}catch(e){}var o=t.captureEmail,c=t.captureUsername;if(i.rollbar_person){var u=i.rollbar_person;!o&&u.email&&(u.email=null),!c&&u.username&&(u.username=null),e.data.person=u}else if(i.user)e.data.person={id:i.user.id},i.user.username&&c&&(e.data.person.username=i.user.username),i.user.email&&o&&(e.data.person.email=i.user.email);else if(i.user_id||i.userId){var l=i.user_id||i.userId;a.isFunction(l)&&(l=l()),e.data.person={id:l}}n(null,e)}else n(null,e)},addLambdaData:function(e,t,n){var i=e.lambdaContext;if(i){var r={remainingTimeInMillis:i.getRemainingTimeInMillis(),callbackWaitsForEmptyEventLoop:i.callbackWaitsForEmptyEventLoop,functionName:i.functionName,functionVersion:i.functionVersion,arn:i.invokedFunctionArn,requestId:i.awsRequestId};e.data=e.data||{},e.data.custom=e.data.custom||{},e.data.custom.lambda=r,n(null,e)}else n(null,e)},scrubPayload:function(e,t,n){var i=t.scrubHeaders||[],r=t.scrubFields||[];r=i.concat(r),function(e,t){if(!e||!t.scrubRequestBody)return;try{a.isString(e.body)&&l(e)&&(e.body=JSON.parse(e.body))}catch(t){e.body=null,e.error="request.body parse failed: "+t.message}}(e.data.request,t),e.data=a.scrub(e.data,r),function(e,t){if(!e||!t.scrubRequestBody)return;try{a.isObject(e.body)&&l(e)&&(e.body=JSON.stringify(e.body))}catch(t){e.body=null,e.error="request.body serialization failed: "+t.message}}(e.data.request,t),n(null,e)}}},function(e,t,n){"use strict";var i=n(45),r=n(70),o=n(5),s=n(143),a=n(19),c=n(144),u=/^\s*at (?:([^(]+(?: \[\w\s+\])?(?:.*\)*)) )?\(?(.+?)(?::(\d+):(\d+)(?:, <js>:(\d+):(\d+))?)?\)?$/,l=/^\s*at .+ \(.+ (at[^)]+\))\)$/,p=/^\s*(>?) [0-9]+\|(\s*.+)$/m,d=s({max:100}),h={};function f(e,t){var n,i,r,o;if((n=(i=e).match(l))&&(i=n[1]),!(n=i.match(u)))return t(null,null);var s={source:(r=n.slice(1))[1],line:Math.floor(r[2]),column:Math.floor(r[3])-1};this.useSourceMaps&&(s=function(e){return c.mapSourcePosition({source:e.source,line:e.line,column:e.column})}(s)),o={method:r[0]||"<unknown>",filename:s.source,lineno:s.line,colno:s.column},r[4]&&(o.compiled_lineno=Math.floor(r[4])),r[5]&&(o.compiled_colno=Math.floor(r[5])),t(null,o)}function m(e,t){var n,i;n="/"===e[0]||"."===e[0],i=!!d.get(e),t(n&&!i&&!!!h[e])}function g(e,t){void 0!==o.exists?o.exists(e,t):o.stat(e,(function(e){t(!e)}))}function v(e,t){var n=[];e.forEach((function(e){-1===n.indexOf(e.filename)&&n.push(e.filename)})),r.filter(n,m,(function(n){var s;function a(e,t){!function(e,t){try{o.readFile(e,(function(e,n){var i;return e?t(e):(i=n.toString("utf8").split("\n"),t(null,i))}))}catch(e){i.log(e)}}(e,(function(n,i){return n?t(n):(s[e]=i,d.set(e,i),t(null))}))}function c(e,t){var n=s[e.filename]||d.get(e.filename);n&&function(e,t){e.code=t[e.lineno-1],e.context={pre:t.slice(Math.max(0,e.lineno-4),e.lineno-1),post:t.slice(e.lineno,e.lineno+3)}}(e,n),t(null)}s={},r.filter(n,g,(function(n){r.each(n,a,(function(n){if(n)return t(n);r.eachSeries(e,c,(function(n){if(n)return t(n);t(null,e)}))}))}))}))}t.cache=d,t.pendingReads=h,t.parseException=function(e,n,r){var o=function(e){var t,n;if(null==e)return null;if("object"!=typeof e)return null;if(a.isArray(e))return e;for(n in t=[],e)Object.prototype.hasOwnProperty.call(e,n)&&t.push(e[n]);return t}(e.errors);return t.parseStack(e.stack,n,(function(t,n){var s,a,c,u,l;return t?(i.error("could not parse exception, err: "+t),r(t)):(s=String(e.message||"<no message>"),c={class:a=String(e.name||"<unknown>"),message:s,frames:n},o&&o.length&&(u=o[0],c={class:a,message:String(u.message||"<no message>"),frames:n}),s.match(p)&&(l=function(e){var t,n,i,r,o,s,a,c,u,l,d;for(n=(t=e.split("\n"))[0].indexOf(":"),i=t[0].slice(0,n),r=parseInt(t[0].slice(n+1),10),s=t[(o=t.length)-1],t=t.slice(1,o-1),u=[],l=[],a=0;a<o-2;++a)(d=t[a].match(p))&&(">"===d[1]?c=d[2]:c?d[2]&&l.push(d[2]):d[2]&&u.push(d[2]));return{frame:{method:"<jade>",filename:i,lineno:r,code:c,context:{pre:u=u.slice(0,Math.min(u.length,3)),post:l=l.slice(0,Math.min(l.length,3))}},message:s}}(s),c.message=l.message,c.frames.push(l.frame)),r(null,c))}))},t.parseStack=function(e,t,n){for(var i,o=e;"object"==typeof o;)o=o&&o.stack;i=(o||"").split("\n").slice(1),r.map(i,f.bind({useSourceMaps:t.nodeSourceMaps}),(function(e,t){if(e)return n(e);t.reverse(),r.filter(t,(function(e,t){t(!!e)}),(function(e){v(e,n)}))}))}},function(e,t,n){!function(){function t(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function n(){return 1}function i(e){if(!(this instanceof i))return new i(e);var o;"number"==typeof e&&(e={max:o=e}),e||(e={}),o=e.max;var s=e.length||n;"function"!=typeof s&&(s=n),(!o||"number"!=typeof o||o<=0)&&(o=1/0);var a=e.stale||!1,c=e.maxAge||null,u=e.dispose,l=Object.create(null),p=Object.create(null),d=0,h=0,f=0,m=0;function g(){for(;h<d&&f>o;)x(p[h])}function v(e){for(delete p[e.lu];h<d&&!p[h];)h++}function x(e){e&&(u&&u(e.key,e.value),f-=e.length,m--,delete l[e.key],v(e))}Object.defineProperty(this,"max",{set:function(e){(!e||"number"!=typeof e||e<=0)&&(e=1/0),f>(o=e)&&g()},get:function(){return o},enumerable:!0}),Object.defineProperty(this,"lengthCalculator",{set:function(e){if("function"!=typeof e)for(var t in s=n,f=m,l)l[t].length=1;else for(var t in s=e,f=0,l)l[t].length=s(l[t].value),f+=l[t].length;f>o&&g()},get:function(){return s},enumerable:!0}),Object.defineProperty(this,"length",{get:function(){return f},enumerable:!0}),Object.defineProperty(this,"itemCount",{get:function(){return m},enumerable:!0}),this.forEach=function(e,t){t=t||this;for(var n=0,i=d-1;i>=0&&n<m;i--)if(p[i]){n++;var r=p[i];e.call(t,r.value,r.key,this)}},this.keys=function(){for(var e=new Array(m),t=0,n=d-1;n>=0&&t<m;n--)if(p[n]){var i=p[n];e[t++]=i.key}return e},this.values=function(){for(var e=new Array(m),t=0,n=d-1;n>=0&&t<m;n--)if(p[n]){var i=p[n];e[t++]=i.value}return e},this.reset=function(){if(u)for(var e in l)u(e,l[e].value);l={},p={},h=0,d=0,f=0,m=0},this.dump=function(){return l},this.dumpLru=function(){return p},this.set=function(e,n){if(t(l,e))return u&&u(e,l[e].value),c&&(l[e].now=Date.now()),l[e].value=n,this.get(e),!0;var i=s(n),a=c?Date.now():0,h=new r(e,n,d++,i,a);return h.length>o?(u&&u(e,n),!1):(f+=h.length,p[h.lu]=l[e]=h,m++,f>o&&g(),!0)},this.has=function(e){if(!t(l,e))return!1;var n=l[e];return!(c&&Date.now()-n.now>c)},this.get=function(e){if(t(l,e)){var n=l[e];return c&&Date.now()-n.now>c?(this.del(e),a?n.value:void 0):(v(n),n.lu=d++,p[n.lu]=n,n.value)}},this.del=function(e){x(l[e])}}function r(e,t,n,i,r){this.key=e,this.value=t,this.lu=n,this.length=i,this.now=r}e.exports?e.exports=i:this.LRUCache=i}()},function(e,t,n){var i=n(145).SourceMapConsumer,r=n(3),o=n(5),s=n(152),a={},c={},u=/^data:application\/json[^,]+base64,/;function l(e){if(e=e.trim(),/^file:/.test(e)&&(e=e.replace(/file:\/\/\/(\w:)?/,(function(e,t){return t?"":"/"}))),e in a)return a[e];var t="";try{o.existsSync(e)&&(t=o.readFileSync(e,"utf8"))}catch(e){}return a[e]=t}function p(e,t){if(!e)return t;var n=r.dirname(e),i=/^\w+:\/\/[^\/]*/.exec(n),o=i?i[0]:"",s=n.slice(o.length);return o&&/^\/\w\:/.test(s)?(o+="/")+r.resolve(n.slice(o.length),t).replace(/\\/g,"/"):o+r.resolve(n.slice(o.length),t)}function d(e){var t,n=function(e){var t;t=l(e);for(var n,i,r=/(?:\/\/[@#][ \t]+sourceMappingURL=([^\s'"]+?)[ \t]*$)|(?:\/\*[@#][ \t]+sourceMappingURL=([^\*]+?)[ \t]*(?:\*\/)[ \t]*$)/gm;i=r.exec(t);)n=i;return n?n[1]:null}(e);if(!n)return null;if(u.test(n)){var i=n.slice(n.indexOf(",")+1);t=s(i,"base64").toString(),n=e}else t=l(n=p(e,n));return t?{url:n,map:t}:null}t.mapSourcePosition=function(e){var t=c[e.source];if(!t){var n=d(e.source);n?(t=c[e.source]={url:n.url,map:new i(n.map)}).map.sourcesContent&&t.map.sources.forEach((function(e,n){var i=t.map.sourcesContent[n];if(i){var r=p(t.url,e);a[r]=i}})):t=c[e.source]={url:null,map:null}}if(t&&t.map&&"function"==typeof t.map.originalPositionFor){var r=t.map.originalPositionFor(e);if(null!==r.source)return r.source=p(t.url,r.source),r}return e}},function(e,t,n){t.SourceMapGenerator=n(71).SourceMapGenerator,t.SourceMapConsumer=n(148).SourceMapConsumer,t.SourceNode=n(151).SourceNode},function(e,t){var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");t.encode=function(e){if(0<=e&&e<n.length)return n[e];throw new TypeError("Must be between 0 and 63: "+e)},t.decode=function(e){return 65<=e&&e<=90?e-65:97<=e&&e<=122?e-97+26:48<=e&&e<=57?e-48+52:43==e?62:47==e?63:-1}},function(e,t,n){var i=n(27);function r(){this._array=[],this._sorted=!0,this._last={generatedLine:-1,generatedColumn:0}}r.prototype.unsortedForEach=function(e,t){this._array.forEach(e,t)},r.prototype.add=function(e){var t,n,r,o,s,a;t=this._last,n=e,r=t.generatedLine,o=n.generatedLine,s=t.generatedColumn,a=n.generatedColumn,o>r||o==r&&a>=s||i.compareByGeneratedPositionsInflated(t,n)<=0?(this._last=e,this._array.push(e)):(this._sorted=!1,this._array.push(e))},r.prototype.toArray=function(){return this._sorted||(this._array.sort(i.compareByGeneratedPositionsInflated),this._sorted=!0),this._array},t.MappingList=r},function(e,t,n){var i=n(27),r=n(149),o=n(73).ArraySet,s=n(72),a=n(150).quickSort;function c(e){var t=e;return"string"==typeof e&&(t=JSON.parse(e.replace(/^\)\]\}'/,""))),null!=t.sections?new p(t):new u(t)}function u(e){var t=e;"string"==typeof e&&(t=JSON.parse(e.replace(/^\)\]\}'/,"")));var n=i.getArg(t,"version"),r=i.getArg(t,"sources"),s=i.getArg(t,"names",[]),a=i.getArg(t,"sourceRoot",null),c=i.getArg(t,"sourcesContent",null),u=i.getArg(t,"mappings"),l=i.getArg(t,"file",null);if(n!=this._version)throw new Error("Unsupported version: "+n);r=r.map(String).map(i.normalize).map((function(e){return a&&i.isAbsolute(a)&&i.isAbsolute(e)?i.relative(a,e):e})),this._names=o.fromArray(s.map(String),!0),this._sources=o.fromArray(r,!0),this.sourceRoot=a,this.sourcesContent=c,this._mappings=u,this.file=l}function l(){this.generatedLine=0,this.generatedColumn=0,this.source=null,this.originalLine=null,this.originalColumn=null,this.name=null}function p(e){var t=e;"string"==typeof e&&(t=JSON.parse(e.replace(/^\)\]\}'/,"")));var n=i.getArg(t,"version"),r=i.getArg(t,"sections");if(n!=this._version)throw new Error("Unsupported version: "+n);this._sources=new o,this._names=new o;var s={line:-1,column:0};this._sections=r.map((function(e){if(e.url)throw new Error("Support for url field in sections not implemented.");var t=i.getArg(e,"offset"),n=i.getArg(t,"line"),r=i.getArg(t,"column");if(n<s.line||n===s.line&&r<s.column)throw new Error("Section offsets must be ordered and non-overlapping.");return s=t,{generatedOffset:{generatedLine:n+1,generatedColumn:r+1},consumer:new c(i.getArg(e,"map"))}}))}c.fromSourceMap=function(e){return u.fromSourceMap(e)},c.prototype._version=3,c.prototype.__generatedMappings=null,Object.defineProperty(c.prototype,"_generatedMappings",{get:function(){return this.__generatedMappings||this._parseMappings(this._mappings,this.sourceRoot),this.__generatedMappings}}),c.prototype.__originalMappings=null,Object.defineProperty(c.prototype,"_originalMappings",{get:function(){return this.__originalMappings||this._parseMappings(this._mappings,this.sourceRoot),this.__originalMappings}}),c.prototype._charIsMappingSeparator=function(e,t){var n=e.charAt(t);return";"===n||","===n},c.prototype._parseMappings=function(e,t){throw new Error("Subclasses must implement _parseMappings")},c.GENERATED_ORDER=1,c.ORIGINAL_ORDER=2,c.GREATEST_LOWER_BOUND=1,c.LEAST_UPPER_BOUND=2,c.prototype.eachMapping=function(e,t,n){var r,o=t||null;switch(n||c.GENERATED_ORDER){case c.GENERATED_ORDER:r=this._generatedMappings;break;case c.ORIGINAL_ORDER:r=this._originalMappings;break;default:throw new Error("Unknown order of iteration.")}var s=this.sourceRoot;r.map((function(e){var t=null===e.source?null:this._sources.at(e.source);return null!=t&&null!=s&&(t=i.join(s,t)),{source:t,generatedLine:e.generatedLine,generatedColumn:e.generatedColumn,originalLine:e.originalLine,originalColumn:e.originalColumn,name:null===e.name?null:this._names.at(e.name)}}),this).forEach(e,o)},c.prototype.allGeneratedPositionsFor=function(e){var t=i.getArg(e,"line"),n={source:i.getArg(e,"source"),originalLine:t,originalColumn:i.getArg(e,"column",0)};if(null!=this.sourceRoot&&(n.source=i.relative(this.sourceRoot,n.source)),!this._sources.has(n.source))return[];n.source=this._sources.indexOf(n.source);var o=[],s=this._findMapping(n,this._originalMappings,"originalLine","originalColumn",i.compareByOriginalPositions,r.LEAST_UPPER_BOUND);if(s>=0){var a=this._originalMappings[s];if(void 0===e.column)for(var c=a.originalLine;a&&a.originalLine===c;)o.push({line:i.getArg(a,"generatedLine",null),column:i.getArg(a,"generatedColumn",null),lastColumn:i.getArg(a,"lastGeneratedColumn",null)}),a=this._originalMappings[++s];else for(var u=a.originalColumn;a&&a.originalLine===t&&a.originalColumn==u;)o.push({line:i.getArg(a,"generatedLine",null),column:i.getArg(a,"generatedColumn",null),lastColumn:i.getArg(a,"lastGeneratedColumn",null)}),a=this._originalMappings[++s]}return o},t.SourceMapConsumer=c,u.prototype=Object.create(c.prototype),u.prototype.consumer=c,u.fromSourceMap=function(e){var t=Object.create(u.prototype),n=t._names=o.fromArray(e._names.toArray(),!0),r=t._sources=o.fromArray(e._sources.toArray(),!0);t.sourceRoot=e._sourceRoot,t.sourcesContent=e._generateSourcesContent(t._sources.toArray(),t.sourceRoot),t.file=e._file;for(var s=e._mappings.toArray().slice(),c=t.__generatedMappings=[],p=t.__originalMappings=[],d=0,h=s.length;d<h;d++){var f=s[d],m=new l;m.generatedLine=f.generatedLine,m.generatedColumn=f.generatedColumn,f.source&&(m.source=r.indexOf(f.source),m.originalLine=f.originalLine,m.originalColumn=f.originalColumn,f.name&&(m.name=n.indexOf(f.name)),p.push(m)),c.push(m)}return a(t.__originalMappings,i.compareByOriginalPositions),t},u.prototype._version=3,Object.defineProperty(u.prototype,"sources",{get:function(){return this._sources.toArray().map((function(e){return null!=this.sourceRoot?i.join(this.sourceRoot,e):e}),this)}}),u.prototype._parseMappings=function(e,t){for(var n,r,o,c,u,p=1,d=0,h=0,f=0,m=0,g=0,v=e.length,x=0,b={},y={},w=[],k=[];x<v;)if(";"===e.charAt(x))p++,x++,d=0;else if(","===e.charAt(x))x++;else{for((n=new l).generatedLine=p,c=x;c<v&&!this._charIsMappingSeparator(e,c);c++);if(o=b[r=e.slice(x,c)])x+=r.length;else{for(o=[];x<c;)s.decode(e,x,y),u=y.value,x=y.rest,o.push(u);if(2===o.length)throw new Error("Found a source, but no line and column");if(3===o.length)throw new Error("Found a source and line, but no column");b[r]=o}n.generatedColumn=d+o[0],d=n.generatedColumn,o.length>1&&(n.source=m+o[1],m+=o[1],n.originalLine=h+o[2],h=n.originalLine,n.originalLine+=1,n.originalColumn=f+o[3],f=n.originalColumn,o.length>4&&(n.name=g+o[4],g+=o[4])),k.push(n),"number"==typeof n.originalLine&&w.push(n)}a(k,i.compareByGeneratedPositionsDeflated),this.__generatedMappings=k,a(w,i.compareByOriginalPositions),this.__originalMappings=w},u.prototype._findMapping=function(e,t,n,i,o,s){if(e[n]<=0)throw new TypeError("Line must be greater than or equal to 1, got "+e[n]);if(e[i]<0)throw new TypeError("Column must be greater than or equal to 0, got "+e[i]);return r.search(e,t,o,s)},u.prototype.computeColumnSpans=function(){for(var e=0;e<this._generatedMappings.length;++e){var t=this._generatedMappings[e];if(e+1<this._generatedMappings.length){var n=this._generatedMappings[e+1];if(t.generatedLine===n.generatedLine){t.lastGeneratedColumn=n.generatedColumn-1;continue}}t.lastGeneratedColumn=1/0}},u.prototype.originalPositionFor=function(e){var t={generatedLine:i.getArg(e,"line"),generatedColumn:i.getArg(e,"column")},n=this._findMapping(t,this._generatedMappings,"generatedLine","generatedColumn",i.compareByGeneratedPositionsDeflated,i.getArg(e,"bias",c.GREATEST_LOWER_BOUND));if(n>=0){var r=this._generatedMappings[n];if(r.generatedLine===t.generatedLine){var o=i.getArg(r,"source",null);null!==o&&(o=this._sources.at(o),null!=this.sourceRoot&&(o=i.join(this.sourceRoot,o)));var s=i.getArg(r,"name",null);return null!==s&&(s=this._names.at(s)),{source:o,line:i.getArg(r,"originalLine",null),column:i.getArg(r,"originalColumn",null),name:s}}}return{source:null,line:null,column:null,name:null}},u.prototype.hasContentsOfAllSources=function(){return!!this.sourcesContent&&(this.sourcesContent.length>=this._sources.size()&&!this.sourcesContent.some((function(e){return null==e})))},u.prototype.sourceContentFor=function(e,t){if(!this.sourcesContent)return null;if(null!=this.sourceRoot&&(e=i.relative(this.sourceRoot,e)),this._sources.has(e))return this.sourcesContent[this._sources.indexOf(e)];var n;if(null!=this.sourceRoot&&(n=i.urlParse(this.sourceRoot))){var r=e.replace(/^file:\/\//,"");if("file"==n.scheme&&this._sources.has(r))return this.sourcesContent[this._sources.indexOf(r)];if((!n.path||"/"==n.path)&&this._sources.has("/"+e))return this.sourcesContent[this._sources.indexOf("/"+e)]}if(t)return null;throw new Error('"'+e+'" is not in the SourceMap.')},u.prototype.generatedPositionFor=function(e){var t=i.getArg(e,"source");if(null!=this.sourceRoot&&(t=i.relative(this.sourceRoot,t)),!this._sources.has(t))return{line:null,column:null,lastColumn:null};var n={source:t=this._sources.indexOf(t),originalLine:i.getArg(e,"line"),originalColumn:i.getArg(e,"column")},r=this._findMapping(n,this._originalMappings,"originalLine","originalColumn",i.compareByOriginalPositions,i.getArg(e,"bias",c.GREATEST_LOWER_BOUND));if(r>=0){var o=this._originalMappings[r];if(o.source===n.source)return{line:i.getArg(o,"generatedLine",null),column:i.getArg(o,"generatedColumn",null),lastColumn:i.getArg(o,"lastGeneratedColumn",null)}}return{line:null,column:null,lastColumn:null}},t.BasicSourceMapConsumer=u,p.prototype=Object.create(c.prototype),p.prototype.constructor=c,p.prototype._version=3,Object.defineProperty(p.prototype,"sources",{get:function(){for(var e=[],t=0;t<this._sections.length;t++)for(var n=0;n<this._sections[t].consumer.sources.length;n++)e.push(this._sections[t].consumer.sources[n]);return e}}),p.prototype.originalPositionFor=function(e){var t={generatedLine:i.getArg(e,"line"),generatedColumn:i.getArg(e,"column")},n=r.search(t,this._sections,(function(e,t){var n=e.generatedLine-t.generatedOffset.generatedLine;return n||e.generatedColumn-t.generatedOffset.generatedColumn})),o=this._sections[n];return o?o.consumer.originalPositionFor({line:t.generatedLine-(o.generatedOffset.generatedLine-1),column:t.generatedColumn-(o.generatedOffset.generatedLine===t.generatedLine?o.generatedOffset.generatedColumn-1:0),bias:e.bias}):{source:null,line:null,column:null,name:null}},p.prototype.hasContentsOfAllSources=function(){return this._sections.every((function(e){return e.consumer.hasContentsOfAllSources()}))},p.prototype.sourceContentFor=function(e,t){for(var n=0;n<this._sections.length;n++){var i=this._sections[n].consumer.sourceContentFor(e,!0);if(i)return i}if(t)return null;throw new Error('"'+e+'" is not in the SourceMap.')},p.prototype.generatedPositionFor=function(e){for(var t=0;t<this._sections.length;t++){var n=this._sections[t];if(-1!==n.consumer.sources.indexOf(i.getArg(e,"source"))){var r=n.consumer.generatedPositionFor(e);if(r)return{line:r.line+(n.generatedOffset.generatedLine-1),column:r.column+(n.generatedOffset.generatedLine===r.line?n.generatedOffset.generatedColumn-1:0)}}}return{line:null,column:null}},p.prototype._parseMappings=function(e,t){this.__generatedMappings=[],this.__originalMappings=[];for(var n=0;n<this._sections.length;n++)for(var r=this._sections[n],o=r.consumer._generatedMappings,s=0;s<o.length;s++){var c=o[s],u=r.consumer._sources.at(c.source);null!==r.consumer.sourceRoot&&(u=i.join(r.consumer.sourceRoot,u)),this._sources.add(u),u=this._sources.indexOf(u);var l=r.consumer._names.at(c.name);this._names.add(l),l=this._names.indexOf(l);var p={source:u,generatedLine:c.generatedLine+(r.generatedOffset.generatedLine-1),generatedColumn:c.generatedColumn+(r.generatedOffset.generatedLine===c.generatedLine?r.generatedOffset.generatedColumn-1:0),originalLine:c.originalLine,originalColumn:c.originalColumn,name:l};this.__generatedMappings.push(p),"number"==typeof p.originalLine&&this.__originalMappings.push(p)}a(this.__generatedMappings,i.compareByGeneratedPositionsDeflated),a(this.__originalMappings,i.compareByOriginalPositions)},t.IndexedSourceMapConsumer=p},function(e,t){t.GREATEST_LOWER_BOUND=1,t.LEAST_UPPER_BOUND=2,t.search=function(e,n,i,r){if(0===n.length)return-1;var o=function e(n,i,r,o,s,a){var c=Math.floor((i-n)/2)+n,u=s(r,o[c],!0);return 0===u?c:u>0?i-c>1?e(c,i,r,o,s,a):a==t.LEAST_UPPER_BOUND?i<o.length?i:-1:c:c-n>1?e(n,c,r,o,s,a):a==t.LEAST_UPPER_BOUND?c:n<0?-1:n}(-1,n.length,e,n,i,r||t.GREATEST_LOWER_BOUND);if(o<0)return-1;for(;o-1>=0&&0===i(n[o],n[o-1],!0);)--o;return o}},function(e,t){function n(e,t,n){var i=e[t];e[t]=e[n],e[n]=i}function i(e,t,r,o){if(r<o){var s=r-1;n(e,(l=r,p=o,Math.round(l+Math.random()*(p-l))),o);for(var a=e[o],c=r;c<o;c++)t(e[c],a)<=0&&n(e,s+=1,c);n(e,s+1,c);var u=s+1;i(e,t,r,u-1),i(e,t,u+1,o)}var l,p}t.quickSort=function(e,t){i(e,t,0,e.length-1)}},function(e,t,n){var i=n(71).SourceMapGenerator,r=n(27),o=/(\r?\n)/,s="$$$isSourceNode$$$";function a(e,t,n,i,r){this.children=[],this.sourceContents={},this.line=null==e?null:e,this.column=null==t?null:t,this.source=null==n?null:n,this.name=null==r?null:r,this[s]=!0,null!=i&&this.add(i)}a.fromStringWithSourceMap=function(e,t,n){var i=new a,s=e.split(o),c=0,u=function(){return e()+(e()||"");function e(){return c<s.length?s[c++]:void 0}},l=1,p=0,d=null;return t.eachMapping((function(e){if(null!==d){if(!(l<e.generatedLine)){var t=(n=s[c]).substr(0,e.generatedColumn-p);return s[c]=n.substr(e.generatedColumn-p),p=e.generatedColumn,h(d,t),void(d=e)}h(d,u()),l++,p=0}for(;l<e.generatedLine;)i.add(u()),l++;if(p<e.generatedColumn){var n=s[c];i.add(n.substr(0,e.generatedColumn)),s[c]=n.substr(e.generatedColumn),p=e.generatedColumn}d=e}),this),c<s.length&&(d&&h(d,u()),i.add(s.splice(c).join(""))),t.sources.forEach((function(e){var o=t.sourceContentFor(e);null!=o&&(null!=n&&(e=r.join(n,e)),i.setSourceContent(e,o))})),i;function h(e,t){if(null===e||void 0===e.source)i.add(t);else{var o=n?r.join(n,e.source):e.source;i.add(new a(e.originalLine,e.originalColumn,o,t,e.name))}}},a.prototype.add=function(e){if(Array.isArray(e))e.forEach((function(e){this.add(e)}),this);else{if(!e[s]&&"string"!=typeof e)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+e);e&&this.children.push(e)}return this},a.prototype.prepend=function(e){if(Array.isArray(e))for(var t=e.length-1;t>=0;t--)this.prepend(e[t]);else{if(!e[s]&&"string"!=typeof e)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+e);this.children.unshift(e)}return this},a.prototype.walk=function(e){for(var t,n=0,i=this.children.length;n<i;n++)(t=this.children[n])[s]?t.walk(e):""!==t&&e(t,{source:this.source,line:this.line,column:this.column,name:this.name})},a.prototype.join=function(e){var t,n,i=this.children.length;if(i>0){for(t=[],n=0;n<i-1;n++)t.push(this.children[n]),t.push(e);t.push(this.children[n]),this.children=t}return this},a.prototype.replaceRight=function(e,t){var n=this.children[this.children.length-1];return n[s]?n.replaceRight(e,t):"string"==typeof n?this.children[this.children.length-1]=n.replace(e,t):this.children.push("".replace(e,t)),this},a.prototype.setSourceContent=function(e,t){this.sourceContents[r.toSetString(e)]=t},a.prototype.walkSourceContents=function(e){for(var t=0,n=this.children.length;t<n;t++)this.children[t][s]&&this.children[t].walkSourceContents(e);var i=Object.keys(this.sourceContents);for(t=0,n=i.length;t<n;t++)e(r.fromSetString(i[t]),this.sourceContents[i[t]])},a.prototype.toString=function(){var e="";return this.walk((function(t){e+=t})),e},a.prototype.toStringWithSourceMap=function(e){var t={code:"",line:1,column:0},n=new i(e),r=!1,o=null,s=null,a=null,c=null;return this.walk((function(e,i){t.code+=e,null!==i.source&&null!==i.line&&null!==i.column?(o===i.source&&s===i.line&&a===i.column&&c===i.name||n.addMapping({source:i.source,original:{line:i.line,column:i.column},generated:{line:t.line,column:t.column},name:i.name}),o=i.source,s=i.line,a=i.column,c=i.name,r=!0):r&&(n.addMapping({generated:{line:t.line,column:t.column}}),o=null,r=!1);for(var u=0,l=e.length;u<l;u++)10===e.charCodeAt(u)?(t.line++,t.column=0,u+1===l?(o=null,r=!1):r&&n.addMapping({source:i.source,original:{line:i.line,column:i.column},generated:{line:t.line,column:t.column},name:i.name})):t.column++})),this.walkSourceContents((function(e,t){n.setSourceContent(e,t)})),{code:t.code,map:n}},t.SourceNode=a},function(e,t){var n=Object.prototype.toString,i="function"==typeof Buffer.alloc&&"function"==typeof Buffer.allocUnsafe&&"function"==typeof Buffer.from;e.exports=function(e,t,r){if("number"==typeof e)throw new TypeError('"value" argument must not be a number');return o=e,"ArrayBuffer"===n.call(o).slice(8,-1)?function(e,t,n){t>>>=0;var r=e.byteLength-t;if(r<0)throw new RangeError("'offset' is out of bounds");if(void 0===n)n=r;else if((n>>>=0)>r)throw new RangeError("'length' is out of bounds");return i?Buffer.from(e.slice(t,t+n)):new Buffer(new Uint8Array(e.slice(t,t+n)))}(e,t,r):"string"==typeof e?function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!Buffer.isEncoding(t))throw new TypeError('"encoding" must be a valid string encoding');return i?Buffer.from(e,t):new Buffer(e,t)}(e,t):i?Buffer.from(e):new Buffer(e);var o}},function(e,t,n){const i=n(154);function r(e){if(!i.existy(e))return null;if(i.not.string(e))throw new TypeError(`Expected a string, got "${typeof e}"`);return e.split(",").map(e=>{const t=e.trim();if(t.includes(":")){const e=t.split(":");if(2===e.length)return e[0]}return t}).find(i.ip)}function o(e){if(e.headers){if(i.ip(e.headers["x-client-ip"]))return e.headers["x-client-ip"];const t=r(e.headers["x-forwarded-for"]);if(i.ip(t))return t;if(i.ip(e.headers["cf-connecting-ip"]))return e.headers["cf-connecting-ip"];if(i.ip(e.headers["true-client-ip"]))return e.headers["true-client-ip"];if(i.ip(e.headers["x-real-ip"]))return e.headers["x-real-ip"];if(i.ip(e.headers["x-cluster-client-ip"]))return e.headers["x-cluster-client-ip"];if(i.ip(e.headers["x-forwarded"]))return e.headers["x-forwarded"];if(i.ip(e.headers["forwarded-for"]))return e.headers["forwarded-for"];if(i.ip(e.headers.forwarded))return e.headers.forwarded}if(i.existy(e.connection)){if(i.ip(e.connection.remoteAddress))return e.connection.remoteAddress;if(i.existy(e.connection.socket)&&i.ip(e.connection.socket.remoteAddress))return e.connection.socket.remoteAddress}return i.existy(e.socket)&&i.ip(e.socket.remoteAddress)?e.socket.remoteAddress:i.existy(e.info)&&i.ip(e.info.remoteAddress)?e.info.remoteAddress:null}e.exports={getClientIpFromXForwardedFor:r,getClientIp:o,mw:function(e){const t=i.not.existy(e)?{}:e;if(i.not.object(t))throw new TypeError("Options must be an object!");const n=t.attributeName||"clientIp";return(e,t,i)=>{e[n]=o(e),i()}}}},function(e,t,n){var i,r;
/*!
 * is.js 0.8.0
 * Author: Aras Atasaygin
 */r=this,void 0===(i=function(){return r.is=function(){var e={VERSION:"0.8.0",not:{},all:{},any:{}},t=Object.prototype.toString,n=Array.prototype.slice,i=Object.prototype.hasOwnProperty;function r(e){return function(){return!e.apply(null,n.call(arguments))}}function o(e){return function(){for(var t=u(arguments),n=t.length,i=0;i<n;i++)if(!e.call(null,t[i]))return!1;return!0}}function s(e){return function(){for(var t=u(arguments),n=t.length,i=0;i<n;i++)if(e.call(null,t[i]))return!0;return!1}}var a={"<":function(e,t){return e<t},"<=":function(e,t){return e<=t},">":function(e,t){return e>t},">=":function(e,t){return e>=t}};function c(e,t){var n=t+"",i=+(n.match(/\d+/)||NaN),r=n.match(/^[<>]=?|/)[0];return a[r]?a[r](e,i):e==i||i!=i}function u(t){var i=n.call(t);return 1===i.length&&e.array(i[0])&&(i=i[0]),i}e.arguments=function(e){return"[object Arguments]"===t.call(e)||null!=e&&"object"==typeof e&&"callee"in e},e.array=Array.isArray||function(e){return"[object Array]"===t.call(e)},e.boolean=function(e){return!0===e||!1===e||"[object Boolean]"===t.call(e)},e.char=function(t){return e.string(t)&&1===t.length},e.date=function(e){return"[object Date]"===t.call(e)},e.domNode=function(t){return e.object(t)&&t.nodeType>0},e.error=function(e){return"[object Error]"===t.call(e)},e.function=function(e){return"[object Function]"===t.call(e)||"function"==typeof e},e.json=function(e){return"[object Object]"===t.call(e)},e.nan=function(e){return e!=e},e.null=function(e){return null===e},e.number=function(n){return e.not.nan(n)&&"[object Number]"===t.call(n)},e.object=function(e){return Object(e)===e},e.regexp=function(e){return"[object RegExp]"===t.call(e)},e.sameType=function(n,i){var r=t.call(n);return r===t.call(i)&&("[object Number]"!==r||!e.any.nan(n,i)||e.all.nan(n,i))},e.sameType.api=["not"],e.string=function(e){return"[object String]"===t.call(e)},e.undefined=function(e){return void 0===e},e.windowObject=function(e){return null!=e&&"object"==typeof e&&"setInterval"in e},e.empty=function(t){if(e.object(t)){var n=Object.getOwnPropertyNames(t).length;return!!(0===n||1===n&&e.array(t)||2===n&&e.arguments(t))}return""===t},e.existy=function(e){return null!=e},e.falsy=function(e){return!e},e.truthy=r(e.falsy),e.above=function(t,n){return e.all.number(t,n)&&t>n},e.above.api=["not"],e.decimal=function(t){return e.number(t)&&t%1!=0},e.equal=function(t,n){return e.all.number(t,n)?t===n&&1/t==1/n:e.all.string(t,n)||e.all.regexp(t,n)?""+t==""+n:!!e.all.boolean(t,n)&&t===n},e.equal.api=["not"],e.even=function(t){return e.number(t)&&t%2==0},e.finite=isFinite||function(t){return e.not.infinite(t)&&e.not.nan(t)},e.infinite=function(e){return e===1/0||e===-1/0},e.integer=function(t){return e.number(t)&&t%1==0},e.negative=function(t){return e.number(t)&&t<0},e.odd=function(t){return e.number(t)&&t%2==1},e.positive=function(t){return e.number(t)&&t>0},e.under=function(t,n){return e.all.number(t,n)&&t<n},e.under.api=["not"],e.within=function(t,n,i){return e.all.number(t,n,i)&&t>n&&t<i},e.within.api=["not"];var l={affirmative:/^(?:1|t(?:rue)?|y(?:es)?|ok(?:ay)?)$/,alphaNumeric:/^[A-Za-z0-9]+$/,caPostalCode:/^(?!.*[DFIOQU])[A-VXY][0-9][A-Z]\s?[0-9][A-Z][0-9]$/,creditCard:/^(?:(4[0-9]{12}(?:[0-9]{3})?)|(5[1-5][0-9]{14})|(6(?:011|5[0-9]{2})[0-9]{12})|(3[47][0-9]{13})|(3(?:0[0-5]|[68][0-9])[0-9]{11})|((?:2131|1800|35[0-9]{3})[0-9]{11}))$/,dateString:/^(1[0-2]|0?[1-9])([\/-])(3[01]|[12][0-9]|0?[1-9])(?:\2)(?:[0-9]{2})?[0-9]{2}$/,email:/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i,eppPhone:/^\+[0-9]{1,3}\.[0-9]{4,14}(?:x.+)?$/,hexadecimal:/^(?:0x)?[0-9a-fA-F]+$/,hexColor:/^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$/,ipv4:/^(?:(?:\d|[1-9]\d|1\d{2}|2[0-4]\d|25[0-5])\.){3}(?:\d|[1-9]\d|1\d{2}|2[0-4]\d|25[0-5])$/,ipv6:/^((?=.*::)(?!.*::.+::)(::)?([\dA-F]{1,4}:(:|\b)|){5}|([\dA-F]{1,4}:){6})((([\dA-F]{1,4}((?!\3)::|:\b|$))|(?!\2\3)){2}|(((2[0-4]|1\d|[1-9])?\d|25[0-5])\.?\b){4})$/i,nanpPhone:/^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/,socialSecurityNumber:/^(?!000|666)[0-8][0-9]{2}-?(?!00)[0-9]{2}-?(?!0000)[0-9]{4}$/,timeString:/^(2[0-3]|[01]?[0-9]):([0-5]?[0-9]):([0-5]?[0-9])$/,ukPostCode:/^[A-Z]{1,2}[0-9RCHNQ][0-9A-Z]?\s?[0-9][ABD-HJLNP-UW-Z]{2}$|^[A-Z]{2}-?[0-9]{4}$/,url:/^(?:(?:https?|ftp):\/\/)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/\S*)?$/i,usZipCode:/^[0-9]{5}(?:-[0-9]{4})?$/};function p(t,n){e[t]=function(e){return n[t].test(e)}}for(var d in l)l.hasOwnProperty(d)&&p(d,l);e.ip=function(t){return e.ipv4(t)||e.ipv6(t)},e.capitalized=function(t){if(e.not.string(t))return!1;for(var n=t.split(" "),i=0;i<n.length;i++){var r=n[i];if(r.length){var o=r.charAt(0);if(o!==o.toUpperCase())return!1}}return!0},e.endWith=function(t,n){if(e.not.string(t))return!1;n+="";var i=t.length-n.length;return i>=0&&t.indexOf(n,i)===i},e.endWith.api=["not"],e.include=function(e,t){return e.indexOf(t)>-1},e.include.api=["not"],e.lowerCase=function(t){return e.string(t)&&t===t.toLowerCase()},e.palindrome=function(t){if(e.not.string(t))return!1;for(var n=(t=t.replace(/[^a-zA-Z0-9]+/g,"").toLowerCase()).length-1,i=0,r=Math.floor(n/2);i<=r;i++)if(t.charAt(i)!==t.charAt(n-i))return!1;return!0},e.space=function(t){if(e.not.char(t))return!1;var n=t.charCodeAt(0);return n>8&&n<14||32===n},e.startWith=function(t,n){return e.string(t)&&0===t.indexOf(n)},e.startWith.api=["not"],e.upperCase=function(t){return e.string(t)&&t===t.toUpperCase()};var h=["sunday","monday","tuesday","wednesday","thursday","friday","saturday"],f=["january","february","march","april","may","june","july","august","september","october","november","december"];e.day=function(t,n){return e.date(t)&&n.toLowerCase()===h[t.getDay()]},e.day.api=["not"],e.dayLightSavingTime=function(e){var t=new Date(e.getFullYear(),0,1),n=new Date(e.getFullYear(),6,1),i=Math.max(t.getTimezoneOffset(),n.getTimezoneOffset());return e.getTimezoneOffset()<i},e.future=function(t){var n=new Date;return e.date(t)&&t.getTime()>n.getTime()},e.inDateRange=function(t,n,i){if(e.not.date(t)||e.not.date(n)||e.not.date(i))return!1;var r=t.getTime();return r>n.getTime()&&r<i.getTime()},e.inDateRange.api=["not"],e.inLastMonth=function(t){return e.inDateRange(t,new Date((new Date).setMonth((new Date).getMonth()-1)),new Date)},e.inLastWeek=function(t){return e.inDateRange(t,new Date((new Date).setDate((new Date).getDate()-7)),new Date)},e.inLastYear=function(t){return e.inDateRange(t,new Date((new Date).setFullYear((new Date).getFullYear()-1)),new Date)},e.inNextMonth=function(t){return e.inDateRange(t,new Date,new Date((new Date).setMonth((new Date).getMonth()+1)))},e.inNextWeek=function(t){return e.inDateRange(t,new Date,new Date((new Date).setDate((new Date).getDate()+7)))},e.inNextYear=function(t){return e.inDateRange(t,new Date,new Date((new Date).setFullYear((new Date).getFullYear()+1)))},e.leapYear=function(t){return e.number(t)&&(t%4==0&&t%100!=0||t%400==0)},e.month=function(t,n){return e.date(t)&&n.toLowerCase()===f[t.getMonth()]},e.month.api=["not"],e.past=function(t){var n=new Date;return e.date(t)&&t.getTime()<n.getTime()},e.quarterOfYear=function(t,n){return e.date(t)&&e.number(n)&&n===Math.floor((t.getMonth()+3)/3)},e.quarterOfYear.api=["not"],e.today=function(t){var n=(new Date).toDateString();return e.date(t)&&t.toDateString()===n},e.tomorrow=function(t){var n=new Date,i=new Date(n.setDate(n.getDate()+1)).toDateString();return e.date(t)&&t.toDateString()===i},e.weekend=function(t){return e.date(t)&&(6===t.getDay()||0===t.getDay())},e.weekday=r(e.weekend),e.year=function(t,n){return e.date(t)&&e.number(n)&&n===t.getFullYear()},e.year.api=["not"],e.yesterday=function(t){var n=new Date,i=new Date(n.setDate(n.getDate()-1)).toDateString();return e.date(t)&&t.toDateString()===i};var m=e.windowObject("object"==typeof global&&global)&&global,g=e.windowObject("object"==typeof self&&self)&&self,v=e.windowObject("object"==typeof this&&this)&&this,x=m||g||v||Function("return this")(),b=g&&g.document,y=x.is,w=g&&g.navigator,k=(w&&w.appVersion||"").toLowerCase(),E=(w&&w.userAgent||"").toLowerCase(),_=(w&&w.vendor||"").toLowerCase();return e.android=function(){return/android/.test(E)},e.android.api=["not"],e.androidPhone=function(){return/android/.test(E)&&/mobile/.test(E)},e.androidPhone.api=["not"],e.androidTablet=function(){return/android/.test(E)&&!/mobile/.test(E)},e.androidTablet.api=["not"],e.blackberry=function(){return/blackberry/.test(E)||/bb10/.test(E)},e.blackberry.api=["not"],e.chrome=function(e){var t=/google inc/.test(_)?E.match(/(?:chrome|crios)\/(\d+)/):null;return null!==t&&c(t[1],e)},e.chrome.api=["not"],e.desktop=function(){return e.not.mobile()&&e.not.tablet()},e.desktop.api=["not"],e.edge=function(e){var t=E.match(/edge\/(\d+)/);return null!==t&&c(t[1],e)},e.edge.api=["not"],e.firefox=function(e){var t=E.match(/(?:firefox|fxios)\/(\d+)/);return null!==t&&c(t[1],e)},e.firefox.api=["not"],e.ie=function(e){var t=E.match(/(?:msie |trident.+?; rv:)(\d+)/);return null!==t&&c(t[1],e)},e.ie.api=["not"],e.ios=function(){return e.iphone()||e.ipad()||e.ipod()},e.ios.api=["not"],e.ipad=function(e){var t=E.match(/ipad.+?os (\d+)/);return null!==t&&c(t[1],e)},e.ipad.api=["not"],e.iphone=function(e){var t=E.match(/iphone(?:.+?os (\d+))?/);return null!==t&&c(t[1]||1,e)},e.iphone.api=["not"],e.ipod=function(e){var t=E.match(/ipod.+?os (\d+)/);return null!==t&&c(t[1],e)},e.ipod.api=["not"],e.linux=function(){return/linux/.test(k)},e.linux.api=["not"],e.mac=function(){return/mac/.test(k)},e.mac.api=["not"],e.mobile=function(){return e.iphone()||e.ipod()||e.androidPhone()||e.blackberry()||e.windowsPhone()},e.mobile.api=["not"],e.offline=r(e.online),e.offline.api=["not"],e.online=function(){return!w||!0===w.onLine},e.online.api=["not"],e.opera=function(e){var t=E.match(/(?:^opera.+?version|opr)\/(\d+)/);return null!==t&&c(t[1],e)},e.opera.api=["not"],e.phantom=function(e){var t=E.match(/phantomjs\/(\d+)/);return null!==t&&c(t[1],e)},e.phantom.api=["not"],e.safari=function(e){var t=E.match(/version\/(\d+).+?safari/);return null!==t&&c(t[1],e)},e.safari.api=["not"],e.tablet=function(){return e.ipad()||e.androidTablet()||e.windowsTablet()},e.tablet.api=["not"],e.touchDevice=function(){return!!b&&("ontouchstart"in g||"DocumentTouch"in g&&b instanceof DocumentTouch)},e.touchDevice.api=["not"],e.windows=function(){return/win/.test(k)},e.windows.api=["not"],e.windowsPhone=function(){return e.windows()&&/phone/.test(E)},e.windowsPhone.api=["not"],e.windowsTablet=function(){return e.windows()&&e.not.windowsPhone()&&/touch/.test(E)},e.windowsTablet.api=["not"],e.propertyCount=function(t,n){if(e.not.object(t)||e.not.number(n))return!1;var r=0;for(var o in t)if(i.call(t,o)&&++r>n)return!1;return r===n},e.propertyCount.api=["not"],e.propertyDefined=function(t,n){return e.object(t)&&e.string(n)&&n in t},e.propertyDefined.api=["not"],e.inArray=function(t,n){if(e.not.array(n))return!1;for(var i=0;i<n.length;i++)if(n[i]===t)return!0;return!1},e.inArray.api=["not"],e.sorted=function(t,n){if(e.not.array(t))return!1;for(var i=a[n]||a[">="],r=1;r<t.length;r++)if(!i(t[r],t[r-1]))return!1;return!0},function(){var t=e;for(var n in t)if(i.call(t,n)&&e.function(t[n]))for(var a=t[n].api||["not","all","any"],c=0;c<a.length;c++)"not"===a[c]&&(e.not[n]=r(e[n])),"all"===a[c]&&(e.all[n]=o(e[n])),"any"===a[c]&&(e.any[n]=s(e[n]))}(),e.setNamespace=function(){return x.is=y,this},e.setRegexp=function(e,t){for(var n in l)i.call(l,n)&&t===n&&(l[n]=e)},e}()}.call(t,n,t,e))||(e.exports=i)},function(e,t,n){var i=n(9);e.exports={itemToPayload:function(e,t,n){var r=t.payload||{};r.body&&delete r.body;var o=i.merge(e.data,r);e._isUncaught&&(o._isUncaught=!0),e._originalArgs&&(o._originalArgs=e._originalArgs),n(null,o)},addTelemetryData:function(e,t,n){e.telemetryEvents&&i.set(e,"data.body.telemetry",e.telemetryEvents),n(null,e)},addMessageWithError:function(e,t,n){if(e.message){var r="data.body.trace_chain.0",o=i.get(e,r);if(o||(r="data.body.trace",o=i.get(e,r)),o){if(!o.exception||!o.exception.description)return i.set(e,r+".exception.description",e.message),void n(null,e);var s=i.get(e,r+".extra")||{},a=i.merge(s,{message:e.message});i.set(e,r+".extra",a)}n(null,e)}else n(null,e)},userTransform:function(e){return function(t,n,r){var o=i.merge(t);try{i.isFunction(n.transform)&&n.transform(o.data,t)}catch(i){return n.transform=null,e.error("Error while calling custom transform() function. Removing custom transform().",i),void r(null,t)}r(null,o)}},addConfigToPayload:function(e,t,n){if(!t.sendConfig)return n(null,e);var r=i.get(e,"data.custom")||{};r._rollbarConfig=t,e.data.custom=r,n(null,e)},addConfiguredOptions:function(e,t,n){delete t._configuredOptions.accessToken,e.data.notifier.configured_options=t._configuredOptions,n(null,e)},addDiagnosticKeys:function(e,t,n){var r=i.merge(e.notifier.client.notifier.diagnostic,e.diagnostic);if(i.get(e,"err._isAnonymous")&&(r.is_anonymous=!0),e.err)try{r.raw_error={message:e.err.message,name:e.err.name,constructor_name:e.err.constructor&&e.err.constructor.name,filename:e.err.fileName,line:e.err.lineNumber,column:e.err.columnNumber,stack:e.err.stack}}catch(e){r.raw_error={failed:String(e)}}e.data.notifier.diagnostic=i.merge(e.data.notifier.diagnostic,r),n(null,e)}}},function(e,t,n){var i=n(9);function r(e,t,n){if(!e)return!n;var r,o,s=e.frames;if(!s||0===s.length)return!n;for(var a=t.length,c=s.length,u=0;u<c;u++){if(r=s[u].filename,!i.isType(r,"string"))return!n;for(var l=0;l<a;l++)if(o=t[l],new RegExp(o).test(r))return!0}return!1}function o(e,t,n,o){var s,a,c=!1;"blacklist"===n&&(c=!0);try{if(s=c?t.hostBlackList:t.hostWhiteList,a=i.get(e,"body.trace_chain")||[i.get(e,"body.trace")],!s||0===s.length)return!c;if(0===a.length||!a[0])return!c;for(var u=a.length,l=0;l<u;l++)if(r(a[l],s,c))return!0}catch(e){c?t.hostBlackList=null:t.hostWhiteList=null;var p=c?"hostBlackList":"hostWhiteList";return o.error("Error while reading your configuration's "+p+" option. Removing custom "+p+".",e),!c}return!1}e.exports={checkLevel:function(e,t){var n=e.level,r=i.LEVELS[n]||0,o=t.reportLevel;return!(r<(i.LEVELS[o]||0))},userCheckIgnore:function(e){return function(t,n){var r=!!t._isUncaught;delete t._isUncaught;var o=t._originalArgs;delete t._originalArgs;try{i.isFunction(n.onSendCallback)&&n.onSendCallback(r,o,t)}catch(t){n.onSendCallback=null,e.error("Error while calling onSendCallback, removing",t)}try{if(i.isFunction(n.checkIgnore)&&n.checkIgnore(r,o,t))return!1}catch(t){n.checkIgnore=null,e.error("Error while calling custom checkIgnore(), removing",t)}return!0}},urlIsNotBlacklisted:function(e){return function(t,n){return!o(t,n,"blacklist",e)}},urlIsWhitelisted:function(e){return function(t,n){return o(t,n,"whitelist",e)}},messageIsIgnored:function(e){return function(t,n){var r,o,s,a,c,u,l,p;try{if(c=!1,!(s=n.ignoredMessages)||0===s.length)return!0;if(u=t.body,l=i.get(u,"trace.exception.message"),p=i.get(u,"message.body"),!(r=l||p))return!0;for(a=s.length,o=0;o<a&&!(c=new RegExp(s[o],"gi").test(r));o++);}catch(t){n.ignoredMessages=null,e.error("Error while reading your configuration's ignoredMessages option. Removing custom ignoredMessages.")}return!c}}}},function(e,t,n){"use strict";const i=n(7);e.exports=class extends i{start(e,t){return new Promise((e,n)=>{t.on("did-pick-install",()=>e()),t.on("did-skip-install",()=>t.destroy())})}}},function(e,t,n){"use strict";const{parseSetCookies:i,findCookie:r}=n(6),o=n(34),s=n(7);e.exports=class extends s{start({account:{email:e}}={},t){return this.install=t,new Promise((n,i)=>{this.subscriptions.add(t.on("did-submit-credentials",({email:e,password:t})=>n(this.onSubmit({email:e,password:t})))),this.subscriptions.add(t.on("did-click-back",()=>{n({step:this.options.backStep,data:{error:null}})})),this.subscriptions.add(t.on("did-forgot-password",()=>{o.resetPassword({email:e}).then(n=>{200===n.statusCode&&t.emit("did-reset-password",e)})}))})}onSubmit(e){return this.install.updateState({error:null,account:e}),o.login(e).then(e=>({account:{sessionId:r(i(e.headers["set-cookie"]),"kite-session").Value}}))}}},function(e,t,n){"use strict";const i=n(7),{deepMerge:r}=n(6);e.exports=class extends i{constructor(e,t){super(t),this.steps=e}start(e,t){return Promise.all(this.steps.map(n=>n.start(e,t))).then(e=>e.reduce((e,t)=>t?r(e,t):e))}getView(){return this.view||this.steps.map(e=>e.view).filter(e=>e)[0]}}},function(e,t,n){"use strict";const i=n(7);e.exports=class extends i{start(e){return Promise.resolve(e)}}},function(e,t,n){"use strict";const i=n(7);e.exports=class extends i{constructor(e,t){super(e),this.action=t}start(){return this.action&&this.action(),new Promise(()=>{})}}},function(e,t,n){"use strict";const{CompositeDisposable:i}=n(0),r=n(3),o=n(67),{logo:s}=n(28),a=n(20);class c extends HTMLElement{static initClass(){const e=document.registerElement("kite-atom-install",{prototype:this.prototype});return atom.themes.requireStylesheet(r.resolve(__dirname,"..","..","..","styles","install.less")),atom.views.addViewProvider(o,t=>{const n=new e;return n.setModel(t),n}),e}createdCallback(){this.classList.add("native-key-bindings"),this.innerHTML=`\n    <div class="install-wrapper">\n      <div class="logo">${s}</div>\n\n      <div class="progress-indicators">\n        <div class="download-kite invisible">\n          <progress max='100' class="inline-block"></progress>\n          <span class="inline-block">Downloading Kite</span>\n        </div>\n        <div class="install-kite hidden">\n          <span class='loading loading-spinner-tiny inline-block'></span>\n          <span class="inline-block">Installing Kite</span>\n        </div>\n        <div class="run-kite hidden">\n          <span class='loading loading-spinner-tiny inline-block'></span>\n          <span class="inline-block">Starting Kite</span>\n        </div>\n        <div class="authenticate-user hidden">\n          <span class='loading loading-spinner-tiny inline-block'></span>\n          <span class="inline-block">Authenticating your account</span>\n        </div>\n        <div class="install-plugin hidden">\n          <span class='loading loading-spinner-tiny inline-block'></span>\n          <span class="inline-block">Installing the Kite plugin</span>\n        </div>\n      </div>\n\n      <div class="content"></div>\n    </div>`,this.logo=this.querySelector(".logo"),this.content=this.querySelector(".content"),this.progress=this.querySelector("progress"),this.downloadKite=this.querySelector(".download-kite"),this.installKite=this.querySelector(".install-kite"),this.runKite=this.querySelector(".run-kite"),this.authenticateUser=this.querySelector(".authenticate-user"),this.installPlugin=this.querySelector(".install-plugin"),this.indicators=this.querySelector(".progress-indicators")}detachedCallback(){this.subscriptions&&this.subscriptions.dispose(),delete this.install,delete this.subscriptions}setModel(e){this.subscriptions=new i,this.install=e,this.subscriptions.add(this.install.onDidChangeCurrentStep(()=>{this.updateView()})),this.subscriptions.add(this.install.observeState(e=>{void 0!==e.kiteLogoVisible&&this.logo.classList.toggle("hidden",!e.kiteLogoVisible),e.download&&(e.download.done?this.downloadKite.classList.add("hidden"):this.downloadKite.classList.remove("invisible"),e.download.ratio&&(this.progress.value=Math.round(100*e.download.ratio))),e.install&&this.installKite.classList.toggle("hidden",e.install.done),e.running&&this.runKite.classList.toggle("hidden",e.running.done),e.authenticate&&this.authenticateUser.classList.toggle("hidden",e.authenticate.done),e.plugin&&this.installPlugin.classList.toggle("hidden",e.plugin.done)})),this.subscriptions.add(this.install.on("encountered-fatal-error",()=>{this.indicators.classList.add("hidden")}))}getModel(){return this.install}updateView(){this.currentView&&this.currentView.release();const e=this.install.getCurrentStepView();e&&(this.content.children.length&&[].slice.call(this.content.children).forEach(e=>this.content.removeChild(e)),this.content.appendChild(e),e.init(this.install),this.currentView=e,this.currentView.name&&a.Tracker.trackEvent(this.currentView.name+"_shown",this.install.state.error?{error:this.install.state.error.message}:{}))}}e.exports=c.initClass()},function(e,t,n){"use strict";const{CompositeDisposable:i}=n(0),{addDisposableEventListener:r}=n(21);class o extends HTMLElement{constructor(e){super(),this.name=e,this.innerHTML='\n    <div>\n      <p>Great! Create an account with your email address.</p>\n    </div>\n    <form novalidate>\n      <input class="input-text" name="email" type="email"></input>\n      <button class="btn btn-primary btn-block">Continue</button>\n      <div class="status hidden"></div>\n    </form>\n    <center>\n      <div class="dismiss secondary-actions">\n        <a class="skip-email">Continue without email</a>\n      </div>\n    </center>\n\n    ',this.form=this.querySelector("form"),this.input=this.querySelector("input"),this.submit=this.querySelector("button"),this.status=this.querySelector(".status"),this.skipButton=this.querySelector("a.skip-email")}get data(){return{email:this.input.value}}release(){this.subscriptions&&this.subscriptions.dispose(),delete this.install,delete this.subscriptions}init(e){this.subscriptions=new i,this.install=e,this.classList.remove("disabled"),this.subscriptions.add(e.observeState(e=>this.onStateChange(e))),this.subscriptions.add(r(this.form,"submit",()=>{this.hideError(),this.classList.add("disabled"),this.install.emit("did-submit-email",this.data)})),this.subscriptions.add(r(this.skipButton,"click",()=>{this.install.emit("did-skip-email",{skipped:!0})}))}onStateChange(e){this.input.value=e.account.email||"",e.error?(console.log(e.error),this.status.textContent=e.error.message,this.status.classList.remove("hidden")):this.hideError()}hideError(){this.status.textContent="",this.status.classList.add("hidden")}}customElements.define("kite-atom-input-email",o),e.exports=o},function(e,t,n){"use strict";const{screenshot:i}=n(28);class r extends HTMLElement{constructor(e){super(),this.name=e,this.innerHTML=`\n    <div class="welcome-to-kite">\n      <div class="description">\n        <div class="content">\n          <p>Kite comes with a native desktop app called the Copilot which provides you with real time documentation as you code.</p>\n          <p>When Kite for Atom is done installing, the Copilot will launch automatically and take you through the rest of the setup process.</p>\n        </div>\n        <div class="description-screenshot"><img src="${i}"></div>\n      </div>\n      <p class="feedback">Send us feedback at <a href="mailto:feedback@kite.com">feedback@kite.com</a></p>\n    </div>\n    `}init(e){this.install=e,this.install.emit("did-skip-whitelist")}release(){}}customElements.define("kite-atom-install-wait",r),e.exports=r},function(e,t,n){"use strict";const{logoSmall:i,screenshot:r}=n(28);class o extends HTMLElement{constructor(e){super(),this.name=e,this.innerHTML=`\n    <div class="welcome-to-kite">\n      <div class="welcome-title">\n        <h3>Welcome to Kite!</h3>\n        <div class="title-logo">${i}</div>\n      </div>\n      <div class="warning">\n        <span class="icon">🎉</span>\n        <span class="message">Kite is now integrated with Atom. You'll see your completions improve over the next few minutes as Kite analyzes your code.</span>\n      </div>\n      <div class="description">\n        <div class="content">\n          <p>Kite comes with a native desktop app called the Copilot which provides you with real time documentation as you code.</p>\n          <p>When Kite for Atom is done installing, the Copilot will launch automatically and take you through the rest of the setup process.</p>\n        </div>\n        <div class="description-screenshot"><img src="${r}"></div>\n      </div>\n      <p class="feedback">Send us feedback at <a href="mailto:feedback@kite.com">feedback@kite.com</a></p>\n    </div>\n    `}init(e){this.install=e,this.install.updateState({kiteLogoVisible:!1})}release(){}}customElements.define("kite-atom-install-end",o),e.exports=o},function(e,t,n){"use strict";const{CompositeDisposable:i}=n(0),{addDisposableEventListener:r}=n(21),{demoVideo:o}=n(28);class s extends HTMLElement{constructor(e){super(),this.name=e,this.innerHTML=`\n    <h2><span class="icon">📦</span> autocomplete-python installed successfully</h2>\n    <div id="kite" class="inset-panel kite-description">\n      <h3>Level up your completions with Kite</h3>\n      <div class="columns">\n        <div class="body">\n          <div class="summary">\n            Kite is a native app that runs locally on your computer and uses machine learning to provide advanced completions\n          </div>\n          <ul class="features">\n            <li class="feature icon icon-check">All the features of autocomplete-python and...</li>\n            <li class="feature icon icon-check">1.5x more completions</li>\n            <li class="feature icon icon-check">Completions ranked by code context</li>\n            <li class="feature icon icon-check">Full line of code completions</li>\n            <li class="feature icon icon-check">100% local - no internet connection required</li>\n            <li class="feature icon icon-check">100% free to use</li>\n          </ul>\n          <div class="more">\n            <a href="https://kite.com">Learn more</a>\n          </div>\n        </div>\n        <div class="actions">\n          <video autoplay loop playsinline>\n            <source src="${o}" type="video/mp4">\n          </video>\n          <div class="cta-container">\n            <center>\n              <button class="btn btn-primary">\n                <span class="icon icon-cloud-download"></span>Add Kite\n              </button>\n            </center>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="dismiss">\n      <a href="#">Dismiss</a>\n    </div>\n    `,this.skipButton=this.querySelector(".dismiss a"),this.nextButton=this.querySelector("#kite .actions .cta-container .btn")}init(e){this.install=e,this.subscriptions=new i,this.install.updateState({kiteLogoVisible:!1}),this.subscriptions.add(r(this.skipButton,"click",()=>{this.install.emit("did-skip-install")})),this.subscriptions.add(r(this.nextButton,"click",()=>{this.install.updateState({kiteLogoVisible:!0}),this.install.emit("did-pick-install")}))}release(){this.subscriptions&&this.subscriptions.dispose(),delete this.subscriptions}}customElements.define("kite-atom-kite-vs-jedi",s),e.exports=s},function(e,t,n){"use strict";const{CompositeDisposable:i}=n(0),{addDisposableEventListener:r}=n(21);class o extends HTMLElement{constructor(e){super(),this.name=e,this.innerHTML='\n    <p>It seems like you already have a Kite account. Sign in with your login info.</p>\n    <form novalidate>\n      <input class=\'input-text\' name="email" type="email"></input>\n      <input class=\'input-text\' name="password" type="password"></input>\n      <button class="btn btn-primary btn-block" type="submit">Sign in</button>\n      <div class="secondary-actions">\n        <a class="back">Back</a>\n        <a class="reset-password secondary-cta">Forgot password</a>\n      </div>\n      <div class="status hidden"></div>\n    </form>\n    ',this.form=this.querySelector("form"),this.input=this.querySelector('input[type="email"]'),this.password=this.querySelector('input[type="password"]'),this.submit=this.querySelector('button[type="submit"]'),this.backButton=this.querySelector("a.back"),this.forgotPassword=this.querySelector("a.reset-password"),this.status=this.querySelector(".status")}get data(){return{email:this.input.value,password:this.password.value}}release(){this.subscriptions&&this.subscriptions.dispose(),delete this.install,delete this.subscriptions}init(e){this.subscriptions=new i,this.install=e,this.classList.remove("disabled"),this.subscriptions.add(e.on("did-reset-password",e=>{atom.notifications.addSuccess("Instructions on how to reset your password should\n         have been sent to "+e)})),this.subscriptions.add(r(this.form,"submit",()=>{this.classList.add("disabled"),this.install.emit("did-submit-credentials",this.data)})),this.subscriptions.add(r(this.forgotPassword,"click",()=>{this.install.emit("did-forgot-password")})),this.subscriptions.add(r(this.backButton,"click",()=>{this.install.emit("did-click-back")})),this.subscriptions.add(e.observeState(e=>this.onStateChange(e)))}onStateChange(e){e.account.email&&(this.input.value=e.account.email),e.account.password&&(this.input.password=e.account.password),e.error?(this.status.textContent=e.error.message,this.status.classList.remove("hidden")):this.hideError()}hideError(){this.status.textContent="",this.status.classList.add("hidden")}}customElements.define("kite-atom-login",o),e.exports=o},function(e,t,n){"use strict";const{CompositeDisposable:i}=n(0),{addDisposableEventListener:r}=n(21);class o extends HTMLElement{constructor(e){super(),this.name=e,this.innerHTML='\n    <div class="content">\n      <p>It seems like you don\'t have administrator privileges. Please restart Atom as an administrator and try installing Kite again.</p>\n      <p>You can also <a class="download-link" href="https://kite.com/download">manually install Kite</a>.</p>\n      <p class="dismiss"><a class="dismiss-link" href="#">Don\'t show this again</a></p>\n    </div>\n    ',this.dismissButton=this.querySelector(".dismiss-link")}init(e){this.install=e,this.subscriptions=new i,this.subscriptions.add(r(this.dismissButton,"click",()=>{this.install.destroy(),this.install.emit("not-admin-dismissed")})),this.install.emit("not-admin-shown")}release(){}}customElements.define("kite-atom-install-not-admin",o),e.exports=o},function(e,t,n){"use strict";const i=n(74),{logo:r}=n(28);class o extends HTMLElement{constructor(e){super(),this.name="kite_install_error_view",this.innerHTML=`<div class="install-wrapper">\n      <div class="logo">${r}</div>\n      <div class="content">\n      </div>  \n    </div>`;let t=new i("kite_installer_install_error");this.querySelector(".content").appendChild(t),t.init(e)}getTitle(){return"Kite Install Error"}}customElements.define("kite-atom-install-error-view",o),e.exports=o},function(e,t,n){"use strict";const i=n(7),r=n(21),o=n(20);e.exports=class extends i{start(e,t){return t.updateState({plugin:{done:!1}}),r.installPackage().then(()=>new Promise(e=>{setTimeout(()=>{r.activatePackage(),e()},200)})).then(()=>{o.Tracker.trackEvent("kite_installer_kite_plugin_installed"),t.updateState({plugin:{done:!0}})})}}},function(e,t,n){"use strict";let i,r,o,s,a,c,u,l,p,d,h,f,m;const g=()=>{m||(({Errors:a,Metrics:c}=n(33)),m=n(13),s=n(180),f=n(48),p=a())},v=()=>{u||({promisifyReadResponse:u,flatten:d,compact:h}=n(2))},x={python:["py"],javascript:["js"]};e.exports=class{static get STATES(){return g(),m.STATES}constructor(e){o||({Emitter:o}=n(0)),this.emitter=new o,this.kite=e}onDidGetState(e){return this.emitter.on("did-get-state",e)}onDidChangeState(e){return this.emitter.on("did-change-state",e)}onKiteReady(e){return this.emitter.on("kite-ready",e)}onWillDownload(e){return this.emitter.on("will-download",e)}onDidDownload(e){return this.emitter.on("did-download",e)}onDidFailDownload(e){return this.emitter.on("did-fail-download",e)}onDidSkipInstall(e){return this.emitter.on("did-skip-install",e)}onWillInstall(e){return this.emitter.on("will-install",e)}onDidInstall(e){return this.emitter.on("did-install",e)}onDidFailInstall(e){return this.emitter.on("did-fail-install",e)}onWillStart(e){return this.emitter.on("will-start",e)}onDidStart(e){return this.emitter.on("did-start",e)}onDidFailStart(e){return this.emitter.on("did-fail-start",e)}onDidShowLogin(e){return this.emitter.on("did-show-login",e)}onDidSubmitLogin(e){return this.emitter.on("did-submit-login",e)}onDidShowLoginError(e){return this.emitter.on("did-show-login-error",e)}onDidShowSignupError(e){return this.emitter.on("did-show-signup-error",e)}onDidCancelLogin(e){return this.emitter.on("did-cancel-login",e)}onDidResetPassword(e){return this.emitter.on("did-reset-password",e)}onWillAuthenticate(e){return this.emitter.on("will-authenticate",e)}onDidAuthenticate(e){return this.emitter.on("did-authenticate",e)}onDidFailAuthenticate(e){return this.emitter.on("did-fail-authenticate",e)}onDidGetUnauthorized(e){return this.emitter.on("did-get-unauthorized",e)}reset(){delete this.previousState,delete this.ready}dispose(){this.emitter.dispose()}connect(e){return g(),m.checkHealth().then(t=>{t>=m.STATES.INSTALLED&&localStorage.setItem("kite.wasInstalled",!0);let n=!1;return(t===m.STATES.RUNNING||t===m.STATES.REACHABLE)&&(!this.previousPolledState||this.previousPolledState!==t||"activation"!==e&&"pollingInterval"!==e)||(n=!0),this.emitter.emit("did-get-state",{state:t,canNotify:n}),t!==this.previousState&&(this.emitter.emit("did-change-state",t),this.previousState=t,t!==m.STATES.READY||this.ready||(this.emitter.emit("kite-ready"),this.ready=!0)),"activation"!==e&&"pollingInterval"!==e||(this.previousPolledState=t),t})}installFlow(){return g(),Promise.all([m.canInstallKite(),localStorage.getItem("kite.no-admin-privileges")?Promise.reject("User does not have admin privileges"):Promise.resolve()]).then(([e])=>(c.Tracker.name="atom",c.Tracker.props={},c.Tracker.props.lastEvent=event,this.showInstallFlow({})),e=>{s.error("rejected with data:",e)})}showInstallFlow(e){g(),i||(i=n(1)),p||(p=a());const{install:{Install:t,atom:r}}=n(33),{defaultFlow:o}=r(),s=new t(o(),{path:atom.project.getPaths()[0]||i.homedir()},{failureStep:"termination",title:"Kite Install"}),c=m.Account.client;return m.Account.client=new f("alpha.kite.com",-1,"",!0),p.trackUncaught(),atom.workspace.getActivePane().addItem(s),atom.workspace.getActivePane().activateItem(s),s.start().catch(e=>console.error(e)).then(()=>{m.Account.client=c})}install(){return g(),this.emitter.emit("will-download"),m.downloadKiteRelease({install:!0,onDownload:()=>this.emitter.emit("did-download"),onInstallStart:()=>this.emitter.emit("will-install")}).then(()=>this.emitter.emit("did-install")).catch(e=>{switch(e.type){case"bad_status":case"curl_error":this.emitter.emit("did-fail-download",e);break;default:this.emitter.emit("did-fail-install",e)}throw e})}wasInstalledOnce(){return"true"===localStorage.getItem("kite.wasInstalled")}start(){return g(),this.emitter.emit("will-start"),m.runKiteAndWait(30,2500).then(()=>this.emitter.emit("did-start")).catch(e=>{throw this.emitter.emit("did-fail-start",e),e})}startEnterprise(){return g(),this.emitter.emit("will-start"),m.runKiteEnterpriseAndWait(30,2500).then(()=>this.emitter.emit("did-start")).catch(e=>{throw this.emitter.emit("did-fail-start",e),e})}login(){atom.applicationDelegate.openExternal("kite://home")}copilotSettings(){atom.applicationDelegate.openExternal("kite://settings")}saveUserID(){return g(),v(),m.request({path:"/clientapi/user",method:"GET"}).then(e=>{if(s.logResponse(e),200!==e.statusCode)throw new Error("Unable to reach user endpoint");return u(e)}).then(e=>{void 0!==(e=JSON.parse(e)).id&&(l||(l=n(80)),l.set("distinctID",e.id))}).catch(e=>{})}getRootDirectory(e){i||(i=n(1)),r||(r=n(3));const[t]=atom.project.getPaths(),o=e&&e.getPath()||t;return o&&0===r.relative(i.homedir(),o).indexOf("..")?r.parse(o).root:i.homedir()}getSupportedLanguagesRegExp(e){return v(),`.(${h(d(e.map(e=>x[e]))).join("|")})$`}}},function(e,t,n){"use strict";const i=n(1),r=n(26),o=n(14),s=n(22),a=n(46),{STATES:c}=n(29),u=n(75),l=n(76);e.exports={STATES:c,adapter:(()=>{switch(i.platform()){case"darwin":return n(173);case"win32":return n(174);case"linux":return n(175);default:return n(176)}})(),emitter:new r,client:new u("localhost","46624"),toggleRequestDebug(){this.client instanceof u?this.client=new l(this.client.hostname,this.client.port):this.client=new u(this.client.hostname,this.client.port)},onDidFailRequest(e){return this.emitter.on("did-fail-request",e),{dispose:()=>{this.emitter.removeListener("did-fail-request",e)}}},request(e,t,n){return this.client.request(e,t,n).catch(()=>{let n=Promise.resolve();return o.shouldAddCatchProcessing(e.path)&&(n=n.then(()=>this.isKiteSupported()).then(()=>this.isKiteInstalled()).then(()=>this.isKiteRunning())),n.then(()=>{throw new s("Kite could not be reached when attempting a request",{state:c.UNREACHABLE,request:e,requestData:t})})}).then(n=>n.statusCode>=400?o.handleResponseData(n).then(i=>{throw new a("bad_status",{responseStatus:n.statusCode,request:e,requestData:t,response:n,responseData:i})}):n).catch(e=>{throw this.emitter.emit("did-fail-request",e),e})},checkHealth(){const e=([e])=>{throw e};return this.isKiteSupported().then(()=>o.anyPromise([this.isKiteInstalled(),this.isKiteEnterpriseInstalled()]).catch(e)).then(()=>o.anyPromise([this.isKiteRunning(),this.isKiteEnterpriseRunning()]).catch(e)).then(()=>this.isKiteReachable()).then(()=>c.READY).catch(e=>{if(!e.data||null==e.data.state)throw e;return e.data.state})},handleState(){return this.checkHealth()},isKiteSupported(){return this.adapter.isKiteSupported()?Promise.resolve():Promise.reject(new s("Kite is currently not support on your platform",{state:c.UNSUPPORTED}))},isKiteInstalled(){return this.adapter.isKiteInstalled()},isKiteRunning(){return this.adapter.isKiteRunning()},canInstallKite(){return this.isKiteSupported().then(()=>o.reversePromise(this.adapter.isKiteInstalled(),new s("Kite is already installed",{state:c.INSTALLED})))},installKite(e){return this.adapter.installKite(e)},downloadKiteRelease(e){return this.adapter.downloadKiteRelease(e)},downloadKite(e,t){return this.adapter.downloadKite(e,t)},canRunKite(){return this.isKiteInstalled().then(()=>o.reversePromise(this.isKiteRunning(),new s("Kite is already runnning",{state:c.RUNNING})))},runKiteWithCopilot(){return this.adapter.runKiteWithCopilot()},runKite(){return this.adapter.runKite()},runKiteAndWait(e,t){return this.runKite().then(()=>this.waitForKite(e,t))},isKiteReachable(){return this.client.request({path:"/clientapi/ping",method:"GET"},null,200)},waitForKite(e,t){return o.retryPromise(()=>this.isKiteReachable(),e,t)},isKiteEnterpriseInstalled(){return this.adapter.isKiteEnterpriseInstalled()},isKiteEnterpriseRunning(){return this.adapter.isKiteEnterpriseRunning()},canRunKiteEnterprise(){return this.isKiteEnterpriseInstalled().then(()=>o.reversePromise(this.isKiteEnterpriseRunning(),new s("Kite Enterprise is already runnning",{state:c.RUNNING})))},runKiteEnterprise(){return this.adapter.runKiteEnterprise()},runKiteEnterpriseAndWait(e,t){return this.runKiteEnterprise().then(()=>this.waitForKite(e,t))},hasBothKiteInstalled(){return this.adapter.hasBothKiteInstalled()},hasManyKiteInstallation(){return this.adapter.hasManyKiteInstallation()},hasManyKiteEnterpriseInstallation(){return this.adapter.hasManyKiteEnterpriseInstallation()},isAdmin(){return this.adapter.isAdmin()},arch(){return this.adapter.arch()},isOSSupported(){return this.adapter.isOSSupported()},isOSVersionSupported(){return this.adapter.isOSVersionSupported()},isUserAuthenticated(){return this.client.request({path:"/clientapi/user",method:"GET"}).then(e=>{switch(e.statusCode){case 200:return o.handleResponseData(e);case 401:throw new s("Kite is not authenticated",{state:c.UNLOGGED});default:return o.handleResponseData(e).then(t=>{throw new a("Invalid response status when checking Kite authentication",{responseStatus:e.statusCode,request:{path:"/clientapi/user",method:"GET"},response:e,responseData:t})})}})}}},function(e,t,n){"use strict";const i=n(1),r=n(5),o=n(3),s=n(4),a=n(8),c=n(14),u=n(22),{STATES:l}=n(29),p={RELEASE_URL:"https://alpha.kite.com/release/dls/mac/current",APPS_PATH:"/Applications/",KITE_DMG_PATH:"/tmp/Kite.dmg",KITE_VOLUME_PATH:"/Volumes/Kite/",KITE_APP_PATH:{mounted:"/Volumes/Kite/Kite.app",defaultInstalled:"/Applications/Kite.app"},KITE_SIDEBAR_PATH:"/Applications/Kite.app/Contents/MacOS/KiteSidebar.app",KITE_BUNDLE_ID:"com.kite.Kite",SESSION_FILE_PATH:o.join(i.homedir(),".kite","session.json"),get releaseURL(){return this.RELEASE_URL},get downloadPath(){return this.KITE_DMG_PATH},get installPath(){return this.allInstallPaths[0]},get allInstallPaths(){let e=String(a.spawnSync("mdfind",['kMDItemCFBundleIdentifier = "com.kite.Kite"']).stdout).trim().split("\n");return-1===e.indexOf(this.KITE_APP_PATH.defaultInstalled)&&this.checkDefaultAppPath()&&e.push(this.KITE_APP_PATH.defaultInstalled),e.filter(e=>""!==e)},get enterpriseInstallPath(){return this.allEnterpriseInstallPaths[0]},get allEnterpriseInstallPaths(){return String(a.spawnSync("mdfind",['kMDItemCFBundleIdentifier = "enterprise.kite.Kite"']).stdout).trim().split("\n")},get sessionFilePath(){return this.SESSION_FILE_PATH},isAdmin(){try{const e=c.whoami();return String(a.execSync("dscacheutil -q group -a name admin")).split("\n").filter(e=>/^users:/.test(e))[0].trim().replace(/users:\s+/,"").split(/\s/g).includes(e)}catch(e){return!1}},arch:()=>i.arch(),isOSSupported:()=>!0,isOSVersionSupported:()=>parseFloat(i.release())>=14,isKiteSupported(){return this.isOSVersionSupported()},checkDefaultAppPath(){return r.existsSync(this.KITE_APP_PATH.defaultInstalled)},isKiteInstalled(){return c.spawnPromise("mdfind",['kMDItemCFBundleIdentifier = "com.kite.Kite"'],"mdfind_error","Unable to run mdfind and verify that Kite is installed").then(e=>{if(!(e&&""!==e.trim()||this.checkDefaultAppPath()))throw new u("Unable to find Kite application install using mdfind",{state:l.UNINSTALLED})})},hasManyKiteInstallation(){return this.allInstallPaths.length>1},hasManyKiteEnterpriseInstallation(){return this.allEnterpriseInstallPaths.length>1},hasBothKiteInstalled(){return Promise.all([this.isKiteInstalled(),this.isKiteEnterpriseInstalled()])},isKiteEnterpriseInstalled:()=>c.spawnPromise("mdfind",['kMDItemCFBundleIdentifier = "enterprise.kite.Kite"'],"mdfind_error","Unable to run mdfind and verify that kite enterprise is installed").then(e=>{if(!e||""===e.trim())throw new u("Unable to find Kite Enterprise application install using mdfind",{state:l.UNINSTALLED})}),downloadKiteRelease(e){return this.downloadKite(this.releaseURL,e||{})},downloadKite(e,t){return t=t||{},this.streamKiteDownload(e,t.onDownloadProgress).then(()=>c.guardCall(t.onDownload)).then(()=>t.install&&this.installKite(t))},streamKiteDownload(e,t){const n=s.request(e);return n.end(),c.followRedirections(n).then(e=>{if(t){const n=parseInt(e.headers["content-length"],10);let i=0;e.on("data",e=>{i+=e.length,t(i,n,i/n)})}return c.promisifyStream(e.pipe(r.createWriteStream(this.downloadPath))).then(()=>new Promise((e,t)=>{setTimeout(e,100)}))})},installKite(e){return e=e||{},c.guardCall(e.onInstallStart),c.spawnPromise("hdiutil",["attach","-nobrowse",this.KITE_DMG_PATH],"mount_error","Unable to mount Kite.dmg").then(()=>c.guardCall(e.onMount)).then(()=>c.spawnPromise("cp",["-r",this.KITE_APP_PATH.mounted,this.APPS_PATH],"cp_error","Unable to copy Kite.app in the applications directory")).then(()=>c.guardCall(e.onCopy)).then(()=>c.spawnPromise("hdiutil",["detach",this.KITE_VOLUME_PATH],"unmount_error","Unable to unmount Kite.dmg")).then(()=>c.guardCall(e.onUnmount)).then(()=>c.spawnPromise("rm",[this.KITE_DMG_PATH],"rm_error","Unable to remove Kite.dmg")).then(()=>c.guardCall(e.onRemove)).then(()=>c.retryPromise(()=>this.isKiteInstalled(),10,1500))},isKiteRunning:()=>c.spawnPromise("/bin/ps",["-axco","command"],{encoding:"utf8"},"ps_error","Unable to run the ps command and verify that Kite is running").then(e=>{if(!e.split("\n").some(e=>/^Kite$/.test(e)))throw new u("Kite process could not be found in the processes list",{state:l.NOT_RUNNING})}),runKiteWithCopilot(){const e=Object.assign({},process.env);return delete e.ELECTRON_RUN_AS_NODE,c.spawnPromise("open",["-a",this.installPath,"--args","--plugin-launch-with-copilot","--channel=autocomplete-python"],{env:e},"open_error","Unable to run the open command to start Kite")},runKite(){const e=Object.assign({},process.env);return delete e.ELECTRON_RUN_AS_NODE,this.isKiteRunning().catch(()=>c.spawnPromise("defaults",["write","com.kite.Kite","shouldReopenSidebar","0"],"defaults_error","Unable to run defaults command").then(()=>c.spawnPromise("open",["-a",this.installPath,"--args","--plugin-launch","--channel=autocomplete-python"],{env:e},"open_error","Unable to run the open command to start Kite")))},isKiteEnterpriseRunning:()=>c.spawnPromise("/bin/ps",["-axco","command"],{encoding:"utf8"},"ps_error","Unable to run the ps command and verify that Kite enterprise is running").then(e=>{if(!e.split("\n").some(e=>/^KiteEnterprise$/.test(e)))throw new u("Kite Enterprise process could not be found in the processes list",{state:l.NOT_RUNNING})}),runKiteEnterprise(){const e=Object.assign({},process.env);return delete e.ELECTRON_RUN_AS_NODE,c.spawnPromise("defaults",["write","enterprise.kite.Kite","shouldReopenSidebar","0"],"defaults_error","Unable to run defaults command").then(()=>c.spawnPromise("open",["-a",this.enterpriseInstallPath],{env:e},"open_error","Unable to run the open command and start Kite enterprise"))}};e.exports=p},function(e,t,n){"use strict";const i=n(1),r=n(5),o=n(3),s=n(4),a=n(8),c=n(14),u=n(22),l=n(47),{STATES:p}=n(29),d=`"${o.join(__dirname,"read-key.bat")}"`;o.join(__dirname,"read-arch.bat");let h;const f={RELEASE_URL:"https://alpha.kite.com/release/dls/windows/current",KITE_INSTALLER_PATH:o.join(i.tmpdir(),"KiteSetup.exe"),SESSION_FILE_PATH:o.join(process.env.LOCALAPPDATA,"Kite","session.json"),set KITE_EXE_PATH(e){h=e},get KITE_EXE_PATH(){if(!h){let e,t;t=process.env.ProgramW6432?o.join(process.env.ProgramW6432,"Kite"):"C:\\Program Files\\Kite";try{const n=String(a.execSync(d)).trim();e="not found"!==n?n:t}catch(n){e=t}h=o.join(e,"kited.exe")}return h},get releaseURL(){return this.RELEASE_URL},get downloadPath(){return this.KITE_INSTALLER_PATH},get installPath(){return this.KITE_EXE_PATH},get enterpriseInstallPath(){return null},get allInstallPaths(){return[this.installPath]},get allEnterpriseInstallPaths(){return[]},get sessionFilePath(){return this.SESSION_FILE_PATH},isAdmin(){try{return a.execSync("net session"),!0}catch(e){return!1}},arch:()=>"64bit",isOSSupported:()=>!0,isOSVersionSupported(){return parseFloat(i.release())>=6.1&&"64bit"===this.arch()},isKiteSupported(){return this.isOSVersionSupported()},isKiteInstalled(){return new Promise((e,t)=>{r.exists(this.KITE_EXE_PATH,n=>{n?e():t(new u("",{state:p.UNINSTALLED}))})})},isKiteEnterpriseInstalled:()=>Promise.reject(new u("Kite Enterprise is currently not supported on windows",{state:p.UNSUPPORTED})),hasManyKiteInstallation(){return this.allInstallPaths.length>1},hasManyKiteEnterpriseInstallation(){return this.allEnterpriseInstallPaths.length>1},hasBothKiteInstalled(){return Promise.all([this.isKiteInstalled(),this.isKiteEnterpriseInstalled()])},downloadKiteRelease(e){return this.downloadKite(this.releaseURL,e||{})},downloadKite(e,t){return t=t||{},this.streamKiteDownload(e,t.onDownloadProgress).then(()=>c.guardCall(t.onDownload)).then(()=>t.install&&this.installKite(t))},streamKiteDownload(e,t){const n=s.request(e);return n.end(),c.followRedirections(n).then(e=>{if(t){const n=parseInt(e.headers["content-length"],10);let i=0;e.on("data",e=>{i+=e.length,t(i,n,i/n)})}return c.promisifyStream(e.pipe(r.createWriteStream(this.downloadPath))).then(()=>new Promise((e,t)=>{setTimeout(e,100)}))})},installKite(e){e=e||{};var t=Object.create(process.env);return t.KITE_SKIP_ONBOARDING="1",c.guardCall(e.onInstallStart),c.execPromise(`"${this.KITE_INSTALLER_PATH}" --skip-onboarding --plugin-launch --channel=autocomplete-python`,{env:t},"kite_install_error","Unable to run Kite installer").then(()=>c.guardCall(e.onCopy)).then(()=>r.unlinkSync(this.KITE_INSTALLER_PATH)).then(()=>c.guardCall(e.onRemove))},isKiteRunning:()=>c.spawnPromise("tasklist","tasklist_error","Unable to run the tasklist command and verify whether kite is running or not").then(e=>{if(e.split("\n").every(e=>-1===e.indexOf("kited.exe")))throw new u("Unable to find kited.exe process in the tasks list",{state:p.NOT_RUNNING})}),runKiteWithCopilot(){var e=Object.create(process.env);return delete e.ELECTRON_RUN_AS_NODE,new Promise((t,n)=>{try{a.spawn(this.KITE_EXE_PATH,["--plugin-launch-with-copilot","--channel=autocomplete-python"],{detached:!0,env:e}),t()}catch(t){n(new l("kite_exe_error",{message:"Unable to run kite executable",callStack:t.stack,cmd:this.KITE_EXE_PATH,options:{detached:!0,env:e}}))}})},runKite(){return this.isKiteRunning().catch(()=>{var e=Object.create(process.env);e.KITE_SKIP_ONBOARDING="1",delete e.ELECTRON_RUN_AS_NODE;try{a.spawn(this.KITE_EXE_PATH,["--plugin-launch","--channel=autocomplete-python"],{detached:!0,env:e})}catch(t){throw new l("kite_exe_error",{message:"Unable to run kite executable",callStack:t.stack,cmd:this.KITE_EXE_PATH,options:{detached:!0,env:e}})}})},isKiteEnterpriseRunning:()=>Promise.reject(new u("Kite Enterprise is currently not supported on windows",{state:p.UNSUPPORTED})),runKiteEnterprise:()=>Promise.reject(new u("Kite Enterprise is currently not supported on windows",{state:p.UNSUPPORTED}))};e.exports=f},function(e,t,n){"use strict";const i=n(1),r=n(5),o=n(3),s=n(4),a=n(8),c=n(14),u=n(22),l=n(47),{STATES:p}=n(29),d={RELEASE_URL:"https://linux.kite.com/dls/linux/current",SESSION_FILE_PATH:o.join(i.homedir(),".kite","session.json"),KITE_INSTALLER_PATH:o.join(i.tmpdir(),"kite-installer.sh"),KITED_PATH:o.join(i.homedir(),".local","share","kite","kited"),KITED_PROCESS:/kited/,KITE_CURRENT_LINK:o.join(i.homedir(),".local","share","kite","current"),memKitedInstallPath:null,get releaseURL(){return this.RELEASE_URL},get downloadPath(){return this.KITE_INSTALLER_PATH},get installPath(){return this.memKitedInstallPath||(this.memKitedInstallPath=this.KITED_PATH),this.memKitedInstallPath},resetInstallPath(){this.memKitedInstallPath=null},get allInstallPaths(){return[this.installPath]},get enterpriseInstallPath(){return null},get allEnterpriseInstallPaths(){return null},get sessionFilePath(){return this.SESSION_FILE_PATH},hasManyKiteInstallation(){return this.allInstallPaths.length>1},hasManyKiteEnterpriseInstallation:()=>!1,isAdmin(){try{const e=c.whoami();return String(a.execSync("getent group root adm admin sudo")).split("\n").map(e=>e.substring(e.lastIndexOf(":")+1)).reduce((e,t)=>(t.split(",").forEach(t=>e.push(t.trim())),e),[]).includes(e)}catch(e){try{const e=i.userInfo();return 0===e.uid||"root"===e.username}catch(e){return!1}}},arch:()=>i.arch(),isOSSupported:()=>!0,isOSVersionSupported:()=>"x64"===i.arch(),isKiteSupported(){return this.isOSSupported()&&this.isOSVersionSupported()},isKiteInstalled(){return new Promise((e,t)=>{r.exists(this.installPath,n=>{n?e():t(new u("",{state:p.UNINSTALLED}))})})},downloadKiteRelease(e){return this.downloadKite(this.releaseURL,e||{})},downloadKite(e,t){return t=t||{},this.downloadKiteInstallerScript(e,t.onDownloadProgress).then(()=>this.streamKiteDownload(this.downloadPath,t.onDownloadProgress)).then(()=>c.guardCall(t.onDownload)).then(()=>t.install&&this.installKite(t))},downloadKiteInstallerScript(e,t){const n=s.request(e);return n.end(),t&&t(0,100,0),c.followRedirections(n).then(e=>c.promisifyStream(e.pipe(r.createWriteStream(this.downloadPath))).then(()=>r.chmodSync(this.downloadPath,448)).then(()=>new Promise((e,t)=>{setTimeout(e,100)})))},streamKiteDownload:(e,t)=>new Promise((n,i)=>{try{const r=a.spawn(e,["--download"],{shell:!0});if(r.on("close",(function(t){if(0===t)n(r);else{const n=new Error;i(new l("kited_error",{message:`Unable to download Kite. Unexpected exit code ${t}.`,stderr:"",stdout:"",callStack:n.stack,cmd:e+" --download",options:["--download"]}))}})),t){let e=-1;r.stdout.on("data",n=>{let i,r,o=n.toString("utf8"),s=/Download: (\d+)\/(\d+)/g;for(;null!==(r=s.exec(o));)i=r;if(i){let n=parseInt(i[1],10),r=parseInt(i[2],10);n>=0&&r>=n&&n>e&&(e=n,t(n,r,n/r))}})}}catch(e){console.error(e),i(e)}}),installKite(e){return e=e||{},c.guardCall(e.onInstallStart),c.spawnPromise(this.KITE_INSTALLER_PATH,["--install"],{shell:!0},"kite-installer install error","unable to install kite with "+this.KITE_INSTALLER_PATH).then(()=>this.resetInstallPath()).then(()=>c.guardCall(e.onMount)).then(()=>r.unlinkSync(this.KITE_INSTALLER_PATH)).then(()=>c.guardCall(e.onRemove))},isKiteRunning(){return c.spawnPromise("/bin/ps",["-axo","pid,command"],{encoding:"utf-8"},"ps_error","unable to run the ps command and verify that Kite is running").then(e=>{if(!e.split("\n").some(e=>this.KITED_PROCESS.test(e)))throw new u("Kite process could not be found in the processes list",{state:p.NOT_RUNNING})})},runKiteWithCopilot(){const e=Object.assign({},process.env);return e.SKIP_KITE_ONBOARDING="1",delete e.ELECTRON_RUN_AS_NODE,new Promise((t,n)=>{try{if(!r.existsSync(this.installPath))throw new Error("kited is not installed");a.spawn(this.installPath,["--plugin-launch-with-copilot","--channel=autocomplete-python"],{detached:!0,stdio:"ignore",env:e}),t()}catch(t){n(new l("kited_error",{message:t.message&&"kited is not installed"===t.message||"unable to run kited binary",callStack:t.stack,cmd:this.installPath,options:{detached:!0,env:e}}))}})},runKite(){return this.isKiteRunning().catch(()=>{const e=Object.assign({},process.env);e.SKIP_KITE_ONBOARDING="1",delete e.ELECTRON_RUN_AS_NODE;try{if(!r.existsSync(this.installPath))throw new Error("kited is not installed");a.spawn(this.installPath,["--plugin-launch","--channel=autocomplete-python"],{detached:!0,stdio:"ignore",env:e})}catch(t){throw new l("kited_error",{message:t.message&&"kited is not installed"===t.message||"unable to run kited binary",callStack:t.stack,cmd:this.installPath,options:{detached:!0,env:e}})}})},hasBothKiteInstalled(){return Promise.all([this.isKiteInstalled(),this.isKiteEnterpriseInstalled()])},isKiteEnterpriseInstalled(){return this.notSupported()},isKiteEnterpriseRunning(){return this.notSupported()},runKiteEnterprise(){return this.notSupported()},notSupported:()=>Promise.reject(new u("Your platform is currently not supported",{state:p.UNSUPPORTED}))};e.exports=d},function(e,t,n){"use strict";const i=n(22),{STATES:r}=n(29);e.exports={get releaseURL(){return null},get downloadPath(){return null},get installPath(){return null},get allInstallPaths(){return null},get enterpriseInstallPath(){return null},get allEnterpriseInstallPaths(){return null},get sessionFilePath(){return null},hasManyKiteInstallation:()=>!1,hasManyKiteEnterpriseInstallation:()=>!1,isAdmin:()=>!1,arch:()=>null,isOSSupported:()=>!1,isOSVersionSupported:()=>!1,isKiteSupported:()=>!1,isKiteInstalled(){return this.notSupported()},downloadKite(e){return this.notSupported()},installKite(e){return this.notSupported()},isKiteRunning(){return this.notSupported()},runKite(){return this.notSupported()},hasBothKiteInstalled(){return Promise.all([this.isKiteInstalled(),this.isKiteEnterpriseInstalled()])},isKiteEnterpriseInstalled(){return this.notSupported()},isKiteEnterpriseRunning(){return this.notSupported()},runKiteEnterprise(){return this.notSupported()},notSupported:()=>Promise.reject(new i("Your platform is currently not supported",{state:r.UNSUPPORTED}))}},function(e,t,n){"use strict";e.exports=class{constructor(e){this.store=e}get(e){return(this.content?Promise.resolve(this.content):this.store.get().then(e=>function(e){return e?JSON.parse(e):e}(e)).then(e=>(this.content=e,e))).then(t=>function(e,t){if(!e)return t;return e.split(/\./g).reduce((e,t)=>null==e?e:e[t],t)}(e,t))}set(e,t){return this.get().then(n=>this.store.set(function(e){return JSON.stringify(e)}(function(e,t,n){n||(n={});return e.split(/\./g).reduce((e,i,r,o)=>r===o.length-1?(e[i]=t,n):null==e[i]?(e[i]={},e[i]):e[i],n)}(e,t,n))))}}},function(e,t,n){"use strict";e.exports=class{constructor(){}set(e){return this.content=e,Promise.resolve()}get(){return Promise.resolve(this.content)}}},function(e,t){const n=75*Math.pow(2,10),i=Math.pow(2,21);e.exports={MAX_FILE_SIZE:n,MAX_PAYLOAD_SIZE:i}},function(e,t,n){"use strict";const{LEVELS:i}=n(15),r=n(181),o=n(182);e.exports={LEVELS:i,LEVEL:i.INFO,output:"undefined"!=typeof console?o:r,silly(...e){this.log(i.SILLY,...e)},verbose(...e){this.log(i.VERBOSE,...e)},debug(...e){this.log(i.DEBUG,...e)},info(...e){this.log(i.INFO,...e)},warn(...e){this.log(i.WARNING,...e)},error(...e){this.log(i.ERROR,...e)},log(e,...t){e>=this.LEVEL&&!this.SILENT&&this.output.log(e,...t)},logRequest(){},logResponse(){}}},function(e,t,n){"use strict";e.exports={log(){}}},function(e,t,n){"use strict";const{LEVELS:i}=n(15);e.exports={TRACE_ALL:!1,METHODS:{[i.SILLY]:"debug"in console?"debug":"log",[i.VERBOSE]:"debug"in console?"debug":"log",[i.DEBUG]:"log",[i.INFO]:"info"in console?"info":"log",[i.WARNING]:"warn"in console?"warn":"error",[i.ERROR]:"error"},log(e,...t){console[this.METHODS[e]](...t)}}},function(e,t,n){"use strict";const i=n(23);e.exports=class{constructor(e,t,n,i){n=n||"",i=i||!1,this.hostname=e,this.port=t,this.base=n,this.protocol=i?"https":"http",this.cookies={}}request(e,t,n){const i=this.port&&-1!==this.port?`${this.hostname}:${this.port}`:this.hostname,r=`${this.protocol}://${i}${this.base}${e.path}`,o=e.method||"GET";return new Promise((i,s)=>{const a=new XMLHttpRequest;if(a.addEventListener("error",s),a.addEventListener("abort",s),a.addEventListener("load",()=>{const t=a.responseText;i(((e,t,n,i={})=>{const r={statusCode:e,req:n,on(e,n){switch(e){case"data":n(t);break;case"end":n()}}};for(let e in i)r[e]=i[e];return r.headers=r.headers||{},r})(a.status,t,{method:o,path:e.path,url:r}))}),a.open(o,r),n&&(a.timeout=n,a.ontimeout=()=>{s(new Error("Request Timeout"))}),e.headers){if("multipart/form-data"===e.headers["Content-Type"]||"multipart/form-data"===e.headers["content-type"]){delete e.headers["Content-Type"],delete e.headers["content-type"];const n=new FormData;for(const e in t)n.append(e,t[e]);t=n}for(const t in e.headers)a.setRequestHeader(t,e.headers[t])}e.headers&&e.headers["Cache-Control"]||a.setRequestHeader("Cache-Control","no-cache, must-revalidate"),a.send(t)})}readCookies(e){i.parseSetCookies(e.headers["set-cookie"]).forEach(e=>{this.cookies[e.Name]=e})}writeCookies(e){var t=[];for(var n in this.cookies)t.push(this.cookies[n]);t.length&&(e.Cookies=i.dumpCookies(t))}}},function(e,t,n){"use strict";const i=n(1),r=n(5),o=n(3),s=n(4),a=n(8),c=n(23),u=n(30),{STATES:l}=n(15),p={RELEASE_URL:"https://alpha.kite.com/release/dls/mac/current",APPS_PATH:"/Applications/",KITE_DMG_PATH:"/tmp/Kite.dmg",KITE_VOLUME_PATH:"/Volumes/Kite/",KITE_APP_PATH:{mounted:"/Volumes/Kite/Kite.app",defaultInstalled:"/Applications/Kite.app"},KITE_SIDEBAR_PATH:"/Applications/Kite.app/Contents/MacOS/KiteSidebar.app",KITE_BUNDLE_ID:"com.kite.Kite",SESSION_FILE_PATH:o.join(i.homedir(),".kite","session.json"),get releaseURL(){return this.RELEASE_URL},get downloadPath(){return this.KITE_DMG_PATH},get installPath(){return this.allInstallPaths[0]},get allInstallPaths(){let e=String(a.spawnSync("mdfind",['kMDItemCFBundleIdentifier = "com.kite.Kite"']).stdout).trim().split("\n");return-1===e.indexOf(this.KITE_APP_PATH.defaultInstalled)&&this.checkDefaultAppPath()&&e.push(this.KITE_APP_PATH.defaultInstalled),e.filter(e=>""!==e)},get enterpriseInstallPath(){return this.allEnterpriseInstallPaths[0]},get allEnterpriseInstallPaths(){return String(a.spawnSync("mdfind",['kMDItemCFBundleIdentifier = "enterprise.kite.Kite"']).stdout).trim().split("\n")},get sessionFilePath(){return this.SESSION_FILE_PATH},isAdmin(){try{const e=c.whoami();return String(a.execSync("dscacheutil -q group -a name admin")).split("\n").filter(e=>/^users:/.test(e))[0].trim().replace(/users:\s+/,"").split(/\s/g).includes(e)}catch(e){return!1}},arch:()=>i.arch(),isOSSupported:()=>!0,isOSVersionSupported:()=>parseFloat(i.release())>=14,isKiteSupported(){return this.isOSVersionSupported()},checkDefaultAppPath(){return r.existsSync(this.KITE_APP_PATH.defaultInstalled)},isKiteInstalled(){return c.spawnPromise("mdfind",['kMDItemCFBundleIdentifier = "com.kite.Kite"'],"mdfind_error","Unable to run mdfind and verify that Kite is installed").then(e=>{if(!(e&&""!==e.trim()||this.checkDefaultAppPath()))throw new u("Unable to find Kite application install using mdfind",{state:l.UNINSTALLED})})},hasManyKiteInstallation(){return this.allInstallPaths.length>1},hasManyKiteEnterpriseInstallation(){return this.allEnterpriseInstallPaths.length>1},hasBothKiteInstalled(){return Promise.all([this.isKiteInstalled(),this.isKiteEnterpriseInstalled()])},isKiteEnterpriseInstalled:()=>c.spawnPromise("mdfind",['kMDItemCFBundleIdentifier = "enterprise.kite.Kite"'],"mdfind_error","Unable to run mdfind and verify that kite enterprise is installed").then(e=>{if(!e||""===e.trim())throw new u("Unable to find Kite Enterprise application install using mdfind",{state:l.UNINSTALLED})}),downloadKiteRelease(e){return this.downloadKite(this.releaseURL,e||{})},downloadKite(e,t){return t=t||{},this.streamKiteDownload(e,t.onDownloadProgress).then(()=>c.guardCall(t.onDownload)).then(()=>t.install&&this.installKite(t))},streamKiteDownload(e,t){const n=s.request(e);return n.end(),c.followRedirections(n).then(e=>{if(t){const n=parseInt(e.headers["content-length"],10);let i=0;e.on("data",e=>{i+=e.length,t(i,n,i/n)})}return c.promisifyStream(e.pipe(r.createWriteStream(this.downloadPath))).then(()=>new Promise((e,t)=>{setTimeout(e,100)}))})},installKite(e){return e=e||{},c.guardCall(e.onInstallStart),c.spawnPromise("hdiutil",["attach","-nobrowse",this.KITE_DMG_PATH],"mount_error","Unable to mount Kite.dmg").then(()=>c.guardCall(e.onMount)).then(()=>c.spawnPromise("cp",["-r",this.KITE_APP_PATH.mounted,this.APPS_PATH],"cp_error","Unable to copy Kite.app in the applications directory")).then(()=>c.guardCall(e.onCopy)).then(()=>c.spawnPromise("hdiutil",["detach",this.KITE_VOLUME_PATH],"unmount_error","Unable to unmount Kite.dmg")).then(()=>c.guardCall(e.onUnmount)).then(()=>c.spawnPromise("rm",[this.KITE_DMG_PATH],"rm_error","Unable to remove Kite.dmg")).then(()=>c.guardCall(e.onRemove)).then(()=>c.retryPromise(()=>this.isKiteInstalled(),10,1500))},isKiteRunning:()=>c.spawnPromise("/bin/ps",["-axco","command"],{encoding:"utf8"},"ps_error","Unable to run the ps command and verify that Kite is running").then(e=>{if(!e.split("\n").some(e=>/^Kite$/.test(e)))throw new u("Kite process could not be found in the processes list",{state:l.NOT_RUNNING})}),runKiteWithCopilot(){const e=Object.assign({},process.env);return delete e.ELECTRON_RUN_AS_NODE,c.spawnPromise("open",["-a",this.installPath,"--args","--plugin-launch-with-copilot","--channel=autocomplete-python"],{env:e},"open_error","Unable to run the open command to start Kite")},runKite(){const e=Object.assign({},process.env);return delete e.ELECTRON_RUN_AS_NODE,this.isKiteRunning().catch(()=>c.spawnPromise("defaults",["write","com.kite.Kite","shouldReopenSidebar","0"],"defaults_error","Unable to run defaults command").then(()=>c.spawnPromise("open",["-a",this.installPath,"--args","--plugin-launch","--channel=autocomplete-python"],{env:e},"open_error","Unable to run the open command to start Kite")))},isKiteEnterpriseRunning:()=>c.spawnPromise("/bin/ps",["-axco","command"],{encoding:"utf8"},"ps_error","Unable to run the ps command and verify that Kite enterprise is running").then(e=>{if(!e.split("\n").some(e=>/^KiteEnterprise$/.test(e)))throw new u("Kite Enterprise process could not be found in the processes list",{state:l.NOT_RUNNING})}),runKiteEnterprise(){const e=Object.assign({},process.env);return delete e.ELECTRON_RUN_AS_NODE,c.spawnPromise("defaults",["write","enterprise.kite.Kite","shouldReopenSidebar","0"],"defaults_error","Unable to run defaults command").then(()=>c.spawnPromise("open",["-a",this.enterpriseInstallPath],{env:e},"open_error","Unable to run the open command and start Kite enterprise"))}};e.exports=p},function(e,t,n){"use strict";const i=n(1),r=n(5),o=n(3),s=n(4),a=n(8),c=n(23),u=n(30),l=n(49),{STATES:p}=n(15),d=`"${o.join(__dirname,"read-key.bat")}"`;o.join(__dirname,"read-arch.bat");let h;const f={RELEASE_URL:"https://alpha.kite.com/release/dls/windows/current",KITE_INSTALLER_PATH:o.join(i.tmpdir(),"KiteSetup.exe"),SESSION_FILE_PATH:o.join(process.env.LOCALAPPDATA,"Kite","session.json"),set KITE_EXE_PATH(e){h=e},get KITE_EXE_PATH(){if(!h){let e,t;t=process.env.ProgramW6432?o.join(process.env.ProgramW6432,"Kite"):"C:\\Program Files\\Kite";try{const n=String(a.execSync(d)).trim();e="not found"!==n?n:t}catch(n){e=t}h=o.join(e,"kited.exe")}return h},get releaseURL(){return this.RELEASE_URL},get downloadPath(){return this.KITE_INSTALLER_PATH},get installPath(){return this.KITE_EXE_PATH},get enterpriseInstallPath(){return null},get allInstallPaths(){return[this.installPath]},get allEnterpriseInstallPaths(){return[]},get sessionFilePath(){return this.SESSION_FILE_PATH},isAdmin(){try{return a.execSync("net session"),!0}catch(e){return!1}},arch:()=>"64bit",isOSSupported:()=>!0,isOSVersionSupported(){return parseFloat(i.release())>=6.1&&"64bit"===this.arch()},isKiteSupported(){return this.isOSVersionSupported()},isKiteInstalled(){return new Promise((e,t)=>{r.exists(this.KITE_EXE_PATH,n=>{n?e():t(new u("",{state:p.UNINSTALLED}))})})},isKiteEnterpriseInstalled:()=>Promise.reject(new u("Kite Enterprise is currently not supported on windows",{state:p.UNSUPPORTED})),hasManyKiteInstallation(){return this.allInstallPaths.length>1},hasManyKiteEnterpriseInstallation(){return this.allEnterpriseInstallPaths.length>1},hasBothKiteInstalled(){return Promise.all([this.isKiteInstalled(),this.isKiteEnterpriseInstalled()])},downloadKiteRelease(e){return this.downloadKite(this.releaseURL,e||{})},downloadKite(e,t){return t=t||{},this.streamKiteDownload(e,t.onDownloadProgress).then(()=>c.guardCall(t.onDownload)).then(()=>t.install&&this.installKite(t))},streamKiteDownload(e,t){const n=s.request(e);return n.end(),c.followRedirections(n).then(e=>{if(t){const n=parseInt(e.headers["content-length"],10);let i=0;e.on("data",e=>{i+=e.length,t(i,n,i/n)})}return c.promisifyStream(e.pipe(r.createWriteStream(this.downloadPath))).then(()=>new Promise((e,t)=>{setTimeout(e,100)}))})},installKite(e){e=e||{};var t=Object.create(process.env);return t.KITE_SKIP_ONBOARDING="1",c.guardCall(e.onInstallStart),c.execPromise(`"${this.KITE_INSTALLER_PATH}" --skip-onboarding --plugin-launch --channel=autocomplete-python`,{env:t},"kite_install_error","Unable to run Kite installer").then(()=>c.guardCall(e.onCopy)).then(()=>r.unlinkSync(this.KITE_INSTALLER_PATH)).then(()=>c.guardCall(e.onRemove))},isKiteRunning:()=>c.spawnPromise("tasklist","tasklist_error","Unable to run the tasklist command and verify whether kite is running or not").then(e=>{if(e.split("\n").every(e=>-1===e.indexOf("kited.exe")))throw new u("Unable to find kited.exe process in the tasks list",{state:p.NOT_RUNNING})}),runKiteWithCopilot(){var e=Object.create(process.env);return delete e.ELECTRON_RUN_AS_NODE,new Promise((t,n)=>{try{a.spawn(this.KITE_EXE_PATH,["--plugin-launch-with-copilot","--channel=autocomplete-python"],{detached:!0,env:e}),t()}catch(t){n(new l("kite_exe_error",{message:"Unable to run kite executable",callStack:t.stack,cmd:this.KITE_EXE_PATH,options:{detached:!0,env:e}}))}})},runKite(){return this.isKiteRunning().catch(()=>{var e=Object.create(process.env);e.KITE_SKIP_ONBOARDING="1",delete e.ELECTRON_RUN_AS_NODE;try{a.spawn(this.KITE_EXE_PATH,["--plugin-launch","--channel=autocomplete-python"],{detached:!0,env:e})}catch(t){throw new l("kite_exe_error",{message:"Unable to run kite executable",callStack:t.stack,cmd:this.KITE_EXE_PATH,options:{detached:!0,env:e}})}})},isKiteEnterpriseRunning:()=>Promise.reject(new u("Kite Enterprise is currently not supported on windows",{state:p.UNSUPPORTED})),runKiteEnterprise:()=>Promise.reject(new u("Kite Enterprise is currently not supported on windows",{state:p.UNSUPPORTED}))};e.exports=f},function(e,t,n){"use strict";const i=n(1),r=n(5),o=n(3),s=n(4),a=n(8),c=n(23),u=n(30),l=n(49),{STATES:p}=n(15),d={RELEASE_URL:"https://linux.kite.com/dls/linux/current",SESSION_FILE_PATH:o.join(i.homedir(),".kite","session.json"),KITE_INSTALLER_PATH:o.join(i.tmpdir(),"kite-installer.sh"),KITED_PATH:o.join(i.homedir(),".local","share","kite","kited"),KITED_PROCESS:/kited/,KITE_CURRENT_LINK:o.join(i.homedir(),".local","share","kite","current"),memKitedInstallPath:null,get releaseURL(){return this.RELEASE_URL},get downloadPath(){return this.KITE_INSTALLER_PATH},get installPath(){return this.memKitedInstallPath||(this.memKitedInstallPath=this.KITED_PATH),this.memKitedInstallPath},resetInstallPath(){this.memKitedInstallPath=null},get allInstallPaths(){return[this.installPath]},get enterpriseInstallPath(){return null},get allEnterpriseInstallPaths(){return null},get sessionFilePath(){return this.SESSION_FILE_PATH},hasManyKiteInstallation(){return this.allInstallPaths.length>1},hasManyKiteEnterpriseInstallation:()=>!1,isAdmin(){try{const e=c.whoami();return String(a.execSync("getent group root adm admin sudo")).split("\n").map(e=>e.substring(e.lastIndexOf(":")+1)).reduce((e,t)=>(t.split(",").forEach(t=>e.push(t.trim())),e),[]).includes(e)}catch(e){try{const e=i.userInfo();return 0===e.uid||"root"===e.username}catch(e){return!1}}},arch:()=>i.arch(),isOSSupported:()=>!0,isOSVersionSupported:()=>"x64"===i.arch(),isKiteSupported(){return this.isOSSupported()&&this.isOSVersionSupported()},isKiteInstalled(){return new Promise((e,t)=>{r.exists(this.installPath,n=>{n?e():t(new u("",{state:p.UNINSTALLED}))})})},downloadKiteRelease(e){return this.downloadKite(this.releaseURL,e||{})},downloadKite(e,t){return t=t||{},this.downloadKiteInstallerScript(e,t.onDownloadProgress).then(()=>this.streamKiteDownload(this.downloadPath,t.onDownloadProgress)).then(()=>c.guardCall(t.onDownload)).then(()=>t.install&&this.installKite(t))},downloadKiteInstallerScript(e,t){const n=s.request(e);return n.end(),t&&t(0,100,0),c.followRedirections(n).then(e=>c.promisifyStream(e.pipe(r.createWriteStream(this.downloadPath))).then(()=>r.chmodSync(this.downloadPath,448)).then(()=>new Promise((e,t)=>{setTimeout(e,100)})))},streamKiteDownload:(e,t)=>new Promise((n,i)=>{try{const r=a.spawn(e,["--download"],{shell:!0});if(r.on("close",(function(t){if(0===t)n(r);else{const n=new Error;i(new l("kited_error",{message:`Unable to download Kite. Unexpected exit code ${t}.`,stderr:"",stdout:"",callStack:n.stack,cmd:e+" --download",options:["--download"]}))}})),t){let e=-1;r.stdout.on("data",n=>{let i,r,o=n.toString("utf8"),s=/Download: (\d+)\/(\d+)/g;for(;null!==(r=s.exec(o));)i=r;if(i){let n=parseInt(i[1],10),r=parseInt(i[2],10);n>=0&&r>=n&&n>e&&(e=n,t(n,r,n/r))}})}}catch(e){console.error(e),i(e)}}),installKite(e){return e=e||{},c.guardCall(e.onInstallStart),c.spawnPromise(this.KITE_INSTALLER_PATH,["--install"],{shell:!0},"kite-installer install error","unable to install kite with "+this.KITE_INSTALLER_PATH).then(()=>this.resetInstallPath()).then(()=>c.guardCall(e.onMount)).then(()=>r.unlinkSync(this.KITE_INSTALLER_PATH)).then(()=>c.guardCall(e.onRemove))},isKiteRunning(){return c.spawnPromise("/bin/ps",["-axo","pid,command"],{encoding:"utf-8"},"ps_error","unable to run the ps command and verify that Kite is running").then(e=>{if(!e.split("\n").some(e=>this.KITED_PROCESS.test(e)))throw new u("Kite process could not be found in the processes list",{state:p.NOT_RUNNING})})},runKiteWithCopilot(){const e=Object.assign({},process.env);return e.SKIP_KITE_ONBOARDING="1",delete e.ELECTRON_RUN_AS_NODE,new Promise((t,n)=>{try{if(!r.existsSync(this.installPath))throw new Error("kited is not installed");a.spawn(this.installPath,["--plugin-launch-with-copilot","--channel=autocomplete-python"],{detached:!0,stdio:"ignore",env:e}),t()}catch(t){n(new l("kited_error",{message:t.message&&"kited is not installed"===t.message||"unable to run kited binary",callStack:t.stack,cmd:this.installPath,options:{detached:!0,env:e}}))}})},runKite(){return this.isKiteRunning().catch(()=>{const e=Object.assign({},process.env);e.SKIP_KITE_ONBOARDING="1",delete e.ELECTRON_RUN_AS_NODE;try{if(!r.existsSync(this.installPath))throw new Error("kited is not installed");a.spawn(this.installPath,["--plugin-launch","--channel=autocomplete-python"],{detached:!0,stdio:"ignore",env:e})}catch(t){throw new l("kited_error",{message:t.message&&"kited is not installed"===t.message||"unable to run kited binary",callStack:t.stack,cmd:this.installPath,options:{detached:!0,env:e}})}})},hasBothKiteInstalled(){return Promise.all([this.isKiteInstalled(),this.isKiteEnterpriseInstalled()])},isKiteEnterpriseInstalled(){return this.notSupported()},isKiteEnterpriseRunning(){return this.notSupported()},runKiteEnterprise(){return this.notSupported()},notSupported:()=>Promise.reject(new u("Your platform is currently not supported",{state:p.UNSUPPORTED}))};e.exports=d},function(e,t,n){"use strict";const i=n(30),{STATES:r}=n(15);e.exports={get releaseURL(){return null},get downloadPath(){return null},get installPath(){return null},get allInstallPaths(){return null},get enterpriseInstallPath(){return null},get allEnterpriseInstallPaths(){return null},get sessionFilePath(){return null},hasManyKiteInstallation:()=>!1,hasManyKiteEnterpriseInstallation:()=>!1,isAdmin:()=>!1,arch:()=>null,isOSSupported:()=>!1,isOSVersionSupported:()=>!1,isKiteSupported:()=>!1,isKiteInstalled(){return this.notSupported()},downloadKite(e){return this.notSupported()},installKite(e){return this.notSupported()},isKiteRunning(){return this.notSupported()},runKite(){return this.notSupported()},hasBothKiteInstalled(){return Promise.all([this.isKiteInstalled(),this.isKiteEnterpriseInstalled()])},isKiteEnterpriseInstalled(){return this.notSupported()},isKiteEnterpriseRunning(){return this.notSupported()},runKiteEnterprise(){return this.notSupported()},notSupported:()=>Promise.reject(new i("Your platform is currently not supported",{state:r.UNSUPPORTED}))}},function(e,t,n){"use strict";const i=n(1),{CompositeDisposable:r,Emitter:o}=n(0),s=n(13),{STATES:a}=s,{fromSetting:c,all:u}=n(189),l=n(191);e.exports=class{get NOTIFIERS(){return{[a.UNSUPPORTED]:"warnNotSupported",[a.UNINSTALLED]:"warnNotInstalled",[a.RUNNING]:"warnNotReachable",[a.REACHABLE]:"warnNotAuthenticated"}}get NOTIFICATION_METRICS(){return{[a.UNSUPPORTED]:"not-supported",[a.RUNNING]:"not-reachable",[a.REACHABLE]:"not-authenticated"}}pauseNotifications(){this.paused=!0}resumeNotifications(){this.paused=!1}constructor(e){this.app=e,this.emitter=new o,this.subscriptions=new r,this.lastShown={},this.queue=new l,this.hasSeenGoBetaNotification=!1,this.subscriptions.add(e.onDidGetState(({state:e,canNotify:t})=>{t&&this.shouldNotify(e)&&this.notify(e)})),this.subscriptions.add(this.queue.onDidNotify(e=>{const{type:t,metric:n,key:i}=this.extractNotificationMetrics(e);this.lastShown[i]=new Date,this.emit("did-notify",{notification:n,type:t})})),this.subscriptions.add(this.queue.onDidClickNotificationButton(({notification:e,button:t})=>{const{type:n,metric:i}=this.extractNotificationMetrics(e);this.emit("did-click-notification-button",{button:t.metric,notification:i,type:n})})),this.subscriptions.add(this.queue.onDidDismissNotification(e=>{const{type:t,metric:n}=this.extractNotificationMetrics(e);this.emit("did-dismiss-notification",{notification:n,type:t})})),this.subscriptions.add(this.queue.onDidRejectNotification(e=>{const{type:t,metric:n}=this.extractNotificationMetrics(e);this.emit("did-reject-notification",{notification:n,type:t})}))}extractNotificationMetrics(e){const t=e.options;return{type:t.metricType||e.level,metric:"number"==typeof t.metric?this.NOTIFICATION_METRICS[t.metric]:t.metric,key:t.key||t.metric}}onDidNotify(e){return this.emitter.on("did-notify",e)}onDidRejectNotification(e){return this.emitter.on("did-reject-notification",e)}onDidDismissNotification(e){return this.emitter.on("did-dismiss-notification",e)}onDidClickNotificationButton(e){return this.emitter.on("did-click-notification-button",e)}activateForcedNotifications(){this.forceNotification=!0}deactivateForcedNotifications(){this.forceNotification=!1}dispose(){this.queue.abort(),this.subscriptions.dispose(),this.emitter.dispose(),delete this.app,delete this.subscriptions,delete this.emitter}notify(e){this[this.NOTIFIERS[e]]&&this[this.NOTIFIERS[e]](e)}showGoBetaNotification(e){!this.hasSeenGoBetaNotification&&atom.config.get("kite.showGoBetaNotification")&&(this.queue.addInfo("Welcome to the Kite for Go Beta!",{dismissable:!0,description:"You've got early access to our line-of-code completions for Go, powered by machine learning. If you'd like to disable the beta, you can do so in the Copilot.",buttons:[{text:"Open Copilot",onDidClick(t){e.openCopilot(),t&&t()}},{text:"Hide Forever",onDidClick(e){atom.config.set("kite.showGoBetaNotification",!1),e&&e()}}]}),this.queue.onDidNotify(e=>{this.hasSeenGoBetaNotification=!0}))}onboardingNotifications(e){this.queue.addInfo("Kite is now integrated with Atom",{dismissable:!0,description:"Kite is an AI-powered programming assistant that shows you the right information at the right time to keep you in the flow.",buttons:[{text:"Learn how to use Kite",onDidClick(e){atom.applicationDelegate.openExternal("http://help.kite.com/category/43-atom-integration"),atom.config.set("kite.showWelcomeNotificationOnStartup",!1),e&&e()}},{text:"Don't show this again",onDidClick(e){atom.config.set("kite.showWelcomeNotificationOnStartup",!1),e&&e()}}]},{condition:u(c("kite.showWelcomeNotificationOnStartup"),()=>!atom.inSpecMode())})}warnNotSupported(e){let t="Sorry, the Kite engine only supports macOS and Windows at the moment.";switch(i.platform()){case"win32":const e=s.arch();t="64bit"!==e?"Sorry, the Kite engine only supports Windows7 and higher with a 64bit architecture.\n          Your version is actually recognised as: "+e:"Sorry, the Kite engine only supports Windows7 and higher.";break;case"darwin":t="Sorry, the Kite engine only supports OSX 10.10 (Yosemite) and higher.";break;case"linux":t="Sorry, the Kite engine only supports Ubuntu 18.04 and higher"}this.queue.addError("Kite doesn't support your OS",{description:t,icon:"circle-slash"},{metric:e})}warnNotInstalled(e){this.queue.addWarning("The Kite engine is not installed",{description:"Install Kite to get Python completions, documentation, and examples.",icon:"circle-slash",buttons:[{text:"Install Kite",metric:"install",onDidClick:e=>{e&&e(),this.app&&this.app.installFlow()}}]},{metric:e})}warnNotRunning(e){Promise.all([s.isKiteInstalled().then(()=>!0).catch(()=>!1),s.isKiteEnterpriseInstalled().then(()=>!0).catch(()=>!1)]).then(([t,n])=>{s.hasManyKiteInstallation()||s.hasManyKiteEnterpriseInstallation()?this.queue.addWarning("The Kite engine is not running",{description:"You have multiple versions of Kite installed. Please launch your desired one.",icon:"circle-slash"},{metric:e}):t&&n?this.queue.addWarning("The Kite engine is not running",{description:"Start the Kite background service to get Python completions, documentation, and examples.",icon:"circle-slash",buttons:[{text:"Start Kite",metric:"start",onDidClick:e=>{e&&e(),this.app&&this.app.start().catch(e=>this.warnFailedStart(e))}},{text:"Start Kite Enterprise",metric:"startEnterprise",onDidClick:e=>{e&&e(),this.app&&this.app.startEnterprise().catch(e=>this.warnFailedStartEnterprise(e))}}]},{metric:e}):t?this.queue.addWarning("The Kite engine is not running",{description:"Start the Kite background service to get Python completions, documentation, and examples.",icon:"circle-slash",buttons:[{text:"Start Kite",metric:"start",onDidClick:e=>{e&&e(),this.app&&this.app.start().catch(e=>this.warnFailedStart(e))}}]},{metric:e}):n&&this.queue.addWarning("The Kite engine is not running",{description:"Start the Kite background service to get Python completions, documentation, and examples.",icon:"circle-slash",buttons:[{text:"Start Kite Enterprise",metric:"startEnterprise",onDidClick:e=>{e&&e(),this.app&&this.app.startEnterprise().catch(e=>this.warnFailedStartEnterprise(e))}}]},{metric:e})})}warnFailedStart(e){this.queue.addError("Unable to start Kite engine",{description:JSON.stringify(e),buttons:[{text:"Retry",metric:"retry",onDidClick:e=>{e&&e(),this.app&&this.app.start().catch(e=>this.warnFailedStart(e))}}]},{metric:"launch"})}warnFailedStartEnterprise(e){this.queue.addError("Unable to start Kite engine",{description:JSON.stringify(e),buttons:[{text:"Retry",metric:"retryEnterprise",onDidClick:e=>{e&&e(),this.app&&this.app.startEnterprise().catch(e=>this.warnFailedStartEnterprise(e))}}]},{metric:"launchEnterprise"})}warnNotReachable(e){this.queue.addError("The Kite background service is running but not reachable",{description:"Try killing Kite from the Activity Monitor."},{metric:e})}warnNotAuthenticated(e){navigator.onLine&&!document.querySelector("kite-login")&&this.queue.addWarning("You need to login to the Kite engine",{description:["Kite needs to be authenticated to access","the index of your code stored on the cloud."].join(" "),icon:"circle-slash",buttons:[{text:"Login",metric:"login",onDidClick:e=>{e&&e(),this.app&&this.app.login()}}]},{metric:e})}warnUnauthorized(e){this.queue.addError("Unable to login",{description:JSON.stringify(e),buttons:[{text:"Retry",metric:"retry",onDidClick:e=>{e&&e(),this.app&&this.app.login()}}]},{metric:"unauthorized"})}warnOnboardingFileFailure(){this.queue.addWarning("We were unable to open the tutorial",{description:"We had an internal error setting up our interactive tutorial. Try again later, or email us at feedback@kite.com",buttons:[{text:"OK",onDidClick:e=>e&&e()}]})}warnKSGNotSupported(){this.queue.addWarning("This feature is only available for Python files.",{description:"Kite's Search Stack Overflow is specialized for Python.",buttons:[{text:"OK",onDidClick:e=>e&&e()}]})}notifyReady(e){this.queue.addSuccess("The Kite engine is ready",{description:"We checked that the autocomplete engine is installed, running, responsive, and authenticated."},{metric:e,metricType:"notification"})}shouldNotify(e){return this.forceNotification||!this.lastShown[e]&&!this.paused}emit(...e){this.emitter&&this.emitter.emit(...e)}truncateLeft(e,t){return e.length<=t?e:"…"+e.slice(e.length-t)}}},function(e,t,n){"use strict";const i=n(190),r=e=>t=>!r.store.getItem(`${e||""}${t.id}`),o=e=>t=>!o.store.getItem(`${e||""}${t.id}`);r.store=localStorage,o.store=new i,e.exports={all:(...e)=>t=>e.every(e=>e(t)),any:(...e)=>t=>e.some(e=>e(t)),fromSetting:(e,t)=>n=>t?atom.config.get(e)===t:atom.config.get(e),once:r,oncePerWindow:o}},function(e,t,n){"use strict";e.exports=class{constructor(){this.content={}}setItem(e,t){return this.content[e]=String(t),t}getItem(e){return this.content[e]}removeItem(e){delete this.content[e]}}},function(e,t,n){"use strict";const{Emitter:i,CompositeDisposable:r}=n(0),o=n(192),s=n(193);e.exports=class{constructor(){this.queue=[],this.promise=Promise.resolve(),this.emitter=new i}onDidNotify(e){return this.emitter.on("did-notify",e)}onDidRejectNotification(e){return this.emitter.on("did-reject-notification",e)}onDidDismissNotification(e){return this.emitter.on("did-dismiss-notification",e)}onDidClickNotificationButton(e){return this.emitter.on("did-click-notification-button",e)}abort(){this.aborted=!0,this.activeNotification&&this.activeNotification.dismiss()}add(e){return this.promise="function"==typeof e?this.promise.then(()=>this.aborted?null:e()).then(e=>(this.activeNotification=e,this.execute(e))).then(()=>{delete this.activeNotification}):this.promise.then(()=>this.aborted?null:(this.activeNotification=e,this.execute(e))).then(()=>{delete this.activeNotification})}execute(e){return e?(this.subscribeToNotification(e),e.execute()):null}subscribeToNotification(e){const t=new r,n=e=>t=>this.emitter.emit(e,t),i=e=>n=>{this.emitter.emit(e,n),t.dispose()};t.add(e.onDidNotify(n("did-notify"))),t.add(e.onDidClickNotificationButton(n("did-click-notification-button"))),t.add(e.onDidDismissNotification(i("did-dismiss-notification"))),t.add(e.onDidRejectNotification(i("did-reject-notification")))}addModal(e,t){return this.add(new s(e,t))}addInfo(e,t,n){return this.add(new o("info",e,t,n))}addSuccess(e,t,n){return this.add(new o("success",e,t,n))}addWarning(e,t,n){return this.add(new o("warning",e,t,n))}addError(e,t,n){return this.add(new o("error",e,t,n))}addFatalError(e,t,n){return this.add(new o("fatalError",e,t,n))}}},function(e,t,n){"use strict";const{Emitter:i}=n(0);e.exports=class{constructor(e,t,n={},r={}){this.level=e,this.title=t,this.emitter=new i,this.notificationOptions=n,this.options=r,this.notificationOptions.dismissable=null==this.notificationOptions.dismissable||this.notificationOptions.dismissable,this.id=r.id||t.toLowerCase().replace(/[^\w]+/g,"-")}onDidNotify(e){return this.emitter.on("did-notify",e)}onDidRejectNotification(e){return this.emitter.on("did-reject-notification",e)}onDidDismissNotification(e){return this.emitter.on("did-dismiss-notification",e)}onDidClickNotificationButton(e){return this.emitter.on("did-click-notification-button",e)}execute(){return new Promise((e,t)=>{const{condition:n,onDidDismiss:i}=this.options;var r;!n||n()?(this.notification=atom.notifications["add"+(r=this.level,r.replace(/^\w/,e=>e.toUpperCase()))](this.title,this.notificationOptions),this.instrumentNotification(this.notification,t=>{i&&i(t),e(t)})):e()})}dismiss(){this.notification&&this.notification.dismiss()}instrumentNotification(e,t){let n;this.emitter.emit("did-notify",this),this.notificationOptions.buttons&&this.notificationOptions.buttons.forEach(t=>{const{onDidClick:i}=t;t.onDidClick=()=>{n=t.text,this.emitter.emit("did-click-notification-button",{notification:this,button:t}),i&&i(()=>e.dismiss())}});const i=e.onDidDismiss(()=>{t&&t(n),n?this.emitter.emit("did-dismiss-notification",this):this.emitter.emit("did-reject-notification",this),this.emitter.dispose(),i.dispose()});return e}}},function(e,t,n){"use strict";const{Emitter:i}=n(0);e.exports=class{constructor({content:e,buttons:t}={},n={}){this.content=e,this.buttons=t,this.options=n,this.emitter=new i}onDidNotify(e){return this.emitter.on("did-notify",e)}onDidRejectNotification(e){return this.emitter.on("did-reject-notification",e)}onDidDismissNotification(e){return this.emitter.on("did-dismiss-notification",e)}onDidClickNotificationButton(e){return this.emitter.on("did-click-notification-button",e)}dismiss(){this.destroy()}destroy(){this.modal.destroy(),delete this.modal}execute(){return new Promise((e,t)=>{const{condition:n,onDidDestroy:i}=this.options;if(!n||n()){const t=document.createElement("div");if(t.innerHTML=this.content,this.buttons){const e=document.createElement("div");e.className="modal-metrics-row",this.buttons.forEach((t,n)=>{const i=document.createElement("div");i.className="modal-metrics-cell",i.innerHTML=`\n            <button tabindex="${n}"\n                    class="btn btn-${t.className||"default"} btn-block">\n              ${t.text}\n            </button>`,i.querySelector("button").addEventListener("click",()=>{t.onDidClick&&t.onDidClick(this)}),e.appendChild(i)}),t.appendChild(e)}this.modal=atom.workspace.addModalPanel({item:t,autoFocus:!0});const n=this.modal.onDidDestroy(()=>{i&&i(),n.dispose(),this.emitter.dispose(),e()})}else e()})}}},function(e,t,n){"use strict";const i=n(82),{distinctID:r,EDITOR_UUID:o,OS_VERSION:s}=n(11);if(atom.inSpecMode())e.exports=class{dispose(){}};else{window._rollbarConfig={accessToken:"d1aa81c4290d409e847153a29b2872b3",autoInstrument:!1,payload:{environment:"production",distinctID:r(),editor_uuid:o,editor:"atom",atom_version:atom.getVersion(),kite_plugin_version:i.version,os:s}},n(195);class t{constructor(){this.subscription=atom.onDidThrowError(({column:e,line:t,message:n,originalError:i,url:r})=>{/\/kite\/|\/kite-installer\//.test(i.stack)&&!/kite$/.test(atom.project.getPaths()[0]||"")&&window.Rollbar.error(i)})}dispose(){this.subscription&&this.subscription.dispose()}}e.exports=t}},function(e,t,n){!function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=5)}([function(e,t,n){"use strict";var i=n(9),r={},o=!1;function s(e,t){return t===a(e)}function a(e){var t=typeof e;return"object"!==t?t:e?e instanceof Error?"error":{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase():"null"}function c(e){return s(e,"function")}function u(e){var t=Function.prototype.toString.call(Object.prototype.hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?"),n=RegExp("^"+t+"$");return l(e)&&n.test(e)}function l(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}function p(e,t,n){var i,r,o,a=s(e,"object"),c=s(e,"array"),u=[];if(a&&-1!==n.indexOf(e))return e;if(n.push(e),a)for(i in e)Object.prototype.hasOwnProperty.call(e,i)&&u.push(i);else if(c)for(o=0;o<e.length;++o)u.push(o);var l=a?{}:[],p=!0;for(o=0;o<u.length;++o)r=e[i=u[o]],l[i]=t(i,r,n),p=p&&l[i]===e[i];return 0==u.length||p?e:l}function d(){return"********"}function h(){var e=y();return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(t){var n=(e+16*Math.random())%16|0;return e=Math.floor(e/16),("x"===t?n:7&n|8).toString(16)}))}o||(o=!0,s(JSON,"undefined")||(u(JSON.stringify)&&(r.stringify=JSON.stringify),u(JSON.parse)&&(r.parse=JSON.parse)),c(r.stringify)&&c(r.parse)||n(10)(r));var f={strictMode:!1,key:["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"],q:{name:"queryKey",parser:/(?:^|&)([^&=]*)=?([^&]*)/g},parser:{strict:/^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,loose:/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/}};function m(e,t){var n,i;try{n=r.stringify(e)}catch(r){if(t&&c(t))try{n=t(e)}catch(e){i=e}else i=r}return{error:i,value:n}}function g(e,t){return function(n,i){try{t(n,i)}catch(t){e.error(t)}}}var v=["log","network","dom","navigation","error","manual"],x=["critical","error","warning","info","debug"];function b(e,t){for(var n=0;n<e.length;++n)if(e[n]===t)return!0;return!1}function y(){return Date.now?+Date.now():+new Date}e.exports={addParamsAndAccessTokenToPath:function(e,t,n){(n=n||{}).access_token=e;var i,r=[];for(i in n)Object.prototype.hasOwnProperty.call(n,i)&&r.push([i,n[i]].join("="));var o="?"+r.sort().join("&");(t=t||{}).path=t.path||"";var s,a=t.path.indexOf("?"),c=t.path.indexOf("#");-1!==a&&(-1===c||c>a)?(s=t.path,t.path=s.substring(0,a)+o+"&"+s.substring(a+1)):-1!==c?(s=t.path,t.path=s.substring(0,c)+o+s.substring(c)):t.path=t.path+o},createItem:function(e,t,n,r,o){for(var s,c,u,l,p,d,f=[],m=0,v=e.length;m<v;++m){var x=a(d=e[m]);switch(x){case"undefined":break;case"string":s?f.push(d):s=d;break;case"function":l=g(t,d);break;case"date":f.push(d);break;case"error":case"domexception":case"exception":c?f.push(d):c=d;break;case"object":case"array":if(d instanceof Error||"undefined"!=typeof DOMException&&d instanceof DOMException){c?f.push(d):c=d;break}if(r&&"object"===x&&!p){for(var b=0,w=r.length;b<w;++b)if(void 0!==d[r[b]]){p=d;break}if(p)break}u?f.push(d):u=d;break;default:if(d instanceof Error||"undefined"!=typeof DOMException&&d instanceof DOMException){c?f.push(d):c=d;break}f.push(d)}}f.length>0&&((u=i(u)).extraArgs=f);var k={message:s,err:c,custom:u,timestamp:y(),callback:l,notifier:n,diagnostic:{},uuid:h()};return function(e,t){t&&void 0!==t.level&&(e.level=t.level,delete t.level);t&&void 0!==t.skipFrames&&(e.skipFrames=t.skipFrames,delete t.skipFrames)}(k,u),r&&p&&(k.request=p),o&&(k.lambdaContext=o),k._originalArgs=e,k},createTelemetryEvent:function(e){for(var t,n,i,r,o=0,s=e.length;o<s;++o){switch(a(r=e[o])){case"string":!t&&b(v,r)?t=r:!i&&b(x,r)&&(i=r);break;case"object":n=r}}return{type:t||"manual",metadata:n||{},level:i}},filterIp:function(e,t){if(e&&e.user_ip&&!0!==t){var n=e.user_ip;if(t)try{var i;if(-1!==n.indexOf("."))(i=n.split(".")).pop(),i.push("0"),n=i.join(".");else if(-1!==n.indexOf(":")){if((i=n.split(":")).length>2){var r=i.slice(0,3),o=r[2].indexOf("/");-1!==o&&(r[2]=r[2].substring(0,o));n=r.concat("0000:0000:0000:0000:0000").join(":")}}else n=null}catch(e){n=null}else n=null;e.user_ip=n}},formatArgsAsString:function(e){var t,n,i,r=[];for(t=0,n=e.length;t<n;++t){switch(a(i=e[t])){case"object":(i=(i=m(i)).error||i.value).length>500&&(i=i.substr(0,497)+"...");break;case"null":i="null";break;case"undefined":i="undefined";break;case"symbol":i=i.toString()}r.push(i)}return r.join(" ")},formatUrl:function(e,t){if(!(t=t||e.protocol)&&e.port&&(80===e.port?t="http:":443===e.port&&(t="https:")),t=t||"https:",!e.hostname)return null;var n=t+"//"+e.hostname;return e.port&&(n=n+":"+e.port),e.path&&(n+=e.path),n},get:function(e,t){if(e){var n=t.split("."),i=e;try{for(var r=0,o=n.length;r<o;++r)i=i[n[r]]}catch(e){i=void 0}return i}},handleOptions:function(e,t,n){var r=i(e,t,n);return!t||t.overwriteScrubFields||t.scrubFields&&(r.scrubFields=(e.scrubFields||[]).concat(t.scrubFields)),r},isError:function(e){return s(e,"error")||s(e,"exception")},isFunction:c,isIterable:function(e){var t=a(e);return"object"===t||"array"===t},isNativeFunction:u,isType:s,isObject:l,isString:function(e){return"string"==typeof e||e instanceof String},jsonParse:function(e){var t,n;try{t=r.parse(e)}catch(e){n=e}return{error:n,value:t}},LEVELS:{debug:0,info:1,warning:2,error:3,critical:4},makeUnhandledStackInfo:function(e,t,n,i,r,o,s,a){var c={url:t||"",line:n,column:i};c.func=a.guessFunctionName(c.url,c.line),c.context=a.gatherContext(c.url,c.line);var u=document&&document.location&&document.location.href,l=window&&window.navigator&&window.navigator.userAgent;return{mode:o,message:r?String(r):e||s,url:u,stack:[c],useragent:l}},merge:i,now:y,redact:d,sanitizeUrl:function(e){var t=function(e){if(!s(e,"string"))return;for(var t=f,n=t.parser[t.strictMode?"strict":"loose"].exec(e),i={},r=0,o=t.key.length;r<o;++r)i[t.key[r]]=n[r]||"";return i[t.q.name]={},i[t.key[12]].replace(t.q.parser,(function(e,n,r){n&&(i[t.q.name][n]=r)})),i}(e);return t?(""===t.anchor&&(t.source=t.source.replace("#","")),e=t.source.replace("?"+t.query,"")):"(unknown)"},scrub:function(e,t){var n=function(e){for(var t,n=[],i=0;i<e.length;++i)t="^\\[?(%5[bB])?"+e[i]+"\\[?(%5[bB])?\\]?(%5[dD])?$",n.push(new RegExp(t,"i"));return n}(t=t||[]),i=function(e){for(var t,n=[],i=0;i<e.length;++i)t="\\[?(%5[bB])?"+e[i]+"\\[?(%5[bB])?\\]?(%5[dD])?",n.push(new RegExp("("+t+"=)([^&\\n]+)","igm"));return n}(t);function r(e,t){return t+"********"}return p(e,(function e(t,o,a){var c=function(e,t){var i;for(i=0;i<n.length;++i)if(n[i].test(e)){t="********";break}return t}(t,o);return c===o?s(o,"object")||s(o,"array")?p(o,e,a):function(e){var t;if(s(e,"string"))for(t=0;t<i.length;++t)e=e.replace(i[t],r);return e}(c):c}),[])},set:function(e,t,n){if(e){var i=t.split("."),r=i.length;if(!(r<1))if(1!==r)try{for(var o=e[i[0]]||{},s=o,a=1;a<r-1;++a)o[i[a]]=o[i[a]]||{},o=o[i[a]];o[i[r-1]]=n,e[i[0]]=s}catch(e){return}else e[i[0]]=n}},stringify:m,maxByteSize:function(e){for(var t=0,n=e.length,i=0;i<n;i++){var r=e.charCodeAt(i);r<128?t+=1:r<2048?t+=2:r<65536&&(t+=3)}return t},traverse:p,typeName:a,uuid4:h}},function(e,t,n){"use strict";n(16);var i=n(17),r=n(0);e.exports={error:function(){var e=Array.prototype.slice.call(arguments,0);e.unshift("Rollbar:"),i.ieVersion()<=8?console.error(r.formatArgsAsString(e)):console.error.apply(console,e)},info:function(){var e=Array.prototype.slice.call(arguments,0);e.unshift("Rollbar:"),i.ieVersion()<=8?console.info(r.formatArgsAsString(e)):console.info.apply(console,e)},log:function(){var e=Array.prototype.slice.call(arguments,0);e.unshift("Rollbar:"),i.ieVersion()<=8?console.log(r.formatArgsAsString(e)):console.log.apply(console,e)}}},function(e,t,n){"use strict";var i=n(0);function r(e,t){return[e,i.stringify(e,t)]}function o(e,t){var n=e.length;return n>2*t?e.slice(0,t).concat(e.slice(n-t)):e}function s(e,t,n){n=void 0===n?30:n;var r,s=e.data.body;if(s.trace_chain)for(var a=s.trace_chain,c=0;c<a.length;c++)r=o(r=a[c].frames,n),a[c].frames=r;else s.trace&&(r=o(r=s.trace.frames,n),s.trace.frames=r);return[e,i.stringify(e,t)]}function a(e,t){return t&&t.length>e?t.slice(0,e-3).concat("..."):t}function c(e,t,n){return[t=i.traverse(t,(function t(n,r,o){switch(i.typeName(r)){case"string":return a(e,r);case"object":case"array":return i.traverse(r,t,o);default:return r}}),[]),i.stringify(t,n)]}function u(e){return e.exception&&(delete e.exception.description,e.exception.message=a(255,e.exception.message)),e.frames=o(e.frames,1),e}function l(e,t){var n=e.data.body;if(n.trace_chain)for(var r=n.trace_chain,o=0;o<r.length;o++)r[o]=u(r[o]);else n.trace&&(n.trace=u(n.trace));return[e,i.stringify(e,t)]}function p(e,t){return i.maxByteSize(e)>t}e.exports={truncate:function(e,t,n){n=void 0===n?524288:n;for(var i,o,a,u=[r,s,c.bind(null,1024),c.bind(null,512),c.bind(null,256),l];i=u.shift();)if(e=(o=i(e,t))[0],(a=o[1]).error||!p(a.value,n))return a;return a},raw:r,truncateFrames:s,truncateStrings:c,maybeTruncateValue:a}},function(e,t,n){"use strict";e.exports={parse:function(e){var t,n,i={protocol:null,auth:null,host:null,path:null,hash:null,href:e,hostname:null,port:null,pathname:null,search:null,query:null};if(-1!==(t=e.indexOf("//"))?(i.protocol=e.substring(0,t),n=t+2):n=0,-1!==(t=e.indexOf("@",n))&&(i.auth=e.substring(n,t),n=t+1),-1===(t=e.indexOf("/",n))){if(-1===(t=e.indexOf("?",n)))return-1===(t=e.indexOf("#",n))?i.host=e.substring(n):(i.host=e.substring(n,t),i.hash=e.substring(t)),i.hostname=i.host.split(":")[0],i.port=i.host.split(":")[1],i.port&&(i.port=parseInt(i.port,10)),i;i.host=e.substring(n,t),i.hostname=i.host.split(":")[0],i.port=i.host.split(":")[1],i.port&&(i.port=parseInt(i.port,10)),n=t}else i.host=e.substring(n,t),i.hostname=i.host.split(":")[0],i.port=i.host.split(":")[1],i.port&&(i.port=parseInt(i.port,10)),n=t;if(-1===(t=e.indexOf("#",n))?i.path=e.substring(n):(i.path=e.substring(n,t),i.hash=e.substring(t)),i.path){var r=i.path.split("?");i.pathname=r[0],i.query=r[1],i.search=i.query?"?"+i.query:null}return i}}},function(e,t,n){"use strict";var i=n(21),r=new RegExp("^(([a-zA-Z0-9-_$ ]*): *)?(Uncaught )?([a-zA-Z0-9-_$ ]*): ");function o(){return null}function s(e){var t={};return t._stackFrame=e,t.url=e.fileName,t.line=e.lineNumber,t.func=e.functionName,t.column=e.columnNumber,t.args=e.args,t.context=null,t}function a(e,t){return{stack:function(){var n=[];t=t||0;try{n=i.parse(e)}catch(e){n=[]}for(var r=[],o=t;o<n.length;o++)r.push(new s(n[o]));return r}(),message:e.message,name:c(e),rawStack:e.stack,rawException:e}}function c(e){var t=e.name&&e.name.length&&e.name,n=e.constructor.name&&e.constructor.name.length&&e.constructor.name;return t&&n?"Error"===t?n:t:t||n}e.exports={guessFunctionName:function(){return"?"},guessErrorClass:function(e){if(!e||!e.match)return["Unknown error. There was no error message to display.",""];var t=e.match(r),n="(unknown)";return t&&(n=t[t.length-1],e=(e=e.replace((t[t.length-2]||"")+n+":","")).replace(/(^[\s]+|[\s]+$)/g,"")),[n,e]},gatherContext:o,parse:function(e,t){var n=e;if(n.nested){for(var i=[];n;)i.push(new a(n,t)),n=n.nested,t=0;return i[0].traceChain=i,i[0]}return new a(n,t)},Stack:a,Frame:s}},function(e,t,n){"use strict";var i=n(6),r="undefined"!=typeof window&&window._rollbarConfig,o=r&&r.globalAlias||"Rollbar",s="undefined"!=typeof window&&window[o]&&"function"==typeof window[o].shimId&&void 0!==window[o].shimId();if("undefined"==typeof window||window._rollbarStartTime||(window._rollbarStartTime=(new Date).getTime()),!s&&r){var a=new i(r);window[o]=a}else"undefined"!=typeof window?(window.rollbar=i,window._rollbarDidLoad=!0):"undefined"!=typeof self&&(self.rollbar=i,self._rollbarDidLoad=!0);e.exports=i},function(e,t,n){"use strict";var i=n(7),r=n(0),o=n(14),s=n(1),a=n(18),c=n(19),u=n(3),l=n(20),p=n(23),d=n(24),h=n(25),f=n(4),m=n(26);function g(e,t){this.options=r.handleOptions(w,e),this.options._configuredOptions=e;var n=new o(this.options,c,u);this.client=t||new i(this.options,n,s,"browser");var a=y(),f="undefined"!=typeof document&&document;this.isChrome=a.chrome&&a.chrome.runtime,this.anonymousErrorsPending=0,function(e,t){e.addTransform(l.handleDomException).addTransform(l.handleItemWithError).addTransform(l.ensureItemHasSomethingToSay).addTransform(l.addBaseInfo).addTransform(l.addRequestInfo(t)).addTransform(l.addClientInfo(t)).addTransform(l.addPluginInfo(t)).addTransform(l.addBody).addTransform(p.addMessageWithError).addTransform(p.addTelemetryData).addTransform(p.addConfigToPayload).addTransform(l.scrubPayload).addTransform(p.userTransform(s)).addTransform(p.addConfiguredOptions).addTransform(p.addDiagnosticKeys).addTransform(p.itemToPayload)}(this.client.notifier,a),this.client.queue.addPredicate(h.checkLevel).addPredicate(d.checkIgnore).addPredicate(h.userCheckIgnore(s)).addPredicate(h.urlIsNotBlacklisted(s)).addPredicate(h.urlIsWhitelisted(s)).addPredicate(h.messageIsIgnored(s)),this.setupUnhandledCapture(),this.instrumenter=new m(this.options,this.client.telemeter,this,a,f),this.instrumenter.instrument()}var v=null;function x(e){var t="Rollbar is not initialized";s.error(t),e&&e(new Error(t))}function b(e){for(var t=0,n=e.length;t<n;++t)if(r.isFunction(e[t]))return e[t]}function y(){return"undefined"!=typeof window&&window||"undefined"!=typeof self&&self}g.init=function(e,t){return v?v.global(e).configure(e):v=new g(e,t)},g.prototype.global=function(e){return this.client.global(e),this},g.global=function(e){if(v)return v.global(e);x()},g.prototype.configure=function(e,t){var n=this.options,i={};return t&&(i={payload:t}),this.options=r.handleOptions(n,e,i),this.options._configuredOptions=r.handleOptions(n._configuredOptions,e,i),this.client.configure(this.options,t),this.instrumenter.configure(this.options),this.setupUnhandledCapture(),this},g.configure=function(e,t){if(v)return v.configure(e,t);x()},g.prototype.lastError=function(){return this.client.lastError},g.lastError=function(){if(v)return v.lastError();x()},g.prototype.log=function(){var e=this._createItem(arguments),t=e.uuid;return this.client.log(e),{uuid:t}},g.log=function(){if(v)return v.log.apply(v,arguments);var e=b(arguments);x(e)},g.prototype.debug=function(){var e=this._createItem(arguments),t=e.uuid;return this.client.debug(e),{uuid:t}},g.debug=function(){if(v)return v.debug.apply(v,arguments);var e=b(arguments);x(e)},g.prototype.info=function(){var e=this._createItem(arguments),t=e.uuid;return this.client.info(e),{uuid:t}},g.info=function(){if(v)return v.info.apply(v,arguments);var e=b(arguments);x(e)},g.prototype.warn=function(){var e=this._createItem(arguments),t=e.uuid;return this.client.warn(e),{uuid:t}},g.warn=function(){if(v)return v.warn.apply(v,arguments);var e=b(arguments);x(e)},g.prototype.warning=function(){var e=this._createItem(arguments),t=e.uuid;return this.client.warning(e),{uuid:t}},g.warning=function(){if(v)return v.warning.apply(v,arguments);var e=b(arguments);x(e)},g.prototype.error=function(){var e=this._createItem(arguments),t=e.uuid;return this.client.error(e),{uuid:t}},g.error=function(){if(v)return v.error.apply(v,arguments);var e=b(arguments);x(e)},g.prototype.critical=function(){var e=this._createItem(arguments),t=e.uuid;return this.client.critical(e),{uuid:t}},g.critical=function(){if(v)return v.critical.apply(v,arguments);var e=b(arguments);x(e)},g.prototype.buildJsonPayload=function(e){return this.client.buildJsonPayload(e)},g.buildJsonPayload=function(){if(v)return v.buildJsonPayload.apply(v,arguments);x()},g.prototype.sendJsonPayload=function(e){return this.client.sendJsonPayload(e)},g.sendJsonPayload=function(){if(v)return v.sendJsonPayload.apply(v,arguments);x()},g.prototype.setupUnhandledCapture=function(){var e=y();this.unhandledExceptionsInitialized||(this.options.captureUncaught||this.options.handleUncaughtExceptions)&&(a.captureUncaughtExceptions(e,this),this.options.wrapGlobalEventHandlers&&a.wrapGlobals(e,this),this.unhandledExceptionsInitialized=!0),this.unhandledRejectionsInitialized||(this.options.captureUnhandledRejections||this.options.handleUnhandledRejections)&&(a.captureUnhandledRejections(e,this),this.unhandledRejectionsInitialized=!0)},g.prototype.handleUncaughtException=function(e,t,n,i,o,s){if(this.options.captureUncaught||this.options.handleUncaughtExceptions){if(this.options.inspectAnonymousErrors&&this.isChrome&&null===o)return"anonymous";var a,c=r.makeUnhandledStackInfo(e,t,n,i,o,"onerror","uncaught exception",f);r.isError(o)?(a=this._createItem([e,o,s]))._unhandledStackInfo=c:r.isError(t)?(a=this._createItem([e,t,s]))._unhandledStackInfo=c:(a=this._createItem([e,s])).stackInfo=c,a.level=this.options.uncaughtErrorLevel,a._isUncaught=!0,this.client.log(a)}},g.prototype.handleAnonymousErrors=function(){if(this.options.inspectAnonymousErrors&&this.isChrome){var e=this;try{Error.prepareStackTrace=function(t,n){if(e.options.inspectAnonymousErrors&&e.anonymousErrorsPending){if(e.anonymousErrorsPending-=1,!t)return;t._isAnonymous=!0,e.handleUncaughtException(t.message,null,null,null,t)}return t.stack}}catch(e){this.options.inspectAnonymousErrors=!1,this.error("anonymous error handler failed",e)}}},g.prototype.handleUnhandledRejection=function(e,t){if(this.options.captureUnhandledRejections||this.options.handleUnhandledRejections){var n="unhandled rejection was null or undefined!";if(e)if(e.message)n=e.message;else{var i=r.stringify(e);i.value&&(n=i.value)}var o,s=e&&e._rollbarContext||t&&t._rollbarContext;r.isError(e)?o=this._createItem([n,e,s]):(o=this._createItem([n,e,s])).stackInfo=r.makeUnhandledStackInfo(n,"",0,0,null,"unhandledrejection","",f),o.level=this.options.uncaughtErrorLevel,o._isUncaught=!0,o._originalArgs=o._originalArgs||[],o._originalArgs.push(t),this.client.log(o)}},g.prototype.wrap=function(e,t,n){try{var i;if(i=r.isFunction(t)?t:function(){return t||{}},!r.isFunction(e))return e;if(e._isWrap)return e;if(!e._rollbar_wrapped&&(e._rollbar_wrapped=function(){n&&r.isFunction(n)&&n.apply(this,arguments);try{return e.apply(this,arguments)}catch(n){var t=n;throw t&&window._rollbarWrappedError!==t&&(r.isType(t,"string")&&(t=new String(t)),t._rollbarContext=i()||{},t._rollbarContext._wrappedSource=e.toString(),window._rollbarWrappedError=t),t}},e._rollbar_wrapped._isWrap=!0,e.hasOwnProperty))for(var o in e)e.hasOwnProperty(o)&&"_rollbar_wrapped"!==o&&(e._rollbar_wrapped[o]=e[o]);return e._rollbar_wrapped}catch(t){return e}},g.wrap=function(e,t){if(v)return v.wrap(e,t);x()},g.prototype.captureEvent=function(){var e=r.createTelemetryEvent(arguments);return this.client.captureEvent(e.type,e.metadata,e.level)},g.captureEvent=function(){if(v)return v.captureEvent.apply(v,arguments);x()},g.prototype.captureDomContentLoaded=function(e,t){return t||(t=new Date),this.client.captureDomContentLoaded(t)},g.prototype.captureLoad=function(e,t){return t||(t=new Date),this.client.captureLoad(t)},g.prototype._createItem=function(e){return r.createItem(e,s,this)},g.prototype.loadFull=function(){s.info("Unexpected Rollbar.loadFull() called on a Notifier instance. This can happen when Rollbar is loaded multiple times.")};var w={version:"2.15.0",scrubFields:["pw","pass","passwd","password","secret","confirm_password","confirmPassword","password_confirmation","passwordConfirmation","access_token","accessToken","X-Rollbar-Access-Token","secret_key","secretKey","secretToken","cc-number","card number","cardnumber","cardnum","ccnum","ccnumber","cc num","creditcardnumber","credit card number","newcreditcardnumber","new credit card","creditcardno","credit card no","card#","card #","cc-csc","cvc","cvc2","cvv2","ccv2","security code","card verification","name on credit card","name on card","nameoncard","cardholder","card holder","name des karteninhabers","ccname","card type","cardtype","cc type","cctype","payment type","expiration date","expirationdate","expdate","cc-exp","ccmonth","ccyear"],logLevel:"debug",reportLevel:"debug",uncaughtErrorLevel:"error",endpoint:"api.rollbar.com/api/1/item/",verbose:!1,enabled:!0,transmit:!0,sendConfig:!1,includeItemsInTelemetry:!0,captureIp:!0,inspectAnonymousErrors:!0,ignoreDuplicateErrors:!0,wrapGlobalEventHandlers:!1};e.exports=g},function(e,t,n){"use strict";var i=n(8),r=n(11),o=n(12),s=n(13),a=n(0);function c(e,t,n,i){this.options=a.merge(e),this.logger=n,c.rateLimiter.configureGlobal(this.options),c.rateLimiter.setPlatformOptions(i,this.options),this.api=t,this.queue=new r(c.rateLimiter,t,n,this.options),this.notifier=new o(this.queue,this.options),this.telemeter=new s(this.options),this.lastError=null,this.lastErrorHash="none"}c.rateLimiter=new i({maxItems:0,itemsPerMinute:60}),c.prototype.global=function(e){return c.rateLimiter.configureGlobal(e),this},c.prototype.configure=function(e,t){var n=this.options,i={};return t&&(i={payload:t}),this.options=a.merge(n,e,i),this.notifier&&this.notifier.configure(this.options),this.telemeter&&this.telemeter.configure(this.options),this.global(this.options),this},c.prototype.log=function(e){var t=this._defaultLogLevel();return this._log(t,e)},c.prototype.debug=function(e){this._log("debug",e)},c.prototype.info=function(e){this._log("info",e)},c.prototype.warn=function(e){this._log("warning",e)},c.prototype.warning=function(e){this._log("warning",e)},c.prototype.error=function(e){this._log("error",e)},c.prototype.critical=function(e){this._log("critical",e)},c.prototype.wait=function(e){this.queue.wait(e)},c.prototype.captureEvent=function(e,t,n){return this.telemeter.captureEvent(e,t,n)},c.prototype.captureDomContentLoaded=function(e){return this.telemeter.captureDomContentLoaded(e)},c.prototype.captureLoad=function(e){return this.telemeter.captureLoad(e)},c.prototype.buildJsonPayload=function(e){return this.api.buildJsonPayload(e)},c.prototype.sendJsonPayload=function(e){this.api.postJsonPayload(e)},c.prototype._log=function(e,t){var n;if(t.callback&&(n=t.callback,delete t.callback),this.options.ignoreDuplicateErrors&&this._sameAsLastError(t)){if(n){var i=new Error("ignored identical item");i.item=t,n(i)}}else try{t.level=t.level||e,this.telemeter._captureRollbarItem(t),t.telemetryEvents=this.telemeter.copyEvents(),this.notifier.log(t,n)}catch(e){this.logger.error(e)}},c.prototype._defaultLogLevel=function(){return this.options.logLevel||"debug"},c.prototype._sameAsLastError=function(e){if(!e._isUncaught)return!1;var t=function(e){var t=e.message||"",n=(e.err||{}).stack||String(e.err);return t+"::"+n}(e);return this.lastErrorHash===t||(this.lastError=e.err,this.lastErrorHash=t,!1)},e.exports=c},function(e,t,n){"use strict";var i=n(0);function r(e){this.startTime=i.now(),this.counter=0,this.perMinCounter=0,this.platform=null,this.platformOptions={},this.configureGlobal(e)}function o(e,t,n){return!e.ignoreRateLimit&&t>=1&&n>t}function s(e,t,n,i,r,o,s){var a=null;return n&&(n=new Error(n)),n||i||(a=function(e,t,n,i,r){var o,s=t.environment||t.payload&&t.payload.environment;o=r?"item per minute limit reached, ignoring errors until timeout":"maxItems has been hit, ignoring errors until reset.";var a={body:{message:{body:o,extra:{maxItems:n,itemsPerMinute:i}}},language:"javascript",environment:s,notifier:{version:t.notifier&&t.notifier.version||t.version}};"browser"===e?(a.platform="browser",a.framework="browser-js",a.notifier.name="rollbar-browser-js"):"server"===e?(a.framework=t.framework||"node-js",a.notifier.name=t.notifier.name):"react-native"===e&&(a.framework=t.framework||"react-native",a.notifier.name=t.notifier.name);return a}(e,t,r,o,s)),{error:n,shouldSend:i,payload:a}}r.globalSettings={startTime:i.now(),maxItems:void 0,itemsPerMinute:void 0},r.prototype.configureGlobal=function(e){void 0!==e.startTime&&(r.globalSettings.startTime=e.startTime),void 0!==e.maxItems&&(r.globalSettings.maxItems=e.maxItems),void 0!==e.itemsPerMinute&&(r.globalSettings.itemsPerMinute=e.itemsPerMinute)},r.prototype.shouldSend=function(e,t){var n=(t=t||i.now())-this.startTime;(n<0||n>=6e4)&&(this.startTime=t,this.perMinCounter=0);var a=r.globalSettings.maxItems,c=r.globalSettings.itemsPerMinute;if(o(e,a,this.counter))return s(this.platform,this.platformOptions,a+" max items reached",!1);if(o(e,c,this.perMinCounter))return s(this.platform,this.platformOptions,c+" items per minute reached",!1);this.counter++,this.perMinCounter++;var u=!o(e,a,this.counter),l=u;return u=u&&!o(e,c,this.perMinCounter),s(this.platform,this.platformOptions,null,u,a,c,l)},r.prototype.setPlatformOptions=function(e,t){this.platform=e,this.platformOptions=t},e.exports=r},function(e,t,n){"use strict";var i=Object.prototype.hasOwnProperty,r=Object.prototype.toString,o=function(e){if(!e||"[object Object]"!==r.call(e))return!1;var t,n=i.call(e,"constructor"),o=e.constructor&&e.constructor.prototype&&i.call(e.constructor.prototype,"isPrototypeOf");if(e.constructor&&!n&&!o)return!1;for(t in e);return void 0===t||i.call(e,t)};e.exports=function e(){var t,n,i,r,s,a={},c=null,u=arguments.length;for(t=0;t<u;t++)if(null!=(c=arguments[t]))for(s in c)n=a[s],a!==(i=c[s])&&(i&&o(i)?(r=n&&o(n)?n:{},a[s]=e(r,i)):void 0!==i&&(a[s]=i));return a}},function(e,t){e.exports=function(e){var t,n,i,r,o,s,a,c,u,l,p,d,h,f=/[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;function m(e){return e<10?"0"+e:e}function g(){return this.valueOf()}function v(e){return f.lastIndex=0,f.test(e)?'"'+e.replace(f,(function(e){var t=i[e];return"string"==typeof t?t:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)}))+'"':'"'+e+'"'}"function"!=typeof Date.prototype.toJSON&&(Date.prototype.toJSON=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+m(this.getUTCMonth()+1)+"-"+m(this.getUTCDate())+"T"+m(this.getUTCHours())+":"+m(this.getUTCMinutes())+":"+m(this.getUTCSeconds())+"Z":null},Boolean.prototype.toJSON=g,Number.prototype.toJSON=g,String.prototype.toJSON=g),"function"!=typeof e.stringify&&(i={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},e.stringify=function(e,i,o){var s;if(t="",n="","number"==typeof o)for(s=0;s<o;s+=1)n+=" ";else"string"==typeof o&&(n=o);if(r=i,i&&"function"!=typeof i&&("object"!=typeof i||"number"!=typeof i.length))throw new Error("JSON.stringify");return function e(i,o){var s,a,c,u,l,p=t,d=o[i];switch(d&&"object"==typeof d&&"function"==typeof d.toJSON&&(d=d.toJSON(i)),"function"==typeof r&&(d=r.call(o,i,d)),typeof d){case"string":return v(d);case"number":return isFinite(d)?String(d):"null";case"boolean":case"null":return String(d);case"object":if(!d)return"null";if(t+=n,l=[],"[object Array]"===Object.prototype.toString.apply(d)){for(u=d.length,s=0;s<u;s+=1)l[s]=e(s,d)||"null";return c=0===l.length?"[]":t?"[\n"+t+l.join(",\n"+t)+"\n"+p+"]":"["+l.join(",")+"]",t=p,c}if(r&&"object"==typeof r)for(u=r.length,s=0;s<u;s+=1)"string"==typeof r[s]&&(c=e(a=r[s],d))&&l.push(v(a)+(t?": ":":")+c);else for(a in d)Object.prototype.hasOwnProperty.call(d,a)&&(c=e(a,d))&&l.push(v(a)+(t?": ":":")+c);return c=0===l.length?"{}":t?"{\n"+t+l.join(",\n"+t)+"\n"+p+"}":"{"+l.join(",")+"}",t=p,c}}("",{"":e})}),"function"!=typeof e.parse&&(e.parse=(l={"\\":"\\",'"':'"',"/":"/",t:"\t",n:"\n",r:"\r",f:"\f",b:"\b"},p={go:function(){o="ok"},firstokey:function(){c=u,o="colon"},okey:function(){c=u,o="colon"},ovalue:function(){o="ocomma"},firstavalue:function(){o="acomma"},avalue:function(){o="acomma"}},d={go:function(){o="ok"},ovalue:function(){o="ocomma"},firstavalue:function(){o="acomma"},avalue:function(){o="acomma"}},h={"{":{go:function(){s.push({state:"ok"}),a={},o="firstokey"},ovalue:function(){s.push({container:a,state:"ocomma",key:c}),a={},o="firstokey"},firstavalue:function(){s.push({container:a,state:"acomma"}),a={},o="firstokey"},avalue:function(){s.push({container:a,state:"acomma"}),a={},o="firstokey"}},"}":{firstokey:function(){var e=s.pop();u=a,a=e.container,c=e.key,o=e.state},ocomma:function(){var e=s.pop();a[c]=u,u=a,a=e.container,c=e.key,o=e.state}},"[":{go:function(){s.push({state:"ok"}),a=[],o="firstavalue"},ovalue:function(){s.push({container:a,state:"ocomma",key:c}),a=[],o="firstavalue"},firstavalue:function(){s.push({container:a,state:"acomma"}),a=[],o="firstavalue"},avalue:function(){s.push({container:a,state:"acomma"}),a=[],o="firstavalue"}},"]":{firstavalue:function(){var e=s.pop();u=a,a=e.container,c=e.key,o=e.state},acomma:function(){var e=s.pop();a.push(u),u=a,a=e.container,c=e.key,o=e.state}},":":{colon:function(){if(Object.hasOwnProperty.call(a,c))throw new SyntaxError("Duplicate key '"+c+'"');o="ovalue"}},",":{ocomma:function(){a[c]=u,o="okey"},acomma:function(){a.push(u),o="avalue"}},true:{go:function(){u=!0,o="ok"},ovalue:function(){u=!0,o="ocomma"},firstavalue:function(){u=!0,o="acomma"},avalue:function(){u=!0,o="acomma"}},false:{go:function(){u=!1,o="ok"},ovalue:function(){u=!1,o="ocomma"},firstavalue:function(){u=!1,o="acomma"},avalue:function(){u=!1,o="acomma"}},null:{go:function(){u=null,o="ok"},ovalue:function(){u=null,o="ocomma"},firstavalue:function(){u=null,o="acomma"},avalue:function(){u=null,o="acomma"}}},function(e,t){var n,i,r=/^[\u0020\t\n\r]*(?:([,:\[\]{}]|true|false|null)|(-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)|"((?:[^\r\n\t\\\"]|\\(?:["\\\/trnfb]|u[0-9a-fA-F]{4}))*)")/;o="go",s=[];try{for(;n=r.exec(e);)n[1]?h[n[1]][o]():n[2]?(u=+n[2],d[o]()):(i=n[3],u=i.replace(/\\(?:u(.{4})|([^u]))/g,(function(e,t,n){return t?String.fromCharCode(parseInt(t,16)):l[n]})),p[o]()),e=e.slice(n[0].length)}catch(e){o=e}if("ok"!==o||/[^\u0020\t\n\r]/.test(e))throw o instanceof SyntaxError?o:new SyntaxError("JSON");return"function"==typeof t?function e(n,i){var r,o,s=n[i];if(s&&"object"==typeof s)for(r in u)Object.prototype.hasOwnProperty.call(s,r)&&(void 0!==(o=e(s,r))?s[r]=o:delete s[r]);return t.call(n,i,s)}({"":u},""):u}))}},function(e,t,n){"use strict";var i=n(0);function r(e,t,n,i){this.rateLimiter=e,this.api=t,this.logger=n,this.options=i,this.predicates=[],this.pendingItems=[],this.pendingRequests=[],this.retryQueue=[],this.retryHandle=null,this.waitCallback=null,this.waitIntervalID=null}r.prototype.configure=function(e){this.api&&this.api.configure(e);var t=this.options;return this.options=i.merge(t,e),this},r.prototype.addPredicate=function(e){return i.isFunction(e)&&this.predicates.push(e),this},r.prototype.addPendingItem=function(e){this.pendingItems.push(e)},r.prototype.removePendingItem=function(e){var t=this.pendingItems.indexOf(e);-1!==t&&this.pendingItems.splice(t,1)},r.prototype.addItem=function(e,t,n,r){t&&i.isFunction(t)||(t=function(){});var o=this._applyPredicates(e);if(o.stop)return this.removePendingItem(r),void t(o.err);if(this._maybeLog(e,n),this.removePendingItem(r),this.options.transmit){this.pendingRequests.push(e);try{this._makeApiRequest(e,function(n,i){this._dequeuePendingRequest(e),t(n,i)}.bind(this))}catch(n){this._dequeuePendingRequest(e),t(n)}}else t(new Error("Transmit disabled"))},r.prototype.wait=function(e){i.isFunction(e)&&(this.waitCallback=e,this._maybeCallWait()||(this.waitIntervalID&&(this.waitIntervalID=clearInterval(this.waitIntervalID)),this.waitIntervalID=setInterval(function(){this._maybeCallWait()}.bind(this),500)))},r.prototype._applyPredicates=function(e){for(var t=null,n=0,i=this.predicates.length;n<i;n++)if(!(t=this.predicates[n](e,this.options))||void 0!==t.err)return{stop:!0,err:t.err};return{stop:!1,err:null}},r.prototype._makeApiRequest=function(e,t){var n=this.rateLimiter.shouldSend(e);n.shouldSend?this.api.postItem(e,function(n,i){n?this._maybeRetry(n,e,t):t(n,i)}.bind(this)):n.error?t(n.error):this.api.postItem(n.payload,t)};var o=["ECONNRESET","ENOTFOUND","ESOCKETTIMEDOUT","ETIMEDOUT","ECONNREFUSED","EHOSTUNREACH","EPIPE","EAI_AGAIN"];r.prototype._maybeRetry=function(e,t,n){var i=!1;if(this.options.retryInterval)for(var r=0,s=o.length;r<s;r++)if(e.code===o[r]){i=!0;break}i?this._retryApiRequest(t,n):n(e)},r.prototype._retryApiRequest=function(e,t){this.retryQueue.push({item:e,callback:t}),this.retryHandle||(this.retryHandle=setInterval(function(){for(;this.retryQueue.length;){var e=this.retryQueue.shift();this._makeApiRequest(e.item,e.callback)}}.bind(this),this.options.retryInterval))},r.prototype._dequeuePendingRequest=function(e){var t=this.pendingRequests.indexOf(e);-1!==t&&(this.pendingRequests.splice(t,1),this._maybeCallWait())},r.prototype._maybeLog=function(e,t){if(this.logger&&this.options.verbose){var n=t;if(n=(n=n||i.get(e,"body.trace.exception.message"))||i.get(e,"body.trace_chain.0.exception.message"))return void this.logger.error(n);(n=i.get(e,"body.message.body"))&&this.logger.log(n)}},r.prototype._maybeCallWait=function(){return!(!i.isFunction(this.waitCallback)||0!==this.pendingItems.length||0!==this.pendingRequests.length)&&(this.waitIntervalID&&(this.waitIntervalID=clearInterval(this.waitIntervalID)),this.waitCallback(),!0)},e.exports=r},function(e,t,n){"use strict";var i=n(0);function r(e,t){this.queue=e,this.options=t,this.transforms=[],this.diagnostic={}}r.prototype.configure=function(e){this.queue&&this.queue.configure(e);var t=this.options;return this.options=i.merge(t,e),this},r.prototype.addTransform=function(e){return i.isFunction(e)&&this.transforms.push(e),this},r.prototype.log=function(e,t){if(t&&i.isFunction(t)||(t=function(){}),!this.options.enabled)return t(new Error("Rollbar is not enabled"));this.queue.addPendingItem(e);var n=e.err;this._applyTransforms(e,function(i,r){if(i)return this.queue.removePendingItem(e),t(i,null);this.queue.addItem(r,t,n,e)}.bind(this))},r.prototype._applyTransforms=function(e,t){var n=-1,i=this.transforms.length,r=this.transforms,o=this.options,s=function(e,a){e?t(e,null):++n!==i?r[n](a,o,s):t(null,a)};s(null,e)},e.exports=r},function(e,t,n){"use strict";var i=n(0);function r(e){this.queue=[],this.options=i.merge(e);var t=this.options.maxTelemetryEvents||100;this.maxQueueSize=Math.max(0,Math.min(t,100))}function o(e,t){if(t)return t;return{error:"error",manual:"info"}[e]||"info"}r.prototype.configure=function(e){var t=this.options;this.options=i.merge(t,e);var n=this.options.maxTelemetryEvents||100,r=Math.max(0,Math.min(n,100)),o=0;this.maxQueueSize>r&&(o=this.maxQueueSize-r),this.maxQueueSize=r,this.queue.splice(0,o)},r.prototype.copyEvents=function(){var e=Array.prototype.slice.call(this.queue,0);if(i.isFunction(this.options.filterTelemetry))try{for(var t=e.length;t--;)this.options.filterTelemetry(e[t])&&e.splice(t,1)}catch(e){this.options.filterTelemetry=null}return e},r.prototype.capture=function(e,t,n,r,s){var a={level:o(e,n),type:e,timestamp_ms:s||i.now(),body:t,source:"client"};r&&(a.uuid=r);try{if(i.isFunction(this.options.filterTelemetry)&&this.options.filterTelemetry(a))return!1}catch(e){this.options.filterTelemetry=null}return this.push(a),a},r.prototype.captureEvent=function(e,t,n,i){return this.capture(e,t,n,i)},r.prototype.captureError=function(e,t,n,i){var r={message:e.message||String(e)};return e.stack&&(r.stack=e.stack),this.capture("error",r,t,n,i)},r.prototype.captureLog=function(e,t,n,i){return this.capture("log",{message:e},t,n,i)},r.prototype.captureNetwork=function(e,t,n,i){t=t||"xhr",e.subtype=e.subtype||t,i&&(e.request=i);var r=this.levelFromStatus(e.status_code);return this.capture("network",e,r,n)},r.prototype.levelFromStatus=function(e){return e>=200&&e<400?"info":0===e||e>=400?"error":"info"},r.prototype.captureDom=function(e,t,n,i,r){var o={subtype:e,element:t};return void 0!==n&&(o.value=n),void 0!==i&&(o.checked=i),this.capture("dom",o,"info",r)},r.prototype.captureNavigation=function(e,t,n){return this.capture("navigation",{from:e,to:t},"info",n)},r.prototype.captureDomContentLoaded=function(e){return this.capture("navigation",{subtype:"DOMContentLoaded"},"info",void 0,e&&e.getTime())},r.prototype.captureLoad=function(e){return this.capture("navigation",{subtype:"load"},"info",void 0,e&&e.getTime())},r.prototype.captureConnectivityChange=function(e,t){return this.captureNetwork({change:e},"connectivity",t)},r.prototype._captureRollbarItem=function(e){if(this.options.includeItemsInTelemetry)return e.err?this.captureError(e.err,e.level,e.uuid,e.timestamp):e.message?this.captureLog(e.message,e.level,e.uuid,e.timestamp):e.custom?this.capture("log",e.custom,e.level,e.uuid,e.timestamp):void 0},r.prototype.push=function(e){this.queue.push(e),this.queue.length>this.maxQueueSize&&this.queue.shift()},e.exports=r},function(e,t,n){"use strict";var i=n(0),r=n(15),o=n(2),s={hostname:"api.rollbar.com",path:"/api/1/item/",search:null,version:"1",protocol:"https:",port:443};function a(e,t,n,i){this.options=e,this.transport=t,this.url=n,this.jsonBackup=i,this.accessToken=e.accessToken,this.transportOptions=c(e,n)}function c(e,t){return r.getTransportFromOptions(e,s,t)}a.prototype.postItem=function(e,t){var n=r.transportOptions(this.transportOptions,"POST"),i=r.buildPayload(this.accessToken,e,this.jsonBackup);this.transport.post(this.accessToken,n,i,t)},a.prototype.buildJsonPayload=function(e,t){var n=r.buildPayload(this.accessToken,e,this.jsonBackup),i=o.truncate(n);return i.error?(t&&t(i.error),null):i.value},a.prototype.postJsonPayload=function(e,t){var n=r.transportOptions(this.transportOptions,"POST");this.transport.postJsonPayload(this.accessToken,n,e,t)},a.prototype.configure=function(e){var t=this.oldOptions;return this.options=i.merge(t,e),this.transportOptions=c(this.options,this.url),void 0!==this.options.accessToken&&(this.accessToken=this.options.accessToken),this},e.exports=a},function(e,t,n){"use strict";var i=n(0);e.exports={buildPayload:function(e,t,n){if(!i.isType(t.context,"string")){var r=i.stringify(t.context,n);r.error?t.context="Error: could not serialize 'context'":t.context=r.value||"",t.context.length>255&&(t.context=t.context.substr(0,255))}return{access_token:e,data:t}},getTransportFromOptions:function(e,t,n){var i=t.hostname,r=t.protocol,o=t.port,s=t.path,a=t.search,c=e.proxy;if(e.endpoint){var u=n.parse(e.endpoint);i=u.hostname,r=u.protocol,o=u.port,s=u.pathname,a=u.search}return{hostname:i,protocol:r,port:o,path:s,search:a,proxy:c}},transportOptions:function(e,t){var n=e.protocol||"https:",i=e.port||("http:"===n?80:"https:"===n?443:void 0),r=e.hostname,o=e.path;return e.search&&(o+=e.search),e.proxy&&(o=n+"//"+r+o,r=e.proxy.host||e.proxy.hostname,i=e.proxy.port,n=e.proxy.protocol||n),{protocol:n,hostname:r,path:o,port:i,method:t}},appendPathToPath:function(e,t){var n=/\/$/.test(e),i=/^\//.test(t);return n&&i?t=t.substring(1):n||i||(t="/"+t),e+t}}},function(e,t){!function(e){"use strict";e.console||(e.console={});for(var t,n,i=e.console,r=function(){},o=["memory"],s="assert,clear,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn".split(",");t=o.pop();)i[t]||(i[t]={});for(;n=s.pop();)i[n]||(i[n]=r)}("undefined"==typeof window?this:window)},function(e,t,n){"use strict";var i={ieVersion:function(){if("undefined"!=typeof document){for(var e=3,t=document.createElement("div"),n=t.getElementsByTagName("i");t.innerHTML="\x3c!--[if gt IE "+ ++e+"]><i></i><![endif]--\x3e",n[0];);return e>4?e:void 0}}};e.exports=i},function(e,t,n){"use strict";function i(e,t,n,i){e._rollbarWrappedError&&(i[4]||(i[4]=e._rollbarWrappedError),i[5]||(i[5]=e._rollbarWrappedError._rollbarContext),e._rollbarWrappedError=null);var r=t.handleUncaughtException.apply(t,i);n&&n.apply(e,i),"anonymous"===r&&(t.anonymousErrorsPending+=1)}function r(e,t,n){if(t.hasOwnProperty&&t.hasOwnProperty("addEventListener")){for(var i=t.addEventListener;i._rollbarOldAdd&&i.belongsToShim;)i=i._rollbarOldAdd;var r=function(t,n,r){i.call(this,t,e.wrap(n),r)};r._rollbarOldAdd=i,r.belongsToShim=n,t.addEventListener=r;for(var o=t.removeEventListener;o._rollbarOldRemove&&o.belongsToShim;)o=o._rollbarOldRemove;var s=function(e,t,n){o.call(this,e,t&&t._rollbar_wrapped||t,n)};s._rollbarOldRemove=o,s.belongsToShim=n,t.removeEventListener=s}}e.exports={captureUncaughtExceptions:function(e,t,n){if(e){var r;if("function"==typeof t._rollbarOldOnError)r=t._rollbarOldOnError;else if(e.onerror){for(r=e.onerror;r._rollbarOldOnError;)r=r._rollbarOldOnError;t._rollbarOldOnError=r}t.handleAnonymousErrors();var o=function(){var n=Array.prototype.slice.call(arguments,0);i(e,t,r,n)};n&&(o._rollbarOldOnError=r),e.onerror=o}},captureUnhandledRejections:function(e,t,n){if(e){"function"==typeof e._rollbarURH&&e._rollbarURH.belongsToShim&&e.removeEventListener("unhandledrejection",e._rollbarURH);var i=function(e){var n,i,r;try{n=e.reason}catch(e){n=void 0}try{i=e.promise}catch(e){i="[unhandledrejection] error getting `promise` from event"}try{r=e.detail,!n&&r&&(n=r.reason,i=r.promise)}catch(e){}n||(n="[unhandledrejection] error getting `reason` from event"),t&&t.handleUnhandledRejection&&t.handleUnhandledRejection(n,i)};i.belongsToShim=n,e._rollbarURH=i,e.addEventListener("unhandledrejection",i)}},wrapGlobals:function(e,t,n){if(e){var i,o,s="EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload".split(",");for(i=0;i<s.length;++i)e[o=s[i]]&&e[o].prototype&&r(t,e[o].prototype,n)}}}},function(e,t,n){"use strict";var i=n(0),r=n(2),o=n(1);function s(e,t,n,i,r,o){var s="undefined"!=typeof window&&window||"undefined"!=typeof self&&self,c=s&&s.Zone&&s.Zone.current;c&&"angular"===c._name?c._parent.run((function(){a(e,t,n,i,r,o)})):a(e,t,n,i,r,o)}function a(e,t,n,r,s,a){if("undefined"!=typeof RollbarProxy)return function(e,t){(new RollbarProxy).sendJsonPayload(e,(function(e){}),(function(e){t(new Error(e))}))}(r,s);var u;if(!(u=a?a():function(){var e,t,n=[function(){return new XMLHttpRequest},function(){return new ActiveXObject("Msxml2.XMLHTTP")},function(){return new ActiveXObject("Msxml3.XMLHTTP")},function(){return new ActiveXObject("Microsoft.XMLHTTP")}],i=n.length;for(t=0;t<i;t++)try{e=n[t]();break}catch(e){}return e}()))return s(new Error("No way to send a request"));try{try{var l=function(){try{if(l&&4===u.readyState){l=void 0;var e=i.jsonParse(u.responseText);if((r=u)&&r.status&&200===r.status)return void s(e.error,e.value);if(function(e){return e&&i.isType(e.status,"number")&&e.status>=400&&e.status<600}(u)){if(403===u.status){var t=e.value&&e.value.message;o.error(t)}s(new Error(String(u.status)))}else{s(c("XHR response had no status code (likely connection failure)"))}}}catch(e){var n;n=e&&e.stack?e:new Error(e),s(n)}var r};u.open(n,t,!0),u.setRequestHeader&&(u.setRequestHeader("Content-Type","application/json"),u.setRequestHeader("X-Rollbar-Access-Token",e)),u.onreadystatechange=l,u.send(r)}catch(e){if("undefined"!=typeof XDomainRequest){if(!window||!window.location)return s(new Error("No window available during request, unknown environment"));"http:"===window.location.href.substring(0,5)&&"https"===t.substring(0,5)&&(t="http"+t.substring(5));var p=new XDomainRequest;p.onprogress=function(){},p.ontimeout=function(){s(c("Request timed out","ETIMEDOUT"))},p.onerror=function(){s(new Error("Error during request"))},p.onload=function(){var e=i.jsonParse(p.responseText);s(e.error,e.value)},p.open(n,t,!0),p.send(r)}else s(new Error("Cannot find a method to transport a request"))}}catch(e){s(e)}}function c(e,t){var n=new Error(e);return n.code=t||"ENOTFOUND",n}e.exports={get:function(e,t,n,r,o){r&&i.isFunction(r)||(r=function(){}),i.addParamsAndAccessTokenToPath(e,t,n),s(e,i.formatUrl(t),"GET",null,r,o)},post:function(e,t,n,o,a){if(o&&i.isFunction(o)||(o=function(){}),!n)return o(new Error("Cannot send empty request"));var c=r.truncate(n);if(c.error)return o(c.error);var u=c.value;s(e,i.formatUrl(t),"POST",u,o,a)},postJsonPayload:function(e,t,n,r,o){r&&i.isFunction(r)||(r=function(){}),s(e,i.formatUrl(t),"POST",n,r,o)}}},function(e,t,n){"use strict";var i=n(0),r=n(4),o=n(1);function s(e,t,n){var r=e.message,o=e.custom;r||(r="Item sent with null or missing arguments.");var s={body:r};o&&(s.extra=i.merge(o)),i.set(e,"data.body",{message:s}),n(null,e)}function a(e){var t=e.stackInfo.stack;return t&&0===t.length&&e._unhandledStackInfo&&e._unhandledStackInfo.stack&&(t=e._unhandledStackInfo.stack),t}function c(e,t,n){var o=e&&e.data.description,s=e&&e.custom,c=a(e),l=r.guessErrorClass(t.message),p={exception:{class:u(t,l[0],n),message:l[1]}};if(o&&(p.exception.description=o),c){var d,h,f,m,g,v,x,b;for(0===c.length&&(p.exception.stack=t.rawStack,p.exception.raw=String(t.rawException)),p.frames=[],x=0;x<c.length;++x)h={filename:(d=c[x]).url?i.sanitizeUrl(d.url):"(unknown)",lineno:d.line||null,method:d.func&&"?"!==d.func?d.func:"[anonymous]",colno:d.column},n.sendFrameUrl&&(h.url=d.url),h.method&&h.method.endsWith&&h.method.endsWith("_rollbar_wrapped")||(f=m=g=null,(v=d.context?d.context.length:0)&&(b=Math.floor(v/2),m=d.context.slice(0,b),f=d.context[b],g=d.context.slice(b)),f&&(h.code=f),(m||g)&&(h.context={},m&&m.length&&(h.context.pre=m),g&&g.length&&(h.context.post=g)),d.args&&(h.args=d.args),p.frames.push(h));p.frames.reverse(),s&&(p.extra=i.merge(s))}return p}function u(e,t,n){return e.name?e.name:n.guessErrorClass?t:"(unknown)"}e.exports={handleDomException:function(e,t,n){if(e.err&&"DOMException"===r.Stack(e.err).name){var i=new Error;i.name=e.err.name,i.message=e.err.message,i.stack=e.err.stack,i.nested=e.err,e.err=i}n(null,e)},handleItemWithError:function(e,t,n){if(e.data=e.data||{},e.err)try{e.stackInfo=e.err._savedStackTrace||r.parse(e.err,e.skipFrames)}catch(t){o.error("Error while parsing the error object.",t);try{e.message=e.err.message||e.err.description||e.message||String(e.err)}catch(t){e.message=String(e.err)||String(t)}delete e.err}n(null,e)},ensureItemHasSomethingToSay:function(e,t,n){e.message||e.stackInfo||e.custom||n(new Error("No message, stack info, or custom data"),null),n(null,e)},addBaseInfo:function(e,t,n){var r=t.payload&&t.payload.environment||t.environment;e.data=i.merge(e.data,{environment:r,level:e.level,endpoint:t.endpoint,platform:"browser",framework:"browser-js",language:"javascript",server:{},uuid:e.uuid,notifier:{name:"rollbar-browser-js",version:t.version}}),n(null,e)},addRequestInfo:function(e){return function(t,n,r){if(!e||!e.location)return r(null,t);var o="$remote_ip";n.captureIp?!0!==n.captureIp&&(o+="_anonymize"):o=null,i.set(t,"data.request",{url:e.location.href,query_string:e.location.search,user_ip:o}),r(null,t)}},addClientInfo:function(e){return function(t,n,r){if(!e)return r(null,t);var o=e.navigator||{},s=e.screen||{};i.set(t,"data.client",{runtime_ms:t.timestamp-e._rollbarStartTime,timestamp:Math.round(t.timestamp/1e3),javascript:{browser:o.userAgent,language:o.language,cookie_enabled:o.cookieEnabled,screen:{width:s.width,height:s.height}}}),r(null,t)}},addPluginInfo:function(e){return function(t,n,r){if(!e||!e.navigator)return r(null,t);for(var o,s=[],a=e.navigator.plugins||[],c=0,u=a.length;c<u;++c)o=a[c],s.push({name:o.name,description:o.description});i.set(t,"data.client.javascript.plugins",s),r(null,t)}},addBody:function(e,t,n){e.stackInfo?e.stackInfo.traceChain?function(e,t,n){for(var r=e.stackInfo.traceChain,o=[],s=r.length,a=0;a<s;a++){var u=c(e,r[a],t);o.push(u)}i.set(e,"data.body",{trace_chain:o}),n(null,e)}(e,t,n):function(e,t,n){if(a(e)){var o=c(e,e.stackInfo,t);i.set(e,"data.body",{trace:o}),n(null,e)}else{var l=e.stackInfo,p=r.guessErrorClass(l.message),d=u(l,p[0],t),h=p[1];e.message=d+": "+h,s(e,t,n)}}(e,t,n):s(e,t,n)},scrubPayload:function(e,t,n){var r=t.scrubFields;e.data=i.scrub(e.data,r),n(null,e)}}},function(e,t,n){var i,r,o;!function(s,a){"use strict";r=[n(22)],void 0===(o="function"==typeof(i=function(e){var t=/(^|@)\S+:\d+/,n=/^\s*at .*(\S+:\d+|\(native\))/m,i=/^(eval@)?(\[native code])?$/;return{parse:function(e){if(void 0!==e.stacktrace||void 0!==e["opera#sourceloc"])return this.parseOpera(e);if(e.stack&&e.stack.match(n))return this.parseV8OrIE(e);if(e.stack)return this.parseFFOrSafari(e);throw new Error("Cannot parse given Error object")},extractLocation:function(e){if(-1===e.indexOf(":"))return[e];var t=/(.+?)(?::(\d+))?(?::(\d+))?$/.exec(e.replace(/[()]/g,""));return[t[1],t[2]||void 0,t[3]||void 0]},parseV8OrIE:function(t){return t.stack.split("\n").filter((function(e){return!!e.match(n)}),this).map((function(t){t.indexOf("(eval ")>-1&&(t=t.replace(/eval code/g,"eval").replace(/(\(eval at [^()]*)|(\),.*$)/g,""));var n=t.replace(/^\s+/,"").replace(/\(eval code/g,"("),i=n.match(/ (\((.+):(\d+):(\d+)\)$)/),r=(n=i?n.replace(i[0],""):n).split(/\s+/).slice(1),o=this.extractLocation(i?i[1]:r.pop()),s=r.join(" ")||void 0,a=["eval","<anonymous>"].indexOf(o[0])>-1?void 0:o[0];return new e({functionName:s,fileName:a,lineNumber:o[1],columnNumber:o[2],source:t})}),this)},parseFFOrSafari:function(t){return t.stack.split("\n").filter((function(e){return!e.match(i)}),this).map((function(t){if(t.indexOf(" > eval")>-1&&(t=t.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g,":$1")),-1===t.indexOf("@")&&-1===t.indexOf(":"))return new e({functionName:t});var n=/((.*".+"[^@]*)?[^@]*)(?:@)/,i=t.match(n),r=i&&i[1]?i[1]:void 0,o=this.extractLocation(t.replace(n,""));return new e({functionName:r,fileName:o[0],lineNumber:o[1],columnNumber:o[2],source:t})}),this)},parseOpera:function(e){return!e.stacktrace||e.message.indexOf("\n")>-1&&e.message.split("\n").length>e.stacktrace.split("\n").length?this.parseOpera9(e):e.stack?this.parseOpera11(e):this.parseOpera10(e)},parseOpera9:function(t){for(var n=/Line (\d+).*script (?:in )?(\S+)/i,i=t.message.split("\n"),r=[],o=2,s=i.length;o<s;o+=2){var a=n.exec(i[o]);a&&r.push(new e({fileName:a[2],lineNumber:a[1],source:i[o]}))}return r},parseOpera10:function(t){for(var n=/Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i,i=t.stacktrace.split("\n"),r=[],o=0,s=i.length;o<s;o+=2){var a=n.exec(i[o]);a&&r.push(new e({functionName:a[3]||void 0,fileName:a[2],lineNumber:a[1],source:i[o]}))}return r},parseOpera11:function(n){return n.stack.split("\n").filter((function(e){return!!e.match(t)&&!e.match(/^Error created at/)}),this).map((function(t){var n,i=t.split("@"),r=this.extractLocation(i.pop()),o=i.shift()||"",s=o.replace(/<anonymous function(: (\w+))?>/,"$2").replace(/\([^)]*\)/g,"")||void 0;o.match(/\(([^)]*)\)/)&&(n=o.replace(/^[^(]+\(([^)]*)\)$/,"$1"));var a=void 0===n||"[arguments not available]"===n?void 0:n.split(",");return new e({functionName:s,args:a,fileName:r[0],lineNumber:r[1],columnNumber:r[2],source:t})}),this)}}})?i.apply(t,r):i)||(e.exports=o)}()},function(e,t,n){var i,r,o;!function(n,s){"use strict";r=[],void 0===(o="function"==typeof(i=function(){function e(e){return e.charAt(0).toUpperCase()+e.substring(1)}function t(e){return function(){return this[e]}}var n=["isConstructor","isEval","isNative","isToplevel"],i=["columnNumber","lineNumber"],r=["fileName","functionName","source"],o=n.concat(i,r,["args"]);function s(t){if(t)for(var n=0;n<o.length;n++)void 0!==t[o[n]]&&this["set"+e(o[n])](t[o[n]])}s.prototype={getArgs:function(){return this.args},setArgs:function(e){if("[object Array]"!==Object.prototype.toString.call(e))throw new TypeError("Args must be an Array");this.args=e},getEvalOrigin:function(){return this.evalOrigin},setEvalOrigin:function(e){if(e instanceof s)this.evalOrigin=e;else{if(!(e instanceof Object))throw new TypeError("Eval Origin must be an Object or StackFrame");this.evalOrigin=new s(e)}},toString:function(){var e=this.getFileName()||"",t=this.getLineNumber()||"",n=this.getColumnNumber()||"",i=this.getFunctionName()||"";return this.getIsEval()?e?"[eval] ("+e+":"+t+":"+n+")":"[eval]:"+t+":"+n:i?i+" ("+e+":"+t+":"+n+")":e+":"+t+":"+n}},s.fromString=function(e){var t=e.indexOf("("),n=e.lastIndexOf(")"),i=e.substring(0,t),r=e.substring(t+1,n).split(","),o=e.substring(n+1);if(0===o.indexOf("@"))var a=/@(.+?)(?::(\d+))?(?::(\d+))?$/.exec(o,""),c=a[1],u=a[2],l=a[3];return new s({functionName:i,args:r||void 0,fileName:c,lineNumber:u||void 0,columnNumber:l||void 0})};for(var a=0;a<n.length;a++)s.prototype["get"+e(n[a])]=t(n[a]),s.prototype["set"+e(n[a])]=function(e){return function(t){this[e]=Boolean(t)}}(n[a]);for(var c=0;c<i.length;c++)s.prototype["get"+e(i[c])]=t(i[c]),s.prototype["set"+e(i[c])]=function(e){return function(t){if(n=t,isNaN(parseFloat(n))||!isFinite(n))throw new TypeError(e+" must be a Number");var n;this[e]=Number(t)}}(i[c]);for(var u=0;u<r.length;u++)s.prototype["get"+e(r[u])]=t(r[u]),s.prototype["set"+e(r[u])]=function(e){return function(t){this[e]=String(t)}}(r[u]);return s})?i.apply(t,r):i)||(e.exports=o)}()},function(e,t,n){"use strict";var i=n(0);e.exports={itemToPayload:function(e,t,n){var r=t.payload||{};r.body&&delete r.body;var o=i.merge(e.data,r);e._isUncaught&&(o._isUncaught=!0),e._originalArgs&&(o._originalArgs=e._originalArgs),n(null,o)},addTelemetryData:function(e,t,n){e.telemetryEvents&&i.set(e,"data.body.telemetry",e.telemetryEvents),n(null,e)},addMessageWithError:function(e,t,n){if(e.message){var r="data.body.trace_chain.0",o=i.get(e,r);if(o||(r="data.body.trace",o=i.get(e,r)),o){if(!o.exception||!o.exception.description)return i.set(e,r+".exception.description",e.message),void n(null,e);var s=i.get(e,r+".extra")||{},a=i.merge(s,{message:e.message});i.set(e,r+".extra",a)}n(null,e)}else n(null,e)},userTransform:function(e){return function(t,n,r){var o=i.merge(t);try{i.isFunction(n.transform)&&n.transform(o.data,t)}catch(i){return n.transform=null,e.error("Error while calling custom transform() function. Removing custom transform().",i),void r(null,t)}r(null,o)}},addConfigToPayload:function(e,t,n){if(!t.sendConfig)return n(null,e);var r=i.get(e,"data.custom")||{};r._rollbarConfig=t,e.data.custom=r,n(null,e)},addConfiguredOptions:function(e,t,n){delete t._configuredOptions.accessToken,e.data.notifier.configured_options=t._configuredOptions,n(null,e)},addDiagnosticKeys:function(e,t,n){var r=i.merge(e.notifier.client.notifier.diagnostic,e.diagnostic);if(i.get(e,"err._isAnonymous")&&(r.is_anonymous=!0),e.err)try{r.raw_error={message:e.err.message,name:e.err.name,constructor_name:e.err.constructor&&e.err.constructor.name,filename:e.err.fileName,line:e.err.lineNumber,column:e.err.columnNumber,stack:e.err.stack}}catch(e){r.raw_error={failed:String(e)}}e.data.notifier.diagnostic=i.merge(e.data.notifier.diagnostic,r),n(null,e)}}},function(e,t,n){"use strict";var i=n(0);e.exports={checkIgnore:function(e,t){return!i.get(t,"plugins.jquery.ignoreAjaxErrors")||!i.get(e,"body.message.extra.isAjax")}}},function(e,t,n){"use strict";var i=n(0);function r(e,t,n){if(!e)return!n;var r,o,s=e.frames;if(!s||0===s.length)return!n;for(var a=t.length,c=s.length,u=0;u<c;u++){if(r=s[u].filename,!i.isType(r,"string"))return!n;for(var l=0;l<a;l++)if(o=t[l],new RegExp(o).test(r))return!0}return!1}function o(e,t,n,o){var s,a,c=!1;"blacklist"===n&&(c=!0);try{if(s=c?t.hostBlackList:t.hostWhiteList,a=i.get(e,"body.trace_chain")||[i.get(e,"body.trace")],!s||0===s.length)return!c;if(0===a.length||!a[0])return!c;for(var u=a.length,l=0;l<u;l++)if(r(a[l],s,c))return!0}catch(e){c?t.hostBlackList=null:t.hostWhiteList=null;var p=c?"hostBlackList":"hostWhiteList";return o.error("Error while reading your configuration's "+p+" option. Removing custom "+p+".",e),!c}return!1}e.exports={checkLevel:function(e,t){var n=e.level,r=i.LEVELS[n]||0,o=t.reportLevel;return!(r<(i.LEVELS[o]||0))},userCheckIgnore:function(e){return function(t,n){var r=!!t._isUncaught;delete t._isUncaught;var o=t._originalArgs;delete t._originalArgs;try{i.isFunction(n.onSendCallback)&&n.onSendCallback(r,o,t)}catch(t){n.onSendCallback=null,e.error("Error while calling onSendCallback, removing",t)}try{if(i.isFunction(n.checkIgnore)&&n.checkIgnore(r,o,t))return!1}catch(t){n.checkIgnore=null,e.error("Error while calling custom checkIgnore(), removing",t)}return!0}},urlIsNotBlacklisted:function(e){return function(t,n){return!o(t,n,"blacklist",e)}},urlIsWhitelisted:function(e){return function(t,n){return o(t,n,"whitelist",e)}},messageIsIgnored:function(e){return function(t,n){var r,o,s,a,c,u,l,p;try{if(c=!1,!(s=n.ignoredMessages)||0===s.length)return!0;if(u=t.body,l=i.get(u,"trace.exception.message"),p=i.get(u,"message.body"),!(r=l||p))return!0;for(a=s.length,o=0;o<a&&!(c=new RegExp(s[o],"gi").test(r));o++);}catch(t){n.ignoredMessages=null,e.error("Error while reading your configuration's ignoredMessages option. Removing custom ignoredMessages.")}return!c}}}},function(e,t,n){"use strict";var i=n(0),r=n(3),o=n(27),s={network:!0,networkResponseHeaders:!1,networkResponseBody:!1,networkRequestHeaders:!1,networkRequestBody:!1,networkErrorOnHttp5xx:!1,networkErrorOnHttp4xx:!1,networkErrorOnHttp0:!1,log:!0,dom:!0,navigation:!0,connectivity:!0};function a(e,t,n,i,r){var o=e[t];e[t]=n(o),i&&i[r].push([e,t,o])}function c(e,t){for(var n;e[t].length;)(n=e[t].shift())[0][n[1]]=n[2]}function u(e,t,n,r,o){this.options=e;var a=e.autoInstrument;!1===e.enabled||!1===a?this.autoInstrument={}:(i.isType(a,"object")||(a=s),this.autoInstrument=i.merge(s,a)),this.scrubTelemetryInputs=!!e.scrubTelemetryInputs,this.telemetryScrubber=e.telemetryScrubber,this.defaultValueScrubber=function(e){for(var t=[],n=0;n<e.length;++n)t.push(new RegExp(e[n],"i"));return function(e){var n=function(e){if(!e||!e.attributes)return null;for(var t=e.attributes,n=0;n<t.length;++n)if("name"===t[n].key)return t[n].value;return null}(e);if(!n)return!1;for(var i=0;i<t.length;++i)if(t[i].test(n))return!0;return!1}}(e.scrubFields),this.telemeter=t,this.rollbar=n,this.diagnostic=n.client.notifier.diagnostic,this._window=r||{},this._document=o||{},this.replacements={network:[],log:[],navigation:[],connectivity:[]},this.eventRemovers={dom:[],connectivity:[]},this._location=this._window.location,this._lastHref=this._location&&this._location.href}u.prototype.configure=function(e){this.options=i.merge(this.options,e);var t=e.autoInstrument,n=i.merge(this.autoInstrument);!1===e.enabled||!1===t?this.autoInstrument={}:(i.isType(t,"object")||(t=s),this.autoInstrument=i.merge(s,t)),this.instrument(n),void 0!==e.scrubTelemetryInputs&&(this.scrubTelemetryInputs=!!e.scrubTelemetryInputs),void 0!==e.telemetryScrubber&&(this.telemetryScrubber=e.telemetryScrubber)},u.prototype.instrument=function(e){!this.autoInstrument.network||e&&e.network?!this.autoInstrument.network&&e&&e.network&&this.deinstrumentNetwork():this.instrumentNetwork(),!this.autoInstrument.log||e&&e.log?!this.autoInstrument.log&&e&&e.log&&this.deinstrumentConsole():this.instrumentConsole(),!this.autoInstrument.dom||e&&e.dom?!this.autoInstrument.dom&&e&&e.dom&&this.deinstrumentDom():this.instrumentDom(),!this.autoInstrument.navigation||e&&e.navigation?!this.autoInstrument.navigation&&e&&e.navigation&&this.deinstrumentNavigation():this.instrumentNavigation(),!this.autoInstrument.connectivity||e&&e.connectivity?!this.autoInstrument.connectivity&&e&&e.connectivity&&this.deinstrumentConnectivity():this.instrumentConnectivity()},u.prototype.deinstrumentNetwork=function(){c(this.replacements,"network")},u.prototype.instrumentNetwork=function(){var e=this;function t(t,n){t in n&&i.isFunction(n[t])&&a(n,t,(function(t){return e.rollbar.wrap(t)}))}if("XMLHttpRequest"in this._window){var n=this._window.XMLHttpRequest.prototype;a(n,"open",(function(t){return function(n,r){return i.isType(r,"string")&&(this.__rollbar_xhr={method:n,url:r,status_code:null,start_time_ms:i.now(),end_time_ms:null},e.autoInstrument.networkRequestHeaders&&(this.__rollbar_xhr.request_headers={})),t.apply(this,arguments)}}),this.replacements,"network"),a(n,"setRequestHeader",(function(t){return function(n,r){return e.autoInstrument.networkRequestHeaders&&this.__rollbar_xhr&&i.isType(n,"string")&&i.isType(r,"string")&&(this.__rollbar_xhr.request_headers[n]=r),"content-type"===n.toLowerCase()&&(this.__rollbar_xhr.request_content_type=r),t.apply(this,arguments)}}),this.replacements,"network"),a(n,"send",(function(n){return function(r){var o=this;function s(){if(o.__rollbar_xhr&&(null===o.__rollbar_xhr.status_code&&(o.__rollbar_xhr.status_code=0,e.autoInstrument.networkRequestBody&&(o.__rollbar_xhr.request=r),o.__rollbar_event=e.captureNetwork(o.__rollbar_xhr,"xhr",void 0)),o.readyState<2&&(o.__rollbar_xhr.start_time_ms=i.now()),o.readyState>3)){o.__rollbar_xhr.end_time_ms=i.now();var t=null;if(o.__rollbar_xhr.response_content_type=o.getResponseHeader("Content-Type"),e.autoInstrument.networkResponseHeaders){var n=e.autoInstrument.networkResponseHeaders;t={};try{var s,a;if(!0===n){var c=o.getAllResponseHeaders();if(c){var u,l,p=c.trim().split(/[\r\n]+/);for(a=0;a<p.length;a++)s=(u=p[a].split(": ")).shift(),l=u.join(": "),t[s]=l}}else for(a=0;a<n.length;a++)t[s=n[a]]=o.getResponseHeader(s)}catch(e){}}var d=null;if(e.autoInstrument.networkResponseBody)try{d=o.responseText}catch(e){}var h=null;(d||t)&&(h={},d&&(e.isJsonContentType(o.__rollbar_xhr.request_content_type)?h.body=e.scrubJson(d):h.body=d),t&&(h.headers=t)),h&&(o.__rollbar_xhr.response=h);try{var f=o.status;f=1223===f?204:f,o.__rollbar_xhr.status_code=f,o.__rollbar_event.level=e.telemeter.levelFromStatus(f),e.errorOnHttpStatus(o.__rollbar_xhr)}catch(e){}}}return t("onload",o),t("onerror",o),t("onprogress",o),"onreadystatechange"in o&&i.isFunction(o.onreadystatechange)?a(o,"onreadystatechange",(function(t){return e.rollbar.wrap(t,void 0,s)})):o.onreadystatechange=s,o.__rollbar_xhr&&(o.__rollbar_xhr.stack=(new Error).stack),n.apply(this,arguments)}}),this.replacements,"network")}"fetch"in this._window&&a(this._window,"fetch",(function(t){return function(n,r){for(var o=new Array(arguments.length),s=0,a=o.length;s<a;s++)o[s]=arguments[s];var c,u=o[0],l="GET";i.isType(u,"string")?c=u:u&&(c=u.url,u.method&&(l=u.method)),o[1]&&o[1].method&&(l=o[1].method);var p={method:l,url:c,status_code:null,start_time_ms:i.now(),end_time_ms:null};if(o[1]&&o[1].headers){var d=new Headers(o[1].headers);p.request_content_type=d.get("Content-Type"),e.autoInstrument.networkRequestHeaders&&(p.request_headers=e.fetchHeaders(d,e.autoInstrument.networkRequestHeaders))}return e.autoInstrument.networkRequestBody&&(o[1]&&o[1].body?p.request=o[1].body:o[0]&&!i.isType(o[0],"string")&&o[0].body&&(p.request=o[0].body)),e.captureNetwork(p,"fetch",void 0),p.stack=(new Error).stack,t.apply(this,o).then((function(t){p.end_time_ms=i.now(),p.status_code=t.status,p.response_content_type=t.headers.get("Content-Type");var n=null;e.autoInstrument.networkResponseHeaders&&(n=e.fetchHeaders(t.headers,e.autoInstrument.networkResponseHeaders));var r=null;return e.autoInstrument.networkResponseBody&&"function"==typeof t.text&&(r=t.text()),(n||r)&&(p.response={},r&&("function"==typeof r.then?r.then((function(t){e.isJsonContentType(p.response_content_type)&&(p.response.body=e.scrubJson(t))})):p.response.body=r),n&&(p.response.headers=n)),e.errorOnHttpStatus(p),t}))}}),this.replacements,"network")},u.prototype.captureNetwork=function(e,t,n){return e.request&&this.isJsonContentType(e.request_content_type)&&(e.request=this.scrubJson(e.request)),this.telemeter.captureNetwork(e,t,n)},u.prototype.isJsonContentType=function(e){return!(!e||!e.toLowerCase().includes("json"))},u.prototype.scrubJson=function(e){return JSON.stringify(i.scrub(JSON.parse(e),this.options.scrubFields))},u.prototype.fetchHeaders=function(e,t){var n={};try{var i;if(!0===t){if("function"==typeof e.entries)for(var r=e.entries(),o=r.next();!o.done;)n[o.value[0]]=o.value[1],o=r.next()}else for(i=0;i<t.length;i++){var s=t[i];n[s]=e.get(s)}}catch(e){}return n},u.prototype.errorOnHttpStatus=function(e){var t=e.status_code;if(t>=500&&this.autoInstrument.networkErrorOnHttp5xx||t>=400&&this.autoInstrument.networkErrorOnHttp4xx||0===t&&this.autoInstrument.networkErrorOnHttp0){var n=new Error("HTTP request failed with Status "+t);n.stack=e.stack,this.rollbar.error(n,{skipFrames:1})}},u.prototype.deinstrumentConsole=function(){if("console"in this._window&&this._window.console.log)for(var e;this.replacements.log.length;)e=this.replacements.log.shift(),this._window.console[e[0]]=e[1]},u.prototype.instrumentConsole=function(){if("console"in this._window&&this._window.console.log){var e=this,t=this._window.console,n=["debug","info","warn","error","log"];try{for(var r=0,o=n.length;r<o;r++)s(n[r])}catch(e){this.diagnostic.instrumentConsole={error:e.message}}}function s(n){var r=t[n],o=t,s="warn"===n?"warning":n;t[n]=function(){var t=Array.prototype.slice.call(arguments),n=i.formatArgsAsString(t);e.telemeter.captureLog(n,s),r&&Function.prototype.apply.call(r,o,t)},e.replacements.log.push([n,r])}},u.prototype.deinstrumentDom=function(){("addEventListener"in this._window||"attachEvent"in this._window)&&this.removeListeners("dom")},u.prototype.instrumentDom=function(){if("addEventListener"in this._window||"attachEvent"in this._window){var e=this.handleClick.bind(this),t=this.handleBlur.bind(this);this.addListener("dom",this._window,"click","onclick",e,!0),this.addListener("dom",this._window,"blur","onfocusout",t,!0)}},u.prototype.handleClick=function(e){try{var t=o.getElementFromEvent(e,this._document),n=t&&t.tagName,i=o.isDescribedElement(t,"a")||o.isDescribedElement(t,"button");n&&(i||o.isDescribedElement(t,"input",["button","submit"]))?this.captureDomEvent("click",t):o.isDescribedElement(t,"input",["checkbox","radio"])&&this.captureDomEvent("input",t,t.value,t.checked)}catch(e){}},u.prototype.handleBlur=function(e){try{var t=o.getElementFromEvent(e,this._document);t&&t.tagName&&(o.isDescribedElement(t,"textarea")?this.captureDomEvent("input",t,t.value):o.isDescribedElement(t,"select")&&t.options&&t.options.length?this.handleSelectInputChanged(t):o.isDescribedElement(t,"input")&&!o.isDescribedElement(t,"input",["button","submit","hidden","checkbox","radio"])&&this.captureDomEvent("input",t,t.value))}catch(e){}},u.prototype.handleSelectInputChanged=function(e){if(e.multiple)for(var t=0;t<e.options.length;t++)e.options[t].selected&&this.captureDomEvent("input",e,e.options[t].value);else e.selectedIndex>=0&&e.options[e.selectedIndex]&&this.captureDomEvent("input",e,e.options[e.selectedIndex].value)},u.prototype.captureDomEvent=function(e,t,n,i){if(void 0!==n)if(this.scrubTelemetryInputs||"password"===o.getElementType(t))n="[scrubbed]";else{var r=o.describeElement(t);this.telemetryScrubber?this.telemetryScrubber(r)&&(n="[scrubbed]"):this.defaultValueScrubber(r)&&(n="[scrubbed]")}var s=o.elementArrayToString(o.treeToArray(t));this.telemeter.captureDom(e,s,n,i)},u.prototype.deinstrumentNavigation=function(){var e=this._window.chrome;!(e&&e.app&&e.app.runtime)&&this._window.history&&this._window.history.pushState&&c(this.replacements,"navigation")},u.prototype.instrumentNavigation=function(){var e=this._window.chrome;if(!(e&&e.app&&e.app.runtime)&&this._window.history&&this._window.history.pushState){var t=this;a(this._window,"onpopstate",(function(e){return function(){var n=t._location.href;t.handleUrlChange(t._lastHref,n),e&&e.apply(this,arguments)}}),this.replacements,"navigation"),a(this._window.history,"pushState",(function(e){return function(){var n=arguments.length>2?arguments[2]:void 0;return n&&t.handleUrlChange(t._lastHref,n+""),e.apply(this,arguments)}}),this.replacements,"navigation")}},u.prototype.handleUrlChange=function(e,t){var n=r.parse(this._location.href),i=r.parse(t),o=r.parse(e);this._lastHref=t,n.protocol===i.protocol&&n.host===i.host&&(t=i.path+(i.hash||"")),n.protocol===o.protocol&&n.host===o.host&&(e=o.path+(o.hash||"")),this.telemeter.captureNavigation(e,t)},u.prototype.deinstrumentConnectivity=function(){("addEventListener"in this._window||"body"in this._document)&&(this._window.addEventListener?this.removeListeners("connectivity"):c(this.replacements,"connectivity"))},u.prototype.instrumentConnectivity=function(){if("addEventListener"in this._window||"body"in this._document)if(this._window.addEventListener)this.addListener("connectivity",this._window,"online",void 0,function(){this.telemeter.captureConnectivityChange("online")}.bind(this),!0),this.addListener("connectivity",this._window,"offline",void 0,function(){this.telemeter.captureConnectivityChange("offline")}.bind(this),!0);else{var e=this;a(this._document.body,"ononline",(function(t){return function(){e.telemeter.captureConnectivityChange("online"),t&&t.apply(this,arguments)}}),this.replacements,"connectivity"),a(this._document.body,"onoffline",(function(t){return function(){e.telemeter.captureConnectivityChange("offline"),t&&t.apply(this,arguments)}}),this.replacements,"connectivity")}},u.prototype.addListener=function(e,t,n,i,r,o){t.addEventListener?(t.addEventListener(n,r,o),this.eventRemovers[e].push((function(){t.removeEventListener(n,r,o)}))):i&&(t.attachEvent(i,r),this.eventRemovers[e].push((function(){t.detachEvent(i,r)})))},u.prototype.removeListeners=function(e){for(;this.eventRemovers[e].length;)this.eventRemovers[e].shift()()},e.exports=u},function(e,t,n){"use strict";function i(e){return(e.getAttribute("type")||"").toLowerCase()}function r(e){if(!e||!e.tagName)return"";var t=[e.tagName];e.id&&t.push("#"+e.id),e.classes&&t.push("."+e.classes.join("."));for(var n=0;n<e.attributes.length;n++)t.push("["+e.attributes[n].key+'="'+e.attributes[n].value+'"]');return t.join("")}function o(e){if(!e||!e.tagName)return null;var t,n,i,r,o={};o.tagName=e.tagName.toLowerCase(),e.id&&(o.id=e.id),(t=e.className)&&"string"==typeof t&&(o.classes=t.split(/\s+/));var s=["type","name","title","alt"];for(o.attributes=[],r=0;r<s.length;r++)n=s[r],(i=e.getAttribute(n))&&o.attributes.push({key:n,value:i});return o}e.exports={describeElement:o,descriptionToString:r,elementArrayToString:function(e){for(var t,n,i=" > ".length,o=[],s=0,a=e.length-1;a>=0;a--){if(t=r(e[a]),n=s+o.length*i+t.length,a<e.length-1&&n>=83){o.unshift("...");break}o.unshift(t),s+=t.length}return o.join(" > ")},treeToArray:function(e){for(var t,n=[],i=0;e&&i<5&&"html"!==(t=o(e)).tagName;i++)n.unshift(t),e=e.parentNode;return n},getElementFromEvent:function(e,t){return e.target?e.target:t&&t.elementFromPoint?t.elementFromPoint(e.clientX,e.clientY):void 0},isDescribedElement:function(e,t,n){if(e.tagName.toLowerCase()!==t.toLowerCase())return!1;if(!n)return!0;e=i(e);for(var r=0;r<n.length;r++)if(n[r]===e)return!0;return!1},getElementType:i}}])},function(e,t,n){(function(){var t,i,r,o,s,a,c,u,l=[].slice;u=n(227),r={cmd:"⌘",ctrl:"⌃",alt:"⌥",option:"⌥",shift:"⇧",enter:"⏎",left:"←",right:"→",up:"↑",down:"↓"},o={cmd:"Cmd",ctrl:"Ctrl",alt:"Alt",option:"Alt",shift:"Shift",enter:"Enter",left:"Left",right:"Right",up:"Up",down:"Down"},a={"~":"`",_:"-","+":"=","|":"\\","{":"[","}":"]",":":";",'"':"'","<":",",">":".","?":"/"},c=function(e){var t,n,i,r,o;if(i=0,n=[],null==e)return n;for(t=r=0,o=e.length;r<o;t=++r)"."!==e[t]||0!==t&&"\\"===e[t-1]||(n.push(e.substring(i,t)),i=t+1);return n.push(e.substr(i,e.length)),n},i=function(e){return u.isObject(e)&&!u.isArray(e)},s={adviseBefore:function(e,t,n){var i;return i=e[t],e[t]=function(){var e;if(e=1<=arguments.length?l.call(arguments,0):[],!1!==n.apply(this,e))return i.apply(this,e)}},camelize:function(e){return e?e.replace(/[_-]+(\w)/g,(function(e){return e[1].toUpperCase()})):""},capitalize:function(e){return e?"github"===e.toLowerCase()?"GitHub":e[0].toUpperCase()+e.slice(1):""},compactObject:function(e){var t,n,i;for(t in n={},e)null!=(i=e[t])&&(n[t]=i);return n},dasherize:function(e){return e?(e=e[0].toLowerCase()+e.slice(1)).replace(/([A-Z])|(_)/g,(function(e,t){return t?"-"+t.toLowerCase():"-"})):""},deepClone:function(e){return u.isArray(e)?e.map((function(e){return s.deepClone(e)})):u.isObject(e)&&!u.isFunction(e)?s.mapObject(e,(function(e,t){return[e,s.deepClone(t)]})):e},deepExtend:function(e){var t,n,r,o,a,c,u;for(o=e,t=0;++t<arguments.length;)if(r=arguments[t],i(o)&&i(r))for(a=0,c=(u=Object.keys(r)).length;a<c;a++)o[n=u[a]]=s.deepExtend(o[n],r[n]);else o=s.deepClone(r);return o},deepContains:function(e,t){var n,i,r;if(null==e)return!1;for(i=0,r=e.length;i<r;i++)if(n=e[i],u.isEqual(n,t))return!0;return!1},endsWith:function(e,t){return null==t&&(t=""),!!e&&-1!==e.indexOf(t,e.length-t.length)},escapeAttribute:function(e){return e?e.replace(/"/g,"&quot;").replace(/\n/g,"").replace(/\\/g,"-"):""},escapeRegExp:function(e){return e?e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"):""},humanizeEventName:function(e,t){var n,i,r,o;return i=(o=e.split(":"))[0],null==(n=o[1])?s.undasherize(i):(r=s.undasherize(i),null==t&&(t=s.undasherize(n)),r+": "+t)},humanizeKey:function(e,t){var n;return null==t&&(t=process.platform),e?(n="darwin"===t?r:o)[e]?n[e]:1===e.length&&null!=a[e]?[n.shift,a[e]]:1===e.length&&e===e.toUpperCase()&&e.toUpperCase()!==e.toLowerCase()?[n.shift,e.toUpperCase()]:1===e.length||/f[0-9]{1,2}/.test(e)?e.toUpperCase():"darwin"===t?e:s.capitalize(e):e},humanizeKeystroke:function(e,t){var n,i,r,o,a,c,l,p,d,h;if(null==t&&(t=process.platform),!e)return e;for(n=[],l=0,d=(a=e.split(" ")).length;l<d;l++){for(o=[],i=p=0,h=(c=(e=a[l]).split("-")).length;p<h;i=++p)""===(r=c[i])&&""===c[i-1]&&(r="-"),r&&o.push(s.humanizeKey(r,t));o=u.uniq(u.flatten(o)),o="darwin"===t?o.join(""):o.join("+"),n.push(o)}return n.join(" ")},isSubset:function(e,t){return u.every(e,(function(e){return u.include(t,e)}))},losslessInvert:function(e){var t,n,i;for(n in t={},e)null==t[i=e[n]]&&(t[i]=[]),t[i].push(n);return t},mapObject:function(e,t){var n,i,r,o,s,a,c;for(i={},o=0,s=(a=Object.keys(e)).length;o<s;o++)n=(c=t(n=a[o],e[n]))[0],r=c[1],i[n]=r;return i},multiplyString:function(e,t){var n,i;for(n="",i=0;i<t;)n+=e,i++;return n},pluralize:function(e,t,n){return null==e&&(e=0),null==n&&(n=t+"s"),1===e?e+" "+t:e+" "+n},remove:function(e,t){var n;return(n=e.indexOf(t))>=0&&e.splice(n,1),e},setValueForKeyPath:function(e,t,n){var i,r;for(r=c(t);r.length>1;)null==e[i=r.shift()]&&(e[i]={}),e=e[i];return null!=n?e[r.shift()]=n:delete e[r.shift()]},hasKeyPath:function(e,t){var n,i,r,o;for(r=0,o=(i=c(t)).length;r<o;r++){if(n=i[r],!e.hasOwnProperty(n))return!1;e=e[n]}return!0},spliceWithArray:function(e,t,n,i,r){var o,s,a,c;if(null==r&&(r=1e5),i.length<r)return e.splice.apply(e,[t,n].concat(l.call(i)));for(e.splice(t,n),c=[],o=s=0,a=i.length;r>0?s<=a:s>=a;o=s+=r)c.push(e.splice.apply(e,[t+o,0].concat(l.call(i.slice(o,o+r)))));return c},sum:function(e){var t,n,i;for(t=0,n=0,i=e.length;n<i;n++)t+=e[n];return t},uncamelcase:function(e){var t;return e?(t=e.replace(/([A-Z])|_+/g,(function(e,t){return null==t&&(t="")," "+t})),s.capitalize(t.trim())):""},undasherize:function(e){return e?e.split("-").map(s.capitalize).join(" "):""},underscore:function(e){return e?(e=e[0].toLowerCase()+e.slice(1)).replace(/([A-Z])|-+/g,(function(e,t){return null==t&&(t=""),"_"+t.toLowerCase()})):""},valueForKeyPath:function(e,t){var n,i,r;for(i=0,r=(n=c(t)).length;i<r;i++)if(null==(e=e[n[i]]))return;return e},isEqual:function(e,n,i,r){return u.isArray(i)&&u.isArray(r)?t(e,n,i,r):t(e,n)},isEqualForProperties:function(){var e,t,n,i,r,o;for(e=arguments[0],t=arguments[1],r=0,o=(n=3<=arguments.length?l.call(arguments,2):[]).length;r<o;r++)if(i=n[r],!u.isEqual(e[i],t[i]))return!1;return!0}},t=function(e,n,i,r){var o,s,a,c,l,p,d,h,f,m,g,v,x,b;if(null==i&&(i=[]),null==r&&(r=[]),e===n)return u.isEqual(e,n);if(u.isFunction(e)||u.isFunction(n))return u.isEqual(e,n);for(v=i.length;v--;)if(i[v]===e)return r[v]===n;if(i.push(e),r.push(n),f=!1,u.isFunction(null!=e?e.isEqual:void 0))f=e.isEqual(n,i,r);else if(u.isFunction(null!=n?n.isEqual:void 0))f=n.isEqual(e,r,i);else if(u.isArray(e)&&u.isArray(n)&&e.length===n.length){for(f=!0,m=x=0,b=e.length;x<b;m=++x)if(a=e[m],!t(a,n[m],i,r)){f=!1;break}}else if(u.isRegExp(e)&&u.isRegExp(n))f=u.isEqual(e,n);else if(u.isElement(e)&&u.isElement(n))f=e===n;else if(u.isObject(e)&&u.isObject(n))if(o=e.constructor,p=n.constructor,s=u.isFunction(o)&&o instanceof o,d=u.isFunction(p)&&p instanceof p,o===p||s&&d){for(g in c=0,f=!0,e)if(l=e[g],u.has(e,g)&&(c++,!u.has(n,g)||!t(l,n[g],i,r))){f=!1;break}if(f){for(g in h=0,n)n[g],u.has(n,g)&&h++;f=c===h}}else f=!1;else f=u.isEqual(e,n);return i.pop(),r.pop(),f},e.exports=u.extend({},u,s)}).call(this)},function(e,t,n){"use strict";const{CompositeDisposable:i}=n(0),{flatten:r,compact:o}=n(2),s=n(198),a={python:["py"],go:["go"],javascript:["js","jsx","vue"]};e.exports=class{init(e){this.Kite=e,this.subscriptions=new i,this.kiteEditorByEditorID=[],this.pathSubscriptionsByEditorID={},this.subscriptions.add(atom.workspace.observeTextEditors(e=>{if(this.isGrammarSupported(e)&&this.subscribeToEditor(e),!this.pathSubscriptionsByEditorID[e.id]){const t=new i,n=()=>{t.dispose(),delete this.pathSubscriptionsByEditorID[e.id],this.subscriptions.remove(t)};this.subscriptions.add(t),t.add(e.onDidChangePath(()=>{this.isGrammarSupported(e)?this.subscribeToEditor(e):this.hasEditorSubscription(e)&&this.unsubscribeFromEditor(e)})),t.add(e.onDidDestroy(()=>n())),this.pathSubscriptionsByEditorID[e.id]=t}})),this.subscriptions.add(atom.workspace.observeActiveTextEditor(e=>{e&&"Go"===e.getGrammar().name&&this.Kite&&this.Kite.notifications.showGoBetaNotification(this.Kite)}))}dispose(){delete this.kiteEditorByEditorID,this.subscriptions&&this.subscriptions.dispose()}subscribeToEditor(e){if(!this.hasEditorSubscription(e)){const t=new s(e);this.kiteEditorByEditorID[e.id]=t,this.subscriptions.add(t);const n=e.onDidDestroy(()=>{this.unsubscribeFromEditor(e),this.subscriptions.remove(n)});this.subscriptions.add(n)}}unsubscribeFromEditor(e){if(!this.hasEditorSubscription(e))return;const t=this.kiteEditorByEditorID[e.id];t.dispose(),this.subscriptions.remove(t),delete this.kiteEditorByEditorID[e.id]}hasEditorSubscription(e){return null!=this.kiteEditorForEditor(e)}kiteEditorForEditor(e){return e&&this.kiteEditorByEditorID&&this.kiteEditorByEditorID[e.id]}getSupportedLanguages(){return["python","go","javascript"]}hasSupportedFileOpen(){return atom.workspace.getTextEditors().some(e=>this.isGrammarSupported(e))}hasActiveSupportedFile(){const e=atom.workspace.getActiveTextEditor();return e&&this.isGrammarSupported(e)}isGrammarSupported(e){return e&&new RegExp(this.getSupportedLanguagesRegExp(this.getSupportedLanguages())).test(e.getPath()||"")}getSupportedLanguagesRegExp(e){return`.(${o(r(e.map(e=>a[e]))).join("|")})$`}getEditorsForPath(e){return atom.workspace.getPaneItems().filter(t=>t&&t.getURI&&t.getURI()===e)}}},function(e,t,n){"use strict";let i,r,o,s,a,c,u,l,p;e.exports=class{constructor(e){this.editor=e,this.buffer=e.getBuffer(),this.editorElement=atom.views.getView(e),this.fixesHistory=[],this.subscribeToEditor(e)}dispose(){this.subscriptions&&this.subscriptions.dispose(),delete this.subscriptions,delete this.editorElement,delete this.editor,delete this.buffer}subscribeToEditor(e){l||(({CompositeDisposable:l}=n(0)),({screenPositionForMouseEvent:c,pixelPositionForMouseEvent:u}=n(2)),s=n(199),r=n(16),a=n(202));const t=new l;this.subscriptions=t,this.events=new a(e),t.add(this.events);const p=atom.workspace.getActiveTextEditor();p&&e!==p||this.events.focus(),this.hoverGesture=new s(e,{ignoredSelector:"atom-overlay, atom-overlay *"}),t.add(this.hoverGesture),t.add(this.hoverGesture.onDidActivate(({position:t})=>{atom.config.get("kite.enableHoverUI")&&(o||(o=n(31)),o.showHoverAtPositionWithDelay(e,t),o.setWordHoverActive(!0))})),t.add(this.hoverGesture.onDidDeactivate(()=>{atom.config.get("kite.enableHoverUI")&&(o||(o=n(31)),o.setWordHoverActive(!1))})),t.add(e.onDidChangeCursorPosition(()=>{i||(i=n(25)),atom.config.get("kite.enableHoverUI")&&(o||(o=n(31)),o.setWordHoverActive(!1))}))}expandPosition(e){p||(p=n(11)),r.getHoverDataAtPosition(this.editor,e).then(e=>{const[t]=e.symbol;t&&t.id&&this.expandId(t.id)})}expandId(e){atom.applicationDelegate.openExternal("kite://docs/"+encodeURI(e))}openDefinitionForId(e){return r.getValueReportDataForId(e).then(e=>this.openDefinition(e.report.definition))}openDefinitionAtRange(e){const t=this.tokensList.tokenAtRange(e);return this.openTokenDefinition(t)}openDefinitionAtPosition(e){const t=this.tokensList.tokenAtPosition(e);return this.openTokenDefinition(t)}openDefinition(e){return p||(p=n(11)),""===e.filename.trim()?Promise.resolve(!1):new Promise((t,n)=>(p.featureRequested("definition"),!!e&&atom.workspace.open(e.filename).then(t=>(p.featureFulfilled("definition"),t.setCursorBufferPosition([e.line-1,e.column?e.column-1:0],{autoscroll:!0}),!0))))}screenPositionForMouseEvent(e){return c(this.editorElement,e)}pixelPositionForMouseEvent(e){return u(this.editorElement,e)}}},function(e,t,n){"use strict";const{CompositeDisposable:i}=n(0),r=n(200),{DisposableEvent:o,isWithinTextOfLine:s}=n(2);e.exports=class extends r{constructor(e,t){super(e,t),this.registerEvents()}dispose(){super.dispose(),this.subscriptions.dispose()}registerEvents(){this.subscriptions=new i,this.subscriptions.add(new o(document,"mouseout",e=>{const t=e.relatedTarget||e.toElement;t&&"HTML"!=t.nodeName||this.deactivate()})),this.subscriptions.add(new o(this.editorElement,"mousemove",e=>{if(!this.matchesModifiers(e))return void this.deactivate();if(e.target.matches(this.options.ignoredSelector))return;const t=this.wordRangeForMouseEvent(event);t&&this.lastRange&&!this.lastRange.isEqual(t)&&!t.isEmpty()?s(this.editorElement,event)&&this.activate({position:this.screenPositionForMouseEvent(event),range:t}):t&&!t.isEmpty()||this.deactivate(),this.lastRange=t}))}}},function(e,t,n){"use strict";const{Range:i}=n(0),r=n(201),o=n(51),{screenPositionForMouseEvent:s}=n(2);e.exports=class extends r{constructor(e,t){super(e,t)}matchesModifiers(e){return e.altKey==!!this.options.altKey&&e.ctrlKey==!!this.options.ctrlKey&&e.shiftKey==!!this.options.shiftKey&&e.metaKey==!!this.options.metaKey}screenPositionForMouseEvent(e){return s(this.editorElement,e)}wordRangeForMouseEvent(e){const t=s(this.editorElement,e);if(t){const e=new o(this.editor);return e.setScreenPosition(t),i.fromObject(e.getCurrentWordBufferRange({includeNonWordCharacters:!1}))}return null}}},function(e,t,n){"use strict";const{Emitter:i}=n(0);e.exports=class{constructor(e,t){this.editor=e,this.buffer=e.getBuffer(),this.editorElement=atom.views.getView(e),this.options=t||{},this.emitter=new i}dispose(){this.emitter.dispose()}pause(){this.paused=!0}resume(){this.paused=!1}isActive(){return this.active}activate(e){this.active&&this.deactivate(),this.active=!0,this.paused||this.emitter.emit("did-activate",e)}deactivate(e){this.active&&(this.active=!1,this.paused||this.emitter.emit("did-deactivate",e))}onDidActivate(e){return this.emitter.on("did-activate",e)}onDidDeactivate(e){return this.emitter.on("did-deactivate",e)}}},function(e,t,n){"use strict";const{CompositeDisposable:i}=n(0),r=n(13),{MAX_FILE_SIZE:o,MAX_PAYLOAD_SIZE:s}=n(37),{DisposableEvent:a}=n(2),{version:c}=n(11);let u;e.exports=class{constructor(e){u||(u=n(25)),this.editor=e,this.subscriptions=new i,this.pendingEvents=[],this.subscriptions.add(e.onDidChange(e=>{this.send("edit")})),this.subscriptions.add(e.onDidChangeSelectionRange(()=>{this.send("selection")}));const t=atom.views.getView(this.editor);let r;this.subscriptions.add(new a(t,"mousedown",()=>{r=t.hasFocus()})),this.subscriptions.add(new a(t,"focus",()=>{r||this.focus(),r=null}))}focus(){return this.send("focus")}dispose(){delete this.editor,this.subscriptions.dispose()}reset(){clearTimeout(this.timeout),this.pendingEvents=[]}send(e){return this.pendingPromise||(this.pendingPromise=new Promise((e,t)=>{this.pendingPromiseResolve=e,this.pendingPromiseReject=t})),this.pendingEvents.push(e),clearTimeout(this.timeout),this.timeout=setTimeout(()=>this.mergeEvents(),0),this.pendingPromise.catch(e=>{})}mergeEvents(){if(!this.editor)return;let e=this.pendingEvents.filter(e=>"focus"===e)[0],t=this.pendingEvents.some(e=>"edit"===e)?"edit":this.pendingEvents.pop();this.reset();const n=JSON.stringify(this.buildEvent(t));if(n.length>s)return this.reset();let i=Promise.resolve();return e&&t!==e&&(i=i.then(()=>r.request({path:"/clientapi/editor/event",method:"POST"},JSON.stringify(this.buildEvent(e))))),i.then(()=>r.request({path:"/clientapi/editor/event",method:"POST"},n)).then(e=>{this.pendingPromiseResolve(e)}).catch(e=>{this.pendingPromiseReject&&this.pendingPromiseReject(e)}).then(()=>{delete this.pendingPromise,delete this.pendingPromiseResolve,delete this.pendingPromiseReject})}buildEvent(e){let t=this.editor.getText();const n=this.editor.getCursorBufferPosition(),i=this.editor.getBuffer().characterIndexForPosition(n);return t&&t.length>o&&(e="skip",t=""),this.makeEvent(e,this.editor.getPath(),t,"skip"===e?0:i)}makeEvent(e,t,n,i){return{source:"atom",action:e,filename:t,text:n,selections:[{start:i,end:i}],editor_version:atom.getVersion(),plugin_version:c}}}},function(e,t,n){"use strict";n(52);const{Point:i,CompositeDisposable:r}=n(0),{symbolName:o,symbolType:s}=n(36),{internalGotoURL:a}=n(83),{debugData:c,wrapAfterParenthesisAndDots:u}=n(84),{DisposableEvent:l,idToDottedPath:p}=n(2);let d;class h extends HTMLElement{static initClass(){return customElements.define("kite-hover",this),this}disconnectedCallback(){this.subscriptions&&this.subscriptions.dispose()}connectedCallback(){this.classList.add("native-key-bindings"),this.setAttribute("tabindex","-1")}setData(e,t,h){if(h=i.fromObject(h),e&&e.symbol&&e.symbol.length){const[t]=e.symbol,i=[];e.report.definition&&e.report.definition.filename&&""!==e.report.definition.filename.trim()&&i.push(`<a\n        href="${a(e.report.definition)}">Def<span class="kite-link-icon">&#8619;</span></a>`),i.push(`<a href="kite-atom-internal://open-search-docs/${p(t.id)}">Docs<span class="kite-link-icon">&#8663;</span></a>`),this.innerHTML=`\n    <div class="definition">\n      <kite-logo small title="Powered by Kite" class="badge"></kite-logo>\n      <span class="name"><code>${u(o(t))}</code></span>\n      <span class="type">&#10098; ${s(t)} &#10099;</span>\n      <kite-links metric="Hover">\n        ${i.join(" ")}\n      </kite-links>\n    </div>\n    ${c(e)}`,this.subscriptions=new r;const h=this.querySelector("kite-links"),f=this.querySelector(".debug");f&&this.subscriptions.add(new l(f,"mousewheel",e=>{e.stopPropagation()})),h&&this.subscriptions.add(h.onDidClickMoreLink(()=>{d||(d=n(31)),d.dismiss()}))}else this.innerHTML=""}}e.exports=h.initClass()},function(e,t,n){"use strict";const{CompositeDisposable:i,Disposable:r,TextEditor:o}=n(0),s=n(13),a=n(78),{MAX_FILE_SIZE:c}=n(37);n(85);const{STATES:u}=s,l={[u.UNSUPPORTED]:"Kite only supports macOS, Windows, and Ubuntu at the moment.",[u.UNINSTALLED]:"Kite is not installed.",[u.INSTALLED]:"Kite is not running.",[u.RUNNING]:"Kite is running but not reachable.",[u.READY]:"Kite is ready.",sizeExceedsLimit:"The current file is too large for Kite to handle",noIndex:"Kite is ready, but no index available",indexing:"Kite engine is indexing your code",syncing:"Kite engine is syncing your code"},p={[u.UNSUPPORTED]:"unsupported",[u.UNINSTALLED]:"uninstalled",[u.INSTALLED]:"installed",[u.RUNNING]:"running",[u.READY]:"ready"},d={[u.UNSUPPORTED]:"",[u.UNINSTALLED]:"Kite: not installed",[u.INSTALLED]:"Kite: not running",[u.RUNNING]:"",[u.NOINDEX]:"Kite: ready (unindexed)",[u.READY]:""};e.exports=class{constructor(){this.element=document.createElement("div"),this.element.className="kite-status",this.element.setAttribute("status","unknown"),this.element.innerHTML='<kite-logo small class="badge"></kite-logo>\n                      <kite-logo sync></kite-logo>\n                      <span class="text"></span>',this.element.classList.add("inline-block"),this.tooltipText="",this.statusText=this.element.querySelector(".text")}init(e){this.subscriptions=new i,this.editors=e.getModule("editors"),this.editors&&(this.subscriptions.add(atom.tooltips.add(this.element,{title:()=>this.tooltipText})),this.subscriptions.add(atom.workspace.onDidChangeActivePaneItem(e=>{e instanceof o&&this.editors.isGrammarSupported(e)?this.startPolling():this.stopPolling()})),this.editors.isGrammarSupported(atom.workspace.getActiveTextEditor())&&this.startPolling())}dispose(){this.subscriptions&&this.subscriptions.dispose(),delete this.subscriptions}getElement(){return this.element}startPolling(){const e=setInterval(()=>this.pollStatus(),atom.config.get("kite.pollingInterval"));return this.pollingDisposable=new r(()=>{clearInterval(e)}),this.subscriptions.add(this.pollingDisposable),this.pollStatus()}stopPolling(){return this.pollingDisposable&&(this.subscriptions.remove(this.pollingDisposable),this.pollingDisposable.dispose()),this.pollStatus()}pollStatus(){if(this.isPolling)return this.pollPromise;if(this.isPolling=!0,this.editors.hasActiveSupportedFile()){const e=atom.workspace.getActiveTextEditor();this.pollPromise=s.requestJSON({path:a.statusPath(e.getPath())}).then(t=>{this.element.removeAttribute("is-syncing"),this.element.removeAttribute("is-indexing"),this.element.removeAttribute("noIndex"),this.statusText.innerHTML=d[u.READY],this.element.setAttribute("status",p[u.READY]),"indexing"===t.status?(this.element.setAttribute("is-indexing",""),this.tooltipText=l.indexing):"syncing"===t.status?(this.element.setAttribute("is-syncing",""),this.tooltipText=l.syncing):"noIndex"===t.status?(this.element.setAttribute("noIndex",""),this.tooltipText=l.noIndex,this.statusText.innerHTML=d[u.NOINDEX]):this.fileExceedsMaxSize(e)?this.tooltipText=l.sizeExceedsLimit:this.tooltipText=l[u.READY]}).catch(e=>{const{state:t}=e.data;this.element.removeAttribute("is-syncing"),this.element.removeAttribute("is-indexing"),this.element.removeAttribute("noIndex"),null!=t?(this.tooltipText=l[t],this.statusText.innerHTML=d[t],this.element.setAttribute("status",p[t])):(this.element.setAttribute("status","unsupported"),this.statusText.innerHTML="",this.tooltipText="")})}else this.element.removeAttribute("is-syncing"),this.element.removeAttribute("is-indexing"),this.element.removeAttribute("nodindex"),this.element.setAttribute("status","unsupported"),this.tooltipText="",this.statusText.innerHTML="",this.pollPromise=Promise.resolve();return this.pollPromise=this.pollPromise.then(()=>{this.isPolling=!1}),this.pollPromise}fileExceedsMaxSize(e){return e.getBuffer().getLength()>c}}},function(e,t,n){"use strict";const{CompositeDisposable:i}=n(0),r=n(206),{KSGSearchResult:o,KSGDefaultSearchResult:s}=n(86),a=n(217),c=n(218),{SEARCH_QUERY_SELECTION_EVENT:u,CODEBLOCKS_SELECTION_EVENT:l,SEARCH_QUERY_EVENT:p,DEFAULT_QUERY_SELECTION_EVENT:d,DEFAULT_CODEBLOCKS_SELECTION_EVENT:h}=n(24),{DisposableEvent:f}=n(2),m=n(11);e.exports=class e{constructor(){this.codeblocks=new c,this.search=new a,this._visible=!1,this._needsRefresh=!0,this.currentEditor=null,this.cachedCursorPos=null,this.marker=null,this.decoration=null}init(e){this.element=new r,this._needsRefresh=!1,this.subscriptions=new i,this.subscriptions.add(atom.commands.add(this.element,{"core:close":()=>this.hide(),"core:cancel":()=>this.hide(),"kite:search-stack-overflow":()=>{this.visible?this.hide():this.show(atom.workspace.getActiveTextEditor())}})),this.subscriptions.add(this.element.onCodeBlocksEvent(e=>{switch(e.type){case u:m.record("ksg_query","searched"),this.codeblocks.executeQuery(e);break;case l:this.insertCodeblocks(e);break;case h:this.executeExternalSearch(e)}})),this.subscriptions.add(this.element.onSearchEvent(e=>{switch(e.type){case p:this.search.executeQuery(e);break;case d:this.executeExternalSearch(e)}})),this.subscriptions.add(this.codeblocks.onDidUpdate(e=>{this.element.updateCodeBlocks(e)})),this.subscriptions.add(this.codeblocks.onDidLoading(()=>{this.element.toggleCodeBlocksLoading()})),this.subscriptions.add(this.search.onDidUpdate(e=>{this.element.updateSearch(e)})),this.subscriptions.add(this.search.onDidLoading(()=>{this.element.toggleSearchLoading()}))}executeExternalSearch({query:e}){atom.applicationDelegate.openExternal("https://www.google.com/search?q="+encodeURIComponent(e)),m.record("ksg_google","opened"),this.hide()}insertCodeblocks({blocks:e,link:t}){const n=this.currentEditor?this.currentEditor.getTitle():"",i=c.decorateCodeblocks(e,t,n);this.currentEditor&&this.currentEditor.insertText(i,{select:!0}),m.record("ksg_snippet","selected"),this.hide()}dispose(){this.hide(),this.subscriptions&&this.subscriptions.dispose(),this.element&&this.element.dispose(),this.search&&this.search.dispose(),this.codeblocks&&this.codeblocks.dispose(),delete this.element,delete this.subscriptions,delete this.search,delete this.codeblocks}get needsRefresh(){return this._needsRefresh}static shouldStopPropagation(e){return e instanceof KeyboardEvent&&("Enter"===e.code||"ArrowUp"===e.code||"ArrowDown"===e.code||"Tab"===e.code)}shouldHideForTarget(e){if(this.element.contains(e))return!1;for(;e;){if(e instanceof s||e instanceof o)return!1;if(e&&e.classList&&(e.classList.contains("ksg-code-block-toggle")||e.classList.contains("ksg-shortcut")))return!1;e=e.parentNode}return!0}show(t){if(this._visible=!0,this.currentEditor&&this.currentEditor.id!==t.id&&this.hide(),this.currentEditor&&this.currentEditor.id===t.id)return;this.currentEditor=t,this.needsRefresh&&this.init(),this.subscriptions.add(new f(this.element,"keydown wheel",t=>{e.shouldStopPropagation(t)&&t.stopPropagation()})),this.subscriptions.add(new f(document,"click",e=>{this.shouldHideForTarget(e.target)&&this.hide()})),this.subscriptions.add(new f(this.currentEditor.element,"wheel",e=>{e.preventDefault()}));const n=this.currentEditor.getCursorScreenPosition();this.marker=this.currentEditor.markScreenPosition({row:n.row,column:0}),this.decoration=this.currentEditor.decorateMarker(this.marker,{type:"overlay",item:this.element})}hide(){this.element&&this.element.parentNode&&this.element.parentNode.removeChild(this.element),this.marker&&this.marker.destroy(),this.marker=null,this.decoration=null,this.currentEditor&&this.currentEditor.element.focus(),this.currentEditor=null,this.subscriptions&&this.subscriptions.dispose(),this._visible=!1,this._needsRefresh=!0}get visible(){return this._visible}getElement(){return this.element}}},function(e,t,n){"use strict";const{CompositeDisposable:i,Emitter:r}=n(0),{KSGCodeBlocks:o}=n(207),{KSGSearch:s}=n(86),{DisposableEvent:a}=n(2),{CODEBLOCKS_EVENT:c,CODEBLOCKS_SELECTION_EVENT:u,DEFAULT_CODEBLOCKS_SELECTION_EVENT:l,SEARCH_EVENT:p,SEARCH_QUERY_EVENT:d,SEARCH_QUERY_SELECTION_EVENT:h,DEFAULT_QUERY_SELECTION_EVENT:f,KSG_NAV_UP_EVENT:m,KSG_NAV_DOWN_EVENT:g,KSG_SELECTION_EVENT:v}=n(24);class x extends HTMLElement{constructor(){super(),this.subscriptions=new i,this.emitter=new r,this.addWrapper()}addWrapper(){this.wrapper=document.createElement("div"),this.wrapper.setAttribute("class","kite-ksg-inner"),this.appendChild(this.wrapper)}connectedCallback(){this.emitter||(this.emitter=new r),this.subscriptions||(this.subscriptions=new i),this.wrapper||this.addWrapper(),this._disposed=!1,this.setAttribute("tabindex",-1),this.codeBlocksElem=new o(this),this.searchElem=new s(this),this.subscriptions.add(this.codeBlocksElem.onCodeblocksSelected(e=>{e.type=u,this.emitter.emit(c,e)})),this.subscriptions.add(this.codeBlocksElem.onDefaultCodeblockSelection(e=>{e.type=l,this.emitter.emit(c,e)})),this.subscriptions.add(this.searchElem.onSearchQueryEvent(e=>{e.type=d,this.emitter.emit(p,e),this.codeBlocksElem.clearGroups()})),this.subscriptions.add(this.searchElem.onSearchQuerySelection(e=>{this.searchElem.blurSearchBar(),e.type=h,this.emitter.emit(c,e)})),this.subscriptions.add(this.searchElem.onDefaultQuerySelection(e=>{this.searchElem.blurSearchBar(),e.type=f,this.emitter.emit(p,e)})),this.subscriptions.add(new a(this,"keydown",e=>{switch(e.code){case"ArrowDown":this.emitter.emit(g);break;case"ArrowUp":this.emitter.emit(m);break;case"Enter":this.emitter.emit(v)}})),this.wrapper.appendChild(this.searchElem),this.wrapper.appendChild(this.codeBlocksElem)}disconnectedCallback(){this.dispose()}onCodeBlocksEvent(e){return this.emitter.on(c,e)}onSearchEvent(e){return this.emitter.on(p,e)}onNavUpEvent(e){return this.emitter.on(m,e)}onNavDownEvent(e){return this.emitter.on(g,e)}onSelectionEvent(e){return this.emitter.on(v,e)}updateSearch(e){this.searchElem&&this.searchElem.updateView(e)}updateCodeBlocks(e){this.codeBlocksElem&&this.codeBlocksElem.updateView(e)}toggleCodeBlocksLoading(){this.codeBlocksElem&&this.codeBlocksElem.toggleLoading()}toggleSearchLoading(){this.searchElem&&this.searchElem.toggleLoading()}toggleErrorMessage(e){this.errorMsg||(this.errorMsg=document.createElement("div"),this.errorMsg.className="ksg-search-error",this.errorMsg.innerHTML="An error occurred! Please make sure that Kite is running and that you have an Internet connection."),e?this.wrapper&&"ksg-search-error"!==this.wrapper.lastElementChild.className&&this.wrapper.appendChild(this.errorMsg):this.errorMsg.parentNode&&this.wrapper&&this.wrapper.removeChild(this.errorMsg)}dispose(){this.codeBlocksElem&&this.wrapper.removeChild(this.codeBlocksElem),this.searchElem&&this.wrapper.removeChild(this.searchElem),this.errorMsg&&this.errorMsg.parentNode&&this.wrapper&&this.wrapper.removeChild(this.errorMsg),this.wrapper&&this.wrapper.parentNode&&this.wrapper.parentNode.removeChild(this.wrapper),this.wrapper=null,this.subscriptions&&this.subscriptions.dispose(),this.emitter&&this.emitter.dispose(),delete this.emitter,delete this.subscriptions,this.codeBlocksElem=null,this.searchElem=null}}customElements.define("kite-ksg",x),e.exports=x},function(e,t,n){"use strict";const{CompositeDisposable:i,Emitter:r}=n(0),{DisposableEvent:o}=n(2),{CODEBLOCKS_ADD:s,CODEBLOCK_CLICKED:a,CODEBLOCKS_SELECTED:c,CODEBLOCKS_DEFAULT_SELECTED:u,CODEBLOCK_LINE_LIMIT:l,CODEBLOCKS_NAV_DOWN:p,CODEBLOCKS_NAV_UP:d}=n(24);class h extends HTMLElement{constructor(e){super(),this.parent=e,this.emitter=new r,this.subscriptions=new i,this.groups=[],this.tabIndex=-1,this.instantiated=!1,this.highlightedGroupIdx=null,this.loading=!1,this.addWrapper()}connectedCallback(){!this.instantiated&&this.instantiate()}addWrapper(){this.wrapper=document.createElement("div"),this.wrapper.setAttribute("class","kite-ksg-code-blocks-wrapper"),this.appendChild(this.wrapper)}disconnectedCallback(){this.dispose()}dispose(){this.clearGroups(),this.instantiated=!1,this.emitter&&this.emitter.dispose(),this.subscriptions&&this.subscriptions.dispose(),this.wrapper&&this.wrapper.parentNode&&this.wrapper.parentNode.removeChild(this.wrapper),this.wrapper=null,delete this.emitter,delete this.subscriptions}instantiate(){this.subscriptions||(this.subscriptions=new i),this.emitter||(this.emitter=new r),this.wrapper||this.addWrapper(),this.instantiated=!0}makeSelection(){this.groups&&this.groups.length&&null!==this.highlightedGroupIdx&&(this.groups[this.highlightedGroupIdx].selectHighlighted(),this.highlightedGroupIdx=null)}moveSelection(e){if(this.groups&&this.groups.length)switch(e){case p:null===this.highlightedGroupIdx?(this.highlightedGroupIdx=0,this.groups[this.highlightedGroupIdx].highlightFirst()):this.highlightedGroupIdx<this.groups.length&&(this.groups[this.highlightedGroupIdx].highlightNext()||this.highlightedGroupIdx<this.groups.length-1&&(this.groups[this.highlightedGroupIdx].unhighlight(),this.highlightedGroupIdx++,this.groups[this.highlightedGroupIdx].highlightFirst()));break;case d:null!==this.highlightedGroupIdx&&(this.groups[this.highlightedGroupIdx].highlightPrev()||(this.groups[this.highlightedGroupIdx].unhighlight(),0===this.highlightedGroupIdx?this.highlightedGroupIdx=null:(this.highlightedGroupIdx--,this.groups[this.highlightedGroupIdx].highlightLast())))}}clearGroups(){this.groups&&this.groups.length>0&&(this.subscriptions&&this.subscriptions.dispose(),delete this.subscriptions,this.instantiate(),this.groups.forEach(e=>{this.wrapper&&this.wrapper.removeChild(e),e.dispose&&e.dispose()}),this.groups=[])}onCodeblocksSelected(e){return this.emitter&&this.emitter.on(c,e)}onDefaultCodeblockSelection(e){return this.emitter&&this.emitter.on(u,e)}toggleLoading(){if(this.loading)this.groups=this.groups.filter(e=>!(e instanceof f));else{const e=new f;this.groups.push(e),this.wrapper.appendChild(e),this.focus()}this.loading=!this.loading}updateView({payload:e,data:t}){if(this.clearGroups(),"error"===e)return this.parent.toggleErrorMessage(!0),void(this.parent.searchElem&&this.parent.searchElem.setFocus());this.parent.toggleErrorMessage(!1),this.loading=!1;let n=0;if(t&&t.answers&&t.answers.length>0){const e=document.createDocumentFragment();t.answers.forEach(i=>{const r=new m(t.query,n,this,i);this.subscriptions.add(r.onAddAll(e=>{this.emitter.emit(c,e)})),e.appendChild(r),this.groups.push(r),n++}),this.wrapper.appendChild(e)}if(t&&t.query){const e=new m(t.origQuery,n,this,{},!0);this.subscriptions.add(e.onAddAll(e=>{this.emitter.emit(u,e)})),this.groups.push(e),this.wrapper.appendChild(e),this.subscriptions.add(this.parent.onNavDownEvent(()=>this.moveSelection(p)),this.parent.onNavUpEvent(()=>this.moveSelection(d)),this.parent.onSelectionEvent(()=>this.makeSelection())),this.moveSelection(p),this.parent.searchElem&&this.parent.searchElem.setFocus()}}}class f extends HTMLElement{constructor(){super();const e=document.createElement("div");e.classList.add("loading-spinner-wrapper");const t=document.createElement("div");t.classList.add("loading-spinner"),e.appendChild(t),this.appendChild(e)}}class m extends HTMLElement{constructor(e,t,n,o={},a=!1){if(super(),this.position=t,this.parent=n,this.setAttribute("class",this.position%2==0?"even":"odd"),this.isDefaultGroup=a,this.highlightedIdx=null,this.subscriptions=new i,this.emitter=new r,this.query=e,this.blocks=[],this.isDefaultGroup){const t=new v(e,this);t.id=this.blocks.length,this.subscriptions.add(t.onClicked(({query:e})=>{this.emitter.emit(s,{query:e})})),this.blocks.push(t),this.appendChild(t)}else{const{question_title:e,votes:t,is_accepted:n,code_blocks:i,answer_id:r}=o;if(i&&i.length>0){const o=document.createDocumentFragment();i.forEach((i,a)=>{const c=0==a?new g(i,this,e,r,t,n):new g(i,this);c.id=this.blocks.length,this.subscriptions.add(c.onClicked(({block:e})=>{this.emitter.emit(s,{blocks:[e],link:c.link})})),o.appendChild(c),this.blocks.push(c)}),this.appendChild(o)}}}selectHighlighted(){null!==this.highlightedIdx&&this.blocks&&this.blocks.length&&(this.blocks[this.highlightedIdx].makeSelection(),this.highlightedIdx=null)}unhighlight(){null!==this.highlightedIdx&&this.blocks&&this.blocks.length&&(this.blocks[this.highlightedIdx].unhighlight(),this.highlightedIdx=null)}highlightFirst(){null!==this.highlightedIdx&&this.unhighlight(),this.blocks&&this.blocks.length&&(this.highlightedIdx=0,this.blocks[this.highlightedIdx].highlight(),this.blocks[this.highlightedIdx].scrollIntoView({block:"center",inline:"nearest"}))}highlightLast(){null!==this.highlightedIdx&&this.unhighlight(),this.blocks&&this.blocks.length&&(this.highlightedIdx=this.blocks.length-1,this.blocks[this.highlightedIdx].highlight(),this.blocks[this.highlightedIdx].scrollIntoView({block:"center",inline:"nearest"}))}highlightNext(){return null===this.highlightedIdx?(this.highlightFirst(),!0):!!(this.blocks&&this.blocks.length&&this.highlightedIdx<this.blocks.length-1)&&(this.blocks[this.highlightedIdx].unhighlight(),this.highlightedIdx++,this.blocks[this.highlightedIdx].highlight(),this.blocks[this.highlightedIdx].scrollIntoView({block:"center",inline:"nearest"}),!0)}highlightPrev(){return null===this.highlightedIdx?(this.highlightLast(),!0):!!(this.blocks&&this.blocks.length&&this.highlightedIdx>0)&&(this.blocks[this.highlightedIdx].unhighlight(),this.highlightedIdx--,this.blocks[this.highlightedIdx].highlight(),this.blocks[this.highlightedIdx].scrollIntoView({block:"center",inline:"nearest"}),!0)}onAddAll(e){return this.emitter&&this.emitter.on(s,e)}disconnectedCallback(){this.dispose()}dispose(){this.blocks=[],this.subscriptions&&this.subscriptions.dispose(),this.emitter&&this.emitter.dispose()}}class g extends HTMLElement{static truncateCode(e){let t=0,n=0;for(const i of e){if("\n"===i&&t++,t===l)break;n++}return e.substring(0,n)}static createToggleEl(e="↧"){const t=document.createElement("div");t.classList.add("ksg-code-block-toggle");const n=document.createElement("span");n.classList.add("ellipsis"),n.appendChild(document.createTextNode("…")),t.appendChild(n);const i=document.createElement("span");return i.classList.add("arrow"),i.appendChild(document.createTextNode(e)),t.appendChild(i),t}constructor(e,t,s=null,c=null,u=null,l=null){if(super(),this.subscriptions=new i,this.emitter=new r,this._code=e,this.group=t,this.wrapper=document.createElement("div"),this.wrapper.classList.add("ksg-code-block-wrapper"),null!==s){const e=document.createElement("div"),t=document.createElement("div"),i=document.createElement("span"),r=document.createElement("span");e.setAttribute("class","ksg-codeblock-group-top"),t.setAttribute("class","ksg-codeblock-group-meta"),i.setAttribute("class","ksg-codeblock-group-title"),r.setAttribute("class","ksg-codeblock-group-vote"),l&&t.classList.add("accepted");const o=document.createElement("a"),a=document.createElement("span");a.setAttribute("class","ksg-codeblocks-title-link-icon"),a.textContent=" ⇗",this.link="https://stackoverflow.com/a/"+c,o.href=this.link,o.appendChild(document.createTextNode(s)),o.onclick=()=>{n(11).record("ksg_so","opened")},i.appendChild(o),i.appendChild(a),"number"==typeof u&&r.appendChild(document.createTextNode(`${u} votes ${l?"✓":""}`)),t.appendChild(i),t.appendChild(r),e.appendChild(t),this.wrapper.appendChild(e)}this.codeblockEl=document.createElement("div"),this.codeblockEl.classList.add("ksg-code-block-code"),this._displayCode=g.truncateCode(e),this.truncatedCode=this._displayCode,this.codeblockEl.appendChild(document.createTextNode(this.displayCode)),this.subscriptions.add(new o(this.codeblockEl,"click",e=>{this.emitter.emit(a,{block:this.code})})),this.wrapper.appendChild(this.codeblockEl),this.isTruncated&&(this.toggleSizeEl=g.createToggleEl(),this.instantiateToggleEl(),this.wrapper.appendChild(this.toggleSizeEl)),this.onmouseover=()=>{const e=this.group.parent,t=e.highlightedGroupIdx;null!==t&&e.groups[t].unhighlight(),this.group.highlightedIdx=this.id,e.highlightedGroupIdx=this.group.position,this.highlight()},this.appendChild(this.wrapper)}instantiateToggleEl(){this.toggleDisposableEvent&&(this.toggleDisposableEvent.dispose(),this.toggleDisposableEvent=null),this.toggleDisposableEvent=new o(this.toggleSizeEl,"click",e=>{let t;this.isTruncated?(t="↥",this._displayCode=this._code):(t="↧",this._displayCode=this.truncatedCode),this.codeblockEl.textContent=this.displayCode,this.toggleSizeEl.parentNode&&this.toggleSizeEl.parentNode.removeChild(this.toggleSizeEl),this.toggleSizeEl=g.createToggleEl(t),this.instantiateToggleEl(),this.wrapper.appendChild(this.toggleSizeEl)})}get isTruncated(){return this._code.length>this._displayCode.length}get displayCode(){return this._displayCode}get code(){return this._code}makeSelection(){this.emitter.emit(a,{block:this.code})}highlight(){this.classList.add("highlighted")}unhighlight(){this.classList.remove("highlighted")}onClicked(e){return this.emitter&&this.emitter.on(a,e)}dispose(){this.subscriptions&&this.subscriptions.dispose(),this.emitter&&this.emitter.dispose(),this.codeblockEl&&this.codeblockEl.parentNode&&this.codeblockEl.parentNode.removeChild(this.codeblockEl),this.toggleSizeEl&&this.toggleSizeEl.parentNode&&this.toggleSizeEl.parentNode.removeChild(this.toggleSizeEl),this.wrapper&&this.wrapper.parentNode&&this.wrapper.parentNode.removeChild(this.wrapper),this.wrapper=null,this.codeblockEl=null,this.toggleSizeEl=null}disconnectedCallback(){this.dispose()}}class v extends HTMLElement{constructor(e,t){super(),this.emitter=new r,this.subscriptions=new i,this.query=e,this.group=t;const n=document.createDocumentFragment(),s=document.createElement("span");s.textContent="Can't find what you're looking for? ",n.appendChild(s);const a=document.createElement("span");a.textContent="Search for ",n.appendChild(a);const c=document.createElement("span");c.textContent=this.query,c.classList.add("query"),n.appendChild(c);const u=document.createElement("span");u.textContent=" on Google ⇗",n.appendChild(u),this.appendChild(n),this.onmouseover=()=>{const e=this.group.parent,t=e.highlightedGroupIdx;t&&e.groups[t].unhighlight(),this.group.highlightedIdx=this.id,e.highlightedGroupIdx=this.group.position,this.highlight()},this.subscriptions.add(new o(this,"click",this.clickHandler)),this.query=e}clickHandler(e){const t=this.query.toLowerCase().includes("python")?this.query:"python "+this.query;this.emitter.emit(a,{query:t})}onClicked(e){return this.emitter&&this.emitter.on(a,e)}unhighlight(){this.classList.remove("highlighted")}highlight(){this.classList.add("highlighted")}makeSelection(){this.emitter.emit(a,{query:this.query})}dispose(){this.emitter&&this.emitter.dispose(),this.subscriptions&&this.subscriptions.dispose()}}customElements.define("kite-ksg-loading-block",f),customElements.define("kite-ksg-code-block",g),customElements.define("kite-ksg-default-code-block",v),customElements.define("kite-ksg-code-block-group",m),customElements.define("kite-ksg-code-blocks",h),e.exports={KSGCodeBlocks:h,KSGCodeBlockGroup:m,KSGCodeBlock:g}},function(e,t,n){var i=n(87),r=n(209),o=n(211),s=Math.max,a=Math.min;e.exports=function(e,t,n){var c,u,l,p,d,h,f=0,m=!1,g=!1,v=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function x(t){var n=c,i=u;return c=u=void 0,f=t,p=e.apply(i,n)}function b(e){return f=e,d=setTimeout(w,t),m?x(e):p}function y(e){var n=e-h;return void 0===h||n>=t||n<0||g&&e-f>=l}function w(){var e=r();if(y(e))return k(e);d=setTimeout(w,function(e){var n=t-(e-h);return g?a(n,l-(e-f)):n}(e))}function k(e){return d=void 0,v&&c?x(e):(c=u=void 0,p)}function E(){var e=r(),n=y(e);if(c=arguments,u=this,h=e,n){if(void 0===d)return b(h);if(g)return clearTimeout(d),d=setTimeout(w,t),x(h)}return void 0===d&&(d=setTimeout(w,t)),p}return t=o(t)||0,i(n)&&(m=!!n.leading,l=(g="maxWait"in n)?s(o(n.maxWait)||0,t):l,v="trailing"in n?!!n.trailing:v),E.cancel=function(){void 0!==d&&clearTimeout(d),f=0,c=h=u=d=void 0},E.flush=function(){return void 0===d?p:k(r())},E}},function(e,t,n){var i=n(88);e.exports=function(){return i.Date.now()}},function(e,t){var n="object"==typeof global&&global&&global.Object===Object&&global;e.exports=n},function(e,t,n){var i=n(87),r=n(212),o=/^\s+|\s+$/g,s=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,c=/^0o[0-7]+$/i,u=parseInt;e.exports=function(e){if("number"==typeof e)return e;if(r(e))return NaN;if(i(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=i(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(o,"");var n=a.test(e);return n||c.test(e)?u(e.slice(2),n?2:8):s.test(e)?NaN:+e}},function(e,t,n){var i=n(213),r=n(216);e.exports=function(e){return"symbol"==typeof e||r(e)&&"[object Symbol]"==i(e)}},function(e,t,n){var i=n(89),r=n(214),o=n(215),s=i?i.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":s&&s in Object(e)?r(e):o(e)}},function(e,t,n){var i=n(89),r=Object.prototype,o=r.hasOwnProperty,s=r.toString,a=i?i.toStringTag:void 0;e.exports=function(e){var t=o.call(e,a),n=e[a];try{e[a]=void 0;var i=!0}catch(e){}var r=s.call(e);return i&&(t?e[a]=n:delete e[a]),r}},function(e,t){var n=Object.prototype.toString;e.exports=function(e){return n.call(e)}},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t,n){"use strict";const{Emitter:i}=n(0),{SEARCH_MODEL_UPDATE:r,SEARCH_LOADING:o}=n(24),{getKSGCompletions:s}=n(16);e.exports=class e{static scrubPrependedPython(e){return e.substring(e.toLowerCase().indexOf("python ")+"python ".length)}constructor(){this.emitter=new i}dispose(){this.emitter&&this.emitter.dispose()}onDidUpdate(e){return this.emitter.on(r,e)}onDidLoading(e){return this.emitter.on(o,e)}executeQuery({query:t}){if(!t||0===t.length)return void this.emitter.emit(r,{});let n=t;t.includes("python")||(n="python "+t),this.emitter.emit(o),s(n).then(n=>{n?(n.query=t,n.completions&&(n.completions=n.completions.map(t=>t.toLowerCase().startsWith("python ")?e.scrubPrependedPython(t):t)),this.emitter.emit(r,{payload:"search model update",data:n})):this.emitter.emit(r,{payload:"error"})})}}},function(e,t,n){"use strict";const{Emitter:i}=n(0),{CODEBLOCKS_MODEL_UPDATE:r,CODEBLOCKS_LOADING:o}=n(24),{getKSGCodeBlocks:s}=n(16);e.exports=class{static decorateCodeblocks(e,t,n){return`>>>>>>> HEAD: ${n}\n=======\n# This code was inserted by Kite.\n# You may need to alter it for it to work properly.\n\n# Source: ${t}\n${e.join("\n# BLOCK\n")}\n>>>>>>> end of Kite Snippet\n`}constructor(){this.emitter=new i}dispose(){this.emitter&&this.emitter.dispose()}onDidUpdate(e){return this.emitter.on(r,e)}onDidLoading(e){return this.emitter.on(o,e)}executeQuery({query:e}){const t=e;e.toLowerCase().includes("python")||(e="python "+e),this.emitter.emit(o),s(e).then(e=>{e?(e&&e.answers&&(e.answers=e.answers.filter(e=>!(e.votes<=0)&&!(!e.code_blocks||0===e.code_blocks.length)),e.answers.sort((e,t)=>t.votes-e.votes)),e.origQuery=t,this.emitter.emit(r,{payload:"codeblocks model update",data:e})):this.emitter.emit(r,{payload:"error"})})}}},function(e,t,n){"use strict";const{CompositeDisposable:i}=n(0);n(220),e.exports=class{constructor(){this.element=document.createElement("div"),this.element.className="ksg-shortcut",this.element.innerHTML='<so-logo class="badge"></so-logo>',this.element.classList.add("inline-block")}init(e){this.subscriptions=new i,this.subscriptions.add(atom.tooltips.add(this.element,{title:()=>"Kite: Search Stack Overflow"})),this.subscriptions.add(atom.workspace.onDidChangeActiveTextEditor(()=>this.toggleVisibility())),this.clickListener=()=>e.toggleKSG(),this.element.addEventListener("click",this.clickListener),this.toggleVisibility()}toggleVisibility(){const e=atom.workspace.getActiveTextEditor();e&&"Python"===e.getGrammar().name?this.element.classList.remove("hidden"):this.element.classList.add("hidden")}dispose(){this.subscriptions&&this.subscriptions.dispose(),delete this.subscriptions,this.element.removeEventListener("click",this.clickListener)}getElement(){return this.element}}},function(e,t,n){"use strict";const i=n(3),r=i.resolve(__dirname,"..","assets"),o=i.join(r,"so.png");class s extends HTMLElement{static initClass(){return customElements.define("so-logo",this),this}constructor(){super(),this.innerHTML=`<img src=${o}></img>`}}e.exports=s.initClass()},function(e,t,n){const{CompositeDisposable:i}=n(0),r=n(222),o=new Set(["()","[]","{}",'""',"''","``","“”","‘’","«»","‹›"].map(e=>e[1]));e.exports=class{init(){this.bracketMarkersByEditorID={};const e=atom.workspace.observeTextEditors(e=>{this.bracketMarkersByEditorID[e.id]||(this.bracketMarkersByEditorID[e.id]=[],e.onDidDestroy(()=>{delete this.bracketMarkersByEditorID[e.id]}),e.onWillInsertText(t=>{this.checkShouldSkipClosingBracket(t,e)}))});this.subscriptions=new i,this.subscriptions.add(e)}processTextForWriteThrough(e,t,n){if(!this.bracketMarkersByEditorID||r.isEmpty(this.bracketMarkersByEditorID))return;const i=this.bracketMarkersByEditorID[t.id];if(i)for(let o=1;o<e.length;o++)if(this.isClosingBracket(e.charAt(o))){const e=[n.traverse([0,o-1]),n.traverse([0,o])],s=t.markBufferRange(e);s.onDidDestroy(()=>r.remove(i,s)),i.push(s)}}checkShouldSkipClosingBracket(e,t){if(!this.bracketMarkersByEditorID||r.isEmpty(this.bracketMarkersByEditorID))return;const n=e.text,i=this.bracketMarkersByEditorID[t.id];if(!i||0===i.length)return;const o=t.getCursorBufferPosition(),a=t.getTextInBufferRange([[o.row,0],o]),c=t.getTextInBufferRange([o,o.traverse([0,1])]),u=function(e){const t=e.match(s);return t&&t[1].length%2==1}(a);if(this.isClosingBracket(n)&&c===n&&!u){let n=i.find(e=>e.isValid()&&e.getBufferRange().end.isEqual(o));n&&(n.destroy(),t.moveRight(),e.cancel())}}isClosingBracket(e){return o.has(e)}dispose(){this.subscriptions&&this.subscriptions.dispose(),delete this.bracketMarkersByEditorID}};const s=/(\\+)$/},function(e,t,n){(function(e){var i;
=======
 */
(function () {

    var async = {};
    function noop() {}

    // global on the server, window in the browser
    var root, previous_async;

    if (typeof window == 'object' && this === window) {
        root = window;
    }
    else if (typeof global == 'object' && this === global) {
        root = global;
    }
    else {
        root = this;
    }

    if (root != null) {
      previous_async = root.async;
    }

    async.noConflict = function () {
        root.async = previous_async;
        return async;
    };

    function only_once(fn) {
        var called = false;
        return function() {
            if (called) throw new Error("Callback was already called.");
            called = true;
            fn.apply(this, arguments);
        };
    }

    function _once(fn) {
        var called = false;
        return function() {
            if (called) return;
            called = true;
            fn.apply(this, arguments);
        };
    }

    //// cross-browser compatiblity functions ////

    var _toString = Object.prototype.toString;

    var _isArray = Array.isArray || function (obj) {
        return _toString.call(obj) === '[object Array]';
    };

    function _isArrayLike(arr) {
        return _isArray(arr) || (
            // has a positive integer length property
            typeof arr.length === "number" &&
            arr.length >= 0 &&
            arr.length % 1 === 0
        );
    }

    function _each(coll, iterator) {
        return _isArrayLike(coll) ?
            _arrayEach(coll, iterator) :
            _forEachOf(coll, iterator);
    }

    function _arrayEach(arr, iterator) {
      var index = -1,
          length = arr.length;

      while (++index < length) {
        iterator(arr[index], index, arr);
      }
    }

    function _map(arr, iterator) {
      var index = -1,
          length = arr.length,
          result = Array(length);

      while (++index < length) {
        result[index] = iterator(arr[index], index, arr);
      }
      return result;
    }

    function _range(count) {
        return _map(Array(count), function (v, i) { return i; });
    }

    function _reduce(arr, iterator, memo) {
        _arrayEach(arr, function (x, i, a) {
            memo = iterator(memo, x, i, a);
        });
        return memo;
    }

    function _forEachOf(object, iterator) {
        _arrayEach(_keys(object), function (key) {
            iterator(object[key], key);
        });
    }

    var _keys = Object.keys || function (obj) {
        var keys = [];
        for (var k in obj) {
            if (obj.hasOwnProperty(k)) {
                keys.push(k);
            }
        }
        return keys;
    };

    function _keyIterator(coll) {
        var i = -1;
        var len;
        var keys;
        if (_isArrayLike(coll)) {
            len = coll.length;
            return function next() {
                i++;
                return i < len ? i : null;
            };
        } else {
            keys = _keys(coll);
            len = keys.length;
            return function next() {
                i++;
                return i < len ? keys[i] : null;
            };
        }
    }

    function _baseSlice(arr, start) {
        start = start || 0;
        var index = -1;
        var length = arr.length;

        if (start) {
          length -= start;
          length = length < 0 ? 0 : length;
        }
        var result = Array(length);

        while (++index < length) {
          result[index] = arr[index + start];
        }
        return result;
    }

    function _withoutIndex(iterator) {
        return function (value, index, callback) {
            return iterator(value, callback);
        };
    }

    //// exported async module functions ////

    //// nextTick implementation with browser-compatible fallback ////

    // capture the global reference to guard against fakeTimer mocks
    var _setImmediate;
    if (typeof setImmediate === 'function') {
        _setImmediate = setImmediate;
    }

    if (typeof process === 'undefined' || !(process.nextTick)) {
        if (_setImmediate) {
            async.nextTick = function (fn) {
                // not a direct alias for IE10 compatibility
                _setImmediate(fn);
            };
            async.setImmediate = async.nextTick;
        }
        else {
            async.nextTick = function (fn) {
                setTimeout(fn, 0);
            };
            async.setImmediate = async.nextTick;
        }
    }
    else {
        async.nextTick = process.nextTick;
        if (_setImmediate) {
            async.setImmediate = function (fn) {
              // not a direct alias for IE10 compatibility
              _setImmediate(fn);
            };
        }
        else {
            async.setImmediate = async.nextTick;
        }
    }

    async.forEach =
    async.each = function (arr, iterator, callback) {
        return async.eachOf(arr, _withoutIndex(iterator), callback);
    };

    async.forEachSeries =
    async.eachSeries = function (arr, iterator, callback) {
        return async.eachOfSeries(arr, _withoutIndex(iterator), callback);
    };


    async.forEachLimit =
    async.eachLimit = function (arr, limit, iterator, callback) {
        return _eachOfLimit(limit)(arr, _withoutIndex(iterator), callback);
    };

    async.forEachOf =
    async.eachOf = function (object, iterator, callback) {
        callback = _once(callback || noop);
        object = object || [];
        var size = _isArrayLike(object) ? object.length : _keys(object).length;
        var completed = 0;
        if (!size) {
            return callback(null);
        }
        _each(object, function (value, key) {
            iterator(object[key], key, only_once(done));
        });
        function done(err) {
          if (err) {
              callback(err);
          }
          else {
              completed += 1;
              if (completed >= size) {
                  callback(null);
              }
          }
        }
    };

    async.forEachOfSeries =
    async.eachOfSeries = function (obj, iterator, callback) {
        callback = _once(callback || noop);
        obj = obj || [];
        var nextKey = _keyIterator(obj);
        var key = nextKey();
        function iterate() {
            var sync = true;
            if (key === null) {
                return callback(null);
            }
            iterator(obj[key], key, only_once(function (err) {
                if (err) {
                    callback(err);
                }
                else {
                    key = nextKey();
                    if (key === null) {
                        return callback(null);
                    } else {
                        if (sync) {
                            async.nextTick(iterate);
                        } else {
                            iterate();
                        }
                    }
                }
            }));
            sync = false;
        }
        iterate();
    };



    async.forEachOfLimit =
    async.eachOfLimit = function (obj, limit, iterator, callback) {
        _eachOfLimit(limit)(obj, iterator, callback);
    };

    function _eachOfLimit(limit) {

        return function (obj, iterator, callback) {
            callback = _once(callback || noop);
            obj = obj || [];
            var nextKey = _keyIterator(obj);
            if (limit <= 0) {
                return callback(null);
            }
            var done = false;
            var running = 0;
            var errored = false;

            (function replenish () {
                if (done && running <= 0) {
                    return callback(null);
                }

                while (running < limit && !errored) {
                    var key = nextKey();
                    if (key === null) {
                        done = true;
                        if (running <= 0) {
                            callback(null);
                        }
                        return;
                    }
                    running += 1;
                    iterator(obj[key], key, only_once(function (err) {
                        running -= 1;
                        if (err) {
                            callback(err);
                            errored = true;
                        }
                        else {
                            replenish();
                        }
                    }));
                }
            })();
        };
    }


    function doParallel(fn) {
        return function (obj, iterator, callback) {
            return fn(async.eachOf, obj, iterator, callback);
        };
    }
    function doParallelLimit(limit, fn) {
        return function (obj, iterator, callback) {
            return fn(_eachOfLimit(limit), obj, iterator, callback);
        };
    }
    function doSeries(fn) {
        return function (obj, iterator, callback) {
            return fn(async.eachOfSeries, obj, iterator, callback);
        };
    }

    function _asyncMap(eachfn, arr, iterator, callback) {
        callback = _once(callback || noop);
        var results = [];
        eachfn(arr, function (value, index, callback) {
            iterator(value, function (err, v) {
                results[index] = v;
                callback(err);
            });
        }, function (err) {
            callback(err, results);
        });
    }

    async.map = doParallel(_asyncMap);
    async.mapSeries = doSeries(_asyncMap);
    async.mapLimit = function (arr, limit, iterator, callback) {
        return _mapLimit(limit)(arr, iterator, callback);
    };

    function _mapLimit(limit) {
        return doParallelLimit(limit, _asyncMap);
    }

    // reduce only has a series version, as doing reduce in parallel won't
    // work in many situations.
    async.inject =
    async.foldl =
    async.reduce = function (arr, memo, iterator, callback) {
        async.eachOfSeries(arr, function (x, i, callback) {
            iterator(memo, x, function (err, v) {
                memo = v;
                callback(err);
            });
        }, function (err) {
            callback(err || null, memo);
        });
    };

    async.foldr =
    async.reduceRight = function (arr, memo, iterator, callback) {
        var reversed = _map(arr, function (x) {
            return x;
        }).reverse();
        async.reduce(reversed, memo, iterator, callback);
    };

    function _filter(eachfn, arr, iterator, callback) {
        var results = [];
        arr = _map(arr, function (x, i) {
            return {index: i, value: x};
        });
        eachfn(arr, function (x, index, callback) {
            iterator(x.value, function (v) {
                if (v) {
                    results.push(x);
                }
                callback();
            });
        }, function () {
            callback(_map(results.sort(function (a, b) {
                return a.index - b.index;
            }), function (x) {
                return x.value;
            }));
        });
    }

    async.select =
    async.filter = doParallel(_filter);

    async.selectSeries =
    async.filterSeries = doSeries(_filter);

    function _reject(eachfn, arr, iterator, callback) {
        var results = [];
        arr = _map(arr, function (x, i) {
            return {index: i, value: x};
        });
        eachfn(arr, function (x, index, callback) {
            iterator(x.value, function (v) {
                if (!v) {
                    results.push(x);
                }
                callback();
            });
        }, function () {
            callback(_map(results.sort(function (a, b) {
                return a.index - b.index;
            }), function (x) {
                return x.value;
            }));
        });
    }
    async.reject = doParallel(_reject);
    async.rejectSeries = doSeries(_reject);

    function _detect(eachfn, arr, iterator, main_callback) {
        eachfn(arr, function (x, index, callback) {
            iterator(x, function (result) {
                if (result) {
                    main_callback(x);
                    main_callback = noop;
                }
                else {
                    callback();
                }
            });
        }, function () {
            main_callback();
        });
    }
    async.detect = doParallel(_detect);
    async.detectSeries = doSeries(_detect);

    async.any =
    async.some = function (arr, iterator, main_callback) {
        async.eachOf(arr, function (x, _, callback) {
            iterator(x, function (v) {
                if (v) {
                    main_callback(true);
                    main_callback = noop;
                }
                callback();
            });
        }, function () {
            main_callback(false);
        });
    };

    async.all =
    async.every = function (arr, iterator, main_callback) {
        async.eachOf(arr, function (x, _, callback) {
            iterator(x, function (v) {
                if (!v) {
                    main_callback(false);
                    main_callback = noop;
                }
                callback();
            });
        }, function () {
            main_callback(true);
        });
    };

    async.sortBy = function (arr, iterator, callback) {
        async.map(arr, function (x, callback) {
            iterator(x, function (err, criteria) {
                if (err) {
                    callback(err);
                }
                else {
                    callback(null, {value: x, criteria: criteria});
                }
            });
        }, function (err, results) {
            if (err) {
                return callback(err);
            }
            else {
                callback(null, _map(results.sort(comparator), function (x) {
                    return x.value;
                }));
            }

        });

        function comparator(left, right) {
            var a = left.criteria, b = right.criteria;
            return a < b ? -1 : a > b ? 1 : 0;
        }
    };

    async.auto = function (tasks, callback) {
        callback = _once(callback || noop);
        var keys = _keys(tasks);
        var remainingTasks = keys.length;
        if (!remainingTasks) {
            return callback(null);
        }

        var results = {};

        var listeners = [];
        function addListener(fn) {
            listeners.unshift(fn);
        }
        function removeListener(fn) {
            for (var i = 0; i < listeners.length; i += 1) {
                if (listeners[i] === fn) {
                    listeners.splice(i, 1);
                    return;
                }
            }
        }
        function taskComplete() {
            remainingTasks--;
            _arrayEach(listeners.slice(0), function (fn) {
                fn();
            });
        }

        addListener(function () {
            if (!remainingTasks) {
                callback(null, results);
            }
        });

        _arrayEach(keys, function (k) {
            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];
            function taskCallback(err) {
                var args = _baseSlice(arguments, 1);
                if (args.length <= 1) {
                    args = args[0];
                }
                if (err) {
                    var safeResults = {};
                    _arrayEach(_keys(results), function(rkey) {
                        safeResults[rkey] = results[rkey];
                    });
                    safeResults[k] = args;
                    callback(err, safeResults);
                }
                else {
                    results[k] = args;
                    async.setImmediate(taskComplete);
                }
            }
            var requires = task.slice(0, Math.abs(task.length - 1)) || [];
            // prevent dead-locks
            var len = requires.length;
            var dep;
            while (len--) {
                if (!(dep = tasks[requires[len]])) {
                    throw new Error('Has inexistant dependency');
                }
                if (_isArray(dep) && !!~dep.indexOf(k)) {
                    throw new Error('Has cyclic dependencies');
                }
            }
            function ready() {
                return _reduce(requires, function (a, x) {
                    return (a && results.hasOwnProperty(x));
                }, true) && !results.hasOwnProperty(k);
            }
            if (ready()) {
                task[task.length - 1](taskCallback, results);
            }
            else {
                addListener(listener);
            }
            function listener() {
                if (ready()) {
                    removeListener(listener);
                    task[task.length - 1](taskCallback, results);
                }
            }
        });
    };

    async.retry = function(times, task, callback) {
        var DEFAULT_TIMES = 5;
        var attempts = [];
        // Use defaults if times not passed
        if (typeof times === 'function') {
            callback = task;
            task = times;
            times = DEFAULT_TIMES;
        }
        // Make sure times is a number
        times = parseInt(times, 10) || DEFAULT_TIMES;

        function wrappedTask(wrappedCallback, wrappedResults) {
            function retryAttempt(task, finalAttempt) {
                return function(seriesCallback) {
                    task(function(err, result){
                        seriesCallback(!err || finalAttempt, {err: err, result: result});
                    }, wrappedResults);
                };
            }

            while (times) {
                attempts.push(retryAttempt(task, !(times-=1)));
            }
            async.series(attempts, function(done, data){
                data = data[data.length - 1];
                (wrappedCallback || callback)(data.err, data.result);
            });
        }

        // If a callback is passed, run this as a controll flow
        return callback ? wrappedTask() : wrappedTask;
    };

    async.waterfall = function (tasks, callback) {
        callback = _once(callback || noop);
        if (!_isArray(tasks)) {
          var err = new Error('First argument to waterfall must be an array of functions');
          return callback(err);
        }
        if (!tasks.length) {
            return callback();
        }
        function wrapIterator(iterator) {
            return function (err) {
                if (err) {
                    callback.apply(null, arguments);
                }
                else {
                    var args = _baseSlice(arguments, 1);
                    var next = iterator.next();
                    if (next) {
                        args.push(wrapIterator(next));
                    }
                    else {
                        args.push(callback);
                    }
                    ensureAsync(iterator).apply(null, args);
                }
            };
        }
        wrapIterator(async.iterator(tasks))();
    };

    function _parallel(eachfn, tasks, callback) {
        callback = callback || noop;
        var results = _isArrayLike(tasks) ? [] : {};

        eachfn(tasks, function (task, key, callback) {
            task(function (err) {
                var args = _baseSlice(arguments, 1);
                if (args.length <= 1) {
                    args = args[0];
                }
                results[key] = args;
                callback(err);
            });
        }, function (err) {
            callback(err, results);
        });
    }

    async.parallel = function (tasks, callback) {
        _parallel(async.eachOf, tasks, callback);
    };

    async.parallelLimit = function(tasks, limit, callback) {
        _parallel(_eachOfLimit(limit), tasks, callback);
    };

    async.series = function (tasks, callback) {
        callback = callback || noop;
        var results = _isArrayLike(tasks) ? [] : {};

        async.eachOfSeries(tasks, function (task, key, callback) {
            task(function (err) {
                var args = _baseSlice(arguments, 1);
                if (args.length <= 1) {
                    args = args[0];
                }
                results[key] = args;
                callback(err);
            });
        }, function (err) {
            callback(err, results);
        });
    };

    async.iterator = function (tasks) {
        function makeCallback(index) {
            function fn() {
                if (tasks.length) {
                    tasks[index].apply(null, arguments);
                }
                return fn.next();
            }
            fn.next = function () {
                return (index < tasks.length - 1) ? makeCallback(index + 1): null;
            };
            return fn;
        }
        return makeCallback(0);
    };

    async.apply = function (fn) {
        var args = _baseSlice(arguments, 1);
        return function () {
            return fn.apply(
                null, args.concat(_baseSlice(arguments))
            );
        };
    };

    function _concat(eachfn, arr, fn, callback) {
        var result = [];
        eachfn(arr, function (x, index, cb) {
            fn(x, function (err, y) {
                result = result.concat(y || []);
                cb(err);
            });
        }, function (err) {
            callback(err, result);
        });
    }
    async.concat = doParallel(_concat);
    async.concatSeries = doSeries(_concat);

    async.whilst = function (test, iterator, callback) {
        if (test()) {
            iterator(function (err) {
                if (err) {
                    return callback(err);
                }
                async.whilst(test, iterator, callback);
            });
        }
        else {
            callback(null);
        }
    };

    async.doWhilst = function (iterator, test, callback) {
        iterator(function (err) {
            if (err) {
                return callback(err);
            }
            var args = _baseSlice(arguments, 1);
            if (test.apply(null, args)) {
                async.doWhilst(iterator, test, callback);
            }
            else {
                callback(null);
            }
        });
    };

    async.until = function (test, iterator, callback) {
        if (!test()) {
            iterator(function (err) {
                if (err) {
                    return callback(err);
                }
                async.until(test, iterator, callback);
            });
        }
        else {
            callback(null);
        }
    };

    async.doUntil = function (iterator, test, callback) {
        iterator(function (err) {
            if (err) {
                return callback(err);
            }
            var args = _baseSlice(arguments, 1);
            if (!test.apply(null, args)) {
                async.doUntil(iterator, test, callback);
            }
            else {
                callback(null);
            }
        });
    };

    function _queue(worker, concurrency, payload) {
        if (concurrency == null) {
            concurrency = 1;
        }
        else if(concurrency === 0) {
            throw new Error('Concurrency must not be zero');
        }
        function _insert(q, data, pos, callback) {
            if (callback != null && typeof callback !== "function") {
                throw new Error("task callback must be a function");
            }
            q.started = true;
            if (!_isArray(data)) {
                data = [data];
            }
            if(data.length === 0 && q.idle()) {
                // call drain immediately if there are no tasks
                return async.setImmediate(function() {
                   q.drain();
                });
            }
            _arrayEach(data, function(task) {
                var item = {
                    data: task,
                    callback: callback || noop
                };

                if (pos) {
                  q.tasks.unshift(item);
                } else {
                  q.tasks.push(item);
                }

                if (q.tasks.length === q.concurrency) {
                    q.saturated();
                }
            });
            async.setImmediate(q.process);
        }
        function _next(q, tasks) {
            return function(){
                workers -= 1;
                var args = arguments;
                _arrayEach(tasks, function (task) {
                    task.callback.apply(task, args);
                });
                if (q.tasks.length + workers === 0) {
                    q.drain();
                }
                q.process();
            };
        }

        var workers = 0;
        var q = {
            tasks: [],
            concurrency: concurrency,
            saturated: noop,
            empty: noop,
            drain: noop,
            started: false,
            paused: false,
            push: function (data, callback) {
                _insert(q, data, false, callback);
            },
            kill: function () {
                q.drain = noop;
                q.tasks = [];
            },
            unshift: function (data, callback) {
                _insert(q, data, true, callback);
            },
            process: function () {
                if (!q.paused && workers < q.concurrency && q.tasks.length) {
                    while(workers < q.concurrency && q.tasks.length){
                        var tasks = payload ?
                            q.tasks.splice(0, payload) :
                            q.tasks.splice(0, q.tasks.length);

                        var data = _map(tasks, function (task) {
                            return task.data;
                        });

                        if (q.tasks.length === 0) {
                            q.empty();
                        }
                        workers += 1;
                        var cb = only_once(_next(q, tasks));
                        worker(data, cb);
                    }
                }
            },
            length: function () {
                return q.tasks.length;
            },
            running: function () {
                return workers;
            },
            idle: function() {
                return q.tasks.length + workers === 0;
            },
            pause: function () {
                q.paused = true;
            },
            resume: function () {
                if (q.paused === false) { return; }
                q.paused = false;
                var resumeCount = Math.min(q.concurrency, q.tasks.length);
                // Need to call q.process once per concurrent
                // worker to preserve full concurrency after pause
                for (var w = 1; w <= resumeCount; w++) {
                    async.setImmediate(q.process);
                }
            }
        };
        return q;
    }

    async.queue = function (worker, concurrency) {
        var q = _queue(function (items, cb) {
            worker(items[0], cb);
        }, concurrency, 1);

        return q;
    };

    async.priorityQueue = function (worker, concurrency) {

        function _compareTasks(a, b){
            return a.priority - b.priority;
        }

        function _binarySearch(sequence, item, compare) {
          var beg = -1,
              end = sequence.length - 1;
          while (beg < end) {
              var mid = beg + ((end - beg + 1) >>> 1);
              if (compare(item, sequence[mid]) >= 0) {
                  beg = mid;
              } else {
                  end = mid - 1;
              }
          }
          return beg;
        }

        function _insert(q, data, priority, callback) {
            if (callback != null && typeof callback !== "function") {
                throw new Error("task callback must be a function");
            }
            q.started = true;
            if (!_isArray(data)) {
                data = [data];
            }
            if(data.length === 0) {
                // call drain immediately if there are no tasks
                return async.setImmediate(function() {
                    q.drain();
                });
            }
            _arrayEach(data, function(task) {
                var item = {
                    data: task,
                    priority: priority,
                    callback: typeof callback === 'function' ? callback : noop
                };

                q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);

                if (q.tasks.length === q.concurrency) {
                    q.saturated();
                }
                async.setImmediate(q.process);
            });
        }

        // Start with a normal queue
        var q = async.queue(worker, concurrency);

        // Override push to accept second parameter representing priority
        q.push = function (data, priority, callback) {
            _insert(q, data, priority, callback);
        };

        // Remove unshift function
        delete q.unshift;

        return q;
    };

    async.cargo = function (worker, payload) {
        return _queue(worker, 1, payload);
    };

    function _console_fn(name) {
        return function (fn) {
            var args = _baseSlice(arguments, 1);
            fn.apply(null, args.concat([function (err) {
                var args = _baseSlice(arguments, 1);
                if (typeof console !== 'undefined') {
                    if (err) {
                        if (console.error) {
                            console.error(err);
                        }
                    }
                    else if (console[name]) {
                        _arrayEach(args, function (x) {
                            console[name](x);
                        });
                    }
                }
            }]));
        };
    }
    async.log = _console_fn('log');
    async.dir = _console_fn('dir');
    /*async.info = _console_fn('info');
    async.warn = _console_fn('warn');
    async.error = _console_fn('error');*/

    async.memoize = function (fn, hasher) {
        var memo = {};
        var queues = {};
        hasher = hasher || function (x) {
            return x;
        };
        function memoized() {
            var args = _baseSlice(arguments);
            var callback = args.pop();
            var key = hasher.apply(null, args);
            if (key in memo) {
                async.nextTick(function () {
                    callback.apply(null, memo[key]);
                });
            }
            else if (key in queues) {
                queues[key].push(callback);
            }
            else {
                queues[key] = [callback];
                fn.apply(null, args.concat([function () {
                    memo[key] = _baseSlice(arguments);
                    var q = queues[key];
                    delete queues[key];
                    for (var i = 0, l = q.length; i < l; i++) {
                      q[i].apply(null, arguments);
                    }
                }]));
            }
        }
        memoized.memo = memo;
        memoized.unmemoized = fn;
        return memoized;
    };

    async.unmemoize = function (fn) {
      return function () {
        return (fn.unmemoized || fn).apply(null, arguments);
      };
    };

    function _times(mapper) {
        return function (count, iterator, callback) {
            mapper(_range(count), iterator, callback);
        };
    }

    async.times = _times(async.map);
    async.timesSeries = _times(async.mapSeries);
    async.timesLimit = function (count, limit, iterator, callback) {
        return async.mapLimit(_range(count), limit, iterator, callback);
    };

    async.seq = function (/* functions... */) {
        var fns = arguments;
        return function () {
            var that = this;
            var args = _baseSlice(arguments);

            var callback = args.slice(-1)[0];
            if (typeof callback == 'function') {
                args.pop();
            } else {
                callback = noop;
            }

            async.reduce(fns, args, function (newargs, fn, cb) {
                fn.apply(that, newargs.concat([function () {
                    var err = arguments[0];
                    var nextargs = _baseSlice(arguments, 1);
                    cb(err, nextargs);
                }]));
            },
            function (err, results) {
                callback.apply(that, [err].concat(results));
            });
        };
    };

    async.compose = function (/* functions... */) {
      return async.seq.apply(null, Array.prototype.reverse.call(arguments));
    };


    function _applyEach(eachfn, fns /*args...*/) {
        function go() {
            var that = this;
            var args = _baseSlice(arguments);
            var callback = args.pop();
            return eachfn(fns, function (fn, _, cb) {
                fn.apply(that, args.concat([cb]));
            },
            callback);
        }
        if (arguments.length > 2) {
            var args = _baseSlice(arguments, 2);
            return go.apply(this, args);
        }
        else {
            return go;
        }
    }

    async.applyEach = function (/*fns, args...*/) {
        var args = _baseSlice(arguments);
        return _applyEach.apply(null, [async.eachOf].concat(args));
    };
    async.applyEachSeries = function (/*fns, args...*/) {
        var args = _baseSlice(arguments);
        return _applyEach.apply(null, [async.eachOfSeries].concat(args));
    };


    async.forever = function (fn, callback) {
        var done = only_once(callback || noop);
        var task = ensureAsync(fn);
        function next(err) {
            if (err) {
                return done(err);
            }
            task(next);
        }
        next();
    };

    function ensureAsync(fn) {
        return function (/*...args, callback*/) {
            var args = _baseSlice(arguments);
            var callback = args.pop();
            args.push(function () {
                var innerArgs = arguments;
                if (sync) {
                    async.setImmediate(function () {
                        callback.apply(null, innerArgs);
                    });
                } else {
                    callback.apply(null, innerArgs);
                }
            });
            var sync = true;
            fn.apply(this, args);
            sync = false;
        };
    }

    async.ensureAsync = ensureAsync;

    // Node.js
    if ( true && module.exports) {
        module.exports = async;
    }
    // AMD / RequireJS
    else if (true) {
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
            return async;
        }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    }
    // included directly via <script> tag
    else {}

}());


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var logger = __webpack_require__(96);
var async = __webpack_require__(100);
var fs = __webpack_require__(28);
var lru = __webpack_require__(102);
var util = __webpack_require__(24);
var stackTrace = __webpack_require__(103);

var linesOfContext = 3;
var tracePattern =
  /^\s*at (?:([^(]+(?: \[\w\s+\])?(?:.*\)*)) )?\(?(.+?)(?::(\d+):(\d+)(?:, <js>:(\d+):(\d+))?)?\)?$/;

var jadeTracePattern = /^\s*at .+ \(.+ (at[^)]+\))\)$/;
var jadeFramePattern = /^\s*(>?) [0-9]+\|(\s*.+)$/m;


var cache = lru({max: 100});
var pendingReads = {};

exports.cache = cache;
exports.pendingReads = pendingReads;


/*
 * Internal
 */


function getMultipleErrors(errors) {
  var errArray, key;

  if (errors === null || errors === undefined) {
    return null;
  }

  if (typeof errors !== 'object') {
    return null;
  }

  if (util.isArray(errors)) {
    return errors;
  }

  errArray = [];

  for (key in errors) {
    if (Object.prototype.hasOwnProperty.call(errors, key)) {
      errArray.push(errors[key]);
    }
  }
  return errArray;
}


function parseJadeDebugFrame(body) {
  var lines, lineNumSep, filename, lineno, numLines, msg, i,
    contextLine, preContext, postContext, line, jadeMatch;

  // Given a Jade exception body, return a frame object
  lines = body.split('\n');
  lineNumSep = lines[0].indexOf(':');
  filename = lines[0].slice(0, lineNumSep);
  lineno = parseInt(lines[0].slice(lineNumSep + 1), 10);
  numLines = lines.length;
  msg = lines[numLines - 1];

  lines = lines.slice(1, numLines - 1);

  preContext = [];
  postContext = [];
  for (i = 0; i < numLines - 2; ++i) {
    line = lines[i];
    jadeMatch = line.match(jadeFramePattern);
    if (jadeMatch) {
      if (jadeMatch[1] === '>') {
        contextLine = jadeMatch[2];
      } else {
        if (!contextLine) {
          if (jadeMatch[2]) {
            preContext.push(jadeMatch[2]);
          }
        } else {
          if (jadeMatch[2]) {
            postContext.push(jadeMatch[2]);
          }
        }
      }
    }
  }

  preContext = preContext.slice(0, Math.min(preContext.length, linesOfContext));
  postContext = postContext.slice(0, Math.min(postContext.length, linesOfContext));

  return {
    frame: {
      method: '<jade>',
      filename: filename,
      lineno: lineno,
      code: contextLine,
      context: {
        pre: preContext,
        post: postContext
      }
    },
    message: msg
  };
}


function extractContextLines(frame, fileLines) {
  frame.code = fileLines[frame.lineno - 1];
  frame.context = {
    pre: fileLines.slice(Math.max(0, frame.lineno - (linesOfContext + 1)), frame.lineno - 1),
    post: fileLines.slice(frame.lineno, frame.lineno + linesOfContext)
  };
}

function mapPosition(position) {
  return stackTrace.mapSourcePosition({
      source: position.source,
      line: position.line,
      column: position.column
  });
}

function parseFrameLine(line, callback) {
  var matched, curLine, data, frame;

  curLine = line;
  matched = curLine.match(jadeTracePattern);
  if (matched) {
    curLine = matched[1];
  }

  matched = curLine.match(tracePattern);
  if (!matched) {
    return callback(null, null);
  }

  data = matched.slice(1);
  var position = {
    source: data[1],
    line: Math.floor(data[2]),
    column: Math.floor(data[3]) - 1
  };
  if (this.useSourceMaps) {
    position = mapPosition(position);
  }

  frame = {
    method: data[0] || '<unknown>',
    filename: position.source,
    lineno: position.line,
    colno: position.column
  };

  // For coffeescript, lineno and colno refer to the .coffee positions
  // The .js lineno and colno will be stored in compiled_*
  if (data[4]) {
    frame.compiled_lineno = Math.floor(data[4]);
  }

  if (data[5]) {
    frame.compiled_colno = Math.floor(data[5]);
  }

  callback(null, frame);
}


function shouldReadFrameFile(frameFilename, callback) {
  var isValidFilename, isCached, isPending;

  isValidFilename = frameFilename[0] === '/' || frameFilename[0] === '.';
  isCached = !!cache.get(frameFilename);
  isPending = !!pendingReads[frameFilename];

  callback(isValidFilename && !isCached && !isPending);
}


function readFileLines(filename, callback) {
  try {
    fs.readFile(filename, function (err, fileData) {
      var fileLines;
      if (err) {
        return callback(err);
      }

      fileLines = fileData.toString('utf8').split('\n');
      return callback(null, fileLines);
    });
  } catch (e) {
    logger.log(e);
  }
}


/* Older versions of node do not have fs.exists so we implement our own */
function checkFileExists(filename, callback) {
  if (fs.exists !== undefined) {
    fs.exists(filename, callback);
  } else {
    fs.stat(filename, function (err) {
      callback(!err);
    });
  }
}


function gatherContexts(frames, callback) {
  var frameFilenames = [];

  frames.forEach(function (frame) {
    if (frameFilenames.indexOf(frame.filename) === -1) {
      frameFilenames.push(frame.filename);
    }
  });

  async.filter(frameFilenames, shouldReadFrameFile, function (results) {
    var tempFileCache;

    tempFileCache = {};

    function gatherFileData(filename, callback) {
      readFileLines(filename, function (err, lines) {
        if (err) {
          return callback(err);
        }

        // Cache this in a temp cache as well as the LRU cache so that
        // we know we will have all of the necessary file contents for
        // each filename in tempFileCache.
        tempFileCache[filename] = lines;
        cache.set(filename, lines);

        return callback(null);
      });
    }

    function gatherContextLines(frame, callback) {
      var lines = tempFileCache[frame.filename] || cache.get(frame.filename);

      if (lines) {
        extractContextLines(frame, lines);
      }
      callback(null);
    }

    async.filter(results, checkFileExists, function (filenames) {
      async.each(filenames, gatherFileData, function (err) {
        if (err) {
          return callback(err);
        }
        async.eachSeries(frames, gatherContextLines, function (err) {
          if (err) {
            return callback(err);
          }
          callback(null, frames);
        });
      });
    });

  });
}

/*
 * Public API
 */


exports.parseException = function (exc, options, callback) {
  var multipleErrs = getMultipleErrors(exc.errors);

  return exports.parseStack(exc.stack, options, function (err, stack) {
    var message, clss, ret, firstErr, jadeMatch, jadeData;

    if (err) {
      logger.error('could not parse exception, err: ' + err);
      return callback(err);
    }
    message = String(exc.message || '<no message>') ;
    clss = String(exc.name || '<unknown>');

    ret = {
      class: clss,
      message: message,
      frames: stack
    };

    if (multipleErrs && multipleErrs.length) {
      firstErr = multipleErrs[0];
      ret = {
        class: clss,
        message: String(firstErr.message || '<no message>'),
        frames: stack
      };
    }

    jadeMatch = message.match(jadeFramePattern);
    if (jadeMatch) {
      jadeData = parseJadeDebugFrame(message);
      ret.message = jadeData.message;
      ret.frames.push(jadeData.frame);
    }
    return callback(null, ret);
  });
};


exports.parseStack = function (stack, options, callback) {
  var lines, _stack = stack;

  // Some JS frameworks (e.g. Meteor) might bury the stack property
  while (typeof _stack === 'object') {
    _stack = _stack && _stack.stack;
  }

  // grab all lines except the first
  lines = (_stack || '').split('\n').slice(1);

  // Parse out all of the frame and filename info
  async.map(lines, parseFrameLine.bind({ useSourceMaps: options.nodeSourceMaps }), function (err, frames) {
    if (err) {
      return callback(err);
    }
    frames.reverse();
    async.filter(frames, function (frame, callback) { callback(!!frame); }, function (results) {
      gatherContexts(results, callback);
    });
  });
};


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

;(function () { // closure for web browsers

if ( true && module.exports) {
  module.exports = LRUCache
} else {
  // just set the global for non-node platforms.
  this.LRUCache = LRUCache
}

function hOP (obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
}

function naiveLength () { return 1 }

function LRUCache (options) {
  if (!(this instanceof LRUCache)) {
    return new LRUCache(options)
  }

  var max
  if (typeof options === 'number') {
    max = options
    options = { max: max }
  }

  if (!options) options = {}

  max = options.max

  var lengthCalculator = options.length || naiveLength

  if (typeof lengthCalculator !== "function") {
    lengthCalculator = naiveLength
  }

  if (!max || !(typeof max === "number") || max <= 0 ) {
    // a little bit silly.  maybe this should throw?
    max = Infinity
  }

  var allowStale = options.stale || false

  var maxAge = options.maxAge || null

  var dispose = options.dispose

  var cache = Object.create(null) // hash of items by key
    , lruList = Object.create(null) // list of items in order of use recency
    , mru = 0 // most recently used
    , lru = 0 // least recently used
    , length = 0 // number of items in the list
    , itemCount = 0


  // resize the cache when the max changes.
  Object.defineProperty(this, "max",
    { set : function (mL) {
        if (!mL || !(typeof mL === "number") || mL <= 0 ) mL = Infinity
        max = mL
        // if it gets above double max, trim right away.
        // otherwise, do it whenever it's convenient.
        if (length > max) trim()
      }
    , get : function () { return max }
    , enumerable : true
    })

  // resize the cache when the lengthCalculator changes.
  Object.defineProperty(this, "lengthCalculator",
    { set : function (lC) {
        if (typeof lC !== "function") {
          lengthCalculator = naiveLength
          length = itemCount
          for (var key in cache) {
            cache[key].length = 1
          }
        } else {
          lengthCalculator = lC
          length = 0
          for (var key in cache) {
            cache[key].length = lengthCalculator(cache[key].value)
            length += cache[key].length
          }
        }

        if (length > max) trim()
      }
    , get : function () { return lengthCalculator }
    , enumerable : true
    })

  Object.defineProperty(this, "length",
    { get : function () { return length }
    , enumerable : true
    })


  Object.defineProperty(this, "itemCount",
    { get : function () { return itemCount }
    , enumerable : true
    })

  this.forEach = function (fn, thisp) {
    thisp = thisp || this
    var i = 0;
    for (var k = mru - 1; k >= 0 && i < itemCount; k--) if (lruList[k]) {
      i++
      var hit = lruList[k]
      fn.call(thisp, hit.value, hit.key, this)
    }
  }

  this.keys = function () {
    var keys = new Array(itemCount)
    var i = 0
    for (var k = mru - 1; k >= 0 && i < itemCount; k--) if (lruList[k]) {
      var hit = lruList[k]
      keys[i++] = hit.key
    }
    return keys
  }

  this.values = function () {
    var values = new Array(itemCount)
    var i = 0
    for (var k = mru - 1; k >= 0 && i < itemCount; k--) if (lruList[k]) {
      var hit = lruList[k]
      values[i++] = hit.value
    }
    return values
  }

  this.reset = function () {
    if (dispose) {
      for (var k in cache) {
        dispose(k, cache[k].value)
      }
    }
    cache = {}
    lruList = {}
    lru = 0
    mru = 0
    length = 0
    itemCount = 0
  }

  // Provided for debugging/dev purposes only. No promises whatsoever that
  // this API stays stable.
  this.dump = function () {
    return cache
  }

  this.dumpLru = function () {
    return lruList
  }

  this.set = function (key, value) {
    if (hOP(cache, key)) {
      // dispose of the old one before overwriting
      if (dispose) dispose(key, cache[key].value)
      if (maxAge) cache[key].now = Date.now()
      cache[key].value = value
      this.get(key)
      return true
    }

    var len = lengthCalculator(value)
    var age = maxAge ? Date.now() : 0
    var hit = new Entry(key, value, mru++, len, age)

    // oversized objects fall out of cache automatically.
    if (hit.length > max) {
      if (dispose) dispose(key, value)
      return false
    }

    length += hit.length
    lruList[hit.lu] = cache[key] = hit
    itemCount ++

    if (length > max) trim()
    return true
  }

  this.has = function (key) {
    if (!hOP(cache, key)) return false
    var hit = cache[key]
    if (maxAge && (Date.now() - hit.now > maxAge)) {
      return false
    }
    return true
  }

  this.get = function (key) {
    if (!hOP(cache, key)) return
    var hit = cache[key]
    if (maxAge && (Date.now() - hit.now > maxAge)) {
      this.del(key)
      return allowStale ? hit.value : undefined
    }
    shiftLU(hit)
    hit.lu = mru ++
    lruList[hit.lu] = hit
    return hit.value
  }

  this.del = function (key) {
    del(cache[key])
  }

  function trim () {
    while (lru < mru && length > max)
      del(lruList[lru])
  }

  function shiftLU(hit) {
    delete lruList[ hit.lu ]
    while (lru < mru && !lruList[lru]) lru ++
  }

  function del(hit) {
    if (hit) {
      if (dispose) dispose(hit.key, hit.value)
      length -= hit.length
      itemCount --
      delete cache[ hit.key ]
      shiftLU(hit)
    }
  }
}

// classy, since V8 prefers predictable objects.
function Entry (key, value, mru, len, age) {
  this.key = key
  this.value = value
  this.lu = mru
  this.length = len
  this.now = age
}

})()


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

var SourceMapConsumer = __webpack_require__(104).SourceMapConsumer;
var path = __webpack_require__(27);
var fs = __webpack_require__(28);
var bufferFrom = __webpack_require__(115);

/**
 * Uses Node source-map to map transpiled JS stack locations to original
 * source file locations.
 *
 * The default behavior uses source map comments in the transpiled files
 * to identify the path of source maps. A later enhancement can allow
 * source map paths to be passed in by the caller.
 *
 * These functions are based on https://github.com/evanw/node-source-map-support/blob/master/source-map-support.js
 * simplified to target Node only, and optimized for Rollbar configuration scenarios.
 */

// Maps a file path to a string containing the file contents
var fileContentsCache = {};

// Maps a file path to a source map for that file
var sourceMapCache = {};

// Regex for detecting source maps
var reSourceMap = /^data:application\/json[^,]+base64,/;

function retrieveFile(path) {
  // Trim the path to make sure there is no extra whitespace.
  path = path.trim();
  if (/^file:/.test(path)) {
    // existsSync/readFileSync can't handle file protocol, but once stripped, it works
    path = path.replace(/file:\/\/\/(\w:)?/, function(_protocol, drive) {
      return drive ?
        '' : // file:///C:/dir/file -> C:/dir/file
        '/'; // file:///root-dir/file -> /root-dir/file
    });
  }
  if (path in fileContentsCache) {
    return fileContentsCache[path];
  }

  var contents = '';
  try {
    if (fs.existsSync(path)) {
      contents = fs.readFileSync(path, 'utf8');
    }
  } catch (er) {
    /* ignore any errors */
  }

  return fileContentsCache[path] = contents;
}

// Support URLs relative to a directory, but be careful about a protocol prefix
// in case we are in the browser (i.e. directories may start with "http://" or "file:///")
function supportRelativeURL(file, url) {
  if (!file) return url;
  var dir = path.dirname(file);
  var match = /^\w+:\/\/[^\/]*/.exec(dir);
  var protocol = match ? match[0] : '';
  var startPath = dir.slice(protocol.length);
  if (protocol && /^\/\w\:/.test(startPath)) {
    // handle file:///C:/ paths
    protocol += '/';
    return protocol + path.resolve(dir.slice(protocol.length), url).replace(/\\/g, '/');
  }
  return protocol + path.resolve(dir.slice(protocol.length), url);
}

function retrieveSourceMapURL(source) {
  var fileData;

  // Get the URL of the source map
  fileData = retrieveFile(source);
  var re = /(?:\/\/[@#][ \t]+sourceMappingURL=([^\s'"]+?)[ \t]*$)|(?:\/\*[@#][ \t]+sourceMappingURL=([^\*]+?)[ \t]*(?:\*\/)[ \t]*$)/mg;
  // Keep executing the search to find the *last* sourceMappingURL to avoid
  // picking up sourceMappingURLs from comments, strings, etc.
  var lastMatch, match;
  while ((match = re.exec(fileData))) lastMatch = match;
  if (!lastMatch) return null;
  return lastMatch[1];
}

// Takes a generated source filename; returns a {map, optional url} object, or null if
// there is no source map.  The map field may be either a string or the parsed
// JSON object (ie, it must be a valid argument to the SourceMapConsumer
// constructor).
function retrieveSourceMap(source) {
  var sourceMappingURL = retrieveSourceMapURL(source);
  if (!sourceMappingURL) return null;

  // Read the contents of the source map
  var sourceMapData;
  if (reSourceMap.test(sourceMappingURL)) {
    // Support source map URL as a data url
    var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(',') + 1);
    sourceMapData = bufferFrom(rawData, 'base64').toString();
    sourceMappingURL = source;
  } else {
    // Support source map URLs relative to the source URL
    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);
    sourceMapData = retrieveFile(sourceMappingURL);
  }

  if (!sourceMapData) {
    return null;
  }

  return {
    url: sourceMappingURL,
    map: sourceMapData
  };
}

exports.mapSourcePosition = function mapSourcePosition(position) {
  var sourceMap = sourceMapCache[position.source];
  if (!sourceMap) {
    // Call the (overrideable) retrieveSourceMap function to get the source map.
    var urlAndMap = retrieveSourceMap(position.source);
    if (urlAndMap) {
      sourceMap = sourceMapCache[position.source] = {
        url: urlAndMap.url,
        map: new SourceMapConsumer(urlAndMap.map)
      };

      // Load all sources stored inline with the source map into the file cache
      // to pretend like they are already loaded. They may not exist on disk.
      if (sourceMap.map.sourcesContent) {
        sourceMap.map.sources.forEach(function(source, i) {
          var contents = sourceMap.map.sourcesContent[i];
          if (contents) {
            var url = supportRelativeURL(sourceMap.url, source);
            fileContentsCache[url] = contents;
          }
        });
      }
    } else {
      sourceMap = sourceMapCache[position.source] = {
        url: null,
        map: null
      };
    }
  }

  // Resolve the source URL relative to the URL of the source map
  if (sourceMap && sourceMap.map && typeof sourceMap.map.originalPositionFor === 'function') {
    var originalPosition = sourceMap.map.originalPositionFor(position);

    // Only return the original position if a matching line was found. If no
    // matching line is found then we return position instead, which will cause
    // the stack trace to print the path and line for the compiled file. It is
    // better to give a precise location in the compiled file than a vague
    // location in the original file.
    if (originalPosition.source !== null) {
      originalPosition.source = supportRelativeURL(
        sourceMap.url, originalPosition.source);
      return originalPosition;
    }
  }

  return position;
}


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

/*
 * Copyright 2009-2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE.txt or:
 * http://opensource.org/licenses/BSD-3-Clause
 */
exports.SourceMapGenerator = __webpack_require__(105).SourceMapGenerator;
exports.SourceMapConsumer = __webpack_require__(111).SourceMapConsumer;
exports.SourceNode = __webpack_require__(114).SourceNode;


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var base64VLQ = __webpack_require__(106);
var util = __webpack_require__(108);
var ArraySet = __webpack_require__(109).ArraySet;
var MappingList = __webpack_require__(110).MappingList;

/**
 * An instance of the SourceMapGenerator represents a source map which is
 * being built incrementally. You may pass an object with the following
 * properties:
 *
 *   - file: The filename of the generated source.
 *   - sourceRoot: A root for all relative URLs in this source map.
 */
function SourceMapGenerator(aArgs) {
  if (!aArgs) {
    aArgs = {};
  }
  this._file = util.getArg(aArgs, 'file', null);
  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);
  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);
  this._sources = new ArraySet();
  this._names = new ArraySet();
  this._mappings = new MappingList();
  this._sourcesContents = null;
}

SourceMapGenerator.prototype._version = 3;

/**
 * Creates a new SourceMapGenerator based on a SourceMapConsumer
 *
 * @param aSourceMapConsumer The SourceMap.
 */
SourceMapGenerator.fromSourceMap =
  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {
    var sourceRoot = aSourceMapConsumer.sourceRoot;
    var generator = new SourceMapGenerator({
      file: aSourceMapConsumer.file,
      sourceRoot: sourceRoot
    });
    aSourceMapConsumer.eachMapping(function (mapping) {
      var newMapping = {
        generated: {
          line: mapping.generatedLine,
          column: mapping.generatedColumn
        }
      };

      if (mapping.source != null) {
        newMapping.source = mapping.source;
        if (sourceRoot != null) {
          newMapping.source = util.relative(sourceRoot, newMapping.source);
        }

        newMapping.original = {
          line: mapping.originalLine,
          column: mapping.originalColumn
        };

        if (mapping.name != null) {
          newMapping.name = mapping.name;
        }
      }

      generator.addMapping(newMapping);
    });
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        generator.setSourceContent(sourceFile, content);
      }
    });
    return generator;
  };

/**
 * Add a single mapping from original source line and column to the generated
 * source's line and column for this source map being created. The mapping
 * object should have the following properties:
 *
 *   - generated: An object with the generated line and column positions.
 *   - original: An object with the original line and column positions.
 *   - source: The original source file (relative to the sourceRoot).
 *   - name: An optional original token name for this mapping.
 */
SourceMapGenerator.prototype.addMapping =
  function SourceMapGenerator_addMapping(aArgs) {
    var generated = util.getArg(aArgs, 'generated');
    var original = util.getArg(aArgs, 'original', null);
    var source = util.getArg(aArgs, 'source', null);
    var name = util.getArg(aArgs, 'name', null);

    if (!this._skipValidation) {
      this._validateMapping(generated, original, source, name);
    }

    if (source != null) {
      source = String(source);
      if (!this._sources.has(source)) {
        this._sources.add(source);
      }
    }

    if (name != null) {
      name = String(name);
      if (!this._names.has(name)) {
        this._names.add(name);
      }
    }

    this._mappings.add({
      generatedLine: generated.line,
      generatedColumn: generated.column,
      originalLine: original != null && original.line,
      originalColumn: original != null && original.column,
      source: source,
      name: name
    });
  };

/**
 * Set the source content for a source file.
 */
SourceMapGenerator.prototype.setSourceContent =
  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {
    var source = aSourceFile;
    if (this._sourceRoot != null) {
      source = util.relative(this._sourceRoot, source);
    }

    if (aSourceContent != null) {
      // Add the source content to the _sourcesContents map.
      // Create a new _sourcesContents map if the property is null.
      if (!this._sourcesContents) {
        this._sourcesContents = Object.create(null);
      }
      this._sourcesContents[util.toSetString(source)] = aSourceContent;
    } else if (this._sourcesContents) {
      // Remove the source file from the _sourcesContents map.
      // If the _sourcesContents map is empty, set the property to null.
      delete this._sourcesContents[util.toSetString(source)];
      if (Object.keys(this._sourcesContents).length === 0) {
        this._sourcesContents = null;
      }
    }
  };

/**
 * Applies the mappings of a sub-source-map for a specific source file to the
 * source map being generated. Each mapping to the supplied source file is
 * rewritten using the supplied source map. Note: The resolution for the
 * resulting mappings is the minimium of this map and the supplied map.
 *
 * @param aSourceMapConsumer The source map to be applied.
 * @param aSourceFile Optional. The filename of the source file.
 *        If omitted, SourceMapConsumer's file property will be used.
 * @param aSourceMapPath Optional. The dirname of the path to the source map
 *        to be applied. If relative, it is relative to the SourceMapConsumer.
 *        This parameter is needed when the two source maps aren't in the same
 *        directory, and the source map to be applied contains relative source
 *        paths. If so, those relative source paths need to be rewritten
 *        relative to the SourceMapGenerator.
 */
SourceMapGenerator.prototype.applySourceMap =
  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {
    var sourceFile = aSourceFile;
    // If aSourceFile is omitted, we will use the file property of the SourceMap
    if (aSourceFile == null) {
      if (aSourceMapConsumer.file == null) {
        throw new Error(
          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +
          'or the source map\'s "file" property. Both were omitted.'
        );
      }
      sourceFile = aSourceMapConsumer.file;
    }
    var sourceRoot = this._sourceRoot;
    // Make "sourceFile" relative if an absolute Url is passed.
    if (sourceRoot != null) {
      sourceFile = util.relative(sourceRoot, sourceFile);
    }
    // Applying the SourceMap can add and remove items from the sources and
    // the names array.
    var newSources = new ArraySet();
    var newNames = new ArraySet();

    // Find mappings for the "sourceFile"
    this._mappings.unsortedForEach(function (mapping) {
      if (mapping.source === sourceFile && mapping.originalLine != null) {
        // Check if it can be mapped by the source map, then update the mapping.
        var original = aSourceMapConsumer.originalPositionFor({
          line: mapping.originalLine,
          column: mapping.originalColumn
        });
        if (original.source != null) {
          // Copy mapping
          mapping.source = original.source;
          if (aSourceMapPath != null) {
            mapping.source = util.join(aSourceMapPath, mapping.source)
          }
          if (sourceRoot != null) {
            mapping.source = util.relative(sourceRoot, mapping.source);
          }
          mapping.originalLine = original.line;
          mapping.originalColumn = original.column;
          if (original.name != null) {
            mapping.name = original.name;
          }
        }
      }

      var source = mapping.source;
      if (source != null && !newSources.has(source)) {
        newSources.add(source);
      }

      var name = mapping.name;
      if (name != null && !newNames.has(name)) {
        newNames.add(name);
      }

    }, this);
    this._sources = newSources;
    this._names = newNames;

    // Copy sourcesContents of applied map.
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        if (aSourceMapPath != null) {
          sourceFile = util.join(aSourceMapPath, sourceFile);
        }
        if (sourceRoot != null) {
          sourceFile = util.relative(sourceRoot, sourceFile);
        }
        this.setSourceContent(sourceFile, content);
      }
    }, this);
  };

/**
 * A mapping can have one of the three levels of data:
 *
 *   1. Just the generated position.
 *   2. The Generated position, original position, and original source.
 *   3. Generated and original position, original source, as well as a name
 *      token.
 *
 * To maintain consistency, we validate that any new mapping being added falls
 * in to one of these categories.
 */
SourceMapGenerator.prototype._validateMapping =
  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,
                                              aName) {
    // When aOriginal is truthy but has empty values for .line and .column,
    // it is most likely a programmer error. In this case we throw a very
    // specific error message to try to guide them the right way.
    // For example: https://github.com/Polymer/polymer-bundler/pull/519
    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {
        throw new Error(
            'original.line and original.column are not numbers -- you probably meant to omit ' +
            'the original mapping entirely and only map the generated position. If so, pass ' +
            'null for the original mapping instead of an object with empty or null values.'
        );
    }

    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated
        && aGenerated.line > 0 && aGenerated.column >= 0
        && !aOriginal && !aSource && !aName) {
      // Case 1.
      return;
    }
    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated
             && aOriginal && 'line' in aOriginal && 'column' in aOriginal
             && aGenerated.line > 0 && aGenerated.column >= 0
             && aOriginal.line > 0 && aOriginal.column >= 0
             && aSource) {
      // Cases 2 and 3.
      return;
    }
    else {
      throw new Error('Invalid mapping: ' + JSON.stringify({
        generated: aGenerated,
        source: aSource,
        original: aOriginal,
        name: aName
      }));
    }
  };

/**
 * Serialize the accumulated mappings in to the stream of base 64 VLQs
 * specified by the source map format.
 */
SourceMapGenerator.prototype._serializeMappings =
  function SourceMapGenerator_serializeMappings() {
    var previousGeneratedColumn = 0;
    var previousGeneratedLine = 1;
    var previousOriginalColumn = 0;
    var previousOriginalLine = 0;
    var previousName = 0;
    var previousSource = 0;
    var result = '';
    var next;
    var mapping;
    var nameIdx;
    var sourceIdx;

    var mappings = this._mappings.toArray();
    for (var i = 0, len = mappings.length; i < len; i++) {
      mapping = mappings[i];
      next = ''

      if (mapping.generatedLine !== previousGeneratedLine) {
        previousGeneratedColumn = 0;
        while (mapping.generatedLine !== previousGeneratedLine) {
          next += ';';
          previousGeneratedLine++;
        }
      }
      else {
        if (i > 0) {
          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {
            continue;
          }
          next += ',';
        }
      }

      next += base64VLQ.encode(mapping.generatedColumn
                                 - previousGeneratedColumn);
      previousGeneratedColumn = mapping.generatedColumn;

      if (mapping.source != null) {
        sourceIdx = this._sources.indexOf(mapping.source);
        next += base64VLQ.encode(sourceIdx - previousSource);
        previousSource = sourceIdx;

        // lines are stored 0-based in SourceMap spec version 3
        next += base64VLQ.encode(mapping.originalLine - 1
                                   - previousOriginalLine);
        previousOriginalLine = mapping.originalLine - 1;

        next += base64VLQ.encode(mapping.originalColumn
                                   - previousOriginalColumn);
        previousOriginalColumn = mapping.originalColumn;

        if (mapping.name != null) {
          nameIdx = this._names.indexOf(mapping.name);
          next += base64VLQ.encode(nameIdx - previousName);
          previousName = nameIdx;
        }
      }

      result += next;
    }

    return result;
  };

SourceMapGenerator.prototype._generateSourcesContent =
  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {
    return aSources.map(function (source) {
      if (!this._sourcesContents) {
        return null;
      }
      if (aSourceRoot != null) {
        source = util.relative(aSourceRoot, source);
      }
      var key = util.toSetString(source);
      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)
        ? this._sourcesContents[key]
        : null;
    }, this);
  };

/**
 * Externalize the source map.
 */
SourceMapGenerator.prototype.toJSON =
  function SourceMapGenerator_toJSON() {
    var map = {
      version: this._version,
      sources: this._sources.toArray(),
      names: this._names.toArray(),
      mappings: this._serializeMappings()
    };
    if (this._file != null) {
      map.file = this._file;
    }
    if (this._sourceRoot != null) {
      map.sourceRoot = this._sourceRoot;
    }
    if (this._sourcesContents) {
      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);
    }

    return map;
  };

/**
 * Render the source map being generated to a string.
 */
SourceMapGenerator.prototype.toString =
  function SourceMapGenerator_toString() {
    return JSON.stringify(this.toJSON());
  };

exports.SourceMapGenerator = SourceMapGenerator;


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 *
 * Based on the Base 64 VLQ implementation in Closure Compiler:
 * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java
 *
 * Copyright 2011 The Closure Compiler Authors. All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above
 *    copyright notice, this list of conditions and the following
 *    disclaimer in the documentation and/or other materials provided
 *    with the distribution.
 *  * Neither the name of Google Inc. nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

var base64 = __webpack_require__(107);

// A single base 64 digit can contain 6 bits of data. For the base 64 variable
// length quantities we use in the source map spec, the first bit is the sign,
// the next four bits are the actual value, and the 6th bit is the
// continuation bit. The continuation bit tells us whether there are more
// digits in this value following this digit.
//
//   Continuation
//   |    Sign
//   |    |
//   V    V
//   101011

var VLQ_BASE_SHIFT = 5;

// binary: 100000
var VLQ_BASE = 1 << VLQ_BASE_SHIFT;

// binary: 011111
var VLQ_BASE_MASK = VLQ_BASE - 1;

// binary: 100000
var VLQ_CONTINUATION_BIT = VLQ_BASE;

/**
 * Converts from a two-complement value to a value where the sign bit is
 * placed in the least significant bit.  For example, as decimals:
 *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)
 *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)
 */
function toVLQSigned(aValue) {
  return aValue < 0
    ? ((-aValue) << 1) + 1
    : (aValue << 1) + 0;
}

/**
 * Converts to a two-complement value from a value where the sign bit is
 * placed in the least significant bit.  For example, as decimals:
 *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1
 *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2
 */
function fromVLQSigned(aValue) {
  var isNegative = (aValue & 1) === 1;
  var shifted = aValue >> 1;
  return isNegative
    ? -shifted
    : shifted;
}

/**
 * Returns the base 64 VLQ encoded value.
 */
exports.encode = function base64VLQ_encode(aValue) {
  var encoded = "";
  var digit;

  var vlq = toVLQSigned(aValue);

  do {
    digit = vlq & VLQ_BASE_MASK;
    vlq >>>= VLQ_BASE_SHIFT;
    if (vlq > 0) {
      // There are still more digits in this value, so we must make sure the
      // continuation bit is marked.
      digit |= VLQ_CONTINUATION_BIT;
    }
    encoded += base64.encode(digit);
  } while (vlq > 0);

  return encoded;
};

/**
 * Decodes the next base 64 VLQ value from the given string and returns the
 * value and the rest of the string via the out parameter.
 */
exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {
  var strLen = aStr.length;
  var result = 0;
  var shift = 0;
  var continuation, digit;

  do {
    if (aIndex >= strLen) {
      throw new Error("Expected more digits in base 64 VLQ value.");
    }

    digit = base64.decode(aStr.charCodeAt(aIndex++));
    if (digit === -1) {
      throw new Error("Invalid base64 digit: " + aStr.charAt(aIndex - 1));
    }

    continuation = !!(digit & VLQ_CONTINUATION_BIT);
    digit &= VLQ_BASE_MASK;
    result = result + (digit << shift);
    shift += VLQ_BASE_SHIFT;
  } while (continuation);

  aOutParam.value = fromVLQSigned(result);
  aOutParam.rest = aIndex;
};


/***/ }),
/* 107 */
/***/ (function(module, exports) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');

/**
 * Encode an integer in the range of 0 to 63 to a single base 64 digit.
 */
exports.encode = function (number) {
  if (0 <= number && number < intToCharMap.length) {
    return intToCharMap[number];
  }
  throw new TypeError("Must be between 0 and 63: " + number);
};

/**
 * Decode a single base 64 character code digit to an integer. Returns -1 on
 * failure.
 */
exports.decode = function (charCode) {
  var bigA = 65;     // 'A'
  var bigZ = 90;     // 'Z'

  var littleA = 97;  // 'a'
  var littleZ = 122; // 'z'

  var zero = 48;     // '0'
  var nine = 57;     // '9'

  var plus = 43;     // '+'
  var slash = 47;    // '/'

  var littleOffset = 26;
  var numberOffset = 52;

  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ
  if (bigA <= charCode && charCode <= bigZ) {
    return (charCode - bigA);
  }

  // 26 - 51: abcdefghijklmnopqrstuvwxyz
  if (littleA <= charCode && charCode <= littleZ) {
    return (charCode - littleA + littleOffset);
  }

  // 52 - 61: 0123456789
  if (zero <= charCode && charCode <= nine) {
    return (charCode - zero + numberOffset);
  }

  // 62: +
  if (charCode == plus) {
    return 62;
  }

  // 63: /
  if (charCode == slash) {
    return 63;
  }

  // Invalid base64 digit.
  return -1;
};


/***/ }),
/* 108 */
/***/ (function(module, exports) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

/**
 * This is a helper function for getting values from parameter/options
 * objects.
 *
 * @param args The object we are extracting values from
 * @param name The name of the property we are getting.
 * @param defaultValue An optional value to return if the property is missing
 * from the object. If this is not specified and the property is missing, an
 * error will be thrown.
 */
function getArg(aArgs, aName, aDefaultValue) {
  if (aName in aArgs) {
    return aArgs[aName];
  } else if (arguments.length === 3) {
    return aDefaultValue;
  } else {
    throw new Error('"' + aName + '" is a required argument.');
  }
}
exports.getArg = getArg;

var urlRegexp = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/;
var dataUrlRegexp = /^data:.+\,.+$/;

function urlParse(aUrl) {
  var match = aUrl.match(urlRegexp);
  if (!match) {
    return null;
  }
  return {
    scheme: match[1],
    auth: match[2],
    host: match[3],
    port: match[4],
    path: match[5]
  };
}
exports.urlParse = urlParse;

function urlGenerate(aParsedUrl) {
  var url = '';
  if (aParsedUrl.scheme) {
    url += aParsedUrl.scheme + ':';
  }
  url += '//';
  if (aParsedUrl.auth) {
    url += aParsedUrl.auth + '@';
  }
  if (aParsedUrl.host) {
    url += aParsedUrl.host;
  }
  if (aParsedUrl.port) {
    url += ":" + aParsedUrl.port
  }
  if (aParsedUrl.path) {
    url += aParsedUrl.path;
  }
  return url;
}
exports.urlGenerate = urlGenerate;

/**
 * Normalizes a path, or the path portion of a URL:
 *
 * - Replaces consecutive slashes with one slash.
 * - Removes unnecessary '.' parts.
 * - Removes unnecessary '<dir>/..' parts.
 *
 * Based on code in the Node.js 'path' core module.
 *
 * @param aPath The path or url to normalize.
 */
function normalize(aPath) {
  var path = aPath;
  var url = urlParse(aPath);
  if (url) {
    if (!url.path) {
      return aPath;
    }
    path = url.path;
  }
  var isAbsolute = exports.isAbsolute(path);

  var parts = path.split(/\/+/);
  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {
    part = parts[i];
    if (part === '.') {
      parts.splice(i, 1);
    } else if (part === '..') {
      up++;
    } else if (up > 0) {
      if (part === '') {
        // The first part is blank if the path is absolute. Trying to go
        // above the root is a no-op. Therefore we can remove all '..' parts
        // directly after the root.
        parts.splice(i + 1, up);
        up = 0;
      } else {
        parts.splice(i, 2);
        up--;
      }
    }
  }
  path = parts.join('/');

  if (path === '') {
    path = isAbsolute ? '/' : '.';
  }

  if (url) {
    url.path = path;
    return urlGenerate(url);
  }
  return path;
}
exports.normalize = normalize;

/**
 * Joins two paths/URLs.
 *
 * @param aRoot The root path or URL.
 * @param aPath The path or URL to be joined with the root.
 *
 * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a
 *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended
 *   first.
 * - Otherwise aPath is a path. If aRoot is a URL, then its path portion
 *   is updated with the result and aRoot is returned. Otherwise the result
 *   is returned.
 *   - If aPath is absolute, the result is aPath.
 *   - Otherwise the two paths are joined with a slash.
 * - Joining for example 'http://' and 'www.example.com' is also supported.
 */
function join(aRoot, aPath) {
  if (aRoot === "") {
    aRoot = ".";
  }
  if (aPath === "") {
    aPath = ".";
  }
  var aPathUrl = urlParse(aPath);
  var aRootUrl = urlParse(aRoot);
  if (aRootUrl) {
    aRoot = aRootUrl.path || '/';
  }

  // `join(foo, '//www.example.org')`
  if (aPathUrl && !aPathUrl.scheme) {
    if (aRootUrl) {
      aPathUrl.scheme = aRootUrl.scheme;
    }
    return urlGenerate(aPathUrl);
  }

  if (aPathUrl || aPath.match(dataUrlRegexp)) {
    return aPath;
  }

  // `join('http://', 'www.example.com')`
  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {
    aRootUrl.host = aPath;
    return urlGenerate(aRootUrl);
  }

  var joined = aPath.charAt(0) === '/'
    ? aPath
    : normalize(aRoot.replace(/\/+$/, '') + '/' + aPath);

  if (aRootUrl) {
    aRootUrl.path = joined;
    return urlGenerate(aRootUrl);
  }
  return joined;
}
exports.join = join;

exports.isAbsolute = function (aPath) {
  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);
};

/**
 * Make a path relative to a URL or another path.
 *
 * @param aRoot The root path or URL.
 * @param aPath The path or URL to be made relative to aRoot.
 */
function relative(aRoot, aPath) {
  if (aRoot === "") {
    aRoot = ".";
  }

  aRoot = aRoot.replace(/\/$/, '');

  // It is possible for the path to be above the root. In this case, simply
  // checking whether the root is a prefix of the path won't work. Instead, we
  // need to remove components from the root one by one, until either we find
  // a prefix that fits, or we run out of components to remove.
  var level = 0;
  while (aPath.indexOf(aRoot + '/') !== 0) {
    var index = aRoot.lastIndexOf("/");
    if (index < 0) {
      return aPath;
    }

    // If the only part of the root that is left is the scheme (i.e. http://,
    // file:///, etc.), one or more slashes (/), or simply nothing at all, we
    // have exhausted all components, so the path is not relative to the root.
    aRoot = aRoot.slice(0, index);
    if (aRoot.match(/^([^\/]+:\/)?\/*$/)) {
      return aPath;
    }

    ++level;
  }

  // Make sure we add a "../" for each component we removed from the root.
  return Array(level + 1).join("../") + aPath.substr(aRoot.length + 1);
}
exports.relative = relative;

var supportsNullProto = (function () {
  var obj = Object.create(null);
  return !('__proto__' in obj);
}());

function identity (s) {
  return s;
}

/**
 * Because behavior goes wacky when you set `__proto__` on objects, we
 * have to prefix all the strings in our set with an arbitrary character.
 *
 * See https://github.com/mozilla/source-map/pull/31 and
 * https://github.com/mozilla/source-map/issues/30
 *
 * @param String aStr
 */
function toSetString(aStr) {
  if (isProtoString(aStr)) {
    return '$' + aStr;
  }

  return aStr;
}
exports.toSetString = supportsNullProto ? identity : toSetString;

function fromSetString(aStr) {
  if (isProtoString(aStr)) {
    return aStr.slice(1);
  }

  return aStr;
}
exports.fromSetString = supportsNullProto ? identity : fromSetString;

function isProtoString(s) {
  if (!s) {
    return false;
  }

  var length = s.length;

  if (length < 9 /* "__proto__".length */) {
    return false;
  }

  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||
      s.charCodeAt(length - 2) !== 95  /* '_' */ ||
      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||
      s.charCodeAt(length - 4) !== 116 /* 't' */ ||
      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||
      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||
      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||
      s.charCodeAt(length - 8) !== 95  /* '_' */ ||
      s.charCodeAt(length - 9) !== 95  /* '_' */) {
    return false;
  }

  for (var i = length - 10; i >= 0; i--) {
    if (s.charCodeAt(i) !== 36 /* '$' */) {
      return false;
    }
  }

  return true;
}

/**
 * Comparator between two mappings where the original positions are compared.
 *
 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
 * mappings with the same original source/line/column, but different generated
 * line and column the same. Useful when searching for a mapping with a
 * stubbed out mapping.
 */
function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {
  var cmp = mappingA.source - mappingB.source;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0 || onlyCompareOriginal) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  return mappingA.name - mappingB.name;
}
exports.compareByOriginalPositions = compareByOriginalPositions;

/**
 * Comparator between two mappings with deflated source and name indices where
 * the generated positions are compared.
 *
 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
 * mappings with the same generated line and column, but different
 * source/name/original line and column the same. Useful when searching for a
 * mapping with a stubbed out mapping.
 */
function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {
  var cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0 || onlyCompareGenerated) {
    return cmp;
  }

  cmp = mappingA.source - mappingB.source;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0) {
    return cmp;
  }

  return mappingA.name - mappingB.name;
}
exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;

function strcmp(aStr1, aStr2) {
  if (aStr1 === aStr2) {
    return 0;
  }

  if (aStr1 > aStr2) {
    return 1;
  }

  return -1;
}

/**
 * Comparator between two mappings with inflated source and name strings where
 * the generated positions are compared.
 */
function compareByGeneratedPositionsInflated(mappingA, mappingB) {
  var cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = strcmp(mappingA.source, mappingB.source);
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0) {
    return cmp;
  }

  return strcmp(mappingA.name, mappingB.name);
}
exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(108);
var has = Object.prototype.hasOwnProperty;
var hasNativeMap = typeof Map !== "undefined";

/**
 * A data structure which is a combination of an array and a set. Adding a new
 * member is O(1), testing for membership is O(1), and finding the index of an
 * element is O(1). Removing elements from the set is not supported. Only
 * strings are supported for membership.
 */
function ArraySet() {
  this._array = [];
  this._set = hasNativeMap ? new Map() : Object.create(null);
}

/**
 * Static method for creating ArraySet instances from an existing array.
 */
ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {
  var set = new ArraySet();
  for (var i = 0, len = aArray.length; i < len; i++) {
    set.add(aArray[i], aAllowDuplicates);
  }
  return set;
};

/**
 * Return how many unique items are in this ArraySet. If duplicates have been
 * added, than those do not count towards the size.
 *
 * @returns Number
 */
ArraySet.prototype.size = function ArraySet_size() {
  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;
};

/**
 * Add the given string to this set.
 *
 * @param String aStr
 */
ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {
  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);
  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);
  var idx = this._array.length;
  if (!isDuplicate || aAllowDuplicates) {
    this._array.push(aStr);
  }
  if (!isDuplicate) {
    if (hasNativeMap) {
      this._set.set(aStr, idx);
    } else {
      this._set[sStr] = idx;
    }
  }
};

/**
 * Is the given string a member of this set?
 *
 * @param String aStr
 */
ArraySet.prototype.has = function ArraySet_has(aStr) {
  if (hasNativeMap) {
    return this._set.has(aStr);
  } else {
    var sStr = util.toSetString(aStr);
    return has.call(this._set, sStr);
  }
};

/**
 * What is the index of the given string in the array?
 *
 * @param String aStr
 */
ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {
  if (hasNativeMap) {
    var idx = this._set.get(aStr);
    if (idx >= 0) {
        return idx;
    }
  } else {
    var sStr = util.toSetString(aStr);
    if (has.call(this._set, sStr)) {
      return this._set[sStr];
    }
  }

  throw new Error('"' + aStr + '" is not in the set.');
};

/**
 * What is the element at the given index?
 *
 * @param Number aIdx
 */
ArraySet.prototype.at = function ArraySet_at(aIdx) {
  if (aIdx >= 0 && aIdx < this._array.length) {
    return this._array[aIdx];
  }
  throw new Error('No element indexed by ' + aIdx);
};

/**
 * Returns the array representation of this set (which has the proper indices
 * indicated by indexOf). Note that this is a copy of the internal array used
 * for storing the members so that no one can mess with internal state.
 */
ArraySet.prototype.toArray = function ArraySet_toArray() {
  return this._array.slice();
};

exports.ArraySet = ArraySet;


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2014 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(108);

/**
 * Determine whether mappingB is after mappingA with respect to generated
 * position.
 */
function generatedPositionAfter(mappingA, mappingB) {
  // Optimized for most common case
  var lineA = mappingA.generatedLine;
  var lineB = mappingB.generatedLine;
  var columnA = mappingA.generatedColumn;
  var columnB = mappingB.generatedColumn;
  return lineB > lineA || lineB == lineA && columnB >= columnA ||
         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;
}

/**
 * A data structure to provide a sorted view of accumulated mappings in a
 * performance conscious manner. It trades a neglibable overhead in general
 * case for a large speedup in case of mappings being added in order.
 */
function MappingList() {
  this._array = [];
  this._sorted = true;
  // Serves as infimum
  this._last = {generatedLine: -1, generatedColumn: 0};
}

/**
 * Iterate through internal items. This method takes the same arguments that
 * `Array.prototype.forEach` takes.
 *
 * NOTE: The order of the mappings is NOT guaranteed.
 */
MappingList.prototype.unsortedForEach =
  function MappingList_forEach(aCallback, aThisArg) {
    this._array.forEach(aCallback, aThisArg);
  };

/**
 * Add the given source mapping.
 *
 * @param Object aMapping
 */
MappingList.prototype.add = function MappingList_add(aMapping) {
  if (generatedPositionAfter(this._last, aMapping)) {
    this._last = aMapping;
    this._array.push(aMapping);
  } else {
    this._sorted = false;
    this._array.push(aMapping);
  }
};

/**
 * Returns the flat, sorted array of mappings. The mappings are sorted by
 * generated position.
 *
 * WARNING: This method returns internal data without copying, for
 * performance. The return value must NOT be mutated, and should be treated as
 * an immutable borrow. If you want to take ownership, you must make your own
 * copy.
 */
MappingList.prototype.toArray = function MappingList_toArray() {
  if (!this._sorted) {
    this._array.sort(util.compareByGeneratedPositionsInflated);
    this._sorted = true;
  }
  return this._array;
};

exports.MappingList = MappingList;


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(108);
var binarySearch = __webpack_require__(112);
var ArraySet = __webpack_require__(109).ArraySet;
var base64VLQ = __webpack_require__(106);
var quickSort = __webpack_require__(113).quickSort;

function SourceMapConsumer(aSourceMap) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
  }

  return sourceMap.sections != null
    ? new IndexedSourceMapConsumer(sourceMap)
    : new BasicSourceMapConsumer(sourceMap);
}

SourceMapConsumer.fromSourceMap = function(aSourceMap) {
  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);
}

/**
 * The version of the source mapping spec that we are consuming.
 */
SourceMapConsumer.prototype._version = 3;

// `__generatedMappings` and `__originalMappings` are arrays that hold the
// parsed mapping coordinates from the source map's "mappings" attribute. They
// are lazily instantiated, accessed via the `_generatedMappings` and
// `_originalMappings` getters respectively, and we only parse the mappings
// and create these arrays once queried for a source location. We jump through
// these hoops because there can be many thousands of mappings, and parsing
// them is expensive, so we only want to do it if we must.
//
// Each object in the arrays is of the form:
//
//     {
//       generatedLine: The line number in the generated code,
//       generatedColumn: The column number in the generated code,
//       source: The path to the original source file that generated this
//               chunk of code,
//       originalLine: The line number in the original source that
//                     corresponds to this chunk of generated code,
//       originalColumn: The column number in the original source that
//                       corresponds to this chunk of generated code,
//       name: The name of the original symbol which generated this chunk of
//             code.
//     }
//
// All properties except for `generatedLine` and `generatedColumn` can be
// `null`.
//
// `_generatedMappings` is ordered by the generated positions.
//
// `_originalMappings` is ordered by the original positions.

SourceMapConsumer.prototype.__generatedMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {
  get: function () {
    if (!this.__generatedMappings) {
      this._parseMappings(this._mappings, this.sourceRoot);
    }

    return this.__generatedMappings;
  }
});

SourceMapConsumer.prototype.__originalMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {
  get: function () {
    if (!this.__originalMappings) {
      this._parseMappings(this._mappings, this.sourceRoot);
    }

    return this.__originalMappings;
  }
});

SourceMapConsumer.prototype._charIsMappingSeparator =
  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {
    var c = aStr.charAt(index);
    return c === ";" || c === ",";
  };

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
SourceMapConsumer.prototype._parseMappings =
  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    throw new Error("Subclasses must implement _parseMappings");
  };

SourceMapConsumer.GENERATED_ORDER = 1;
SourceMapConsumer.ORIGINAL_ORDER = 2;

SourceMapConsumer.GREATEST_LOWER_BOUND = 1;
SourceMapConsumer.LEAST_UPPER_BOUND = 2;

/**
 * Iterate over each mapping between an original source/line/column and a
 * generated line/column in this source map.
 *
 * @param Function aCallback
 *        The function that is called with each mapping.
 * @param Object aContext
 *        Optional. If specified, this object will be the value of `this` every
 *        time that `aCallback` is called.
 * @param aOrder
 *        Either `SourceMapConsumer.GENERATED_ORDER` or
 *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to
 *        iterate over the mappings sorted by the generated file's line/column
 *        order or the original's source/line/column order, respectively. Defaults to
 *        `SourceMapConsumer.GENERATED_ORDER`.
 */
SourceMapConsumer.prototype.eachMapping =
  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {
    var context = aContext || null;
    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;

    var mappings;
    switch (order) {
    case SourceMapConsumer.GENERATED_ORDER:
      mappings = this._generatedMappings;
      break;
    case SourceMapConsumer.ORIGINAL_ORDER:
      mappings = this._originalMappings;
      break;
    default:
      throw new Error("Unknown order of iteration.");
    }

    var sourceRoot = this.sourceRoot;
    mappings.map(function (mapping) {
      var source = mapping.source === null ? null : this._sources.at(mapping.source);
      if (source != null && sourceRoot != null) {
        source = util.join(sourceRoot, source);
      }
      return {
        source: source,
        generatedLine: mapping.generatedLine,
        generatedColumn: mapping.generatedColumn,
        originalLine: mapping.originalLine,
        originalColumn: mapping.originalColumn,
        name: mapping.name === null ? null : this._names.at(mapping.name)
      };
    }, this).forEach(aCallback, context);
  };

/**
 * Returns all generated line and column information for the original source,
 * line, and column provided. If no column is provided, returns all mappings
 * corresponding to a either the line we are searching for or the next
 * closest line that has any mappings. Otherwise, returns all mappings
 * corresponding to the given line and either the column we are searching for
 * or the next closest column that has any offsets.
 *
 * The only argument is an object with the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.
 *   - column: Optional. the column number in the original source.
 *
 * and an array of objects is returned, each with the following properties:
 *
 *   - line: The line number in the generated source, or null.
 *   - column: The column number in the generated source, or null.
 */
SourceMapConsumer.prototype.allGeneratedPositionsFor =
  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {
    var line = util.getArg(aArgs, 'line');

    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping
    // returns the index of the closest mapping less than the needle. By
    // setting needle.originalColumn to 0, we thus find the last mapping for
    // the given line, provided such a mapping exists.
    var needle = {
      source: util.getArg(aArgs, 'source'),
      originalLine: line,
      originalColumn: util.getArg(aArgs, 'column', 0)
    };

    if (this.sourceRoot != null) {
      needle.source = util.relative(this.sourceRoot, needle.source);
    }
    if (!this._sources.has(needle.source)) {
      return [];
    }
    needle.source = this._sources.indexOf(needle.source);

    var mappings = [];

    var index = this._findMapping(needle,
                                  this._originalMappings,
                                  "originalLine",
                                  "originalColumn",
                                  util.compareByOriginalPositions,
                                  binarySearch.LEAST_UPPER_BOUND);
    if (index >= 0) {
      var mapping = this._originalMappings[index];

      if (aArgs.column === undefined) {
        var originalLine = mapping.originalLine;

        // Iterate until either we run out of mappings, or we run into
        // a mapping for a different line than the one we found. Since
        // mappings are sorted, this is guaranteed to find all mappings for
        // the line we found.
        while (mapping && mapping.originalLine === originalLine) {
          mappings.push({
            line: util.getArg(mapping, 'generatedLine', null),
            column: util.getArg(mapping, 'generatedColumn', null),
            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
          });

          mapping = this._originalMappings[++index];
        }
      } else {
        var originalColumn = mapping.originalColumn;

        // Iterate until either we run out of mappings, or we run into
        // a mapping for a different line than the one we were searching for.
        // Since mappings are sorted, this is guaranteed to find all mappings for
        // the line we are searching for.
        while (mapping &&
               mapping.originalLine === line &&
               mapping.originalColumn == originalColumn) {
          mappings.push({
            line: util.getArg(mapping, 'generatedLine', null),
            column: util.getArg(mapping, 'generatedColumn', null),
            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
          });

          mapping = this._originalMappings[++index];
        }
      }
    }

    return mappings;
  };

exports.SourceMapConsumer = SourceMapConsumer;

/**
 * A BasicSourceMapConsumer instance represents a parsed source map which we can
 * query for information about the original file positions by giving it a file
 * position in the generated source.
 *
 * The only parameter is the raw source map (either as a JSON string, or
 * already parsed to an object). According to the spec, source maps have the
 * following attributes:
 *
 *   - version: Which version of the source map spec this map is following.
 *   - sources: An array of URLs to the original source files.
 *   - names: An array of identifiers which can be referrenced by individual mappings.
 *   - sourceRoot: Optional. The URL root from which all sources are relative.
 *   - sourcesContent: Optional. An array of contents of the original source files.
 *   - mappings: A string of base64 VLQs which contain the actual mappings.
 *   - file: Optional. The generated file this source map is associated with.
 *
 * Here is an example source map, taken from the source map spec[0]:
 *
 *     {
 *       version : 3,
 *       file: "out.js",
 *       sourceRoot : "",
 *       sources: ["foo.js", "bar.js"],
 *       names: ["src", "maps", "are", "fun"],
 *       mappings: "AA,AB;;ABCDE;"
 *     }
 *
 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#
 */
function BasicSourceMapConsumer(aSourceMap) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
  }

  var version = util.getArg(sourceMap, 'version');
  var sources = util.getArg(sourceMap, 'sources');
  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which
  // requires the array) to play nice here.
  var names = util.getArg(sourceMap, 'names', []);
  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);
  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);
  var mappings = util.getArg(sourceMap, 'mappings');
  var file = util.getArg(sourceMap, 'file', null);

  // Once again, Sass deviates from the spec and supplies the version as a
  // string rather than a number, so we use loose equality checking here.
  if (version != this._version) {
    throw new Error('Unsupported version: ' + version);
  }

  sources = sources
    .map(String)
    // Some source maps produce relative source paths like "./foo.js" instead of
    // "foo.js".  Normalize these first so that future comparisons will succeed.
    // See bugzil.la/1090768.
    .map(util.normalize)
    // Always ensure that absolute sources are internally stored relative to
    // the source root, if the source root is absolute. Not doing this would
    // be particularly problematic when the source root is a prefix of the
    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.
    .map(function (source) {
      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)
        ? util.relative(sourceRoot, source)
        : source;
    });

  // Pass `true` below to allow duplicate names and sources. While source maps
  // are intended to be compressed and deduplicated, the TypeScript compiler
  // sometimes generates source maps with duplicates in them. See Github issue
  // #72 and bugzil.la/889492.
  this._names = ArraySet.fromArray(names.map(String), true);
  this._sources = ArraySet.fromArray(sources, true);

  this.sourceRoot = sourceRoot;
  this.sourcesContent = sourcesContent;
  this._mappings = mappings;
  this.file = file;
}

BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;

/**
 * Create a BasicSourceMapConsumer from a SourceMapGenerator.
 *
 * @param SourceMapGenerator aSourceMap
 *        The source map that will be consumed.
 * @returns BasicSourceMapConsumer
 */
BasicSourceMapConsumer.fromSourceMap =
  function SourceMapConsumer_fromSourceMap(aSourceMap) {
    var smc = Object.create(BasicSourceMapConsumer.prototype);

    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);
    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);
    smc.sourceRoot = aSourceMap._sourceRoot;
    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),
                                                            smc.sourceRoot);
    smc.file = aSourceMap._file;

    // Because we are modifying the entries (by converting string sources and
    // names to indices into the sources and names ArraySets), we have to make
    // a copy of the entry or else bad things happen. Shared mutable state
    // strikes again! See github issue #191.

    var generatedMappings = aSourceMap._mappings.toArray().slice();
    var destGeneratedMappings = smc.__generatedMappings = [];
    var destOriginalMappings = smc.__originalMappings = [];

    for (var i = 0, length = generatedMappings.length; i < length; i++) {
      var srcMapping = generatedMappings[i];
      var destMapping = new Mapping;
      destMapping.generatedLine = srcMapping.generatedLine;
      destMapping.generatedColumn = srcMapping.generatedColumn;

      if (srcMapping.source) {
        destMapping.source = sources.indexOf(srcMapping.source);
        destMapping.originalLine = srcMapping.originalLine;
        destMapping.originalColumn = srcMapping.originalColumn;

        if (srcMapping.name) {
          destMapping.name = names.indexOf(srcMapping.name);
        }

        destOriginalMappings.push(destMapping);
      }

      destGeneratedMappings.push(destMapping);
    }

    quickSort(smc.__originalMappings, util.compareByOriginalPositions);

    return smc;
  };

/**
 * The version of the source mapping spec that we are consuming.
 */
BasicSourceMapConsumer.prototype._version = 3;

/**
 * The list of original sources.
 */
Object.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {
  get: function () {
    return this._sources.toArray().map(function (s) {
      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;
    }, this);
  }
});

/**
 * Provide the JIT with a nice shape / hidden class.
 */
function Mapping() {
  this.generatedLine = 0;
  this.generatedColumn = 0;
  this.source = null;
  this.originalLine = null;
  this.originalColumn = null;
  this.name = null;
}

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
BasicSourceMapConsumer.prototype._parseMappings =
  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    var generatedLine = 1;
    var previousGeneratedColumn = 0;
    var previousOriginalLine = 0;
    var previousOriginalColumn = 0;
    var previousSource = 0;
    var previousName = 0;
    var length = aStr.length;
    var index = 0;
    var cachedSegments = {};
    var temp = {};
    var originalMappings = [];
    var generatedMappings = [];
    var mapping, str, segment, end, value;

    while (index < length) {
      if (aStr.charAt(index) === ';') {
        generatedLine++;
        index++;
        previousGeneratedColumn = 0;
      }
      else if (aStr.charAt(index) === ',') {
        index++;
      }
      else {
        mapping = new Mapping();
        mapping.generatedLine = generatedLine;

        // Because each offset is encoded relative to the previous one,
        // many segments often have the same encoding. We can exploit this
        // fact by caching the parsed variable length fields of each segment,
        // allowing us to avoid a second parse if we encounter the same
        // segment again.
        for (end = index; end < length; end++) {
          if (this._charIsMappingSeparator(aStr, end)) {
            break;
          }
        }
        str = aStr.slice(index, end);

        segment = cachedSegments[str];
        if (segment) {
          index += str.length;
        } else {
          segment = [];
          while (index < end) {
            base64VLQ.decode(aStr, index, temp);
            value = temp.value;
            index = temp.rest;
            segment.push(value);
          }

          if (segment.length === 2) {
            throw new Error('Found a source, but no line and column');
          }

          if (segment.length === 3) {
            throw new Error('Found a source and line, but no column');
          }

          cachedSegments[str] = segment;
        }

        // Generated column.
        mapping.generatedColumn = previousGeneratedColumn + segment[0];
        previousGeneratedColumn = mapping.generatedColumn;

        if (segment.length > 1) {
          // Original source.
          mapping.source = previousSource + segment[1];
          previousSource += segment[1];

          // Original line.
          mapping.originalLine = previousOriginalLine + segment[2];
          previousOriginalLine = mapping.originalLine;
          // Lines are stored 0-based
          mapping.originalLine += 1;

          // Original column.
          mapping.originalColumn = previousOriginalColumn + segment[3];
          previousOriginalColumn = mapping.originalColumn;

          if (segment.length > 4) {
            // Original name.
            mapping.name = previousName + segment[4];
            previousName += segment[4];
          }
        }

        generatedMappings.push(mapping);
        if (typeof mapping.originalLine === 'number') {
          originalMappings.push(mapping);
        }
      }
    }

    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);
    this.__generatedMappings = generatedMappings;

    quickSort(originalMappings, util.compareByOriginalPositions);
    this.__originalMappings = originalMappings;
  };

/**
 * Find the mapping that best matches the hypothetical "needle" mapping that
 * we are searching for in the given "haystack" of mappings.
 */
BasicSourceMapConsumer.prototype._findMapping =
  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,
                                         aColumnName, aComparator, aBias) {
    // To return the position we are searching for, we must first find the
    // mapping for the given position and then return the opposite position it
    // points to. Because the mappings are sorted, we can use binary search to
    // find the best mapping.

    if (aNeedle[aLineName] <= 0) {
      throw new TypeError('Line must be greater than or equal to 1, got '
                          + aNeedle[aLineName]);
    }
    if (aNeedle[aColumnName] < 0) {
      throw new TypeError('Column must be greater than or equal to 0, got '
                          + aNeedle[aColumnName]);
    }

    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);
  };

/**
 * Compute the last column for each generated mapping. The last column is
 * inclusive.
 */
BasicSourceMapConsumer.prototype.computeColumnSpans =
  function SourceMapConsumer_computeColumnSpans() {
    for (var index = 0; index < this._generatedMappings.length; ++index) {
      var mapping = this._generatedMappings[index];

      // Mappings do not contain a field for the last generated columnt. We
      // can come up with an optimistic estimate, however, by assuming that
      // mappings are contiguous (i.e. given two consecutive mappings, the
      // first mapping ends where the second one starts).
      if (index + 1 < this._generatedMappings.length) {
        var nextMapping = this._generatedMappings[index + 1];

        if (mapping.generatedLine === nextMapping.generatedLine) {
          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;
          continue;
        }
      }

      // The last mapping for each line spans the entire line.
      mapping.lastGeneratedColumn = Infinity;
    }
  };

/**
 * Returns the original source, line, and column information for the generated
 * source's line and column positions provided. The only argument is an object
 * with the following properties:
 *
 *   - line: The line number in the generated source.
 *   - column: The column number in the generated source.
 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
 *
 * and an object is returned with the following properties:
 *
 *   - source: The original source file, or null.
 *   - line: The line number in the original source, or null.
 *   - column: The column number in the original source, or null.
 *   - name: The original identifier, or null.
 */
BasicSourceMapConsumer.prototype.originalPositionFor =
  function SourceMapConsumer_originalPositionFor(aArgs) {
    var needle = {
      generatedLine: util.getArg(aArgs, 'line'),
      generatedColumn: util.getArg(aArgs, 'column')
    };

    var index = this._findMapping(
      needle,
      this._generatedMappings,
      "generatedLine",
      "generatedColumn",
      util.compareByGeneratedPositionsDeflated,
      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
    );

    if (index >= 0) {
      var mapping = this._generatedMappings[index];

      if (mapping.generatedLine === needle.generatedLine) {
        var source = util.getArg(mapping, 'source', null);
        if (source !== null) {
          source = this._sources.at(source);
          if (this.sourceRoot != null) {
            source = util.join(this.sourceRoot, source);
          }
        }
        var name = util.getArg(mapping, 'name', null);
        if (name !== null) {
          name = this._names.at(name);
        }
        return {
          source: source,
          line: util.getArg(mapping, 'originalLine', null),
          column: util.getArg(mapping, 'originalColumn', null),
          name: name
        };
      }
    }

    return {
      source: null,
      line: null,
      column: null,
      name: null
    };
  };

/**
 * Return true if we have the source content for every source in the source
 * map, false otherwise.
 */
BasicSourceMapConsumer.prototype.hasContentsOfAllSources =
  function BasicSourceMapConsumer_hasContentsOfAllSources() {
    if (!this.sourcesContent) {
      return false;
    }
    return this.sourcesContent.length >= this._sources.size() &&
      !this.sourcesContent.some(function (sc) { return sc == null; });
  };

/**
 * Returns the original source content. The only argument is the url of the
 * original source file. Returns null if no original source content is
 * available.
 */
BasicSourceMapConsumer.prototype.sourceContentFor =
  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
    if (!this.sourcesContent) {
      return null;
    }

    if (this.sourceRoot != null) {
      aSource = util.relative(this.sourceRoot, aSource);
    }

    if (this._sources.has(aSource)) {
      return this.sourcesContent[this._sources.indexOf(aSource)];
    }

    var url;
    if (this.sourceRoot != null
        && (url = util.urlParse(this.sourceRoot))) {
      // XXX: file:// URIs and absolute paths lead to unexpected behavior for
      // many users. We can help them out when they expect file:// URIs to
      // behave like it would if they were running a local HTTP server. See
      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.
      var fileUriAbsPath = aSource.replace(/^file:\/\//, "");
      if (url.scheme == "file"
          && this._sources.has(fileUriAbsPath)) {
        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]
      }

      if ((!url.path || url.path == "/")
          && this._sources.has("/" + aSource)) {
        return this.sourcesContent[this._sources.indexOf("/" + aSource)];
      }
    }

    // This function is used recursively from
    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we
    // don't want to throw if we can't find the source - we just want to
    // return null, so we provide a flag to exit gracefully.
    if (nullOnMissing) {
      return null;
    }
    else {
      throw new Error('"' + aSource + '" is not in the SourceMap.');
    }
  };

/**
 * Returns the generated line and column information for the original source,
 * line, and column positions provided. The only argument is an object with
 * the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.
 *   - column: The column number in the original source.
 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
 *
 * and an object is returned with the following properties:
 *
 *   - line: The line number in the generated source, or null.
 *   - column: The column number in the generated source, or null.
 */
BasicSourceMapConsumer.prototype.generatedPositionFor =
  function SourceMapConsumer_generatedPositionFor(aArgs) {
    var source = util.getArg(aArgs, 'source');
    if (this.sourceRoot != null) {
      source = util.relative(this.sourceRoot, source);
    }
    if (!this._sources.has(source)) {
      return {
        line: null,
        column: null,
        lastColumn: null
      };
    }
    source = this._sources.indexOf(source);

    var needle = {
      source: source,
      originalLine: util.getArg(aArgs, 'line'),
      originalColumn: util.getArg(aArgs, 'column')
    };

    var index = this._findMapping(
      needle,
      this._originalMappings,
      "originalLine",
      "originalColumn",
      util.compareByOriginalPositions,
      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
    );

    if (index >= 0) {
      var mapping = this._originalMappings[index];

      if (mapping.source === needle.source) {
        return {
          line: util.getArg(mapping, 'generatedLine', null),
          column: util.getArg(mapping, 'generatedColumn', null),
          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
        };
      }
    }

    return {
      line: null,
      column: null,
      lastColumn: null
    };
  };

exports.BasicSourceMapConsumer = BasicSourceMapConsumer;

/**
 * An IndexedSourceMapConsumer instance represents a parsed source map which
 * we can query for information. It differs from BasicSourceMapConsumer in
 * that it takes "indexed" source maps (i.e. ones with a "sections" field) as
 * input.
 *
 * The only parameter is a raw source map (either as a JSON string, or already
 * parsed to an object). According to the spec for indexed source maps, they
 * have the following attributes:
 *
 *   - version: Which version of the source map spec this map is following.
 *   - file: Optional. The generated file this source map is associated with.
 *   - sections: A list of section definitions.
 *
 * Each value under the "sections" field has two fields:
 *   - offset: The offset into the original specified at which this section
 *       begins to apply, defined as an object with a "line" and "column"
 *       field.
 *   - map: A source map definition. This source map could also be indexed,
 *       but doesn't have to be.
 *
 * Instead of the "map" field, it's also possible to have a "url" field
 * specifying a URL to retrieve a source map from, but that's currently
 * unsupported.
 *
 * Here's an example source map, taken from the source map spec[0], but
 * modified to omit a section which uses the "url" field.
 *
 *  {
 *    version : 3,
 *    file: "app.js",
 *    sections: [{
 *      offset: {line:100, column:10},
 *      map: {
 *        version : 3,
 *        file: "section.js",
 *        sources: ["foo.js", "bar.js"],
 *        names: ["src", "maps", "are", "fun"],
 *        mappings: "AAAA,E;;ABCDE;"
 *      }
 *    }],
 *  }
 *
 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt
 */
function IndexedSourceMapConsumer(aSourceMap) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
  }

  var version = util.getArg(sourceMap, 'version');
  var sections = util.getArg(sourceMap, 'sections');

  if (version != this._version) {
    throw new Error('Unsupported version: ' + version);
  }

  this._sources = new ArraySet();
  this._names = new ArraySet();

  var lastOffset = {
    line: -1,
    column: 0
  };
  this._sections = sections.map(function (s) {
    if (s.url) {
      // The url field will require support for asynchronicity.
      // See https://github.com/mozilla/source-map/issues/16
      throw new Error('Support for url field in sections not implemented.');
    }
    var offset = util.getArg(s, 'offset');
    var offsetLine = util.getArg(offset, 'line');
    var offsetColumn = util.getArg(offset, 'column');

    if (offsetLine < lastOffset.line ||
        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {
      throw new Error('Section offsets must be ordered and non-overlapping.');
    }
    lastOffset = offset;

    return {
      generatedOffset: {
        // The offset fields are 0-based, but we use 1-based indices when
        // encoding/decoding from VLQ.
        generatedLine: offsetLine + 1,
        generatedColumn: offsetColumn + 1
      },
      consumer: new SourceMapConsumer(util.getArg(s, 'map'))
    }
  });
}

IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;

/**
 * The version of the source mapping spec that we are consuming.
 */
IndexedSourceMapConsumer.prototype._version = 3;

/**
 * The list of original sources.
 */
Object.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {
  get: function () {
    var sources = [];
    for (var i = 0; i < this._sections.length; i++) {
      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {
        sources.push(this._sections[i].consumer.sources[j]);
      }
    }
    return sources;
  }
});

/**
 * Returns the original source, line, and column information for the generated
 * source's line and column positions provided. The only argument is an object
 * with the following properties:
 *
 *   - line: The line number in the generated source.
 *   - column: The column number in the generated source.
 *
 * and an object is returned with the following properties:
 *
 *   - source: The original source file, or null.
 *   - line: The line number in the original source, or null.
 *   - column: The column number in the original source, or null.
 *   - name: The original identifier, or null.
 */
IndexedSourceMapConsumer.prototype.originalPositionFor =
  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {
    var needle = {
      generatedLine: util.getArg(aArgs, 'line'),
      generatedColumn: util.getArg(aArgs, 'column')
    };

    // Find the section containing the generated position we're trying to map
    // to an original position.
    var sectionIndex = binarySearch.search(needle, this._sections,
      function(needle, section) {
        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;
        if (cmp) {
          return cmp;
        }

        return (needle.generatedColumn -
                section.generatedOffset.generatedColumn);
      });
    var section = this._sections[sectionIndex];

    if (!section) {
      return {
        source: null,
        line: null,
        column: null,
        name: null
      };
    }

    return section.consumer.originalPositionFor({
      line: needle.generatedLine -
        (section.generatedOffset.generatedLine - 1),
      column: needle.generatedColumn -
        (section.generatedOffset.generatedLine === needle.generatedLine
         ? section.generatedOffset.generatedColumn - 1
         : 0),
      bias: aArgs.bias
    });
  };

/**
 * Return true if we have the source content for every source in the source
 * map, false otherwise.
 */
IndexedSourceMapConsumer.prototype.hasContentsOfAllSources =
  function IndexedSourceMapConsumer_hasContentsOfAllSources() {
    return this._sections.every(function (s) {
      return s.consumer.hasContentsOfAllSources();
    });
  };

/**
 * Returns the original source content. The only argument is the url of the
 * original source file. Returns null if no original source content is
 * available.
 */
IndexedSourceMapConsumer.prototype.sourceContentFor =
  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];

      var content = section.consumer.sourceContentFor(aSource, true);
      if (content) {
        return content;
      }
    }
    if (nullOnMissing) {
      return null;
    }
    else {
      throw new Error('"' + aSource + '" is not in the SourceMap.');
    }
  };

/**
 * Returns the generated line and column information for the original source,
 * line, and column positions provided. The only argument is an object with
 * the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.
 *   - column: The column number in the original source.
 *
 * and an object is returned with the following properties:
 *
 *   - line: The line number in the generated source, or null.
 *   - column: The column number in the generated source, or null.
 */
IndexedSourceMapConsumer.prototype.generatedPositionFor =
  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];

      // Only consider this section if the requested source is in the list of
      // sources of the consumer.
      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {
        continue;
      }
      var generatedPosition = section.consumer.generatedPositionFor(aArgs);
      if (generatedPosition) {
        var ret = {
          line: generatedPosition.line +
            (section.generatedOffset.generatedLine - 1),
          column: generatedPosition.column +
            (section.generatedOffset.generatedLine === generatedPosition.line
             ? section.generatedOffset.generatedColumn - 1
             : 0)
        };
        return ret;
      }
    }

    return {
      line: null,
      column: null
    };
  };

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
IndexedSourceMapConsumer.prototype._parseMappings =
  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    this.__generatedMappings = [];
    this.__originalMappings = [];
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];
      var sectionMappings = section.consumer._generatedMappings;
      for (var j = 0; j < sectionMappings.length; j++) {
        var mapping = sectionMappings[j];

        var source = section.consumer._sources.at(mapping.source);
        if (section.consumer.sourceRoot !== null) {
          source = util.join(section.consumer.sourceRoot, source);
        }
        this._sources.add(source);
        source = this._sources.indexOf(source);

        var name = section.consumer._names.at(mapping.name);
        this._names.add(name);
        name = this._names.indexOf(name);

        // The mappings coming from the consumer for the section have
        // generated positions relative to the start of the section, so we
        // need to offset them to be relative to the start of the concatenated
        // generated file.
        var adjustedMapping = {
          source: source,
          generatedLine: mapping.generatedLine +
            (section.generatedOffset.generatedLine - 1),
          generatedColumn: mapping.generatedColumn +
            (section.generatedOffset.generatedLine === mapping.generatedLine
            ? section.generatedOffset.generatedColumn - 1
            : 0),
          originalLine: mapping.originalLine,
          originalColumn: mapping.originalColumn,
          name: name
        };

        this.__generatedMappings.push(adjustedMapping);
        if (typeof adjustedMapping.originalLine === 'number') {
          this.__originalMappings.push(adjustedMapping);
        }
      }
    }

    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);
    quickSort(this.__originalMappings, util.compareByOriginalPositions);
  };

exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;


/***/ }),
/* 112 */
/***/ (function(module, exports) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

exports.GREATEST_LOWER_BOUND = 1;
exports.LEAST_UPPER_BOUND = 2;

/**
 * Recursive implementation of binary search.
 *
 * @param aLow Indices here and lower do not contain the needle.
 * @param aHigh Indices here and higher do not contain the needle.
 * @param aNeedle The element being searched for.
 * @param aHaystack The non-empty array being searched.
 * @param aCompare Function which takes two elements and returns -1, 0, or 1.
 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 */
function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {
  // This function terminates when one of the following is true:
  //
  //   1. We find the exact element we are looking for.
  //
  //   2. We did not find the exact element, but we can return the index of
  //      the next-closest element.
  //
  //   3. We did not find the exact element, and there is no next-closest
  //      element than the one we are searching for, so we return -1.
  var mid = Math.floor((aHigh - aLow) / 2) + aLow;
  var cmp = aCompare(aNeedle, aHaystack[mid], true);
  if (cmp === 0) {
    // Found the element we are looking for.
    return mid;
  }
  else if (cmp > 0) {
    // Our needle is greater than aHaystack[mid].
    if (aHigh - mid > 1) {
      // The element is in the upper half.
      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);
    }

    // The exact needle element was not found in this haystack. Determine if
    // we are in termination case (3) or (2) and return the appropriate thing.
    if (aBias == exports.LEAST_UPPER_BOUND) {
      return aHigh < aHaystack.length ? aHigh : -1;
    } else {
      return mid;
    }
  }
  else {
    // Our needle is less than aHaystack[mid].
    if (mid - aLow > 1) {
      // The element is in the lower half.
      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);
    }

    // we are in termination case (3) or (2) and return the appropriate thing.
    if (aBias == exports.LEAST_UPPER_BOUND) {
      return mid;
    } else {
      return aLow < 0 ? -1 : aLow;
    }
  }
}

/**
 * This is an implementation of binary search which will always try and return
 * the index of the closest element if there is no exact hit. This is because
 * mappings between original and generated line/col pairs are single points,
 * and there is an implicit region between each of them, so a miss just means
 * that you aren't on the very start of a region.
 *
 * @param aNeedle The element you are looking for.
 * @param aHaystack The array that is being searched.
 * @param aCompare A function which takes the needle and an element in the
 *     array and returns -1, 0, or 1 depending on whether the needle is less
 *     than, equal to, or greater than the element, respectively.
 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.
 */
exports.search = function search(aNeedle, aHaystack, aCompare, aBias) {
  if (aHaystack.length === 0) {
    return -1;
  }

  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,
                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);
  if (index < 0) {
    return -1;
  }

  // We have found either the exact element, or the next-closest element than
  // the one we are searching for. However, there may be more than one such
  // element. Make sure we always return the smallest of these.
  while (index - 1 >= 0) {
    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {
      break;
    }
    --index;
  }

  return index;
};


/***/ }),
/* 113 */
/***/ (function(module, exports) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

// It turns out that some (most?) JavaScript engines don't self-host
// `Array.prototype.sort`. This makes sense because C++ will likely remain
// faster than JS when doing raw CPU-intensive sorting. However, when using a
// custom comparator function, calling back and forth between the VM's C++ and
// JIT'd JS is rather slow *and* loses JIT type information, resulting in
// worse generated code for the comparator function than would be optimal. In
// fact, when sorting with a comparator, these costs outweigh the benefits of
// sorting in C++. By using our own JS-implemented Quick Sort (below), we get
// a ~3500ms mean speed-up in `bench/bench.html`.

/**
 * Swap the elements indexed by `x` and `y` in the array `ary`.
 *
 * @param {Array} ary
 *        The array.
 * @param {Number} x
 *        The index of the first item.
 * @param {Number} y
 *        The index of the second item.
 */
function swap(ary, x, y) {
  var temp = ary[x];
  ary[x] = ary[y];
  ary[y] = temp;
}

/**
 * Returns a random integer within the range `low .. high` inclusive.
 *
 * @param {Number} low
 *        The lower bound on the range.
 * @param {Number} high
 *        The upper bound on the range.
 */
function randomIntInRange(low, high) {
  return Math.round(low + (Math.random() * (high - low)));
}

/**
 * The Quick Sort algorithm.
 *
 * @param {Array} ary
 *        An array to sort.
 * @param {function} comparator
 *        Function to use to compare two items.
 * @param {Number} p
 *        Start index of the array
 * @param {Number} r
 *        End index of the array
 */
function doQuickSort(ary, comparator, p, r) {
  // If our lower bound is less than our upper bound, we (1) partition the
  // array into two pieces and (2) recurse on each half. If it is not, this is
  // the empty array and our base case.

  if (p < r) {
    // (1) Partitioning.
    //
    // The partitioning chooses a pivot between `p` and `r` and moves all
    // elements that are less than or equal to the pivot to the before it, and
    // all the elements that are greater than it after it. The effect is that
    // once partition is done, the pivot is in the exact place it will be when
    // the array is put in sorted order, and it will not need to be moved
    // again. This runs in O(n) time.

    // Always choose a random pivot so that an input array which is reverse
    // sorted does not cause O(n^2) running time.
    var pivotIndex = randomIntInRange(p, r);
    var i = p - 1;

    swap(ary, pivotIndex, r);
    var pivot = ary[r];

    // Immediately after `j` is incremented in this loop, the following hold
    // true:
    //
    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.
    //
    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.
    for (var j = p; j < r; j++) {
      if (comparator(ary[j], pivot) <= 0) {
        i += 1;
        swap(ary, i, j);
      }
    }

    swap(ary, i + 1, j);
    var q = i + 1;

    // (2) Recurse on each half.

    doQuickSort(ary, comparator, p, q - 1);
    doQuickSort(ary, comparator, q + 1, r);
  }
}

/**
 * Sort the given array in-place with the given comparator function.
 *
 * @param {Array} ary
 *        An array to sort.
 * @param {function} comparator
 *        Function to use to compare two items.
 */
exports.quickSort = function (ary, comparator) {
  doQuickSort(ary, comparator, 0, ary.length - 1);
};


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var SourceMapGenerator = __webpack_require__(105).SourceMapGenerator;
var util = __webpack_require__(108);

// Matches a Windows-style `\r\n` newline or a `\n` newline used by all other
// operating systems these days (capturing the result).
var REGEX_NEWLINE = /(\r?\n)/;

// Newline character code for charCodeAt() comparisons
var NEWLINE_CODE = 10;

// Private symbol for identifying `SourceNode`s when multiple versions of
// the source-map library are loaded. This MUST NOT CHANGE across
// versions!
var isSourceNode = "$$$isSourceNode$$$";

/**
 * SourceNodes provide a way to abstract over interpolating/concatenating
 * snippets of generated JavaScript source code while maintaining the line and
 * column information associated with the original source code.
 *
 * @param aLine The original line number.
 * @param aColumn The original column number.
 * @param aSource The original source's filename.
 * @param aChunks Optional. An array of strings which are snippets of
 *        generated JS, or other SourceNodes.
 * @param aName The original identifier.
 */
function SourceNode(aLine, aColumn, aSource, aChunks, aName) {
  this.children = [];
  this.sourceContents = {};
  this.line = aLine == null ? null : aLine;
  this.column = aColumn == null ? null : aColumn;
  this.source = aSource == null ? null : aSource;
  this.name = aName == null ? null : aName;
  this[isSourceNode] = true;
  if (aChunks != null) this.add(aChunks);
}

/**
 * Creates a SourceNode from generated code and a SourceMapConsumer.
 *
 * @param aGeneratedCode The generated code
 * @param aSourceMapConsumer The SourceMap for the generated code
 * @param aRelativePath Optional. The path that relative sources in the
 *        SourceMapConsumer should be relative to.
 */
SourceNode.fromStringWithSourceMap =
  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {
    // The SourceNode we want to fill with the generated code
    // and the SourceMap
    var node = new SourceNode();

    // All even indices of this array are one line of the generated code,
    // while all odd indices are the newlines between two adjacent lines
    // (since `REGEX_NEWLINE` captures its match).
    // Processed fragments are accessed by calling `shiftNextLine`.
    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);
    var remainingLinesIndex = 0;
    var shiftNextLine = function() {
      var lineContents = getNextLine();
      // The last line of a file might not have a newline.
      var newLine = getNextLine() || "";
      return lineContents + newLine;

      function getNextLine() {
        return remainingLinesIndex < remainingLines.length ?
            remainingLines[remainingLinesIndex++] : undefined;
      }
    };

    // We need to remember the position of "remainingLines"
    var lastGeneratedLine = 1, lastGeneratedColumn = 0;

    // The generate SourceNodes we need a code range.
    // To extract it current and last mapping is used.
    // Here we store the last mapping.
    var lastMapping = null;

    aSourceMapConsumer.eachMapping(function (mapping) {
      if (lastMapping !== null) {
        // We add the code from "lastMapping" to "mapping":
        // First check if there is a new line in between.
        if (lastGeneratedLine < mapping.generatedLine) {
          // Associate first line with "lastMapping"
          addMappingWithCode(lastMapping, shiftNextLine());
          lastGeneratedLine++;
          lastGeneratedColumn = 0;
          // The remaining code is added without mapping
        } else {
          // There is no new line in between.
          // Associate the code between "lastGeneratedColumn" and
          // "mapping.generatedColumn" with "lastMapping"
          var nextLine = remainingLines[remainingLinesIndex];
          var code = nextLine.substr(0, mapping.generatedColumn -
                                        lastGeneratedColumn);
          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -
                                              lastGeneratedColumn);
          lastGeneratedColumn = mapping.generatedColumn;
          addMappingWithCode(lastMapping, code);
          // No more remaining code, continue
          lastMapping = mapping;
          return;
        }
      }
      // We add the generated code until the first mapping
      // to the SourceNode without any mapping.
      // Each line is added as separate string.
      while (lastGeneratedLine < mapping.generatedLine) {
        node.add(shiftNextLine());
        lastGeneratedLine++;
      }
      if (lastGeneratedColumn < mapping.generatedColumn) {
        var nextLine = remainingLines[remainingLinesIndex];
        node.add(nextLine.substr(0, mapping.generatedColumn));
        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);
        lastGeneratedColumn = mapping.generatedColumn;
      }
      lastMapping = mapping;
    }, this);
    // We have processed all mappings.
    if (remainingLinesIndex < remainingLines.length) {
      if (lastMapping) {
        // Associate the remaining code in the current line with "lastMapping"
        addMappingWithCode(lastMapping, shiftNextLine());
      }
      // and add the remaining lines without any mapping
      node.add(remainingLines.splice(remainingLinesIndex).join(""));
    }

    // Copy sourcesContent into SourceNode
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        if (aRelativePath != null) {
          sourceFile = util.join(aRelativePath, sourceFile);
        }
        node.setSourceContent(sourceFile, content);
      }
    });

    return node;

    function addMappingWithCode(mapping, code) {
      if (mapping === null || mapping.source === undefined) {
        node.add(code);
      } else {
        var source = aRelativePath
          ? util.join(aRelativePath, mapping.source)
          : mapping.source;
        node.add(new SourceNode(mapping.originalLine,
                                mapping.originalColumn,
                                source,
                                code,
                                mapping.name));
      }
    }
  };

/**
 * Add a chunk of generated JS to this source node.
 *
 * @param aChunk A string snippet of generated JS code, another instance of
 *        SourceNode, or an array where each member is one of those things.
 */
SourceNode.prototype.add = function SourceNode_add(aChunk) {
  if (Array.isArray(aChunk)) {
    aChunk.forEach(function (chunk) {
      this.add(chunk);
    }, this);
  }
  else if (aChunk[isSourceNode] || typeof aChunk === "string") {
    if (aChunk) {
      this.children.push(aChunk);
    }
  }
  else {
    throw new TypeError(
      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
    );
  }
  return this;
};

/**
 * Add a chunk of generated JS to the beginning of this source node.
 *
 * @param aChunk A string snippet of generated JS code, another instance of
 *        SourceNode, or an array where each member is one of those things.
 */
SourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {
  if (Array.isArray(aChunk)) {
    for (var i = aChunk.length-1; i >= 0; i--) {
      this.prepend(aChunk[i]);
    }
  }
  else if (aChunk[isSourceNode] || typeof aChunk === "string") {
    this.children.unshift(aChunk);
  }
  else {
    throw new TypeError(
      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
    );
  }
  return this;
};

/**
 * Walk over the tree of JS snippets in this node and its children. The
 * walking function is called once for each snippet of JS and is passed that
 * snippet and the its original associated source's line/column location.
 *
 * @param aFn The traversal function.
 */
SourceNode.prototype.walk = function SourceNode_walk(aFn) {
  var chunk;
  for (var i = 0, len = this.children.length; i < len; i++) {
    chunk = this.children[i];
    if (chunk[isSourceNode]) {
      chunk.walk(aFn);
    }
    else {
      if (chunk !== '') {
        aFn(chunk, { source: this.source,
                     line: this.line,
                     column: this.column,
                     name: this.name });
      }
    }
  }
};

/**
 * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between
 * each of `this.children`.
 *
 * @param aSep The separator.
 */
SourceNode.prototype.join = function SourceNode_join(aSep) {
  var newChildren;
  var i;
  var len = this.children.length;
  if (len > 0) {
    newChildren = [];
    for (i = 0; i < len-1; i++) {
      newChildren.push(this.children[i]);
      newChildren.push(aSep);
    }
    newChildren.push(this.children[i]);
    this.children = newChildren;
  }
  return this;
};

/**
 * Call String.prototype.replace on the very right-most source snippet. Useful
 * for trimming whitespace from the end of a source node, etc.
 *
 * @param aPattern The pattern to replace.
 * @param aReplacement The thing to replace the pattern with.
 */
SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {
  var lastChild = this.children[this.children.length - 1];
  if (lastChild[isSourceNode]) {
    lastChild.replaceRight(aPattern, aReplacement);
  }
  else if (typeof lastChild === 'string') {
    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);
  }
  else {
    this.children.push(''.replace(aPattern, aReplacement));
  }
  return this;
};

/**
 * Set the source content for a source file. This will be added to the SourceMapGenerator
 * in the sourcesContent field.
 *
 * @param aSourceFile The filename of the source file
 * @param aSourceContent The content of the source file
 */
SourceNode.prototype.setSourceContent =
  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {
    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;
  };

/**
 * Walk over the tree of SourceNodes. The walking function is called for each
 * source file content and is passed the filename and source content.
 *
 * @param aFn The traversal function.
 */
SourceNode.prototype.walkSourceContents =
  function SourceNode_walkSourceContents(aFn) {
    for (var i = 0, len = this.children.length; i < len; i++) {
      if (this.children[i][isSourceNode]) {
        this.children[i].walkSourceContents(aFn);
      }
    }

    var sources = Object.keys(this.sourceContents);
    for (var i = 0, len = sources.length; i < len; i++) {
      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);
    }
  };

/**
 * Return the string representation of this source node. Walks over the tree
 * and concatenates all the various snippets together to one string.
 */
SourceNode.prototype.toString = function SourceNode_toString() {
  var str = "";
  this.walk(function (chunk) {
    str += chunk;
  });
  return str;
};

/**
 * Returns the string representation of this source node along with a source
 * map.
 */
SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {
  var generated = {
    code: "",
    line: 1,
    column: 0
  };
  var map = new SourceMapGenerator(aArgs);
  var sourceMappingActive = false;
  var lastOriginalSource = null;
  var lastOriginalLine = null;
  var lastOriginalColumn = null;
  var lastOriginalName = null;
  this.walk(function (chunk, original) {
    generated.code += chunk;
    if (original.source !== null
        && original.line !== null
        && original.column !== null) {
      if(lastOriginalSource !== original.source
         || lastOriginalLine !== original.line
         || lastOriginalColumn !== original.column
         || lastOriginalName !== original.name) {
        map.addMapping({
          source: original.source,
          original: {
            line: original.line,
            column: original.column
          },
          generated: {
            line: generated.line,
            column: generated.column
          },
          name: original.name
        });
      }
      lastOriginalSource = original.source;
      lastOriginalLine = original.line;
      lastOriginalColumn = original.column;
      lastOriginalName = original.name;
      sourceMappingActive = true;
    } else if (sourceMappingActive) {
      map.addMapping({
        generated: {
          line: generated.line,
          column: generated.column
        }
      });
      lastOriginalSource = null;
      sourceMappingActive = false;
    }
    for (var idx = 0, length = chunk.length; idx < length; idx++) {
      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {
        generated.line++;
        generated.column = 0;
        // Mappings end at eol
        if (idx + 1 === length) {
          lastOriginalSource = null;
          sourceMappingActive = false;
        } else if (sourceMappingActive) {
          map.addMapping({
            source: original.source,
            original: {
              line: original.line,
              column: original.column
            },
            generated: {
              line: generated.line,
              column: generated.column
            },
            name: original.name
          });
        }
      } else {
        generated.column++;
      }
    }
  });
  this.walkSourceContents(function (sourceFile, sourceContent) {
    map.setSourceContent(sourceFile, sourceContent);
  });

  return { code: generated.code, map: map };
};

exports.SourceNode = SourceNode;


/***/ }),
/* 115 */
/***/ (function(module, exports) {

var toString = Object.prototype.toString

var isModern = (
  typeof Buffer.alloc === 'function' &&
  typeof Buffer.allocUnsafe === 'function' &&
  typeof Buffer.from === 'function'
)

function isArrayBuffer (input) {
  return toString.call(input).slice(8, -1) === 'ArrayBuffer'
}

function fromArrayBuffer (obj, byteOffset, length) {
  byteOffset >>>= 0

  var maxLength = obj.byteLength - byteOffset

  if (maxLength < 0) {
    throw new RangeError("'offset' is out of bounds")
  }

  if (length === undefined) {
    length = maxLength
  } else {
    length >>>= 0

    if (length > maxLength) {
      throw new RangeError("'length' is out of bounds")
    }
  }

  return isModern
    ? Buffer.from(obj.slice(byteOffset, byteOffset + length))
    : new Buffer(new Uint8Array(obj.slice(byteOffset, byteOffset + length)))
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  return isModern
    ? Buffer.from(string, encoding)
    : new Buffer(string, encoding)
}

function bufferFrom (value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (isArrayBuffer(value)) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  return isModern
    ? Buffer.from(value)
    : new Buffer(value)
}

module.exports = bufferFrom


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

const is = __webpack_require__(117);

/**
 * Parse x-forwarded-for headers.
 *
 * @param {string} value - The value to be parsed.
 * @return {string|null} First known IP address, if any.
 */
function getClientIpFromXForwardedFor(value) {
    if (!is.existy(value)) {
        return null;
    }

    if (is.not.string(value)) {
        throw new TypeError(`Expected a string, got "${typeof value}"`);
    }

    // x-forwarded-for may return multiple IP addresses in the format:
    // "client IP, proxy 1 IP, proxy 2 IP"
    // Therefore, the right-most IP address is the IP address of the most recent proxy
    // and the left-most IP address is the IP address of the originating client.
    // source: http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/x-forwarded-headers.html
    // Azure Web App's also adds a port for some reason, so we'll only use the first part (the IP)
    const forwardedIps = value.split(',').map((e) => {
        const ip = e.trim();
        if (ip.includes(':')) {
            const splitted = ip.split(':');
            // make sure we only use this if it's ipv4 (ip:port)
            if (splitted.length === 2) {
                return splitted[0];
            }
        }
        return ip;
    });

    // Sometimes IP addresses in this header can be 'unknown' (http://stackoverflow.com/a/11285650).
    // Therefore taking the left-most IP address that is not unknown
    // A Squid configuration directive can also set the value to "unknown" (http://www.squid-cache.org/Doc/config/forwarded_for/)
    return forwardedIps.find(is.ip);
}

/**
 * Determine client IP address.
 *
 * @param req
 * @returns {string} ip - The IP address if known, defaulting to empty string if unknown.
 */
function getClientIp(req) {
    // Server is probably behind a proxy.
    if (req.headers) {
        // Standard headers used by Amazon EC2, Heroku, and others.
        if (is.ip(req.headers['x-client-ip'])) {
            return req.headers['x-client-ip'];
        }

        // Load-balancers (AWS ELB) or proxies.
        const xForwardedFor = getClientIpFromXForwardedFor(req.headers['x-forwarded-for']);
        if (is.ip(xForwardedFor)) {
            return xForwardedFor;
        }

        // Cloudflare.
        // @see https://support.cloudflare.com/hc/en-us/articles/200170986-How-does-Cloudflare-handle-HTTP-Request-headers-
        // CF-Connecting-IP - applied to every request to the origin.
        if (is.ip(req.headers['cf-connecting-ip'])) {
            return req.headers['cf-connecting-ip'];
        }

        // Akamai and Cloudflare: True-Client-IP.
        if (is.ip(req.headers['true-client-ip'])) {
            return req.headers['true-client-ip'];
        }

        // Default nginx proxy/fcgi; alternative to x-forwarded-for, used by some proxies.
        if (is.ip(req.headers['x-real-ip'])) {
            return req.headers['x-real-ip'];
        }

        // (Rackspace LB and Riverbed's Stingray)
        // http://www.rackspace.com/knowledge_center/article/controlling-access-to-linux-cloud-sites-based-on-the-client-ip-address
        // https://splash.riverbed.com/docs/DOC-1926
        if (is.ip(req.headers['x-cluster-client-ip'])) {
            return req.headers['x-cluster-client-ip'];
        }

        if (is.ip(req.headers['x-forwarded'])) {
            return req.headers['x-forwarded'];
        }

        if (is.ip(req.headers['forwarded-for'])) {
            return req.headers['forwarded-for'];
        }

        if (is.ip(req.headers.forwarded)) {
            return req.headers.forwarded;
        }
    }

    // Remote address checks.
    if (is.existy(req.connection)) {
        if (is.ip(req.connection.remoteAddress)) {
            return req.connection.remoteAddress;
        }
        if (is.existy(req.connection.socket) && is.ip(req.connection.socket.remoteAddress)) {
            return req.connection.socket.remoteAddress;
        }
    }

    if (is.existy(req.socket) && is.ip(req.socket.remoteAddress)) {
        return req.socket.remoteAddress;
    }

    if (is.existy(req.info) && is.ip(req.info.remoteAddress)) {
        return req.info.remoteAddress;
    }

    return null;
}

/**
 * Expose request IP as a middleware.
 *
 * @param {object} [options] - Configuration.
 * @param {string} [options.attributeName] - Name of attribute to augment request object with.
 * @return {*}
 */
function mw(options) {
    // Defaults.
    const configuration = is.not.existy(options) ? {} : options;

    // Validation.
    if (is.not.object(configuration)) {
        throw new TypeError('Options must be an object!');
    }

    const attributeName = configuration.attributeName || 'clientIp';
    return (req, res, next) => {
        req[attributeName] = getClientIp(req); // eslint-disable-line no-param-reassign
        next();
    };
}

module.exports = {
    getClientIpFromXForwardedFor,
    getClientIp,
    mw,
};


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * is.js 0.8.0
 * Author: Aras Atasaygin
 */

// AMD with global, Node, or global
;(function(root, factory) {    // eslint-disable-line no-extra-semi
    if (true) {
        // AMD. Register as an anonymous module.
        !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
            // Also create a global in case some scripts
            // that are loaded still are looking for
            // a global even when an AMD loader is in use.
            return (root.is = factory());
        }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else {}
}(this, function() {

    // Baseline
    /* -------------------------------------------------------------------------- */

    // define 'is' object and current version
    var is = {};
    is.VERSION = '0.8.0';

    // define interfaces
    is.not = {};
    is.all = {};
    is.any = {};

    // cache some methods to call later on
    var toString = Object.prototype.toString;
    var slice = Array.prototype.slice;
    var hasOwnProperty = Object.prototype.hasOwnProperty;

    // helper function which reverses the sense of predicate result
    function not(func) {
        return function() {
            return !func.apply(null, slice.call(arguments));
        };
    }

    // helper function which call predicate function per parameter and return true if all pass
    function all(func) {
        return function() {
            var params = getParams(arguments);
            var length = params.length;
            for (var i = 0; i < length; i++) {
                if (!func.call(null, params[i])) {
                    return false;
                }
            }
            return true;
        };
    }

    // helper function which call predicate function per parameter and return true if any pass
    function any(func) {
        return function() {
            var params = getParams(arguments);
            var length = params.length;
            for (var i = 0; i < length; i++) {
                if (func.call(null, params[i])) {
                    return true;
                }
            }
            return false;
        };
    }

    // build a 'comparator' object for various comparison checks
    var comparator = {
        '<': function(a, b) { return a < b; },
        '<=': function(a, b) { return a <= b; },
        '>': function(a, b) { return a > b; },
        '>=': function(a, b) { return a >= b; }
    }

    // helper function which compares a version to a range
    function compareVersion(version, range) {
        var string = (range + '');
        var n = +(string.match(/\d+/) || NaN);
        var op = string.match(/^[<>]=?|/)[0];
        return comparator[op] ? comparator[op](version, n) : (version == n || n !== n);
    }

    // helper function which extracts params from arguments
    function getParams(args) {
        var params = slice.call(args);
        var length = params.length;
        if (length === 1 && is.array(params[0])) {    // support array
            params = params[0];
        }
        return params;
    }

    // Type checks
    /* -------------------------------------------------------------------------- */

    // is a given value Arguments?
    is.arguments = function(value) {    // fallback check is for IE
        return toString.call(value) === '[object Arguments]' ||
            (value != null && typeof value === 'object' && 'callee' in value);
    };

    // is a given value Array?
    is.array = Array.isArray || function(value) {    // check native isArray first
        return toString.call(value) === '[object Array]';
    };

    // is a given value Boolean?
    is.boolean = function(value) {
        return value === true || value === false || toString.call(value) === '[object Boolean]';
    };

    // is a given value Char?
    is.char = function(value) {
        return is.string(value) && value.length === 1;
    };

    // is a given value Date Object?
    is.date = function(value) {
        return toString.call(value) === '[object Date]';
    };

    // is a given object a DOM node?
    is.domNode = function(object) {
        return is.object(object) && object.nodeType > 0;
    };

    // is a given value Error object?
    is.error = function(value) {
        return toString.call(value) === '[object Error]';
    };

    // is a given value function?
    is['function'] = function(value) {    // fallback check is for IE
        return toString.call(value) === '[object Function]' || typeof value === 'function';
    };

    // is given value a pure JSON object?
    is.json = function(value) {
        return toString.call(value) === '[object Object]';
    };

    // is a given value NaN?
    is.nan = function(value) {    // NaN is number :) Also it is the only value which does not equal itself
        return value !== value;
    };

    // is a given value null?
    is['null'] = function(value) {
        return value === null;
    };

    // is a given value number?
    is.number = function(value) {
        return is.not.nan(value) && toString.call(value) === '[object Number]';
    };

    // is a given value object?
    is.object = function(value) {
        return Object(value) === value;
    };

    // is a given value RegExp?
    is.regexp = function(value) {
        return toString.call(value) === '[object RegExp]';
    };

    // are given values same type?
    // prevent NaN, Number same type check
    is.sameType = function(value, other) {
        var tag = toString.call(value);
        if (tag !== toString.call(other)) {
            return false;
        }
        if (tag === '[object Number]') {
            return !is.any.nan(value, other) || is.all.nan(value, other);
        }
        return true;
    };
    // sameType method does not support 'all' and 'any' interfaces
    is.sameType.api = ['not'];

    // is a given value String?
    is.string = function(value) {
        return toString.call(value) === '[object String]';
    };

    // is a given value undefined?
    is.undefined = function(value) {
        return value === void 0;
    };

    // is a given value window?
    // setInterval method is only available for window object
    is.windowObject = function(value) {
        return value != null && typeof value === 'object' && 'setInterval' in value;
    };

    // Presence checks
    /* -------------------------------------------------------------------------- */

    //is a given value empty? Objects, arrays, strings
    is.empty = function(value) {
        if (is.object(value)) {
            var length = Object.getOwnPropertyNames(value).length;
            if (length === 0 || (length === 1 && is.array(value)) ||
                    (length === 2 && is.arguments(value))) {
                return true;
            }
            return false;
        }
        return value === '';
    };

    // is a given value existy?
    is.existy = function(value) {
        return value != null;
    };

    // is a given value falsy?
    is.falsy = function(value) {
        return !value;
    };

    // is a given value truthy?
    is.truthy = not(is.falsy);

    // Arithmetic checks
    /* -------------------------------------------------------------------------- */

    // is a given number above minimum parameter?
    is.above = function(n, min) {
        return is.all.number(n, min) && n > min;
    };
    // above method does not support 'all' and 'any' interfaces
    is.above.api = ['not'];

    // is a given number decimal?
    is.decimal = function(n) {
        return is.number(n) && n % 1 !== 0;
    };

    // are given values equal? supports numbers, strings, regexes, booleans
    // TODO: Add object and array support
    is.equal = function(value, other) {
        // check 0 and -0 equity with Infinity and -Infinity
        if (is.all.number(value, other)) {
            return value === other && 1 / value === 1 / other;
        }
        // check regexes as strings too
        if (is.all.string(value, other) || is.all.regexp(value, other)) {
            return '' + value === '' + other;
        }
        if (is.all.boolean(value, other)) {
            return value === other;
        }
        return false;
    };
    // equal method does not support 'all' and 'any' interfaces
    is.equal.api = ['not'];

    // is a given number even?
    is.even = function(n) {
        return is.number(n) && n % 2 === 0;
    };

    // is a given number finite?
    is.finite = isFinite || function(n) {
        return is.not.infinite(n) && is.not.nan(n);
    };

    // is a given number infinite?
    is.infinite = function(n) {
        return n === Infinity || n === -Infinity;
    };

    // is a given number integer?
    is.integer = function(n) {
        return is.number(n) && n % 1 === 0;
    };

    // is a given number negative?
    is.negative = function(n) {
        return is.number(n) && n < 0;
    };

    // is a given number odd?
    is.odd = function(n) {
        return is.number(n) && n % 2 === 1;
    };

    // is a given number positive?
    is.positive = function(n) {
        return is.number(n) && n > 0;
    };

    // is a given number above maximum parameter?
    is.under = function(n, max) {
        return is.all.number(n, max) && n < max;
    };
    // least method does not support 'all' and 'any' interfaces
    is.under.api = ['not'];

    // is a given number within minimum and maximum parameters?
    is.within = function(n, min, max) {
        return is.all.number(n, min, max) && n > min && n < max;
    };
    // within method does not support 'all' and 'any' interfaces
    is.within.api = ['not'];

    // Regexp checks
    /* -------------------------------------------------------------------------- */
    // Steven Levithan, Jan Goyvaerts: Regular Expressions Cookbook
    // Scott Gonzalez: Email address validation

    // dateString match m/d/yy and mm/dd/yyyy, allowing any combination of one or two digits for the day and month, and two or four digits for the year
    // eppPhone match extensible provisioning protocol format
    // nanpPhone match north american number plan format
    // time match hours, minutes, and seconds, 24-hour clock
    var regexes = {
        affirmative: /^(?:1|t(?:rue)?|y(?:es)?|ok(?:ay)?)$/,
        alphaNumeric: /^[A-Za-z0-9]+$/,
        caPostalCode: /^(?!.*[DFIOQU])[A-VXY][0-9][A-Z]\s?[0-9][A-Z][0-9]$/,
        creditCard: /^(?:(4[0-9]{12}(?:[0-9]{3})?)|(5[1-5][0-9]{14})|(6(?:011|5[0-9]{2})[0-9]{12})|(3[47][0-9]{13})|(3(?:0[0-5]|[68][0-9])[0-9]{11})|((?:2131|1800|35[0-9]{3})[0-9]{11}))$/,
        dateString: /^(1[0-2]|0?[1-9])([\/-])(3[01]|[12][0-9]|0?[1-9])(?:\2)(?:[0-9]{2})?[0-9]{2}$/,
        email: /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i, // eslint-disable-line no-control-regex
        eppPhone: /^\+[0-9]{1,3}\.[0-9]{4,14}(?:x.+)?$/,
        hexadecimal: /^(?:0x)?[0-9a-fA-F]+$/,
        hexColor: /^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$/,
        ipv4: /^(?:(?:\d|[1-9]\d|1\d{2}|2[0-4]\d|25[0-5])\.){3}(?:\d|[1-9]\d|1\d{2}|2[0-4]\d|25[0-5])$/,
        ipv6: /^((?=.*::)(?!.*::.+::)(::)?([\dA-F]{1,4}:(:|\b)|){5}|([\dA-F]{1,4}:){6})((([\dA-F]{1,4}((?!\3)::|:\b|$))|(?!\2\3)){2}|(((2[0-4]|1\d|[1-9])?\d|25[0-5])\.?\b){4})$/i,
        nanpPhone: /^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/,
        socialSecurityNumber: /^(?!000|666)[0-8][0-9]{2}-?(?!00)[0-9]{2}-?(?!0000)[0-9]{4}$/,
        timeString: /^(2[0-3]|[01]?[0-9]):([0-5]?[0-9]):([0-5]?[0-9])$/,
        ukPostCode: /^[A-Z]{1,2}[0-9RCHNQ][0-9A-Z]?\s?[0-9][ABD-HJLNP-UW-Z]{2}$|^[A-Z]{2}-?[0-9]{4}$/,
        url: /^(?:(?:https?|ftp):\/\/)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/\S*)?$/i,
        usZipCode: /^[0-9]{5}(?:-[0-9]{4})?$/
    };

    function regexpCheck(regexp, regexes) {
        is[regexp] = function(value) {
            return regexes[regexp].test(value);
        };
    }

    // create regexp checks methods from 'regexes' object
    for (var regexp in regexes) {
        if (regexes.hasOwnProperty(regexp)) {
            regexpCheck(regexp, regexes);
        }
    }

    // simplify IP checks by calling the regex helpers for IPv4 and IPv6
    is.ip = function(value) {
        return is.ipv4(value) || is.ipv6(value);
    };

    // String checks
    /* -------------------------------------------------------------------------- */

    // is a given string or sentence capitalized?
    is.capitalized = function(string) {
        if (is.not.string(string)) {
            return false;
        }
        var words = string.split(' ');
        for (var i = 0; i < words.length; i++) {
            var word = words[i];
            if (word.length) {
                var chr = word.charAt(0);
                if (chr !== chr.toUpperCase()) {
                    return false;
                }
            }
        }
        return true;
    };

    // is string end with a given target parameter?
    is.endWith = function(string, target) {
        if (is.not.string(string)) {
            return false;
        }
        target += '';
        var position = string.length - target.length;
        return position >= 0 && string.indexOf(target, position) === position;
    };
    // endWith method does not support 'all' and 'any' interfaces
    is.endWith.api = ['not'];

    // is a given string include parameter target?
    is.include = function(string, target) {
        return string.indexOf(target) > -1;
    };
    // include method does not support 'all' and 'any' interfaces
    is.include.api = ['not'];

    // is a given string all lowercase?
    is.lowerCase = function(string) {
        return is.string(string) && string === string.toLowerCase();
    };

    // is a given string palindrome?
    is.palindrome = function(string) {
        if (is.not.string(string)) {
            return false;
        }
        string = string.replace(/[^a-zA-Z0-9]+/g, '').toLowerCase();
        var length = string.length - 1;
        for (var i = 0, half = Math.floor(length / 2); i <= half; i++) {
            if (string.charAt(i) !== string.charAt(length - i)) {
                return false;
            }
        }
        return true;
    };

    // is a given value space?
    // horizantal tab: 9, line feed: 10, vertical tab: 11, form feed: 12, carriage return: 13, space: 32
    is.space = function(value) {
        if (is.not.char(value)) {
            return false;
        }
        var charCode = value.charCodeAt(0);
        return (charCode > 8 && charCode < 14) || charCode === 32;
    };

    // is string start with a given target parameter?
    is.startWith = function(string, target) {
        return is.string(string) && string.indexOf(target) === 0;
    };
    // startWith method does not support 'all' and 'any' interfaces
    is.startWith.api = ['not'];

    // is a given string all uppercase?
    is.upperCase = function(string) {
        return is.string(string) && string === string.toUpperCase();
    };

    // Time checks
    /* -------------------------------------------------------------------------- */

    var days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];
    var months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];

    // is a given dates day equal given day parameter?
    is.day = function(date, day) {
        return is.date(date) && day.toLowerCase() === days[date.getDay()];
    };
    // day method does not support 'all' and 'any' interfaces
    is.day.api = ['not'];

    // is a given date in daylight saving time?
    is.dayLightSavingTime = function(date) {
        var january = new Date(date.getFullYear(), 0, 1);
        var july = new Date(date.getFullYear(), 6, 1);
        var stdTimezoneOffset = Math.max(january.getTimezoneOffset(), july.getTimezoneOffset());
        return date.getTimezoneOffset() < stdTimezoneOffset;
    };

    // is a given date future?
    is.future = function(date) {
        var now = new Date();
        return is.date(date) && date.getTime() > now.getTime();
    };

    // is date within given range?
    is.inDateRange = function(date, start, end) {
        if (is.not.date(date) || is.not.date(start) || is.not.date(end)) {
            return false;
        }
        var stamp = date.getTime();
        return stamp > start.getTime() && stamp < end.getTime();
    };
    // inDateRange method does not support 'all' and 'any' interfaces
    is.inDateRange.api = ['not'];

    // is a given date in last month range?
    is.inLastMonth = function(date) {
        return is.inDateRange(date, new Date(new Date().setMonth(new Date().getMonth() - 1)), new Date());
    };

    // is a given date in last week range?
    is.inLastWeek = function(date) {
        return is.inDateRange(date, new Date(new Date().setDate(new Date().getDate() - 7)), new Date());
    };

    // is a given date in last year range?
    is.inLastYear = function(date) {
        return is.inDateRange(date, new Date(new Date().setFullYear(new Date().getFullYear() - 1)), new Date());
    };

    // is a given date in next month range?
    is.inNextMonth = function(date) {
        return is.inDateRange(date, new Date(), new Date(new Date().setMonth(new Date().getMonth() + 1)));
    };

    // is a given date in next week range?
    is.inNextWeek = function(date) {
        return is.inDateRange(date, new Date(), new Date(new Date().setDate(new Date().getDate() + 7)));
    };

    // is a given date in next year range?
    is.inNextYear = function(date) {
        return is.inDateRange(date, new Date(), new Date(new Date().setFullYear(new Date().getFullYear() + 1)));
    };

    // is the given year a leap year?
    is.leapYear = function(year) {
        return is.number(year) && ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0);
    };

    // is a given dates month equal given month parameter?
    is.month = function(date, month) {
        return is.date(date) && month.toLowerCase() === months[date.getMonth()];
    };
    // month method does not support 'all' and 'any' interfaces
    is.month.api = ['not'];

    // is a given date past?
    is.past = function(date) {
        var now = new Date();
        return is.date(date) && date.getTime() < now.getTime();
    };

    // is a given date in the parameter quarter?
    is.quarterOfYear = function(date, quarter) {
        return is.date(date) && is.number(quarter) && quarter === Math.floor((date.getMonth() + 3) / 3);
    };
    // quarterOfYear method does not support 'all' and 'any' interfaces
    is.quarterOfYear.api = ['not'];

    // is a given date indicate today?
    is.today = function(date) {
        var now = new Date();
        var todayString = now.toDateString();
        return is.date(date) && date.toDateString() === todayString;
    };

    // is a given date indicate tomorrow?
    is.tomorrow = function(date) {
        var now = new Date();
        var tomorrowString = new Date(now.setDate(now.getDate() + 1)).toDateString();
        return is.date(date) && date.toDateString() === tomorrowString;
    };

    // is a given date weekend?
    // 6: Saturday, 0: Sunday
    is.weekend = function(date) {
        return is.date(date) && (date.getDay() === 6 || date.getDay() === 0);
    };

    // is a given date weekday?
    is.weekday = not(is.weekend);

    // is a given dates year equal given year parameter?
    is.year = function(date, year) {
        return is.date(date) && is.number(year) && year === date.getFullYear();
    };
    // year method does not support 'all' and 'any' interfaces
    is.year.api = ['not'];

    // is a given date indicate yesterday?
    is.yesterday = function(date) {
        var now = new Date();
        var yesterdayString = new Date(now.setDate(now.getDate() - 1)).toDateString();
        return is.date(date) && date.toDateString() === yesterdayString;
    };

    // Environment checks
    /* -------------------------------------------------------------------------- */

    var freeGlobal = is.windowObject(typeof global == 'object' && global) && global;
    var freeSelf = is.windowObject(typeof self == 'object' && self) && self;
    var thisGlobal = is.windowObject(typeof this == 'object' && this) && this;
    var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();

    var document = freeSelf && freeSelf.document;
    var previousIs = root.is;

    // store navigator properties to use later
    var navigator = freeSelf && freeSelf.navigator;
    var appVersion = (navigator && navigator.appVersion || '').toLowerCase();
    var userAgent = (navigator && navigator.userAgent || '').toLowerCase();
    var vendor = (navigator && navigator.vendor || '').toLowerCase();

    // is current device android?
    is.android = function() {
        return /android/.test(userAgent);
    };
    // android method does not support 'all' and 'any' interfaces
    is.android.api = ['not'];

    // is current device android phone?
    is.androidPhone = function() {
        return /android/.test(userAgent) && /mobile/.test(userAgent);
    };
    // androidPhone method does not support 'all' and 'any' interfaces
    is.androidPhone.api = ['not'];

    // is current device android tablet?
    is.androidTablet = function() {
        return /android/.test(userAgent) && !/mobile/.test(userAgent);
    };
    // androidTablet method does not support 'all' and 'any' interfaces
    is.androidTablet.api = ['not'];

    // is current device blackberry?
    is.blackberry = function() {
        return /blackberry/.test(userAgent) || /bb10/.test(userAgent);
    };
    // blackberry method does not support 'all' and 'any' interfaces
    is.blackberry.api = ['not'];

    // is current browser chrome?
    // parameter is optional
    is.chrome = function(range) {
        var match = /google inc/.test(vendor) ? userAgent.match(/(?:chrome|crios)\/(\d+)/) : null;
        return match !== null && compareVersion(match[1], range);
    };
    // chrome method does not support 'all' and 'any' interfaces
    is.chrome.api = ['not'];

    // is current device desktop?
    is.desktop = function() {
        return is.not.mobile() && is.not.tablet();
    };
    // desktop method does not support 'all' and 'any' interfaces
    is.desktop.api = ['not'];

    // is current browser edge?
    // parameter is optional
    is.edge = function(range) {
        var match = userAgent.match(/edge\/(\d+)/);
        return match !== null && compareVersion(match[1], range);
    };
    // edge method does not support 'all' and 'any' interfaces
    is.edge.api = ['not'];

    // is current browser firefox?
    // parameter is optional
    is.firefox = function(range) {
        var match = userAgent.match(/(?:firefox|fxios)\/(\d+)/);
        return match !== null && compareVersion(match[1], range);
    };
    // firefox method does not support 'all' and 'any' interfaces
    is.firefox.api = ['not'];

    // is current browser internet explorer?
    // parameter is optional
    is.ie = function(range) {
        var match = userAgent.match(/(?:msie |trident.+?; rv:)(\d+)/);
        return match !== null && compareVersion(match[1], range);
    };
    // ie method does not support 'all' and 'any' interfaces
    is.ie.api = ['not'];

    // is current device ios?
    is.ios = function() {
        return is.iphone() || is.ipad() || is.ipod();
    };
    // ios method does not support 'all' and 'any' interfaces
    is.ios.api = ['not'];

    // is current device ipad?
    // parameter is optional
    is.ipad = function(range) {
        var match = userAgent.match(/ipad.+?os (\d+)/);
        return match !== null && compareVersion(match[1], range);
    };
    // ipad method does not support 'all' and 'any' interfaces
    is.ipad.api = ['not'];

    // is current device iphone?
    // parameter is optional
    is.iphone = function(range) {
        // original iPhone doesn't have the os portion of the UA
        var match = userAgent.match(/iphone(?:.+?os (\d+))?/);
        return match !== null && compareVersion(match[1] || 1, range);
    };
    // iphone method does not support 'all' and 'any' interfaces
    is.iphone.api = ['not'];

    // is current device ipod?
    // parameter is optional
    is.ipod = function(range) {
        var match = userAgent.match(/ipod.+?os (\d+)/);
        return match !== null && compareVersion(match[1], range);
    };
    // ipod method does not support 'all' and 'any' interfaces
    is.ipod.api = ['not'];

    // is current operating system linux?
    is.linux = function() {
        return /linux/.test(appVersion);
    };
    // linux method does not support 'all' and 'any' interfaces
    is.linux.api = ['not'];

    // is current operating system mac?
    is.mac = function() {
        return /mac/.test(appVersion);
    };
    // mac method does not support 'all' and 'any' interfaces
    is.mac.api = ['not'];

    // is current device mobile?
    is.mobile = function() {
        return is.iphone() || is.ipod() || is.androidPhone() || is.blackberry() || is.windowsPhone();
    };
    // mobile method does not support 'all' and 'any' interfaces
    is.mobile.api = ['not'];

    // is current state offline?
    is.offline = not(is.online);
    // offline method does not support 'all' and 'any' interfaces
    is.offline.api = ['not'];

    // is current state online?
    is.online = function() {
        return !navigator || navigator.onLine === true;
    };
    // online method does not support 'all' and 'any' interfaces
    is.online.api = ['not'];

    // is current browser opera?
    // parameter is optional
    is.opera = function(range) {
        var match = userAgent.match(/(?:^opera.+?version|opr)\/(\d+)/);
        return match !== null && compareVersion(match[1], range);
    };
    // opera method does not support 'all' and 'any' interfaces
    is.opera.api = ['not'];

    // is current browser phantomjs?
    // parameter is optional
    is.phantom = function(range) {
        var match = userAgent.match(/phantomjs\/(\d+)/);
        return match !== null && compareVersion(match[1], range);
    };
    // phantom method does not support 'all' and 'any' interfaces
    is.phantom.api = ['not'];

    // is current browser safari?
    // parameter is optional
    is.safari = function(range) {
        var match = userAgent.match(/version\/(\d+).+?safari/);
        return match !== null && compareVersion(match[1], range);
    };
    // safari method does not support 'all' and 'any' interfaces
    is.safari.api = ['not'];

    // is current device tablet?
    is.tablet = function() {
        return is.ipad() || is.androidTablet() || is.windowsTablet();
    };
    // tablet method does not support 'all' and 'any' interfaces
    is.tablet.api = ['not'];

    // is current device supports touch?
    is.touchDevice = function() {
        return !!document && ('ontouchstart' in freeSelf ||
            ('DocumentTouch' in freeSelf && document instanceof DocumentTouch));
    };
    // touchDevice method does not support 'all' and 'any' interfaces
    is.touchDevice.api = ['not'];

    // is current operating system windows?
    is.windows = function() {
        return /win/.test(appVersion);
    };
    // windows method does not support 'all' and 'any' interfaces
    is.windows.api = ['not'];

    // is current device windows phone?
    is.windowsPhone = function() {
        return is.windows() && /phone/.test(userAgent);
    };
    // windowsPhone method does not support 'all' and 'any' interfaces
    is.windowsPhone.api = ['not'];

    // is current device windows tablet?
    is.windowsTablet = function() {
        return is.windows() && is.not.windowsPhone() && /touch/.test(userAgent);
    };
    // windowsTablet method does not support 'all' and 'any' interfaces
    is.windowsTablet.api = ['not'];

    // Object checks
    /* -------------------------------------------------------------------------- */

    // has a given object got parameterized count property?
    is.propertyCount = function(object, count) {
        if (is.not.object(object) || is.not.number(count)) {
            return false;
        }
        var n = 0;
        for (var property in object) {
            if (hasOwnProperty.call(object, property) && ++n > count) {
                return false;
            }
        }
        return n === count;
    };
    // propertyCount method does not support 'all' and 'any' interfaces
    is.propertyCount.api = ['not'];

    // is given object has parameterized property?
    is.propertyDefined = function(object, property) {
        return is.object(object) && is.string(property) && property in object;
    };
    // propertyDefined method does not support 'all' and 'any' interfaces
    is.propertyDefined.api = ['not'];

    // Array checks
    /* -------------------------------------------------------------------------- */

    // is a given item in an array?
    is.inArray = function(value, array) {
        if (is.not.array(array)) {
            return false;
        }
        for (var i = 0; i < array.length; i++) {
            if (array[i] === value) {
                return true;
            }
        }
        return false;
    };
    // inArray method does not support 'all' and 'any' interfaces
    is.inArray.api = ['not'];

    // is a given array sorted?
    is.sorted = function(array, sign) {
        if (is.not.array(array)) {
            return false;
        }
        var predicate = comparator[sign] || comparator['>='];
        for (var i = 1; i < array.length; i++) {
            if (!predicate(array[i], array[i - 1])) {
                return false;
            }
        }
        return true;
    };

    // API
    // Set 'not', 'all' and 'any' interfaces to methods based on their api property
    /* -------------------------------------------------------------------------- */

    function setInterfaces() {
        var options = is;
        for (var option in options) {
            if (hasOwnProperty.call(options, option) && is['function'](options[option])) {
                var interfaces = options[option].api || ['not', 'all', 'any'];
                for (var i = 0; i < interfaces.length; i++) {
                    if (interfaces[i] === 'not') {
                        is.not[option] = not(is[option]);
                    }
                    if (interfaces[i] === 'all') {
                        is.all[option] = all(is[option]);
                    }
                    if (interfaces[i] === 'any') {
                        is.any[option] = any(is[option]);
                    }
                }
            }
        }
    }
    setInterfaces();

    // Configuration methods
    // Intentionally added after setInterfaces function
    /* -------------------------------------------------------------------------- */

    // change namespace of library to prevent name collisions
    // var preferredName = is.setNamespace();
    // preferredName.odd(3);
    // => true
    is.setNamespace = function() {
        root.is = previousIs;
        return this;
    };

    // set optional regexes to methods
    is.setRegexp = function(regexp, name) {
        for (var r in regexes) {
            if (hasOwnProperty.call(regexes, r) && (name === r)) {
                regexes[r] = regexp;
            }
        }
    };

    return is;
}));


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

var _ = __webpack_require__(87);

function itemToPayload(item, options, callback) {
  var payloadOptions = options.payload || {};
  if (payloadOptions.body) {
    delete payloadOptions.body;
  }

  var data = _.merge(item.data, payloadOptions);
  if (item._isUncaught) {
    data._isUncaught = true;
  }
  if (item._originalArgs) {
    data._originalArgs = item._originalArgs;
  }
  callback(null, data);
}

function addTelemetryData(item, options, callback) {
  if (item.telemetryEvents) {
    _.set(item, 'data.body.telemetry', item.telemetryEvents);
  }
  callback(null, item);
}

function addMessageWithError(item, options, callback) {
  if (!item.message) {
    callback(null, item);
    return;
  }
  var tracePath = 'data.body.trace_chain.0';
  var trace = _.get(item, tracePath);
  if (!trace) {
    tracePath = 'data.body.trace';
    trace = _.get(item, tracePath);
  }
  if (trace) {
    if (!(trace.exception && trace.exception.description)) {
      _.set(item, tracePath+'.exception.description', item.message);
      callback(null, item);
      return;
    }
    var extra = _.get(item, tracePath+'.extra') || {};
    var newExtra =  _.merge(extra, {message: item.message});
    _.set(item, tracePath+'.extra', newExtra);
  }
  callback(null, item);
}

function userTransform(logger) {
  return function(item, options, callback) {
    var newItem = _.merge(item);
    try {
      if (_.isFunction(options.transform)) {
        options.transform(newItem.data, item);
      }
    } catch (e) {
      options.transform = null;
      logger.error('Error while calling custom transform() function. Removing custom transform().', e);
      callback(null, item);
      return;
    }
    callback(null, newItem);
  }
}

function addConfigToPayload(item, options, callback) {
  if (!options.sendConfig) {
    return callback(null, item);
  }
  var configKey = '_rollbarConfig';
  var custom = _.get(item, 'data.custom') || {};
  custom[configKey] = options;
  item.data.custom = custom;
  callback(null, item);
}

function addConfiguredOptions(item, options, callback) {
  delete options._configuredOptions.accessToken;
  item.data.notifier.configured_options = options._configuredOptions;
  callback(null, item);
}

function addDiagnosticKeys(item, options, callback) {
  var diagnostic = _.merge(item.notifier.client.notifier.diagnostic, item.diagnostic);

  if (_.get(item, 'err._isAnonymous')) {
    diagnostic.is_anonymous = true;
  }

  if (item.err) {
    try {
      diagnostic.raw_error = {
        message: item.err.message,
        name: item.err.name,
        constructor_name: item.err.constructor && item.err.constructor.name,
        filename: item.err.fileName,
        line: item.err.lineNumber,
        column: item.err.columnNumber,
        stack: item.err.stack
      };
    } catch (e) {
      diagnostic.raw_error = { failed: String(e) };
    }
  }

  item.data.notifier.diagnostic = _.merge(item.data.notifier.diagnostic, diagnostic);
  callback(null, item);
}

module.exports = {
  itemToPayload: itemToPayload,
  addTelemetryData: addTelemetryData,
  addMessageWithError: addMessageWithError,
  userTransform: userTransform,
  addConfigToPayload: addConfigToPayload,
  addConfiguredOptions: addConfiguredOptions,
  addDiagnosticKeys: addDiagnosticKeys
};


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

var _ = __webpack_require__(87);

function checkLevel(item, settings) {
  var level = item.level;
  var levelVal = _.LEVELS[level] || 0;
  var reportLevel = settings.reportLevel;
  var reportLevelVal = _.LEVELS[reportLevel] || 0;

  if (levelVal < reportLevelVal) {
    return false;
  }
  return true;
}

function userCheckIgnore(logger) {
  return function(item, settings) {
    var isUncaught = !!item._isUncaught;
    delete item._isUncaught;
    var args = item._originalArgs;
    delete item._originalArgs;
    try {
      if (_.isFunction(settings.onSendCallback)) {
        settings.onSendCallback(isUncaught, args, item);
      }
    } catch (e) {
      settings.onSendCallback = null;
      logger.error('Error while calling onSendCallback, removing', e);
    }
    try {
      if (_.isFunction(settings.checkIgnore) && settings.checkIgnore(isUncaught, args, item)) {
        return false;
      }
    } catch (e) {
      settings.checkIgnore = null;
      logger.error('Error while calling custom checkIgnore(), removing', e);
    }
    return true;
  }
}

function urlIsNotBlacklisted(logger) {
  return function(item, settings) {
    return !urlIsOnAList(item, settings, 'blacklist', logger);
  }
}

function urlIsWhitelisted(logger) {
  return function(item, settings) {
    return urlIsOnAList(item, settings, 'whitelist', logger);
  }
}

function matchFrames(trace, list, black) {
  if (!trace) { return !black }

  var frames = trace.frames;

  if (!frames || frames.length === 0) { return !black; }

  var frame, filename, url, urlRegex;
  var listLength = list.length;
  var frameLength = frames.length;
  for (var i = 0; i < frameLength; i++) {
    frame = frames[i];
    filename = frame.filename;

    if (!_.isType(filename, 'string')) { return !black; }

    for (var j = 0; j < listLength; j++) {
      url = list[j];
      urlRegex = new RegExp(url);

      if (urlRegex.test(filename)) {
        return true;
      }
    }
  }
  return false;
}

function urlIsOnAList(item, settings, whiteOrBlack, logger) {
  // whitelist is the default
  var black = false;
  if (whiteOrBlack === 'blacklist') {
    black = true;
  }

  var list, traces;
  try {
    list = black ? settings.hostBlackList : settings.hostWhiteList;
    traces = _.get(item, 'body.trace_chain') || [_.get(item, 'body.trace')];

    // These two checks are important to come first as they are defaults
    // in case the list is missing or the trace is missing or not well-formed
    if (!list || list.length === 0) {
      return !black;
    }
    if (traces.length === 0 || !traces[0]) {
      return !black;
    }

    var tracesLength = traces.length;
    for (var i = 0; i < tracesLength; i++) {
      if(matchFrames(traces[i], list, black)) {
        return true;
      }
    }
  } catch (e)
  /* istanbul ignore next */
  {
    if (black) {
      settings.hostBlackList = null;
    } else {
      settings.hostWhiteList = null;
    }
    var listName = black ? 'hostBlackList' : 'hostWhiteList';
    logger.error('Error while reading your configuration\'s ' + listName + ' option. Removing custom ' + listName + '.', e);
    return !black;
  }
  return false;
}

function messageIsIgnored(logger) {
  return function(item, settings) {
    var exceptionMessage, i, ignoredMessages,
        len, messageIsIgnored, rIgnoredMessage,
        body, traceMessage, bodyMessage;

    try {
      messageIsIgnored = false;
      ignoredMessages = settings.ignoredMessages;

      if (!ignoredMessages || ignoredMessages.length === 0) {
        return true;
      }

      body = item.body;
      traceMessage = _.get(body, 'trace.exception.message');
      bodyMessage = _.get(body, 'message.body');

      exceptionMessage = traceMessage || bodyMessage;

      if (!exceptionMessage){
        return true;
      }

      len = ignoredMessages.length;
      for (i = 0; i < len; i++) {
        rIgnoredMessage = new RegExp(ignoredMessages[i], 'gi');
        messageIsIgnored = rIgnoredMessage.test(exceptionMessage);

        if (messageIsIgnored) {
          break;
        }
      }
    } catch(e)
    /* istanbul ignore next */
    {
      settings.ignoredMessages = null;
      logger.error('Error while reading your configuration\'s ignoredMessages option. Removing custom ignoredMessages.');
    }

    return !messageIsIgnored;
  }
}

module.exports = {
  checkLevel: checkLevel,
  userCheckIgnore: userCheckIgnore,
  urlIsNotBlacklisted: urlIsNotBlacklisted,
  urlIsWhitelisted: urlIsWhitelisted,
  messageIsIgnored: messageIsIgnored
};


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const BaseStep = __webpack_require__(70);

module.exports = class KiteVsJedi extends BaseStep {
  start(state, install) {
    return new Promise((resolve, reject) => {
      install.on('did-pick-install', () => resolve());
      install.on('did-skip-install', () => install.destroy());
    });
  }
};


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {parseSetCookies, findCookie} = __webpack_require__(15);
const AccountManager = __webpack_require__(8);
const BaseStep = __webpack_require__(70);

module.exports = class Login extends BaseStep {
  start({account: {email}} = {}, install) {
    this.install = install;
    return new Promise((resolve, reject) => {
      this.subscriptions.add(install.on('did-submit-credentials', ({email, password}) =>
        resolve(this.onSubmit({email, password}))));

      this.subscriptions.add(install.on('did-click-back', () => {
        resolve({step: this.options.backStep, data: {error: null}});
      }));

      this.subscriptions.add(install.on('did-forgot-password', () => {
        AccountManager.resetPassword({email}).then(resp => {
          if (resp.statusCode === 200) {
            install.emit('did-reset-password', email);
          }
          return;
        });
      }));
    });
  }

  onSubmit(data) {
    this.install.updateState({error: null, account: data});
    return AccountManager.login(data)
    .then((resp) => {
      return {
        account: {
          sessionId: findCookie(parseSetCookies(resp.headers['set-cookie']), 'kite-session').Value,
        },
      };
    });
  }
};


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const BaseStep = __webpack_require__(70);
const {deepMerge} = __webpack_require__(15);

module.exports = class ParallelSteps extends BaseStep {
  constructor(steps, options) {
    super(options);
    this.steps = steps;
  }

  start(state, install) {
    return Promise.all(this.steps.map(step => step.start(state, install)))
    .then((results) => {
      return results.reduce((memo, o) => {
        return o ? deepMerge(memo, o) : memo;
      });
    });
  }

  getView() {
    return this.view || this.steps.map(s => s.view).filter(s => s)[0];
  }
};


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const BaseStep = __webpack_require__(70);

module.exports = class PassStep extends BaseStep {
  start(data) {
    return Promise.resolve(data);
  }
};


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const BaseStep = __webpack_require__(70);

module.exports = class VoidStep extends BaseStep {
  constructor(options, action) {
    super(options);
    this.action = action;
  }
  start() {
    this.action && this.action();
    return new Promise(() => {});
  }
};


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {CompositeDisposable} = __webpack_require__(2);
const path = __webpack_require__(27);
const Install = __webpack_require__(82);
const {logo} =  __webpack_require__(126);

const Metrics = __webpack_require__(61);

class InstallElement extends HTMLElement {
  static initClass() {
    const elementClass = document.registerElement('kite-atom-install', {
      prototype: this.prototype,
    });
    atom.themes.requireStylesheet(path.resolve(__dirname, '..', '..', '..', 'styles', 'install.less'));
    atom.views.addViewProvider(Install, model => {
      const element = new elementClass();
      element.setModel(model);
      return element;
    });
    return elementClass;
  }

  createdCallback() {
    this.classList.add('native-key-bindings');
    this.innerHTML = `
    <div class="install-wrapper">
      <div class="logo">${logo}</div>

      <div class="progress-indicators">
        <div class="download-kite invisible">
          <progress max='100' class="inline-block"></progress>
          <span class="inline-block">Downloading Kite</span>
        </div>
        <div class="install-kite hidden">
          <span class='loading loading-spinner-tiny inline-block'></span>
          <span class="inline-block">Installing Kite</span>
        </div>
        <div class="run-kite hidden">
          <span class='loading loading-spinner-tiny inline-block'></span>
          <span class="inline-block">Starting Kite</span>
        </div>
        <div class="authenticate-user hidden">
          <span class='loading loading-spinner-tiny inline-block'></span>
          <span class="inline-block">Authenticating your account</span>
        </div>
        <div class="install-plugin hidden">
          <span class='loading loading-spinner-tiny inline-block'></span>
          <span class="inline-block">Installing the Kite plugin</span>
        </div>
      </div>

      <div class="content"></div>
    </div>`;

    this.logo = this.querySelector('.logo');
    this.content = this.querySelector('.content');
    this.progress = this.querySelector('progress');
    this.downloadKite = this.querySelector('.download-kite');
    this.installKite = this.querySelector('.install-kite');
    this.runKite = this.querySelector('.run-kite');
    this.authenticateUser = this.querySelector('.authenticate-user');
    this.installPlugin = this.querySelector('.install-plugin');
    this.indicators = this.querySelector('.progress-indicators');
  }

  detachedCallback() {
    this.subscriptions && this.subscriptions.dispose();
    delete this.install;
    delete this.subscriptions;
  }

  setModel(install) {
    this.subscriptions = new CompositeDisposable();
    this.install = install;

    this.subscriptions.add(this.install.onDidChangeCurrentStep(() => {
      this.updateView();
    }));

    this.subscriptions.add(this.install.observeState(state => {
      if (typeof state.kiteLogoVisible !== 'undefined') {
        this.logo.classList.toggle('hidden', !state.kiteLogoVisible);
      }

      if (state.download) {
        if (state.download.done) {
          this.downloadKite.classList.add('hidden');
        } else {
          this.downloadKite.classList.remove('invisible');
        }

        if (state.download.ratio) {
          this.progress.value = Math.round(state.download.ratio * 100);
        }
      }

      if (state.install) {
        this.installKite.classList.toggle('hidden', state.install.done);
      }

      if (state.running) {
        this.runKite.classList.toggle('hidden', state.running.done);
      }

      if (state.authenticate) {
        this.authenticateUser.classList.toggle('hidden', state.authenticate.done);
      }

      if (state.plugin) {
        this.installPlugin.classList.toggle('hidden', state.plugin.done);
      }
    }));

    this.subscriptions.add(this.install.on('encountered-fatal-error', () => {
      this.indicators.classList.add('hidden');
    }));
  }

  getModel() {
    return this.install;
  }

  updateView() {
    if (this.currentView) { this.currentView.release(); }

    const view = this.install.getCurrentStepView();
    if (view) {
      if (this.content.children.length) {
        [].slice.call(this.content.children).forEach(n => this.content.removeChild(n));
      }
      this.content.appendChild(view);
      view.init(this.install);
      this.currentView = view;

      if (this.currentView.name) {
        Metrics.Tracker.trackEvent(`${ this.currentView.name }_shown`,
          this.install.state.error ? {error: this.install.state.error.message} : {});
      }
    }
  }
}

module.exports = InstallElement.initClass();


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

const fs = __webpack_require__(28);
const path = __webpack_require__(27);

const logo = String(fs.readFileSync(path.resolve(__dirname, '..', '..', '..', 'assets', 'logo.svg')));

const logoSmall = String(fs.readFileSync(path.resolve(__dirname, '..', '..', '..', 'assets', 'logo-small.svg')));

const screenshot = path.resolve(__dirname, '..', '..', '..', 'assets', 'plotscreenshot.png');

const demoVideo = path.resolve(__dirname, '..', '..', '..', 'assets', 'demo.mp4');

module.exports = {logo, logoSmall, screenshot, demoVideo};


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {CompositeDisposable} = __webpack_require__(2);
const {addDisposableEventListener} = __webpack_require__(128);

class InputEmailElement extends HTMLElement {
  constructor(name) {
    super();
    this.name = name;
    this.innerHTML = `
    <div>
      <p>Great! Create an account with your email address.</p>
    </div>
    <form novalidate>
      <input class="input-text" name="email" type="email"></input>
      <button class="btn btn-primary btn-block">Continue</button>
      <div class="status hidden"></div>
    </form>
    <center>
      <div class="dismiss secondary-actions">
        <a class="skip-email">Continue without email</a>
      </div>
    </center>

    `;
    this.form = this.querySelector('form');
    this.input = this.querySelector('input');
    this.submit = this.querySelector('button');
    this.status = this.querySelector('.status');
    this.skipButton = this.querySelector('a.skip-email');
  }

  get data() { return {email: this.input.value}; }

  release() {
    this.subscriptions && this.subscriptions.dispose();
    delete this.install;
    delete this.subscriptions;
  }

  init(install) {
    this.subscriptions = new CompositeDisposable();
    this.install = install;
    this.classList.remove('disabled');

    this.subscriptions.add(install.observeState(state => this.onStateChange(state)));

    this.subscriptions.add(addDisposableEventListener(this.form, 'submit', () => {
      this.hideError();
      this.classList.add('disabled');
      this.install.emit('did-submit-email', this.data);
    }));

    this.subscriptions.add(addDisposableEventListener(this.skipButton, 'click', () => {
      this.install.emit('did-skip-email', {skipped: true});
    }));
  }

  onStateChange(state) {
    this.input.value = state.account.email || '';
    if (state.error) {
      console.log(state.error);
      this.status.textContent = state.error.message;
      this.status.classList.remove('hidden');
    } else {
      this.hideError();
    }
  }

  hideError() {
    this.status.textContent = '';
    this.status.classList.add('hidden');
  }
}

customElements.define('kite-atom-input-email', InputEmailElement);

module.exports = InputEmailElement;


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {Disposable} = __webpack_require__(2);
const {spawnPromise} = __webpack_require__(15);

const AtomHelper = {
  get apm() {
    return atom.packages.getApmPath();
  },

  addDisposableEventListener(target, event, listener) {
    target.addEventListener(event, listener);
    return new Disposable(() => target.removeEventListener(event, listener));
  },

  isPackageInstalled: function() {
    return atom.packages.getAvailablePackageNames().includes('kite')
      ? Promise.resolve()
      : Promise.reject();
  },

  installPackage: function() {
    return this.apm && atom && !atom.packages.getAvailablePackageNames().includes('kite')
      ? spawnPromise(this.apm, ['install', 'kite'])
      : Promise.resolve();
  },

  activatePackage: function() {
    return atom && !atom.packages.getActivePackage('kite')
      ? atom.packages.activatePackage('kite')
      : Promise.resolve();
  },

  deactivatePackage: function() {
    if (!atom) {
      return false;
    }
    if (atom.packages.isPackageActive('kite')) {
      atom.packages.deactivatePackage('kite');
    }
    if (atom.packages.isPackageLoaded('kite')) {
      atom.packages.unloadPackage('kite');
    }
    return true;
  },

  enablePackage: function() {
    return atom ? atom.packages.enablePackage('kite') : null;
  },

  disablePackage: function() {
    return atom ? atom.packages.disablePackage('kite') : null;
  },

  refreshPackage: function() {
    if (!atom || !this.apm) {
      return null;
    }
    return new Promise((resolve, reject) => {
      this.deactivatePackage();
      var proc = this.installPackage();
      proc.on('close', (code) => {
        if (code) {
          reject(code);
        } else {
          this.activatePackage().then(() => {
            this.enablePackage();
          });
          resolve();
        }
      });
    });
  },
};

module.exports = AtomHelper;


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {screenshot} =  __webpack_require__(126);


class InstallWaitElement extends HTMLElement {
  constructor(name) {
    super();
    this.name = name;
    this.innerHTML = `
    <div class="welcome-to-kite">
      <div class="description">
        <div class="content">
          <p>Kite comes with a native desktop app called the Copilot which provides you with real time documentation as you code.</p>
          <p>When Kite for Atom is done installing, the Copilot will launch automatically and take you through the rest of the setup process.</p>
        </div>
        <div class="description-screenshot"><img src="${screenshot}"></div>
      </div>
      <p class="feedback">Send us feedback at <a href="mailto:feedback@kite.com">feedback@kite.com</a></p>
    </div>
    `;
  }

  init(install) {
    this.install = install;
    this.install.emit('did-skip-whitelist');
  }

  release() {}
}

customElements.define('kite-atom-install-wait', InstallWaitElement);

module.exports = InstallWaitElement;


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {logoSmall, screenshot} =  __webpack_require__(126);

class InstallEndElement extends HTMLElement {
  constructor(name) {
    super();
    this.name = name;
    this.innerHTML = `
    <div class="welcome-to-kite">
      <div class="welcome-title">
        <h3>Welcome to Kite!</h3>
        <div class="title-logo">${logoSmall}</div>
      </div>
      <div class="warning">
        <span class="icon">🎉</span>
        <span class="message">Kite is now integrated with Atom. You\'ll see your completions improve over the next few minutes as Kite analyzes your code.</span>
      </div>
      <div class="description">
        <div class="content">
          <p>Kite comes with a native desktop app called the Copilot which provides you with real time documentation as you code.</p>
          <p>When Kite for Atom is done installing, the Copilot will launch automatically and take you through the rest of the setup process.</p>
        </div>
        <div class="description-screenshot"><img src="${screenshot}"></div>
      </div>
      <p class="feedback">Send us feedback at <a href="mailto:feedback@kite.com">feedback@kite.com</a></p>
    </div>
    `;
  }

  init(install) {
    this.install = install;
    this.install.updateState({kiteLogoVisible: false});
  }

  release() {}
}

customElements.define('kite-atom-install-end', InstallEndElement);

module.exports = InstallEndElement;


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


class InstallErrorElement extends HTMLElement {
  constructor(name) {
    super();
    this.name = name;
  }

  init(install) {
    this.install = install;
    this.install.emit('encountered-fatal-error');
    this.innerHTML = `
    <div class="content">
      <p>
        We've encountered an error!
        Please email <a href="mailto:feedback@kite.com">feedback@kite.com</a>
        with the contents of the error message below to get help.
      </p>
    </div>
    <br>
    <div class="status">
      <h4>${install.state.error.message}</h4>
      <pre>${install.state.error.stack}</pre>
    </div>
    `;
  }

  release() {}
}

customElements.define('kite-atom-install-error', InstallErrorElement);

module.exports = InstallErrorElement;


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {CompositeDisposable} = __webpack_require__(2);
const {addDisposableEventListener} = __webpack_require__(128);

const {demoVideo} =  __webpack_require__(126);

class KiteVsJediElement extends HTMLElement {
  constructor(name) {
    super();
    this.name = name;
    this.innerHTML = `
    <h2><span class="icon">📦</span> autocomplete-python installed successfully</h2>
    <div id="kite" class="inset-panel kite-description">
      <h3>Level up your completions with Kite</h3>
      <div class="columns">
        <div class="body">
          <div class="summary">
            Kite is a native app that runs locally on your computer and uses machine learning to provide advanced completions
          </div>
          <ul class="features">
            <li class="feature icon icon-check">All the features of autocomplete-python and...</li>
            <li class="feature icon icon-check">1.5x more completions</li>
            <li class="feature icon icon-check">Completions ranked by code context</li>
            <li class="feature icon icon-check">Full line of code completions</li>
            <li class="feature icon icon-check">100% local - no internet connection required</li>
            <li class="feature icon icon-check">100% free to use</li>
          </ul>
          <div class="more">
            <a href="https://kite.com">Learn more</a>
          </div>
        </div>
        <div class="actions">
          <video autoplay loop playsinline>
            <source src="${demoVideo}" type="video/mp4">
          </video>
          <div class="cta-container">
            <center>
              <button class="btn btn-primary">
                <span class="icon icon-cloud-download"></span>Add Kite
              </button>
            </center>
          </div>
        </div>
      </div>
    </div>
    <div class="dismiss">
      <a href="#">Dismiss</a>
    </div>
    `;

    this.skipButton = this.querySelector('.dismiss a');
    this.nextButton = this.querySelector('#kite .actions .cta-container .btn');
  }

  init(install) {
    this.install = install;
    this.subscriptions = new CompositeDisposable();

    this.install.updateState({kiteLogoVisible: false});

    this.subscriptions.add(addDisposableEventListener(this.skipButton, 'click', () => {
      this.install.emit('did-skip-install');
    }));

    this.subscriptions.add(addDisposableEventListener(this.nextButton, 'click', () => {
      this.install.updateState({kiteLogoVisible: true});
      this.install.emit('did-pick-install');
    }));
  }

  release() {
    this.subscriptions && this.subscriptions.dispose();
    delete this.subscriptions;
  }
}

customElements.define('kite-atom-kite-vs-jedi', KiteVsJediElement);

module.exports = KiteVsJediElement;


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {CompositeDisposable} = __webpack_require__(2);
const {addDisposableEventListener} = __webpack_require__(128);

class LoginElement extends HTMLElement {
  constructor(name) {
    super();
    this.name = name;
    this.innerHTML = `
    <p>It seems like you already have a Kite account. Sign in with your login info.</p>
    <form novalidate>
      <input class='input-text' name="email" type="email"></input>
      <input class='input-text' name="password" type="password"></input>
      <button class="btn btn-primary btn-block" type="submit">Sign in</button>
      <div class="secondary-actions">
        <a class="back">Back</a>
        <a class="reset-password secondary-cta">Forgot password</a>
      </div>
      <div class="status hidden"></div>
    </form>
    `;

    this.form = this.querySelector('form');
    this.input = this.querySelector('input[type="email"]');
    this.password = this.querySelector('input[type="password"]');
    this.submit = this.querySelector('button[type="submit"]');
    this.backButton = this.querySelector('a.back');
    this.forgotPassword = this.querySelector('a.reset-password');
    this.status = this.querySelector('.status');
  }

  get data() {
    return {email: this.input.value, password: this.password.value};
  }

  release() {
    this.subscriptions && this.subscriptions.dispose();
    delete this.install;
    delete this.subscriptions;
  }

  init(install) {
    this.subscriptions = new CompositeDisposable();
    this.install = install;
    this.classList.remove('disabled');

    this.subscriptions.add(install.on('did-reset-password', email => {
      atom.notifications.addSuccess(
        `Instructions on how to reset your password should
         have been sent to ${email}`);
    }));

    this.subscriptions.add(addDisposableEventListener(this.form, 'submit', () => {
      this.classList.add('disabled');
      this.install.emit('did-submit-credentials', this.data);
    }));

    this.subscriptions.add(addDisposableEventListener(this.forgotPassword, 'click', () => {
      this.install.emit('did-forgot-password');
    }));

    this.subscriptions.add(addDisposableEventListener(this.backButton, 'click', () => {
      this.install.emit('did-click-back');
    }));

    this.subscriptions.add(install.observeState(state => this.onStateChange(state)));
  }

  onStateChange(state) {
    if (state.account.email) {
      this.input.value = state.account.email;
    }

    if (state.account.password) {
      this.input.password = state.account.password;
    }

    if (state.error) {
      this.status.textContent = state.error.message;
      this.status.classList.remove('hidden');
    } else {
      this.hideError();
    }
  }

  hideError() {
    this.status.textContent = '';
    this.status.classList.add('hidden');
  }
}

customElements.define('kite-atom-login', LoginElement);

module.exports = LoginElement;


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {CompositeDisposable} = __webpack_require__(2);
const {addDisposableEventListener} = __webpack_require__(128);

class NotAdminElement extends HTMLElement {
  constructor(name) {
    super();
    this.name = name;
    this.innerHTML = `
    <div class="content">
      <p>It seems like you don't have administrator privileges. Please restart Atom as an administrator and try installing Kite again.</p>
      <p>You can also <a class="download-link" href="https://kite.com/download">manually install Kite</a>.</p>
      <p class="dismiss"><a class="dismiss-link" href="#">Don't show this again</a></p>
    </div>
    `;

    this.dismissButton = this.querySelector('.dismiss-link');
  }

  init(install) {
    this.install = install;
    this.subscriptions = new CompositeDisposable();

    this.subscriptions.add(addDisposableEventListener(this.dismissButton, 'click', () => {
      this.install.destroy();
      this.install.emit('not-admin-dismissed');
    }));

    this.install.emit('not-admin-shown');
  }

  release() {}
}

customElements.define('kite-atom-install-not-admin', NotAdminElement);

module.exports = NotAdminElement;


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const InstallError = __webpack_require__(131);
const {logo} = __webpack_require__(126);

class InstallErrorView extends HTMLElement {
  constructor(install) {
    super();
    this.name = 'kite_install_error_view';

    this.innerHTML = `<div class="install-wrapper">
      <div class="logo">${logo}</div>
      <div class="content">
      </div>  
    </div>`;

    let errorElement = new InstallError('kite_installer_install_error');
    this.querySelector('.content').appendChild(errorElement);
    errorElement.init(install);
  }

  // noinspection JSMethodCanBeStatic
  getTitle() {
    return 'Kite Install Error';
  }
}

customElements.define('kite-atom-install-error-view', InstallErrorView);

module.exports = InstallErrorView;


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const BaseStep = __webpack_require__(70);
const AtomHelper = __webpack_require__(128);
const Metrics = __webpack_require__(61);

module.exports = class InstallPlugin extends BaseStep {
  start(state, install) {
    install.updateState({plugin: {done: false}});
    return AtomHelper.installPackage()
    .then(() => new Promise((resolve) => {
      setTimeout(() => {
        AtomHelper.activatePackage();
        resolve();
      }, 200);
    }))
    .then(() => {
      Metrics.Tracker.trackEvent('kite_installer_kite_plugin_installed');
      install.updateState({plugin: {done: true}});
    });
  }
};


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


let os, path, Emitter, Logger, Errors, Metrics, promisifyReadResponse, localconfig, errors, flatten, compact, NodeClient, KiteAPI;

const ensureKiteDeps = () => {
  if (!KiteAPI) {
    ({
      Errors,
      Metrics
    } = __webpack_require__(7));
    KiteAPI = __webpack_require__(138);
    Logger = __webpack_require__(156);
    NodeClient = __webpack_require__(160);
    errors = Errors();
  }
};

const ensureUtils = () => {
  if (!promisifyReadResponse) {
    ({
      promisifyReadResponse,
      flatten,
      compact
    } = __webpack_require__(5));
  }
};

const ATTEMPTS = 30;
const INTERVAL = 2500;
const EXTENSIONS_BY_LANGUAGES = {
  python: ['py'],
  javascript: ['js']
};

class KiteApp {
  static get STATES() {
    ensureKiteDeps();
    return KiteAPI.STATES;
  }

  constructor(kite) {
    if (!Emitter) {
      ({
        Emitter
      } = __webpack_require__(2));
    }

    this.emitter = new Emitter();
    this.kite = kite;
  }

  onDidGetState(listener) {
    return this.emitter.on('did-get-state', listener);
  }

  onDidChangeState(listener) {
    return this.emitter.on('did-change-state', listener);
  }

  onKiteReady(listener) {
    return this.emitter.on('kite-ready', listener);
  }

  onWillDownload(listener) {
    return this.emitter.on('will-download', listener);
  }

  onDidDownload(listener) {
    return this.emitter.on('did-download', listener);
  }

  onDidFailDownload(listener) {
    return this.emitter.on('did-fail-download', listener);
  }

  onDidSkipInstall(listener) {
    return this.emitter.on('did-skip-install', listener);
  }

  onWillInstall(listener) {
    return this.emitter.on('will-install', listener);
  }

  onDidInstall(listener) {
    return this.emitter.on('did-install', listener);
  }

  onDidFailInstall(listener) {
    return this.emitter.on('did-fail-install', listener);
  }

  onWillStart(listener) {
    return this.emitter.on('will-start', listener);
  }

  onDidStart(listener) {
    return this.emitter.on('did-start', listener);
  }

  onDidFailStart(listener) {
    return this.emitter.on('did-fail-start', listener);
  }

  onDidShowLogin(listener) {
    return this.emitter.on('did-show-login', listener);
  }

  onDidSubmitLogin(listener) {
    return this.emitter.on('did-submit-login', listener);
  }

  onDidShowLoginError(listener) {
    return this.emitter.on('did-show-login-error', listener);
  }

  onDidShowSignupError(listener) {
    return this.emitter.on('did-show-signup-error', listener);
  }

  onDidCancelLogin(listener) {
    return this.emitter.on('did-cancel-login', listener);
  }

  onDidResetPassword(listener) {
    return this.emitter.on('did-reset-password', listener);
  }

  onWillAuthenticate(listener) {
    return this.emitter.on('will-authenticate', listener);
  }

  onDidAuthenticate(listener) {
    return this.emitter.on('did-authenticate', listener);
  }

  onDidFailAuthenticate(listener) {
    return this.emitter.on('did-fail-authenticate', listener);
  }

  onDidGetUnauthorized(listener) {
    return this.emitter.on('did-get-unauthorized', listener);
  }

  reset() {
    delete this.previousState;
    delete this.ready;
  }

  dispose() {
    this.emitter.dispose();
  }

  connect(src) {
    ensureKiteDeps();
    return KiteAPI.checkHealth().then(state => {
      if (state >= KiteAPI.STATES.INSTALLED) {
        localStorage.setItem('kite.wasInstalled', true);
      } //hack around false positive login notifications
      //basic idea is to create a 'canNotify' predicate based on the source of the connect
      //call and a comparison between a current polled state and a previous one


      let canNotify = false;

      if (state === KiteAPI.STATES.RUNNING || state === KiteAPI.STATES.REACHABLE) {
        if (this.previousPolledState && this.previousPolledState === state && (src === 'activation' || src === 'pollingInterval')) {
          canNotify = true;
        }
      } else {
        canNotify = true;
      }

      this.emitter.emit('did-get-state', {
        state,
        canNotify
      });

      if (state !== this.previousState) {
        this.emitter.emit('did-change-state', state);
        this.previousState = state;

        if (state === KiteAPI.STATES.READY && !this.ready) {
          this.emitter.emit('kite-ready');
          this.ready = true;
        }
      } //only set this.previousPolledState under certain callers of connect


      if (src === 'activation' || src === 'pollingInterval') {
        this.previousPolledState = state;
      }

      return state;
    });
  }

  installFlow() {
    ensureKiteDeps();
    return Promise.all([KiteAPI.canInstallKite(), localStorage.getItem('kite.no-admin-privileges') ? Promise.reject('User does not have admin privileges') : Promise.resolve()]).then(([values]) => {
      Metrics.Tracker.name = 'atom';
      Metrics.Tracker.props = {};
      Metrics.Tracker.props.lastEvent = event;
      return this.showInstallFlow({});
    }, err => {
      Logger.error('rejected with data:', err);
    });
  }

  showInstallFlow(variant) {
    ensureKiteDeps();

    if (!os) {
      os = __webpack_require__(6);
    }

    if (!errors) {
      errors = Errors();
    }

    const {
      install: {
        Install,
        atom: atomInstall
      }
    } = __webpack_require__(7);

    const {
      defaultFlow
    } = atomInstall();
    const install = new Install(defaultFlow(), {
      path: atom.project.getPaths()[0] || os.homedir()
    }, {
      failureStep: 'termination',
      title: 'Kite Install'
    });
    const initialClient = KiteAPI.Account.client;
    KiteAPI.Account.client = new NodeClient('alpha.kite.com', -1, '', true);
    errors.trackUncaught();
    atom.workspace.getActivePane().addItem(install);
    atom.workspace.getActivePane().activateItem(install);
    return install.start()["catch"](err => console.error(err)).then(() => {
      KiteAPI.Account.client = initialClient;
    });
  }

  install() {
    ensureKiteDeps();
    this.emitter.emit('will-download');
    return KiteAPI.downloadKiteRelease({
      install: true,
      onDownload: () => this.emitter.emit('did-download'),
      onInstallStart: () => this.emitter.emit('will-install')
    }).then(() => this.emitter.emit('did-install'))["catch"](err => {
      switch (err.type) {
        case 'bad_status':
        case 'curl_error':
          this.emitter.emit('did-fail-download', err);
          break;

        default:
          this.emitter.emit('did-fail-install', err);
      }

      throw err;
    });
  }

  wasInstalledOnce() {
    return localStorage.getItem('kite.wasInstalled') === 'true';
  }

  start() {
    ensureKiteDeps();
    this.emitter.emit('will-start');
    return KiteAPI.runKiteAndWait(ATTEMPTS, INTERVAL).then(() => this.emitter.emit('did-start'))["catch"](err => {
      this.emitter.emit('did-fail-start', err);
      throw err;
    });
  }

  startEnterprise() {
    ensureKiteDeps();
    this.emitter.emit('will-start');
    return KiteAPI.runKiteEnterpriseAndWait(ATTEMPTS, INTERVAL).then(() => this.emitter.emit('did-start'))["catch"](err => {
      this.emitter.emit('did-fail-start', err);
      throw err;
    });
  }

  login() {
    atom.applicationDelegate.openExternal('kite://home');
  }

  copilotSettings() {
    atom.applicationDelegate.openExternal('kite://settings');
  }

  saveUserID() {
    ensureKiteDeps();
    ensureUtils();
    return KiteAPI.request({
      path: '/clientapi/user',
      method: 'GET'
    }).then(resp => {
      Logger.logResponse(resp);

      if (resp.statusCode !== 200) {
        throw new Error('Unable to reach user endpoint');
      }

      return promisifyReadResponse(resp);
    }).then(data => {
      data = JSON.parse(data);

      if (data.id !== undefined) {
        if (!localconfig) {
          localconfig = __webpack_require__(164);
        }

        localconfig.set('distinctID', data.id);
      }
    })["catch"](err => {});
  }

  getRootDirectory(editor) {
    if (!os) {
      os = __webpack_require__(6);
    }

    if (!path) {
      path = __webpack_require__(27);
    }

    const [projectPath] = atom.project.getPaths();
    const basepath = editor ? editor.getPath() || projectPath : projectPath;
    return basepath && path.relative(os.homedir(), basepath).indexOf('..') === 0 ? path.parse(basepath).root : os.homedir();
  }

  getSupportedLanguagesRegExp(languages) {
    ensureUtils();
    return `\.(${compact(flatten(languages.map(l => EXTENSIONS_BY_LANGUAGES[l]))).join('|')})$`;
  }

}

module.exports = KiteApp;

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const os = __webpack_require__(6);
const http = __webpack_require__(10);
const https = __webpack_require__(11);
const querystring = __webpack_require__(12);
const KiteConnector = __webpack_require__(139);
const KiteStateError = __webpack_require__(143);
const KiteRequestError = __webpack_require__(141);
const utils = __webpack_require__(140);
const NodeClient = __webpack_require__(145);
const BrowserClient = __webpack_require__(146);
const EventEmitter = __webpack_require__(14);
const EditorConfig = __webpack_require__(151);
const MemoryStore = __webpack_require__(152);
const { STATES } = KiteConnector;
const { MAX_FILE_SIZE } = __webpack_require__(153);
const { merge, checkArguments, checkArgumentKeys } = __webpack_require__(154);
const urls = __webpack_require__(155);

const KiteAPI = {
  STATES,

  emitter: new EventEmitter(),

  editorConfig: new EditorConfig(new MemoryStore()),

  toggleRequestDebug() {
    KiteConnector.toggleRequestDebug();
    this.Account.toggleRequestDebug();
  },

  requestJSON(...args) {
    return this.request(...args)
      .then(resp => utils.handleResponseData(resp))
      .then(data => JSON.parse(data));
  },

  isKiteLocal() {
    return this.request({
      path: '/clientapi/iskitelocal',
      method: 'GET',
    })
      .then(() => true)
      .catch(() => false);
  },

  setKiteSetting(key, value) {
    return this.requestJSON({
      path: `/clientapi/settings/${key}`,
      method: 'POST',
    }, JSON.stringify(value));
  },

  getKiteSetting(key) {
    return this.requestJSON({
      path: `/clientapi/settings/${key}`,
      method: 'GET',
    });
  },

  getSupportedLanguages() {
    return this.requestJSON({
      path: '/clientapi/languages',
    });
  },

  getOnboardingFilePath(editor, language = 'python') {
    checkArguments(this.getOnboardingFilePath, editor, language);
    const path = urls.onboardingFilePath(editor, language);
    return this.requestJSON({ path });
  },

  canAuthenticateUser() {
    return KiteConnector.isKiteReachable()
      .then(() => utils.reversePromise(
        KiteConnector.isUserAuthenticated(),
        new KiteStateError('Kite is already authenticated', {
          state: STATES.AUTHENTICATED,
        })));
  },

  authenticateUser(email, password) {
    checkArguments(this.authenticateUser, email, password);
    return this.canAuthenticateUser()
      .then(() => this.request({
        path: '/clientapi/login',
        method: 'POST',
        headers: {
          'Content-Type': 'multipart/form-data',
        },
      }, { email, password }))
      .then(() => this.saveUserID());
  },

  authenticateSessionID(key) {
    // Unlike authenticateUser above, this method does not check to see if a
    // user is already authenticated before trying to authenticate. This
    // method is only used in specialized flows, so we're special-casing it
    // here.
    checkArguments(this.authenticateSessionID, key);
    return KiteConnector.isKiteReachable()
      .then(() => this.request({
        path: '/clientapi/authenticate',
        method: 'POST',
        headers: {
          'Content-Type': 'multipart/form-data',
        },
      }, { key }))
      .then(resp => this.saveUserID());
  },

  saveUserID() {
    return this.requestJSON({
      path: '/clientapi/user',
      method: 'GET',
    })
      .then(data => data.id && this.editorConfig.set('distinctID', data.id))
      .catch(() => { });
  },

  getHoverDataAtPosition(filename, source, position, editor, encoding = 'utf-16') {
    checkArguments(this.getHoverDataAtPosition, filename, source, position, encoding);
    const path = urls.hoverPath(filename, source, position, editor, encoding);

    return this.requestJSON({ path });
  },

  getReportDataAtPosition(filename, source, position, editor, encoding = 'utf-16') {
    checkArguments(this.getReportDataAtPosition, filename, source, position, editor, encoding);
    return this.getHoverDataAtPosition(filename, source, position, editor, encoding)
      .then(data => this.getReportDataFromHover(data));
  },

  getReportDataFromHover(data) {
    const id = data.symbol[0].id;
    return !idIsEmpty(id)
      ? this.getSymbolReportDataForId(id)
        .then(report => [data, report])
        .catch(err => [data])
      : [data];
  },

  getSymbolReportDataForId(id) {
    checkArguments(this.getSymbolReportDataForId, id);
    return this.requestJSON({
      path: `/api/editor/symbol/${id}`,
    });
  },

  getValueReportDataForId(id) {
    checkArguments(this.getValueReportDataForId, id);
    return this.requestJSON({
      path: `/api/editor/value/${id}`,
    })
      .then(report => {
        if (report.value && idIsEmpty(report.value.id)) {
          report.value.id = id;
        }
        return report;
      });
  },

  getMembersDataForId(id, page = 0, limit = 999) {
    checkArguments(this.getMembersDataForId, id);
    const path = urls.membersPath(id, page, limit);

    return this.requestJSON({ path });
  },

  getUsagesDataForValueId(id, page = 0, limit = 999) {
    checkArguments(this.getUsagesDataForValueId, id);
    const path = urls.usagesPath(id, page, limit);

    return this.requestJSON({ path });
  },

  getUsageDataForId(id) {
    checkArguments(this.getUsageDataForId, id);
    return this.requestJSON({
      path: `/api/editor/usages/${id}`,
    })
      .then(report => {
        if (report.value && idIsEmpty(report.value.id)) {
          report.value.id = id;
        }
        return report;
      });
  },

  getExampleDataForId(id) {
    checkArguments(this.getExampleDataForId, id);
    return this.requestJSON({
      path: `/api/python/curation/${id}`,
    });
  },

  getUserAccountInfo() {
    return this.requestJSON({ path: '/api/account/user' });
  },

  getStatus(filename) {
    return filename
      ? this.requestJSON({ path: urls.statusPath(filename) })
        .catch((err) => ({ status: 'ready' }))
      : Promise.resolve({ status: 'ready' });
  },

  getCompletions(payload) {
    checkArguments(this.getCompletions, payload);
    if (payload.text === undefined || payload.text.length > MAX_FILE_SIZE) {
      return Promise.resolve([]);
    }
    return this.requestJSON({
      path: '/clientapi/editor/complete',
      method: 'POST',
    }, JSON.stringify(payload))
      .then(data => data.completions || [])
      .catch(_ => []);
  },

  getSignaturesAtPosition(filename, source, position, editor, encoding = 'utf-16') {
    checkArguments(this.getSignaturesAtPosition, filename, source, position, editor, encoding);
    if (source.length > MAX_FILE_SIZE) { return Promise.resolve(); }

    const payload = {
      text: source,
      editor,
      filename,
      cursor_runes: position,
      offset_encoding: encoding,
    };

    return this.requestJSON({
      path: '/clientapi/editor/signatures',
      method: 'POST',
    }, JSON.stringify(payload))
      .catch(() => { });
  },

  getKSGCompletions(query) {
    checkArguments(this.getKSGCompletions, query);
    return this.requestJSON({ path: `/clientapi/ksg/completions?query=${encodeURIComponent(query)}` })
      .catch(() => { });
  },

  getKSGCodeBlocks(query, results = 3) {
    checkArguments(this.getKSGCodeBlocks, query, results);
    return this.requestJSON({ path: `/clientapi/ksg/codeblocks?query=${encodeURIComponent(query)}&results=${results}` })
      .catch(() => { });
  },

  getAutocorrectData(filename, source, editorMeta) {
    checkArguments(this.getAutocorrectData, filename, source, editorMeta);

    if (source.length > MAX_FILE_SIZE) { return Promise.resolve(); }

    const payload = {
      metadata: this.getAutocorrectMetadata('autocorrect_request', editorMeta),
      buffer: source,
      filename,
      language: 'python',
    };

    return this.requestJSON({
      path: '/clientapi/editor/autocorrect',
      method: 'POST',
    }, JSON.stringify(payload))
      .catch(() => { });
  },

  getAutocorrectModelInfo(version, editorMeta) {
    checkArguments(this.getAutocorrectModelInfo, version, editorMeta);

    const payload = {
      metadata: this.getAutocorrectMetadata('model_info_request', editorMeta),
      language: 'python',
      version,
    };

    return this.requestJSON({
      path: '/api/editor/autocorrect/model-info',
      method: 'POST',
    }, JSON.stringify(payload))
      .catch(() => { });
  },

  getAutocorrectMetadata(event, editorMeta) {
    checkArguments(this.getAutocorrectMetadata, event, editorMeta);
    checkArgumentKeys(this.getAutocorrectMetadata, editorMeta, 'editorMeta', 'source', 'plugin_version');
    return merge({
      event,
      os_name: this.getOsName(),
    }, editorMeta);
  },

  getOsName() {
    return {
      darwin: 'macos',
      win32: 'windows',
      linux: 'linux',
    }[os.platform()];
  },

  postSaveValidationData(filename, source, editorMeta) {
    checkArguments(this.postSaveValidationData, filename, source, editorMeta);

    if (source.length > MAX_FILE_SIZE) { return Promise.resolve(); }

    const payload = {
      metadata: this.getAutocorrectMetadata('validation_onsave', editorMeta),
      buffer: source,
      filename,
      language: 'python',
    };

    return this.request({
      path: '/clientapi/editor/autocorrect/validation/on-save',
      method: 'POST',
    }, JSON.stringify(payload))
      .catch(() => { });
  },

  postAutocorrectFeedbackData(response, feedback, editorMeta) {
    checkArguments(this.postAutocorrectFeedbackData, response, feedback, editorMeta);

    const payload = {
      metadata: this.getAutocorrectMetadata('feedback_diffset', editorMeta),
      response,
      feedback,
    };

    return this.request({
      path: '/clientapi/editor/autocorrect/feedback',
      method: 'POST',
    }, JSON.stringify(payload))
      .catch(() => { });
  },

  postAutocorrectHashMismatchData(response, requestStartTime, editorMeta) {
    checkArguments(this.postAutocorrectHashMismatchData, response, requestStartTime, editorMeta);

    const payload = {
      metadata: this.getAutocorrectMetadata('metrics_hash_mismatch', editorMeta),
      response,
      response_time: new Date() - requestStartTime,
    };

    return this.request({
      path: '/clientapi/editor/autocorrect/metrics',
      method: 'POST',
    }, JSON.stringify(payload))
      .catch(() => { });
  },

  sendFeatureMetric(name) {
    checkArguments(this.sendFeatureMetric, name);

    return this.request({
      path: '/clientapi/metrics/counters',
      method: 'POST',
    }, JSON.stringify({
      name,
      value: 1,
    }));
  },

  featureRequested(name, editor) {
    checkArguments(this.featureRequested, name, editor);
    this.sendFeatureMetric(`${editor}_${name}_requested`);
  },

  featureFulfilled(name, editor) {
    checkArguments(this.featureFulfilled, name, editor);
    this.sendFeatureMetric(`${editor}_${name}_fulfilled`);
  },

  featureApplied(name, editor, suffix = '') {
    checkArguments(this.featureApplied, name, editor);
    this.sendFeatureMetric(`${editor}_${name}_applied${suffix}`);
  },

  Account: {
    client: KiteConnector.client,

    initClient(hostname, port, base, ssl) {
      this.client.hostname = hostname;
      this.client.port = port;
      this.client.base = base;
      this.client.protocol = ssl ? https : http;
    },

    disposeClient() { },

    toggleRequestDebug() {
      if (this.client instanceof NodeClient) {
        this.client = new BrowserClient(this.client.hostname, this.client.port, this.client.base, this.client.protocol === https);
      } else {
        this.client = new NodeClient(this.client.hostname, this.client.port, this.client.base, this.client.protocol === 'https');
      }
    },

    checkEmail(data) {
      if (!data || !data.email) {
        return Promise.reject(new Error('No email provided'));
      }
      return this.client.request({
        path: '/api/account/check-email',
        method: 'POST',
      }, JSON.stringify(data))
        .then(checkStatusAndInvokeCallback('Unable to check email'));
    },

    createAccount(data, callback) {
      if (!data || !data.email) {
        return Promise.reject(new Error('No email provided'));
      }

      const content = querystring.stringify(data);
      let promise;
      if (data.password) {
        promise = this.client.request({
          path: '/api/account/create',
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
          },
        }, content);
      } else {
        promise = this.client.request({
          path: '/api/account/createPasswordless',
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
          },
        }, content);
      }

      return promise.then(checkStatusAndInvokeCallback('Unable to create an account', callback));
    },

    login(data, callback) {
      if (!data) {
        return Promise.reject(new Error('No login data provided'));
      }
      if (!data.email) {
        return Promise.reject(new Error('No email provided'));
      }
      if (!data.password) {
        return Promise.reject(new Error('No password provided'));
      }
      const content = querystring.stringify(data);
      return this.client.request({
        path: '/api/account/login',
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
        },
      }, content)
        .then(checkStatusAndInvokeCallback('Unable to login into Kite', callback));
    },

    resetPassword(data, callback) {
      if (!data || !data.email) {
        return Promise.reject(new Error('No email provided'));
      }
      const content = querystring.stringify(data);
      return this.client.request({
        path: '/api/account/reset-password/request',
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
        },
      }, content)
        .then(checkStatusAndInvokeCallback('Unable to reset passwords', callback));
    },
  },
};

const idIsEmpty = (id) =>
  !id || id === '' ||
  (id.indexOf(';') !== -1 && id.split(';')[1] === '');

const delegate = (methods, source, target) => {
  methods.forEach(method => target[method] = (...args) => source[method](...args));
  return target;
};

const checkStatusAndInvokeCallback = (message, callback) => resp => {
  callback && callback(resp);
  return new Promise((resolve, reject) => {
    if (resp.statusCode >= 400) {
      utils.handleResponseData(resp).then(respData => {
        reject(new KiteRequestError(message, {
          responseStatus: resp.statusCode,
          response: resp,
          responseData: respData,
        }));
      }, reject);
    } else {
      resolve(resp);
    }
  });
};

delegate([
  'arch',
  'canInstallKite',
  'canRunKite',
  'canRunKiteEnterprise',
  'checkHealth',
  'downloadKite',
  'downloadKiteRelease',
  'hasBothKiteInstalled',
  'hasManyKiteEnterpriseInstallation',
  'hasManyKiteInstallation',
  'installKite',
  'isAdmin',
  'isKiteEnterpriseInstalled',
  'isKiteEnterpriseRunning',
  'isKiteInstalled',
  'isKiteReachable',
  'isKiteRunning',
  'isKiteSupported',
  'isOSSupported',
  'isOSVersionSupported',
  'isUserAuthenticated',
  'onDidFailRequest',
  'request',
  'runKiteWithCopilot',
  'runKite',
  'runKiteAndWait',
  'runKiteEnterprise',
  'runKiteEnterpriseAndWait',
  'toggleRequestDebug',
  'waitForKite',
], KiteConnector, KiteAPI);

module.exports = KiteAPI;


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const os = __webpack_require__(6);
const EventEmitter = __webpack_require__(14);

const utils = __webpack_require__(140);
const KiteStateError = __webpack_require__(143);
const KiteRequestError = __webpack_require__(141);
const {STATES} = __webpack_require__(144);
const NodeClient = __webpack_require__(145);
const BrowserClient = __webpack_require__(146);

module.exports = {
  STATES,

  adapter: (() => {
    switch (os.platform()) {
      case 'darwin': return __webpack_require__(147);
      case 'win32': return __webpack_require__(148);
      case 'linux': return __webpack_require__(149);
      default: return __webpack_require__(150);
    }
  })(),

  emitter: new EventEmitter(),

  client: new NodeClient('localhost', '46624'),

  toggleRequestDebug() {
    if (this.client instanceof NodeClient) {
      this.client = new BrowserClient(this.client.hostname, this.client.port);
    } else {
      this.client = new NodeClient(this.client.hostname, this.client.port);
    }
  },

  onDidFailRequest(listener) {
    this.emitter.on('did-fail-request', listener);
    return {
      dispose: () => {
        this.emitter.removeListener('did-fail-request', listener);
      },
    };
  },

  request(options, data, timeout) {
    return this.client.request(options, data, timeout)
    .catch(() => {
      let promise = Promise.resolve();
      if (utils.shouldAddCatchProcessing(options.path)) {
        promise = promise.then(() => this.isKiteSupported())
              .then(() => this.isKiteInstalled())
              .then(() => this.isKiteRunning());
      }
      return promise.then(() => {
        throw new KiteStateError('Kite could not be reached when attempting a request', {
          state: STATES.UNREACHABLE,
          request: options,
          requestData: data,
        });
      });
    })
    .then(resp => {
      return resp.statusCode >= 400
        ? utils.handleResponseData(resp).then(respData => {
          throw new KiteRequestError('bad_status', {
            responseStatus: resp.statusCode,
            request: options,
            requestData: data,
            response: resp,
            responseData: respData,
          });
        })
        : resp;
    })
    .catch(err => {
      this.emitter.emit('did-fail-request', err);
      throw err;
    });
  },

  checkHealth() {
    const extractErr = ([err]) => {
      throw err;
    };

    return this.isKiteSupported()
    .then(() =>
      utils.anyPromise([this.isKiteInstalled(), this.isKiteEnterpriseInstalled()]).catch(extractErr))
    .then(() =>
      utils.anyPromise([this.isKiteRunning(), this.isKiteEnterpriseRunning()]).catch(extractErr))
    .then(() => this.isKiteReachable())
    .then(() => STATES.READY)
    .catch(err => {
      if (!err.data || err.data.state == null) { throw err; }
      return err.data.state;
    });
  },

  // FIXME: This method is now deprecated, use checkHealth instead.
  handleState() {
    return this.checkHealth();
  },

  isKiteSupported() {
    return this.adapter.isKiteSupported()
      ? Promise.resolve()
      : Promise.reject(new KiteStateError('Kite is currently not support on your platform', {
        state: STATES.UNSUPPORTED,
      }));
  },

  isKiteInstalled() {
    return this.adapter.isKiteInstalled();
  },

  isKiteRunning() {
    return this.adapter.isKiteRunning();
  },

  canInstallKite() {
    return this.isKiteSupported()
    .then(() =>
      utils.reversePromise(this.adapter.isKiteInstalled(),
        new KiteStateError('Kite is already installed', {
          state: STATES.INSTALLED,
        })));
  },

  installKite(options) {
    return this.adapter.installKite(options);
  },

  downloadKiteRelease(options) {
    return this.adapter.downloadKiteRelease(options);
  },

  downloadKite(url, options) {
    return this.adapter.downloadKite(url, options);
  },

  canRunKite() {
    return this.isKiteInstalled()
    .then(() =>
      utils.reversePromise(this.isKiteRunning(),
        new KiteStateError('Kite is already runnning', {
          state: STATES.RUNNING,
        })));
  },

  runKiteWithCopilot() {
    return this.adapter.runKiteWithCopilot();
  },

  runKite() {
    return this.adapter.runKite();
  },

  runKiteAndWait(attempts, interval) {
    return this.runKite().then(() => this.waitForKite(attempts, interval));
  },

  isKiteReachable() {
    return this.client.request({
      path: '/clientapi/ping',
      method: 'GET',
    }, null, 200); // in tests, this took no longer than 15ms to respond
  },

  waitForKite(attempts, interval) {
    return utils.retryPromise(() => this.isKiteReachable(), attempts, interval);
  },

  isKiteEnterpriseInstalled() {
    return this.adapter.isKiteEnterpriseInstalled();
  },

  isKiteEnterpriseRunning() {
    return this.adapter.isKiteEnterpriseRunning();
  },

  canRunKiteEnterprise() {
    return this.isKiteEnterpriseInstalled()
    .then(() =>
      utils.reversePromise(this.isKiteEnterpriseRunning(),
        new KiteStateError('Kite Enterprise is already runnning', {
          state: STATES.RUNNING,
        })));
  },

  runKiteEnterprise() {
    return this.adapter.runKiteEnterprise();
  },

  runKiteEnterpriseAndWait(attempts, interval) {
    return this.runKiteEnterprise().then(() => this.waitForKite(attempts, interval));
  },

  hasBothKiteInstalled() {
    return this.adapter.hasBothKiteInstalled();
  },

  hasManyKiteInstallation() {
    return this.adapter.hasManyKiteInstallation();
  },

  hasManyKiteEnterpriseInstallation() {
    return this.adapter.hasManyKiteEnterpriseInstallation();
  },

  isAdmin() {
    return this.adapter.isAdmin();
  },

  arch() {
    return this.adapter.arch();
  },

  isOSSupported() {
    return this.adapter.isOSSupported();
  },

  isOSVersionSupported() {
    return this.adapter.isOSVersionSupported();
  },

  isUserAuthenticated() {
    return this.client.request({
      path: '/clientapi/user',
      method: 'GET',
    })
    .then((resp) => {
      switch (resp.statusCode) {
        case 200:
          return utils.handleResponseData(resp);
        case 401:
          throw new KiteStateError('Kite is not authenticated', {
            state: STATES.UNLOGGED,
          });
        default:
          return utils.handleResponseData(resp).then(respData => {
            throw new KiteRequestError('Invalid response status when checking Kite authentication', {
              responseStatus: resp.statusCode,
              request: {
                path: '/clientapi/user',
                method: 'GET',
              },
              response: resp,
              responseData: respData,
            });
          });
      }
    });
  },
};


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const http = __webpack_require__(10);
const https = __webpack_require__(11);
const child_process = __webpack_require__(16);
const KiteRequestError = __webpack_require__(141);
const KiteProcessError = __webpack_require__(142);

function deepMerge(a, b) {
  a = JSON.parse(JSON.stringify(a || {}));
  b = JSON.parse(JSON.stringify(b || {}));
  const c = Object.assign({}, a);

  Object.keys(b).forEach(k => {
    if (c[k] && typeof c[k] == 'object') {
      c[k] = deepMerge(c[k], b[k]);
    } else {
      c[k] = b[k];
    }
  });

  return c;
}

function promisifyRequest(request) {
  return new Promise((resolve, reject) => {
    request.on('response', resp => resolve(resp));
    request.on('error', err => reject(err));
  });
}

function promisifyStream(stream) {
  return new Promise((resolve, reject) => {
    stream.on('finish', () => resolve());
    stream.on('error', err => reject(err));
  });
}

function request(url) {
  return url.indexOf('https://') === 0
    ? https.request(url)
    : http.request(url);
}

function hasHeader(header, headers) {
  return header in headers ? header : false;
}

function isRedirection(resp) {
  return resp.statusCode >= 300 &&
    resp.statusCode < 400 &&
    hasHeader('location', resp.headers);
}

// Given a request this function will follow the redirection until a
// code different that 303 is returned
function followRedirections(req) {
  return promisifyRequest(req)
    .then(resp => {
      if (resp.statusCode >= 200 && resp.statusCode < 300) {
        return resp;
      } else if (isRedirection(resp)) {
        const location = resp.headers.location;
        const req = request(location);
        req.end();
        return followRedirections(req);
      } else {
        throw new KiteRequestError('Invalid response status when following redirection', {
          request: req,
          response: resp,
          responseStatus: resp.statusCode,
        });
      }
    });
}

function parseSetCookies(cookies) {
  if (!Array.isArray(cookies) || !cookies.length) {
    return [];
  }
  var parse = (cookie) => {
    var parsed = {
      Path: '',
      Domain: '',
      Expires: new Date('0001-01-01T00:00:00Z'),
      RawExpires: '',
      MaxAge: 0,
      Secure: false,
      HttpOnly: false,
      Raw: '',
      Unparsed: null,
    };
    cookie.split('; ').forEach((raw) => {
      if (raw === 'HttpOnly') {
        parsed.HttpOnly = true;
        return;
      }
      if (raw === 'Secure') {
        parsed.Secure = true;
        return;
      }
      var idx = raw.indexOf('=');
      var key = raw.substring(0, idx);
      var val = raw.substring(idx + 1);
      if (key === 'Expires') {
        val = new Date(val);
      }
      if (key in parsed) {
        parsed[key] = val;
      } else {
        parsed.Name = key;
        parsed.Value = val;
      }
    });
    return parsed;
  };
  return cookies.map(parse);
}

function findCookie(cookies, name) {
  return cookies.filter(c => c.Name === name)[0];
}

function dumpCookies(cookies) {
  return cookies.map((c) => c.Name + '=' + c.Value).join('; ');
}

function handleResponseData(resp, callback) {
  if (callback) {
    let data = '';
    resp.on('data', (chunk) => data += chunk);
    resp.on('end', () => callback(data));
    return null;
  } else {
    return new Promise((resolve, reject) => {
      let data = '';
      resp.on('data', (chunk) => data += chunk);
      resp.on('error', err => reject(err));
      resp.on('end', () => resolve(data));
    });
  }
}

// Returns a new Promise that resolve if the passed-in promise is rejected and
// will be rejected with the provided error if the passed-in promise resolve.
function reversePromise(promise, rejectionMessage, resolutionMessage) {
  return new Promise((resolve, reject) => {
    promise
      .then(() => reject(rejectionMessage))
      .catch(() => resolve(resolutionMessage));
  });
}

// Given a function returning a promise, it returns a new Promise that will be
// resolved if one of the promises returned by the function resolves. If no
// promises have been resolved after the specified amount of attempts the
// returned promise will be rejected
function retryPromise(doAttempt, attempts, interval) {
  return new Promise((resolve, reject) => {
    makeAttempt(0, resolve, reject);
  });

  function makeAttempt(n, resolve, reject) {
    var retryOrReject = (err) => {
      n + 1 >= attempts
        ? reject(err)
        : makeAttempt(n + 1, resolve, reject);
    };
    setTimeout(() =>
      doAttempt().then(resolve, retryOrReject),
    n ? interval : 0);
  }
}

// Spawns a child process and returns a promise that will be resolved if
// the process ends with a code of 0, otherwise the promise will be rejected
// with an error object of the provided rejectionType.
function spawnPromise(cmd, cmdArgs, cmdOptions, rejectionType, rejectionMessage) {
  const args = [cmd];

  if (cmdArgs) {
    if (typeof cmdArgs === 'string') {
      rejectionType = cmdArgs;
      rejectionMessage = cmdOptions;
    } else {
      args.push(cmdArgs);
    }
  }

  if (cmdOptions) {
    if (typeof cmdOptions === 'string') {
      rejectionMessage = rejectionType;
      rejectionType = cmdOptions;
    } else {
      args.push(cmdOptions);
    }
  }

  return new Promise((resolve, reject) => {
    const proc = child_process.spawn(...args);
    let stdout = '';
    let stderr = '';

    proc.stdout.on('data', data => stdout += data);
    proc.stderr.on('data', data => stdout += data);

    const error = new Error();

    proc.on('error', _ => {
      reject(new KiteProcessError(rejectionType,
        {
          message: rejectionMessage + 'for args: ' + args,
          stderr,
          stdout,
          callStack: error.stack,
          cmd: `${cmd} ${(typeof cmdOptions != 'string' ? cmdArgs || [] : []).join(' ')}`,
          options: typeof cmdOptions != 'string' ? cmdOptions : undefined,
        }));
    });

    proc.on('close', code => {
      code
        ? reject(new KiteProcessError(rejectionType,
          {
            message: rejectionMessage,
            stderr,
            stdout,
            callStack: error.stack,
            cmd: `${cmd} ${(typeof cmdOptions != 'string' ? cmdArgs || [] : []).join(' ')}`,
            options: typeof cmdOptions != 'string' ? cmdOptions : undefined,
          }))
        : resolve(stdout);
    });
  });
}

function anyPromise(arrayOfPromises) {
  // For each promise that resolves or rejects,
  // make them all resolve.
  // Record which ones did resolve or reject
  const resolvingPromises = arrayOfPromises.map(promise => {
    return promise
      .then(result => ({ resolve: true, result: result }))
      .catch(error => ({ resolve: false, result: error }));
  });

  return Promise.all(resolvingPromises).then(results => {
    const resolved = results.reduce((m, r) => {
      if (m) { return m; }
      if (r.resolve) { return r; }
      return null;
    }, null);


    if (resolved) {
      return resolved.result;
    } else {
      throw results.map(r => r.result);
    }
  });
}

// Exec a child process and returns a promise that will be resolved if
// the process ends with success, otherwise the promise will be rejected
// with an error object of the provided rejectionType.
function execPromise(cmd, cmdOptions, rejectionType, rejectionMessage) {
  const args = [cmd];

  if (cmdOptions) {
    if (cmdOptions === 'string') {
      rejectionMessage = rejectionType;
      rejectionType = cmdOptions;
      cmdOptions = {};
    }
  } else {
    cmdOptions = {};
  }

  args.push(cmdOptions);

  const error = new Error();

  return new Promise((resolve, reject) => {
    child_process.exec(...args, (err, stdout, stderr) => {
      if (err) {
        reject(new KiteProcessError(rejectionType,
          {
            message: rejectionMessage,
            stdout,
            stderr,
            callStack: error.stack,
            cmd,
            options: typeof cmdOptions != 'string' ? cmdOptions : undefined,
          }));
      }
      resolve(stdout);
    });
  });
}

// Calls the passed-in function if its actually a function.
function guardCall(fn) { typeof fn === 'function' && fn(); }

// Attempts to parse a json string and returns the fallback if it can't.
function parseJSON(json, fallback) {
  try { return JSON.parse(json) || fallback; } catch (e) { return fallback; }
}

// evaluates whether a particular path should have extra processing
// done on it in the case of a Promise rejection
// NB: this should be taken out with a more robust refactor
function shouldAddCatchProcessing(path) {
  return !path.startsWith('/clientapi/editor');
}

// should be wrapped in try/catch
function whoami() {
  return String(child_process.execSync('whoami')).trim();
}

module.exports = {
  anyPromise,
  deepMerge,
  dumpCookies,
  execPromise,
  findCookie,
  followRedirections,
  guardCall,
  handleResponseData,
  parseJSON,
  parseSetCookies,
  promisifyRequest,
  promisifyStream,
  retryPromise,
  reversePromise,
  shouldAddCatchProcessing,
  spawnPromise,
  whoami,
};


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = class KiteRequestError extends Error {
  get type() { return 'bad_status'; }

  constructor(message, data) {
    super(message);
    this.data = data;
    Error.captureStackTrace(this, this.constructor);
  }
};


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = class KiteProcessError extends Error {
  constructor(type, data) {
    super(type);
    this.data = data;
    this.message = `${type}: ${data.message}\ncmd: ${data.cmd}`;
    if (data.stdout) {
      this.message += `\nstdout: ${data.stdout}`;
    }
    if (data.stderr) {
      this.message += `\nstderr: ${data.stderr}`;
    }
    Error.captureStackTrace(this, this.constructor);
  }
};


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = class KiteStateError extends Error {
  get type() { return 'bad_state'; }
  
  constructor(message, data) {
    super(message);
    this.data = data;
    Error.captureStackTrace(this, this.constructor);
  }
};


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  STATES: {
    UNSUPPORTED: 0,
    UNINSTALLED: 1,
    NOT_RUNNING: 2,
    UNREACHABLE: 3,
    UNLOGGED: 4,
    READY: 4,

    // legacy states, prefer the ones above for health checks
    INSTALLED: 2,
    RUNNING: 3,
    REACHABLE: 4,
    AUTHENTICATED: 4,
  },

  LEVELS: {
    SILLY: 0,
    VERBOSE: 1,
    DEBUG: 2,
    INFO: 3,
    WARNING: 4,
    ERROR: 5,
  },
};


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const http = __webpack_require__(10);
const https = __webpack_require__(11);
const FormData = __webpack_require__(22);

const utils = __webpack_require__(140);

module.exports = class NodeClient {
  constructor(hostname, port, base = '', ssl = false) {
    this.hostname = hostname;
    this.port = port;
    this.base = base;
    this.protocol = ssl ? https : http;
    this.cookies = {};
  }

  request(opts, data, timeout) {
    return new Promise((resolve, reject) => {
      let form;

      opts.hostname = this.hostname;
      if (this.port > 0) { opts.port = this.port; }
      opts.path = this.base + opts.path;
      opts.headers = opts.headers || {};
      this.writeCookies(opts.headers);

      if (opts.headers['Content-Type'] === 'multipart/form-data' ||
          opts.headers['content-type'] === 'multipart/form-data') {
        delete opts.headers['Content-Type'];
        delete opts.headers['content-type'];

        form = new FormData();
        for (const key in data) {
          form.append(key, data[key]);
        }

        const headers = form.getHeaders();
        for (const key in headers) {
          opts.headers[key] = headers[key];
        }
      }

      const req = this.protocol.request(opts, resp => {
        this.readCookies(resp);
        resolve(resp);
      });
      req.on('error', err => reject(err));
      if (timeout != null) {
        req.setTimeout(timeout, () => reject(new Error('timeout')));
      }
      if (form) {
        form.pipe(req);
      } else {
        if (data) { req.write(data); }
        req.end();
      }
    });
  }

  readCookies(resp) {
    utils.parseSetCookies(resp.headers['set-cookie']).forEach(c => {
      this.cookies[c.Name] = c;
    });
  }

  writeCookies(hdrs) {
    const cookies = [];
    for (var k in this.cookies) {
      cookies.push(this.cookies[k]);
    }
    if (cookies.length) {
      hdrs.Cookies = utils.dumpCookies(cookies);
    }
  }
};


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const utils = __webpack_require__(140);

const createResponse = (status, raw, req, headers = {}) => {
  const resp = {
    statusCode: status,
    req,
    on(event, callback) {
      switch (event) {
        case 'data':
          callback(raw);
          break;
        case 'end':
          callback();
          break;
      }
    },
  };
  for (let k in headers) { resp[k] = headers[k]; }
  resp.headers = resp.headers || {};

  return resp;
};

module.exports = class BrowserClient {
  constructor(hostname, port, base, ssl) {
    base = base || '';
    ssl = ssl || false;
    this.hostname = hostname;
    this.port = port;
    this.base = base;
    this.protocol = ssl ? 'https' : 'http';
    this.cookies = {};
  }

  request(opts, data, timeout) {
    const domain = this.port && this.port !== -1
      ? `${this.hostname}:${this.port}`
      : this.hostname;
    const url = `${this.protocol}://${domain}${this.base}${opts.path}`;
    const method = opts.method || 'GET';

    return new Promise((resolve, reject) => {
      const query = new XMLHttpRequest();
      query.addEventListener('error', reject);
      query.addEventListener('abort', reject);
      query.addEventListener('load', () => {
        const raw = query.responseText;

        resolve(createResponse(query.status, raw, {
          method,
          path: opts.path,
          url,
        }));
      });

      query.open(method, url);
      if (timeout) {
        query.timeout = timeout; // Set timeout to 4 seconds (4000 milliseconds)
        query.ontimeout = () => { reject(new Error('Request Timeout')); };
      }

      if (opts.headers) {
        if (opts.headers['Content-Type'] === 'multipart/form-data' ||
            opts.headers['content-type'] === 'multipart/form-data') {
          delete opts.headers['Content-Type'];
          delete opts.headers['content-type'];

          const form = new FormData();

          for (const key in data) {
            form.append(key, data[key]);
          }
          data = form;
        }

        for (const header in opts.headers) {
          query.setRequestHeader(header, opts.headers[header]);
        }
      }
      if (!opts.headers || !opts.headers['Cache-Control']) {
        query.setRequestHeader('Cache-Control', 'no-cache, must-revalidate');
      }

      query.send(data);
    });
  }

  readCookies(resp) {
    utils.parseSetCookies(resp.headers['set-cookie']).forEach(c => {
      this.cookies[c.Name] = c;
    });
  }

  writeCookies(hdrs) {
    var cookies = [];
    for (var k in this.cookies) {
      cookies.push(this.cookies[k]);
    }
    if (cookies.length) {
      hdrs.Cookies = utils.dumpCookies(cookies);
    }
  }
};


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const os = __webpack_require__(6);
const fs = __webpack_require__(28);
const path = __webpack_require__(27);
const https = __webpack_require__(11);
const child_process = __webpack_require__(16);
const utils = __webpack_require__(140);
const KiteStateError = __webpack_require__(143);
const {STATES} = __webpack_require__(144);

const OSXSupport = {
  RELEASE_URL: 'https://alpha.kite.com/release/dls/mac/current',
  APPS_PATH: '/Applications/',
  KITE_DMG_PATH: '/tmp/Kite.dmg',
  KITE_VOLUME_PATH: '/Volumes/Kite/',
  KITE_APP_PATH: {mounted: '/Volumes/Kite/Kite.app', defaultInstalled: '/Applications/Kite.app'},
  KITE_SIDEBAR_PATH: '/Applications/Kite.app/Contents/MacOS/KiteSidebar.app',
  KITE_BUNDLE_ID: 'com.kite.Kite',
  SESSION_FILE_PATH: path.join(os.homedir(), '.kite', 'session.json'),

  get releaseURL() {
    return this.RELEASE_URL;
  },

  get downloadPath() {
    return this.KITE_DMG_PATH;
  },

  get installPath() {
    return this.allInstallPaths[0];
  },

  get allInstallPaths() {
    let paths = String(child_process.spawnSync('mdfind', [
      'kMDItemCFBundleIdentifier = "com.kite.Kite"',
    ]).stdout).trim().split('\n');
    if (paths.indexOf(this.KITE_APP_PATH.defaultInstalled) === -1 && this.checkDefaultAppPath()) {
      paths.push(this.KITE_APP_PATH.defaultInstalled);
    }
    return paths.filter(p => p !== '');
  },

  get enterpriseInstallPath() {
    return this.allEnterpriseInstallPaths[0];
  },

  get allEnterpriseInstallPaths() {
    return String(child_process.spawnSync('mdfind', [
      'kMDItemCFBundleIdentifier = "enterprise.kite.Kite"',
    ]).stdout).trim().split('\n');
  },

  get sessionFilePath() {
    return this.SESSION_FILE_PATH;
  },

  isAdmin() {
    try {
      const user = utils.whoami();
      const adminUsers = String(child_process.execSync('dscacheutil -q group -a name admin'))
      .split('\n')
      .filter(l => /^users:/.test(l))[0]
      .trim()
      .replace(/users:\s+/, '')
      .split(/\s/g);
      return adminUsers.includes(user);
    } catch (e) {
      return false;
    }
  },

  arch() {
    return os.arch();
  },

  isOSSupported() {
    return true;
  },

  isOSVersionSupported() {
    return parseFloat(os.release()) >= 14;
  },

  isKiteSupported() {
    return this.isOSVersionSupported();
  },

  checkDefaultAppPath() {
    return fs.existsSync(this.KITE_APP_PATH.defaultInstalled);
  },

  isKiteInstalled() {
    return utils.spawnPromise(
      'mdfind',
      ['kMDItemCFBundleIdentifier = "com.kite.Kite"'],
      'mdfind_error',
      'Unable to run mdfind and verify that Kite is installed')
    .then(res => {
      if ((!res || res.trim() === '') && !this.checkDefaultAppPath()) {
        throw new KiteStateError('Unable to find Kite application install using mdfind', {
          state: STATES.UNINSTALLED,
        });
      }
    });
  },

  hasManyKiteInstallation() {
    return this.allInstallPaths.length > 1;
  },

  hasManyKiteEnterpriseInstallation() {
    return this.allEnterpriseInstallPaths.length > 1;
  },

  hasBothKiteInstalled() {
    return Promise.all([
      this.isKiteInstalled(),
      this.isKiteEnterpriseInstalled(),
    ]);
  },

  isKiteEnterpriseInstalled() {
    return utils.spawnPromise(
      'mdfind',
      ['kMDItemCFBundleIdentifier = "enterprise.kite.Kite"'],
      'mdfind_error',
      'Unable to run mdfind and verify that kite enterprise is installed')
    .then(res => {
      if (!res || res.trim() === '') {
        throw new KiteStateError('Unable to find Kite Enterprise application install using mdfind', {
          state: STATES.UNINSTALLED,
        });
      }
    });
  },

  downloadKiteRelease(opts) {
    return this.downloadKite(this.releaseURL, opts || {});
  },

  downloadKite(url, opts) {
    opts = opts || {};
    return this.streamKiteDownload(url, opts.onDownloadProgress)
    .then(() => utils.guardCall(opts.onDownload))
    .then(() => opts.install && this.installKite(opts));
  },

  streamKiteDownload(url, progress) {
    const req = https.request(url);
    req.end();

    return utils.followRedirections(req)
    .then(resp => {
      if (progress) {
        const total = parseInt(resp.headers['content-length'], 10);
        let length = 0;

        resp.on('data', chunk => {
          length += chunk.length;
          progress(length, total, length / total);
        });
      }

      return utils.promisifyStream(
        resp.pipe(fs.createWriteStream(this.downloadPath))
      )
      .then(() => new Promise((resolve, reject) => {
        setTimeout(resolve, 100);
      }));
    });
  },

  installKite(opts) {
    opts = opts || {};

    utils.guardCall(opts.onInstallStart);
    return utils.spawnPromise(
      'hdiutil',
      ['attach', '-nobrowse', this.KITE_DMG_PATH],
      'mount_error',
      'Unable to mount Kite.dmg')
    .then(() => utils.guardCall(opts.onMount))
    .then(() => utils.spawnPromise(
      'cp',
      ['-r', this.KITE_APP_PATH.mounted, this.APPS_PATH],
      'cp_error',
      'Unable to copy Kite.app in the applications directory'))
    .then(() => utils.guardCall(opts.onCopy))
    .then(() => utils.spawnPromise(
      'hdiutil',
      ['detach', this.KITE_VOLUME_PATH],
      'unmount_error',
      'Unable to unmount Kite.dmg'))
    .then(() => utils.guardCall(opts.onUnmount))
    .then(() => utils.spawnPromise(
      'rm', [this.KITE_DMG_PATH],
      'rm_error',
      'Unable to remove Kite.dmg'))
    .then(() => utils.guardCall(opts.onRemove))
    // mdfind takes some time to index the app location, so we need to
    // wait for the install to fully complete. Runs 10 times at 1.5s
    // intervals.
    .then(() => utils.retryPromise(() => this.isKiteInstalled(), 10, 1500));
  },

  isKiteRunning() {
    return utils.spawnPromise(
      '/bin/ps',
      ['-axco', 'command'],
      {encoding: 'utf8'},
      'ps_error',
      'Unable to run the ps command and verify that Kite is running')
    .then(stdout => {
      const procs = stdout.split('\n');
      if (!procs.some(s => /^Kite$/.test(s))) {
        throw new KiteStateError('Kite process could not be found in the processes list', {
          state: STATES.NOT_RUNNING,
        });
      }
    });
  },

  runKiteWithCopilot() {
    const env = Object.assign({}, process.env);
    delete env['ELECTRON_RUN_AS_NODE'];

    return utils.spawnPromise(
      'open',
      ['-a', this.installPath, '--args', '--plugin-launch-with-copilot', '--channel=autocomplete-python'],
      { env: env },
      'open_error',
      'Unable to run the open command to start Kite'
    );
  },

  runKite() {
    const env = Object.assign({}, process.env);
    delete env['ELECTRON_RUN_AS_NODE'];

    return this.isKiteRunning()
    .catch(() => utils.spawnPromise(
      'defaults',
      ['write', 'com.kite.Kite', 'shouldReopenSidebar', '0'],
      'defaults_error',
      'Unable to run defaults command')
    .then(() =>
    utils.spawnPromise(
      'open',
      ['-a', this.installPath, '--args', '--plugin-launch', '--channel=autocomplete-python'],
      { env: env },
      'open_error',
      'Unable to run the open command to start Kite'
    )));
  },

  isKiteEnterpriseRunning() {
    return utils.spawnPromise(
      '/bin/ps',
      ['-axco', 'command'],
      {encoding: 'utf8'},
      'ps_error',
      'Unable to run the ps command and verify that Kite enterprise is running')
    .then(stdout => {
      const procs = stdout.split('\n');
      if (!procs.some(s => /^KiteEnterprise$/.test(s))) {
        throw new KiteStateError('Kite Enterprise process could not be found in the processes list', {
          state: STATES.NOT_RUNNING,
        });
      }
    });
  },

  runKiteEnterprise() {
    const env = Object.assign({}, process.env);
    delete env['ELECTRON_RUN_AS_NODE'];

    return utils.spawnPromise(
      'defaults',
      ['write', 'enterprise.kite.Kite', 'shouldReopenSidebar', '0'],
      'defaults_error',
      'Unable to run defaults command')
    .then(() =>
      utils.spawnPromise(
        'open',
        ['-a', this.enterpriseInstallPath],
        { env: env },
        'open_error',
        'Unable to run the open command and start Kite enterprise'));
  },
};

module.exports = OSXSupport;


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const os = __webpack_require__(6);
const fs = __webpack_require__(28);
const path = __webpack_require__(27);
const https = __webpack_require__(11);
const child_process = __webpack_require__(16);
const utils = __webpack_require__(140);
const KiteStateError = __webpack_require__(143);
const KiteProcessError = __webpack_require__(142);

const {STATES} = __webpack_require__(144);

const KEY_BAT = `"${path.join(__dirname, 'read-key.bat')}"`;
const ARCH_BAT = `"${path.join(__dirname, 'read-arch.bat')}"`;
let COMPUTED_INSTALL_PATH;

const WindowsSupport = {
  RELEASE_URL: 'https://alpha.kite.com/release/dls/windows/current',
  KITE_INSTALLER_PATH: path.join(os.tmpdir(), 'KiteSetup.exe'),
  SESSION_FILE_PATH: path.join(process.env.LOCALAPPDATA, 'Kite', 'session.json'),

  // We're only setting the install path in tests
  set KITE_EXE_PATH(path) {
    COMPUTED_INSTALL_PATH = path;
  },
  get KITE_EXE_PATH() {
    if (!COMPUTED_INSTALL_PATH) {
      let installDir, fallbackInstallDir;

      if (process.env.ProgramW6432) {
        fallbackInstallDir = path.join(process.env.ProgramW6432, 'Kite');
      } else {
        // TODO: report that even the fallback needed a fallback
        fallbackInstallDir = 'C:\\Program Files\\Kite';
      }

      try {
        const registryDir = String(child_process.execSync(KEY_BAT)).trim();

        installDir = registryDir !== 'not found'
          ? registryDir
          : fallbackInstallDir;
      } catch (err) {
        installDir = fallbackInstallDir;
      }
      COMPUTED_INSTALL_PATH = path.join(installDir, 'kited.exe');
    }

    return COMPUTED_INSTALL_PATH;
  },

  get releaseURL() {
    return this.RELEASE_URL;
  },

  get downloadPath() {
    return this.KITE_INSTALLER_PATH;
  },

  get installPath() {
    return this.KITE_EXE_PATH;
  },

  get enterpriseInstallPath() {
    return null;
  },

  get allInstallPaths() {
    return [this.installPath];
  },

  get allEnterpriseInstallPaths() {
    return [];
  },

  get sessionFilePath() {
    return this.SESSION_FILE_PATH;
  },

  isAdmin() {
    try {
      // Note that this method can still fail if the server has not been started
      // but it has the merit of being simple and reliable
      // see https://stackoverflow.com/questions/4051883/batch-script-how-to-check-for-admin-rights
      // for details
      child_process.execSync('net session');
      return true;
    } catch (e) {
      return false;
    }
  },

  arch() {
    /* if (!this.cachedArch) { this.cachedArch = os.arch(); }
    
    // for backwards compatibility, we don't just return the direct result of the os call
    if (this.cachedArch === 'x32') { return '32bit'; }
    if (this.cachedArch === 'x64') { return '64bit'; }
    
    return this.cachedArch; */
    
    // we are lax here due to an edge case with a 32bit vscode running on a 64bit
    // os that results in Node getting the architecture of the VSCode environment vs.
    // the architecture of the OS itself
    // Ultimately, this deserves more thought in terms of its handling
    return '64bit';
  },

  isOSSupported() {
    return true;
  },

  isOSVersionSupported() {
    return parseFloat(os.release()) >= 6.1 &&
           this.arch() === '64bit';
  },

  isKiteSupported() {
    return this.isOSVersionSupported();
  },

  isKiteInstalled() {
    return new Promise((resolve, reject) => {
      fs.exists(this.KITE_EXE_PATH, (exists) => {
        if (exists) {
          resolve();
        } else {
          reject(new KiteStateError('', {
            state: STATES.UNINSTALLED,
          }));
        }
      });
    });
  },

  isKiteEnterpriseInstalled() {
    return Promise.reject(new KiteStateError('Kite Enterprise is currently not supported on windows', {
      state: STATES.UNSUPPORTED,
    }));
  },

  hasManyKiteInstallation() {
    return this.allInstallPaths.length > 1;
  },

  hasManyKiteEnterpriseInstallation() {
    return this.allEnterpriseInstallPaths.length > 1;
  },

  hasBothKiteInstalled() {
    return Promise.all([
      this.isKiteInstalled(),
      this.isKiteEnterpriseInstalled(),
    ]);
  },

  downloadKiteRelease(opts) {
    return this.downloadKite(this.releaseURL, opts || {});
  },

  downloadKite(url, opts) {
    opts = opts || {};
    return this.streamKiteDownload(url, opts.onDownloadProgress)
    .then(() => utils.guardCall(opts.onDownload))
    .then(() => opts.install && this.installKite(opts));
  },

  streamKiteDownload(url, progress) {
    const req = https.request(url);
    req.end();

    return utils.followRedirections(req)
    .then(resp => {
      if (progress) {
        const total = parseInt(resp.headers['content-length'], 10);
        let length = 0;

        resp.on('data', chunk => {
          length += chunk.length;
          progress(length, total, length / total);
        });
      }

      return utils.promisifyStream(
        resp.pipe(fs.createWriteStream(this.downloadPath))
      )
      .then(() => new Promise((resolve, reject) => {
        setTimeout(resolve, 100);
      }));
    });
  },

  installKite(opts) {
    opts = opts || {};
    var env = Object.create(process.env);
    env.KITE_SKIP_ONBOARDING = '1';

    utils.guardCall(opts.onInstallStart);
    return utils.execPromise(
      `"${this.KITE_INSTALLER_PATH}"` + ' --skip-onboarding --plugin-launch --channel=autocomplete-python',
      {env: env},
      'kite_install_error',
      'Unable to run Kite installer')
    .then(() => utils.guardCall(opts.onCopy))
    .then(() => fs.unlinkSync(this.KITE_INSTALLER_PATH))
    .then(() => utils.guardCall(opts.onRemove));
  },

  isKiteRunning() {
    return utils.spawnPromise(
      'tasklist',
      'tasklist_error',
      'Unable to run the tasklist command and verify whether kite is running or not')
    .then(stdout => {
      const procs = stdout.split('\n');
      if (procs.every(l => l.indexOf('kited.exe') === -1)) {
        throw new KiteStateError('Unable to find kited.exe process in the tasks list', {
          state: STATES.NOT_RUNNING,
        });
      }
    });
  },

  runKiteWithCopilot() {
    var env = Object.create(process.env);
    delete env["ELECTRON_RUN_AS_NODE"];
    return new Promise((resolve, reject) => {
      try {
        child_process.spawn(
          this.KITE_EXE_PATH,
          ['--plugin-launch-with-copilot', '--channel=autocomplete-python'],
          {detached: true, env: env});
        resolve();
      } catch (err) {
        reject(new KiteProcessError('kite_exe_error',
          {
            message: 'Unable to run kite executable',
            callStack: err.stack,
            cmd: this.KITE_EXE_PATH,
            options: {detached: true, env: env},
          }));
      }
    });
  },

  runKite() {
    return this.isKiteRunning()
    .catch(() => {
      var env = Object.create(process.env);
      env.KITE_SKIP_ONBOARDING = '1';
      delete env["ELECTRON_RUN_AS_NODE"];

      try {
        child_process.spawn(
          this.KITE_EXE_PATH,
          ['--plugin-launch', '--channel=autocomplete-python'],
          {detached: true, env: env});
      } catch (err) {
        throw new KiteProcessError('kite_exe_error',
          {
            message: 'Unable to run kite executable',
            callStack: err.stack,
            cmd: this.KITE_EXE_PATH,
            options: {detached: true, env: env},
          });
      }
    });
  },

  isKiteEnterpriseRunning() {
    return Promise.reject(new KiteStateError('Kite Enterprise is currently not supported on windows', {
      state: STATES.UNSUPPORTED,
    }));
  },

  runKiteEnterprise() {
    return Promise.reject(new KiteStateError('Kite Enterprise is currently not supported on windows', {
      state: STATES.UNSUPPORTED,
    }));
  },
};

module.exports = WindowsSupport;


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const os = __webpack_require__(6);
const fs = __webpack_require__(28);
const path = __webpack_require__(27);
const https = __webpack_require__(11);
const child_process = __webpack_require__(16);

const utils = __webpack_require__(140);
const KiteStateError = __webpack_require__(143);
const KiteProcessError = __webpack_require__(142);

const {STATES} = __webpack_require__(144);

const LinuxSupport = {
  RELEASE_URL: 'https://linux.kite.com/dls/linux/current',
  SESSION_FILE_PATH: path.join(os.homedir(), '.kite', 'session.json'),
  KITE_INSTALLER_PATH: path.join(os.tmpdir(), 'kite-installer.sh'),
  KITED_PATH: path.join(os.homedir(), '.local', 'share', 'kite', 'kited'),
  KITED_PROCESS: /kited/,
  KITE_CURRENT_LINK: path.join(os.homedir(), '.local', 'share', 'kite', 'current'),

  memKitedInstallPath: null,

  get releaseURL() {
    return this.RELEASE_URL;
  },

  get downloadPath() {
    return this.KITE_INSTALLER_PATH;
  },

  get installPath() {
    if (!this.memKitedInstallPath) {
      this.memKitedInstallPath = this.KITED_PATH;
    }
    return this.memKitedInstallPath;
  },

  resetInstallPath() {
    this.memKitedInstallPath = null;
  },

  get allInstallPaths() {
    return [this.installPath];
  },

  get enterpriseInstallPath() {
    return null;
  },

  get allEnterpriseInstallPaths() {
    return null;
  },

  get sessionFilePath() {
    return this.SESSION_FILE_PATH;
  },

  hasManyKiteInstallation() {
    return this.allInstallPaths.length > 1;
  },

  hasManyKiteEnterpriseInstallation() {
    return false;
  },

  isAdmin() {
    try {
      const user = utils.whoami();
      const adminUsers = String(child_process.execSync('getent group root adm admin sudo'))
      .split('\n')
      .map(line => line.substring(line.lastIndexOf(':') + 1))
      .reduce((acc, val) => {
        val.split(',').forEach(token => acc.push(token.trim()));
        return acc;
      }, []);
      return adminUsers.includes(user);
    } catch (e) {
      // fallback to os.userInfo()
      try {
        const userInfo = os.userInfo();
        return userInfo.uid === 0 || userInfo.username === 'root';
      } catch (ignored) {
        return false;
      }
    }
  },

  arch() {
    return os.arch();
  },

  isOSSupported() {
    return true;
  },

  isOSVersionSupported() {
    let arch = os.arch();
    return arch === 'x64';
  },

  isKiteSupported() {
    return this.isOSSupported() && this.isOSVersionSupported();
  },

  isKiteInstalled() {
    return new Promise((resolve, reject) => {
      fs.exists(this.installPath, exists => {
        if (exists) {
          resolve();
        } else {
          reject(new KiteStateError('', {
            state: STATES.UNINSTALLED,
          }));
        }
      });
    });
  },

  // downloads the latest version of kite-installer.sh
  // and uses it to retrieve the current binary installer and installation data
  downloadKiteRelease(opts) {
    return this.downloadKite(this.releaseURL, opts || {});
  },

  downloadKite(url, opts) {
    opts = opts || {};
    return this.downloadKiteInstallerScript(url, opts.onDownloadProgress)
    .then(() => this.streamKiteDownload(this.downloadPath, opts.onDownloadProgress))
    .then(() => utils.guardCall(opts.onDownload))
    .then(() => opts.install && this.installKite(opts));
  },

  downloadKiteInstallerScript(url, progress) {
    const req = https.request(url);
    req.end();

    // set download status as early as possible to display the progress bar
    if (progress) {
      progress(0, 100, 0);
    }

    return utils.followRedirections(req)
    .then(resp => {
      return utils.promisifyStream(resp.pipe(fs.createWriteStream(this.downloadPath)))
      .then(() => fs.chmodSync(this.downloadPath, 0o700))
      .then(() => new Promise((resolve, reject) => {
        setTimeout(resolve, 100);
      }));
    });
  },

  streamKiteDownload(scriptPath, progress) {
    // we can't use util.spawnPromise here because we have to stream stdout in chunks to handle the progress
    return new Promise((resolve, reject) => {
      try {
        const child = child_process.spawn(scriptPath, ['--download'], {shell: true});
        child.on('close', function(code) {
          if (code === 0) {
            resolve(child);
          } else {
            const error = new Error();

            reject(new KiteProcessError('kited_error',
            {
              message: `Unable to download Kite. Unexpected exit code ${code}.`,
              stderr: '',
              stdout: '',
              callStack: error.stack,
              cmd: `${scriptPath} --download`,
              options: ["--download"],
            }));
          }
        });

        if (progress) {
          let last = -1;
          child.stdout.on('data', chunk => {
            // chunk is a buffer when used with spawn
            let line = chunk.toString('utf8');
            let pattern = /Download: (\d+)\/(\d+)/g;
            let lastMatch, match;
            while ((match = pattern.exec(line)) !== null) {
              lastMatch = match;
            }

            if (lastMatch) {
              let received = parseInt(lastMatch[1], 10);
              let total = parseInt(lastMatch[2], 10);
              if (received >= 0 && total >= received && received > last) {
                last = received;
                progress(received, total, received / total);
              }
            }
          });
        }
      } catch (e) {
        console.error(e);
        reject(e);
      }
    });
  },

  installKite(opts) {
    opts = opts || {};

    utils.guardCall(opts.onInstallStart);
    return utils.spawnPromise(this.KITE_INSTALLER_PATH,
    ['--install'], {shell: true},
    'kite-installer install error', `unable to install kite with ${this.KITE_INSTALLER_PATH}`)
    .then(() => this.resetInstallPath()) // force recalculation of mem'd path on successful install
    .then(() => utils.guardCall(opts.onMount))
    .then(() => fs.unlinkSync(this.KITE_INSTALLER_PATH))
    .then(() => utils.guardCall(opts.onRemove));
  },

  isKiteRunning() {
    return utils.spawnPromise(
    '/bin/ps',
    ['-axo', 'pid,command'],
    {encoding: 'utf-8'},
    'ps_error',
    'unable to run the ps command and verify that Kite is running')
    .then(stdout => {
      const procs = stdout.split('\n');

      if (!procs.some(p => this.KITED_PROCESS.test(p))) {
        throw new KiteStateError('Kite process could not be found in the processes list', {
          state: STATES.NOT_RUNNING,
        });
      }
    });
  },

  runKiteWithCopilot() {
    const env = Object.assign({}, process.env);
    env.SKIP_KITE_ONBOARDING = '1';
    delete env['ELECTRON_RUN_AS_NODE'];

    return new Promise((resolve, reject) => {
      try {
        if (!fs.existsSync(this.installPath)) {
          throw new Error('kited is not installed');
        }
        child_process.spawn(this.installPath,
        ['--plugin-launch-with-copilot', '--channel=autocomplete-python'],
        {detached: true, stdio: 'ignore', env});
        resolve();
      } catch (e) {
        reject(new KiteProcessError('kited_error',
        {
          message: (e.message && e.message === 'kited is not installed') || 'unable to run kited binary',
          callStack: e.stack,
          cmd: this.installPath,
          options: {detached: true, env},
        }));
      }
    });
  },

  runKite() {
    return this.isKiteRunning()
    .catch(() => {
      const env = Object.assign({}, process.env);
      env.SKIP_KITE_ONBOARDING = '1';
      delete env['ELECTRON_RUN_AS_NODE'];

      try {
        if (!fs.existsSync(this.installPath)) {
          throw new Error('kited is not installed');
        }
        child_process.spawn(this.installPath,
        ['--plugin-launch', '--channel=autocomplete-python'],
        {detached: true, stdio: 'ignore', env});
      } catch (e) {
        throw new KiteProcessError('kited_error',
        {
          message: (e.message && e.message === 'kited is not installed') || 'unable to run kited binary',
          callStack: e.stack,
          cmd: this.installPath,
          options: {detached: true, env},
        });
      }
    });
  },

  hasBothKiteInstalled() {
    return Promise.all([
      this.isKiteInstalled(),
      this.isKiteEnterpriseInstalled(),
    ]);
  },

  isKiteEnterpriseInstalled() {
    return this.notSupported();
  },

  isKiteEnterpriseRunning() {
    return this.notSupported();
  },

  runKiteEnterprise() {
    return this.notSupported();
  },

  notSupported() {
    return Promise.reject(
    new KiteStateError('Your platform is currently not supported', {
      state: STATES.UNSUPPORTED,
    }));
  },
};

module.exports = LinuxSupport;


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const KiteStateError = __webpack_require__(143);

const {STATES} = __webpack_require__(144);

module.exports = {
  get releaseURL() {
    return null;
  },

  get downloadPath() {
    return null;
  },

  get installPath() {
    return null;
  },

  get allInstallPaths() {
    return null;
  },

  get enterpriseInstallPath() {
    return null;
  },

  get allEnterpriseInstallPaths() {
    return null;
  },

  get sessionFilePath() {
    return null;
  },

  hasManyKiteInstallation() {
    return false;
  },

  hasManyKiteEnterpriseInstallation() {
    return false;
  },

  isAdmin() {
    return false;
  },

  arch() {
    return null;
  },

  isOSSupported() {
    return false;
  },

  isOSVersionSupported() {
    return false;
  },

  isKiteSupported() {
    return false;
  },

  isKiteInstalled() {
    return this.notSupported();
  },

  downloadKite(opts) {
    return this.notSupported();
  },

  installKite(opts) {
    return this.notSupported();
  },

  isKiteRunning() {
    return this.notSupported();
  },

  runKite() {
    return this.notSupported();
  },

  hasBothKiteInstalled() {
    return Promise.all([
      this.isKiteInstalled(),
      this.isKiteEnterpriseInstalled(),
    ]);
  },

  isKiteEnterpriseInstalled() {
    return this.notSupported();
  },

  isKiteEnterpriseRunning() {
    return this.notSupported();
  },

  runKiteEnterprise() {
    return this.notSupported();
  },

  notSupported() {
    return Promise.reject(
      new KiteStateError('Your platform is currently not supported', {
        state: STATES.UNSUPPORTED,
      }));
  },
};


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = class EditorConfig {
  constructor(store) {
    this.store = store;
  }

  get(path) {
    return (this.content
      ? Promise.resolve(this.content)
      : this.store.get()
        .then(data => parse(data))
        .then(data => {
          this.content = data;
          return data;
        }))
    .then(data => readValueAtPath(path, data));
  }

  set(path, value) {
    return this.get().then(data =>
      this.store.set(stringify(writeValueAtPath(path, value, data))));
  }
};

function parse(data) {
  return data ? JSON.parse(data) : data;
}

function stringify(data) {
  return JSON.stringify(data);
}

function readValueAtPath(path, object) {
  if (!path) { return object; }

  return path.split(/\./g).reduce((memo, key) => {
    if (memo == undefined) { return memo; }
    return memo[key];
  }, object);
}

function writeValueAtPath(path, value, object) {
  if (!object) { object = {}; }

  return path.split(/\./g).reduce((memo, key, i, a) => {
    if (i === a.length - 1) {
      memo[key] = value;
      return object;
    } else if (memo[key] == undefined) {
      memo[key] = {};
      return memo[key];
    }
    return memo[key];
  }, object);
}


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = class MemoryStore {
  constructor() {}

  set(content) {
    this.content = content;
    return Promise.resolve();
  }
  get() {
    return Promise.resolve(this.content);
  }
};


/***/ }),
/* 153 */
/***/ (function(module, exports) {


// MAX_FILE_SIZE is the maximum file size to send to Kite
const MAX_FILE_SIZE = 75 * Math.pow(2, 10); // 75 KB

// MAX_PAYLOAD_SIZE is the maximum length for a POST reqest body
const MAX_PAYLOAD_SIZE = Math.pow(2, 21); // 2097152

module.exports = {
  MAX_FILE_SIZE,
  MAX_PAYLOAD_SIZE,
};


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function merge(a, b) {
  const c = {};
  for (const k in a) { c[k] = a[k]; }
  for (const k in b) { c[k] = b[k]; }
  return c;
}

function reject(key, a) {
  const b = {};
  for (const k in a) {
    if (k !== key) { b[k] = a[k]; }
  }
  return b;
}

function parseSignature(fn) {
  const [, name, signature] = /(\w+)\(([^\)]+)\)/.exec(fn.toString());
  const parameters = signature.split(/,\s*/);
  return [name, parameters];
}

function checkArguments(fn, ...args) {
  const [name, parameters] = parseSignature(fn);
  const missingArguments = [];
  args.forEach((arg, i) => {
    if (arg == null) { missingArguments.push(parameters[i]); }
  });
  if (missingArguments.length) {
    throw new Error(
      `Missing argument${missingArguments.length > 1 ? 's' : ''} ${missingArguments.join(', ')} in ${name}`);
  }
}

function checkArgumentKeys(fn, arg, argName, ...keys) {
  const missingKeys = [];
  keys.forEach((key, i) => {
    if (arg[key] == null) { missingKeys.push(key); }
  });
  if (missingKeys.length) {
    throw new Error(
      `Missing mandatory key${
        missingKeys.length > 1 ? 's' : ''
      } ${missingKeys.join(', ')} in argument ${argName} of ${fn.name}`);
  }
}

module.exports = {
  checkArgumentKeys,
  checkArguments,
  merge,
  reject,
};


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const md5 = __webpack_require__(53);

function onboardingFilePath(editor, language) {
  return [
    '/clientapi/plugins/onboarding_file', [
      `editor=${editor}`,
      `language=${language}`,
    ].join('&'),
  ].join('?');
}

function hoverPath(filename, source, position, editor, encoding) {
  const state = md5(source);
  const buffer = cleanPath(filename);
  return [
    `/api/buffer/${editor}/${buffer}/${state}/hover`,
    [
      `cursor_runes=${position}`,
      `offset_encoding=${encoding}`,
    ].join('&'),
  ].join('?');
}

function membersPath(id, page, limit) {
  return [
    `/api/editor/value/${id}/members`,
    [
      `offset=${page}`,
      `limit=${limit}`,
    ].join('&'),
  ].join('?');
}

function usagesPath(id, page, limit) {
  return [
    `/api/editor/value/${id}/usages`,
    [
      `offset=${page}`,
      `limit=${limit}`,
    ].join('&'),
  ].join('?');
}

function shouldNotifyPath(path) {
  return `/clientapi/permissions/notify?filename=${encodeURI(path)}`;
}

function statusPath(path) {
  return `/clientapi/status?filename=${encodeURI(path)}`;
}

function projectDirPath(path) {
  return `/clientapi/projectdir?filename=${encodeURI(path)}`;
}

function cleanPath(p) {
  return encodeURI(p)
  .replace(/^([A-Z]):/, '/windows/$1')
  .replace(/\/|\\|%5C/g, ':');
}

module.exports = {
  cleanPath,
  onboardingFilePath,
  hoverPath,
  membersPath,
  projectDirPath,
  shouldNotifyPath,
  statusPath,
  usagesPath,
};


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {LEVELS} = __webpack_require__(157);
const NullReporter = __webpack_require__(158);
const ConsoleReporter = __webpack_require__(159);

module.exports =  {
  LEVELS,
  LEVEL: LEVELS.INFO,

  output: typeof console != 'undefined' ? ConsoleReporter : NullReporter,

  silly(...msgs) { this.log(LEVELS.SILLY, ...msgs); },
  verbose(...msgs) { this.log(LEVELS.VERBOSE, ...msgs); },
  debug(...msgs) { this.log(LEVELS.DEBUG, ...msgs); },
  info(...msgs) { this.log(LEVELS.INFO, ...msgs); },
  warn(...msgs) { this.log(LEVELS.WARNING, ...msgs); },
  error(...msgs) { this.log(LEVELS.ERROR, ...msgs); },
  log(level, ...msgs) {
    if (level >= this.LEVEL && !this.SILENT) {
      this.output.log(level, ...msgs);
    }
  },
  logRequest() {},
  logResponse() {},
};


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  STATES: {
    UNSUPPORTED: 0,
    UNINSTALLED: 1,
    NOT_RUNNING: 2,
    UNREACHABLE: 3,
    UNLOGGED: 4,
    READY: 4,

    // legacy states, prefer the ones above for health checks
    INSTALLED: 2,
    RUNNING: 3,
    REACHABLE: 4,
    AUTHENTICATED: 4,
  },

  LEVELS: {
    SILLY: 0,
    VERBOSE: 1,
    DEBUG: 2,
    INFO: 3,
    WARNING: 4,
    ERROR: 5,
  },
};


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  log() {},
};


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {LEVELS} = __webpack_require__(157);

module.exports = {
  TRACE_ALL: false,
  METHODS: {
    [LEVELS.SILLY]: 'debug' in console ? 'debug' : 'log',
    [LEVELS.VERBOSE]: 'debug' in console ? 'debug' : 'log',
    [LEVELS.DEBUG]: 'log',
    [LEVELS.INFO]: 'info' in console ? 'info' : 'log',
    [LEVELS.WARNING]: 'warn' in console ? 'warn' : 'error',
    [LEVELS.ERROR]: 'error',
  },

  log(level, ...msgs) {
    console[this.METHODS[level]](...msgs);
  },
};


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const http = __webpack_require__(10);
const https = __webpack_require__(11);
const FormData = __webpack_require__(22);

const utils = __webpack_require__(161);

module.exports = class NodeClient {
  constructor(hostname, port, base = '', ssl = false) {
    this.hostname = hostname;
    this.port = port;
    this.base = base;
    this.protocol = ssl ? https : http;
    this.cookies = {};
  }

  request(opts, data, timeout) {
    return new Promise((resolve, reject) => {
      let form;

      opts.hostname = this.hostname;
      if (this.port > 0) { opts.port = this.port; }
      opts.path = this.base + opts.path;
      opts.headers = opts.headers || {};
      this.writeCookies(opts.headers);

      if (opts.headers['Content-Type'] === 'multipart/form-data' ||
          opts.headers['content-type'] === 'multipart/form-data') {
        delete opts.headers['Content-Type'];
        delete opts.headers['content-type'];

        form = new FormData();
        for (const key in data) {
          form.append(key, data[key]);
        }

        const headers = form.getHeaders();
        for (const key in headers) {
          opts.headers[key] = headers[key];
        }
      }

      const req = this.protocol.request(opts, resp => {
        this.readCookies(resp);
        resolve(resp);
      });
      req.on('error', err => reject(err));
      if (timeout != null) {
        req.setTimeout(timeout, () => reject(new Error('timeout')));
      }
      if (form) {
        form.pipe(req);
      } else {
        if (data) { req.write(data); }
        req.end();
      }
    });
  }

  readCookies(resp) {
    utils.parseSetCookies(resp.headers['set-cookie']).forEach(c => {
      this.cookies[c.Name] = c;
    });
  }

  writeCookies(hdrs) {
    const cookies = [];
    for (var k in this.cookies) {
      cookies.push(this.cookies[k]);
    }
    if (cookies.length) {
      hdrs.Cookies = utils.dumpCookies(cookies);
    }
  }
};


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const http = __webpack_require__(10);
const https = __webpack_require__(11);
const child_process = __webpack_require__(16);
const KiteRequestError = __webpack_require__(162);
const KiteProcessError = __webpack_require__(163);

function deepMerge(a, b) {
  a = JSON.parse(JSON.stringify(a || {}));
  b = JSON.parse(JSON.stringify(b || {}));
  const c = Object.assign({}, a);

  Object.keys(b).forEach(k => {
    if (c[k] && typeof c[k] == 'object') {
      c[k] = deepMerge(c[k], b[k]);
    } else {
      c[k] = b[k];
    }
  });

  return c;
}

function promisifyRequest(request) {
  return new Promise((resolve, reject) => {
    request.on('response', resp => resolve(resp));
    request.on('error', err => reject(err));
  });
}

function promisifyStream(stream) {
  return new Promise((resolve, reject) => {
    stream.on('finish', () => resolve());
    stream.on('error', err => reject(err));
  });
}

function request(url) {
  return url.indexOf('https://') === 0
    ? https.request(url)
    : http.request(url);
}

function hasHeader(header, headers) {
  return header in headers ? header : false;
}

function isRedirection(resp) {
  return resp.statusCode >= 300 &&
    resp.statusCode < 400 &&
    hasHeader('location', resp.headers);
}

// Given a request this function will follow the redirection until a
// code different that 303 is returned
function followRedirections(req) {
  return promisifyRequest(req)
    .then(resp => {
      if (resp.statusCode >= 200 && resp.statusCode < 300) {
        return resp;
      } else if (isRedirection(resp)) {
        const location = resp.headers.location;
        const req = request(location);
        req.end();
        return followRedirections(req);
      } else {
        throw new KiteRequestError('Invalid response status when following redirection', {
          request: req,
          response: resp,
          responseStatus: resp.statusCode,
        });
      }
    });
}

function parseSetCookies(cookies) {
  if (!Array.isArray(cookies) || !cookies.length) {
    return [];
  }
  var parse = (cookie) => {
    var parsed = {
      Path: '',
      Domain: '',
      Expires: new Date('0001-01-01T00:00:00Z'),
      RawExpires: '',
      MaxAge: 0,
      Secure: false,
      HttpOnly: false,
      Raw: '',
      Unparsed: null,
    };
    cookie.split('; ').forEach((raw) => {
      if (raw === 'HttpOnly') {
        parsed.HttpOnly = true;
        return;
      }
      if (raw === 'Secure') {
        parsed.Secure = true;
        return;
      }
      var idx = raw.indexOf('=');
      var key = raw.substring(0, idx);
      var val = raw.substring(idx + 1);
      if (key === 'Expires') {
        val = new Date(val);
      }
      if (key in parsed) {
        parsed[key] = val;
      } else {
        parsed.Name = key;
        parsed.Value = val;
      }
    });
    return parsed;
  };
  return cookies.map(parse);
}

function findCookie(cookies, name) {
  return cookies.filter(c => c.Name === name)[0];
}

function dumpCookies(cookies) {
  return cookies.map((c) => c.Name + '=' + c.Value).join('; ');
}

function handleResponseData(resp, callback) {
  if (callback) {
    let data = '';
    resp.on('data', (chunk) => data += chunk);
    resp.on('end', () => callback(data));
    return null;
  } else {
    return new Promise((resolve, reject) => {
      let data = '';
      resp.on('data', (chunk) => data += chunk);
      resp.on('error', err => reject(err));
      resp.on('end', () => resolve(data));
    });
  }
}

// Returns a new Promise that resolve if the passed-in promise is rejected and
// will be rejected with the provided error if the passed-in promise resolve.
function reversePromise(promise, rejectionMessage, resolutionMessage) {
  return new Promise((resolve, reject) => {
    promise
      .then(() => reject(rejectionMessage))
      .catch(() => resolve(resolutionMessage));
  });
}

// Given a function returning a promise, it returns a new Promise that will be
// resolved if one of the promises returned by the function resolves. If no
// promises have been resolved after the specified amount of attempts the
// returned promise will be rejected
function retryPromise(doAttempt, attempts, interval) {
  return new Promise((resolve, reject) => {
    makeAttempt(0, resolve, reject);
  });

  function makeAttempt(n, resolve, reject) {
    var retryOrReject = (err) => {
      n + 1 >= attempts
        ? reject(err)
        : makeAttempt(n + 1, resolve, reject);
    };
    setTimeout(() =>
      doAttempt().then(resolve, retryOrReject),
    n ? interval : 0);
  }
}

// Spawns a child process and returns a promise that will be resolved if
// the process ends with a code of 0, otherwise the promise will be rejected
// with an error object of the provided rejectionType.
function spawnPromise(cmd, cmdArgs, cmdOptions, rejectionType, rejectionMessage) {
  const args = [cmd];

  if (cmdArgs) {
    if (typeof cmdArgs === 'string') {
      rejectionType = cmdArgs;
      rejectionMessage = cmdOptions;
    } else {
      args.push(cmdArgs);
    }
  }

  if (cmdOptions) {
    if (typeof cmdOptions === 'string') {
      rejectionMessage = rejectionType;
      rejectionType = cmdOptions;
    } else {
      args.push(cmdOptions);
    }
  }

  return new Promise((resolve, reject) => {
    const proc = child_process.spawn(...args);
    let stdout = '';
    let stderr = '';

    proc.stdout.on('data', data => stdout += data);
    proc.stderr.on('data', data => stdout += data);

    const error = new Error();

    proc.on('error', _ => {
      reject(new KiteProcessError(rejectionType,
        {
          message: rejectionMessage + 'for args: ' + args,
          stderr,
          stdout,
          callStack: error.stack,
          cmd: `${cmd} ${(typeof cmdOptions != 'string' ? cmdArgs || [] : []).join(' ')}`,
          options: typeof cmdOptions != 'string' ? cmdOptions : undefined,
        }));
    });

    proc.on('close', code => {
      code
        ? reject(new KiteProcessError(rejectionType,
          {
            message: rejectionMessage,
            stderr,
            stdout,
            callStack: error.stack,
            cmd: `${cmd} ${(typeof cmdOptions != 'string' ? cmdArgs || [] : []).join(' ')}`,
            options: typeof cmdOptions != 'string' ? cmdOptions : undefined,
          }))
        : resolve(stdout);
    });
  });
}

function anyPromise(arrayOfPromises) {
  // For each promise that resolves or rejects,
  // make them all resolve.
  // Record which ones did resolve or reject
  const resolvingPromises = arrayOfPromises.map(promise => {
    return promise
      .then(result => ({ resolve: true, result: result }))
      .catch(error => ({ resolve: false, result: error }));
  });

  return Promise.all(resolvingPromises).then(results => {
    const resolved = results.reduce((m, r) => {
      if (m) { return m; }
      if (r.resolve) { return r; }
      return null;
    }, null);


    if (resolved) {
      return resolved.result;
    } else {
      throw results.map(r => r.result);
    }
  });
}

// Exec a child process and returns a promise that will be resolved if
// the process ends with success, otherwise the promise will be rejected
// with an error object of the provided rejectionType.
function execPromise(cmd, cmdOptions, rejectionType, rejectionMessage) {
  const args = [cmd];

  if (cmdOptions) {
    if (cmdOptions === 'string') {
      rejectionMessage = rejectionType;
      rejectionType = cmdOptions;
      cmdOptions = {};
    }
  } else {
    cmdOptions = {};
  }

  args.push(cmdOptions);

  const error = new Error();

  return new Promise((resolve, reject) => {
    child_process.exec(...args, (err, stdout, stderr) => {
      if (err) {
        reject(new KiteProcessError(rejectionType,
          {
            message: rejectionMessage,
            stdout,
            stderr,
            callStack: error.stack,
            cmd,
            options: typeof cmdOptions != 'string' ? cmdOptions : undefined,
          }));
      }
      resolve(stdout);
    });
  });
}

// Calls the passed-in function if its actually a function.
function guardCall(fn) { typeof fn === 'function' && fn(); }

// Attempts to parse a json string and returns the fallback if it can't.
function parseJSON(json, fallback) {
  try { return JSON.parse(json) || fallback; } catch (e) { return fallback; }
}

// evaluates whether a particular path should have extra processing
// done on it in the case of a Promise rejection
// NB: this should be taken out with a more robust refactor
function shouldAddCatchProcessing(path) {
  return !path.startsWith('/clientapi/editor');
}

// should be wrapped in try/catch
function whoami() {
  return String(child_process.execSync('whoami')).trim();
}

module.exports = {
  anyPromise,
  deepMerge,
  dumpCookies,
  execPromise,
  findCookie,
  followRedirections,
  guardCall,
  handleResponseData,
  parseJSON,
  parseSetCookies,
  promisifyRequest,
  promisifyStream,
  retryPromise,
  reversePromise,
  shouldAddCatchProcessing,
  spawnPromise,
  whoami,
};


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = class KiteRequestError extends Error {
  get type() { return 'bad_status'; }

  constructor(message, data) {
    super(message);
    this.data = data;
    Error.captureStackTrace(this, this.constructor);
  }
};


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = class KiteProcessError extends Error {
  constructor(type, data) {
    super(type);
    this.data = data;
    this.message = `${type}: ${data.message}\ncmd: ${data.cmd}`;
    if (data.stdout) {
      this.message += `\nstdout: ${data.stdout}`;
    }
    if (data.stderr) {
      this.message += `\nstderr: ${data.stderr}`;
    }
    Error.captureStackTrace(this, this.constructor);
  }
};


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const fs = __webpack_require__(28);

const os = __webpack_require__(6);

const path = __webpack_require__(27);

const {
  Logger
} = __webpack_require__(7);

const configPath = path.join(path.dirname(atom.config.getUserConfigPath() || os.homedir()), 'kite-config.json');
var config = null;

(function () {
  try {
    Logger.verbose(`initializing localconfig from ${configPath}...`);
    var str = fs.readFileSync(configPath, {
      encoding: 'utf8'
    });
    config = JSON.parse(str);
  } catch (err) {
    config = {};
  }
})();

function persist() {
  var str = JSON.stringify(config, null, 2); // serialize with whitespace for human readability

  !atom.inSpecMode() && fs.writeFile(configPath, str, 'utf8', err => {
    if (err) {
      Logger.error(`failed to persist localconfig to ${configPath}`, err);
    }
  });
} // get gets a value from storage


function get(key, fallback) {
  return key in config ? config[key] : fallback;
} // set assigns a value to storage and asynchronously persists it to disk


function set(key, value) {
  config[key] = value;
  persist(); // will write to disk asynchronously
}

module.exports = {
  get: get,
  set: set
};

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const os = __webpack_require__(6);
const EventEmitter = __webpack_require__(14);

const utils = __webpack_require__(161);
const KiteStateError = __webpack_require__(166);
const KiteRequestError = __webpack_require__(162);
const {STATES} = __webpack_require__(157);
const NodeClient = __webpack_require__(160);
const BrowserClient = __webpack_require__(167);

module.exports = {
  STATES,

  adapter: (() => {
    switch (os.platform()) {
      case 'darwin': return __webpack_require__(168);
      case 'win32': return __webpack_require__(169);
      case 'linux': return __webpack_require__(170);
      default: return __webpack_require__(171);
    }
  })(),

  emitter: new EventEmitter(),

  client: new NodeClient('localhost', '46624'),

  toggleRequestDebug() {
    if (this.client instanceof NodeClient) {
      this.client = new BrowserClient(this.client.hostname, this.client.port);
    } else {
      this.client = new NodeClient(this.client.hostname, this.client.port);
    }
  },

  onDidFailRequest(listener) {
    this.emitter.on('did-fail-request', listener);
    return {
      dispose: () => {
        this.emitter.removeListener('did-fail-request', listener);
      },
    };
  },

  request(options, data, timeout) {
    return this.client.request(options, data, timeout)
    .catch(() => {
      let promise = Promise.resolve();
      if (utils.shouldAddCatchProcessing(options.path)) {
        promise = promise.then(() => this.isKiteSupported())
              .then(() => this.isKiteInstalled())
              .then(() => this.isKiteRunning());
      }
      return promise.then(() => {
        throw new KiteStateError('Kite could not be reached when attempting a request', {
          state: STATES.UNREACHABLE,
          request: options,
          requestData: data,
        });
      });
    })
    .then(resp => {
      return resp.statusCode >= 400
        ? utils.handleResponseData(resp).then(respData => {
          throw new KiteRequestError('bad_status', {
            responseStatus: resp.statusCode,
            request: options,
            requestData: data,
            response: resp,
            responseData: respData,
          });
        })
        : resp;
    })
    .catch(err => {
      this.emitter.emit('did-fail-request', err);
      throw err;
    });
  },

  checkHealth() {
    const extractErr = ([err]) => {
      throw err;
    };

    return this.isKiteSupported()
    .then(() =>
      utils.anyPromise([this.isKiteInstalled(), this.isKiteEnterpriseInstalled()]).catch(extractErr))
    .then(() =>
      utils.anyPromise([this.isKiteRunning(), this.isKiteEnterpriseRunning()]).catch(extractErr))
    .then(() => this.isKiteReachable())
    .then(() => STATES.READY)
    .catch(err => {
      if (!err.data || err.data.state == null) { throw err; }
      return err.data.state;
    });
  },

  // FIXME: This method is now deprecated, use checkHealth instead.
  handleState() {
    return this.checkHealth();
  },

  isKiteSupported() {
    return this.adapter.isKiteSupported()
      ? Promise.resolve()
      : Promise.reject(new KiteStateError('Kite is currently not support on your platform', {
        state: STATES.UNSUPPORTED,
      }));
  },

  isKiteInstalled() {
    return this.adapter.isKiteInstalled();
  },

  isKiteRunning() {
    return this.adapter.isKiteRunning();
  },

  canInstallKite() {
    return this.isKiteSupported()
    .then(() =>
      utils.reversePromise(this.adapter.isKiteInstalled(),
        new KiteStateError('Kite is already installed', {
          state: STATES.INSTALLED,
        })));
  },

  installKite(options) {
    return this.adapter.installKite(options);
  },

  downloadKiteRelease(options) {
    return this.adapter.downloadKiteRelease(options);
  },

  downloadKite(url, options) {
    return this.adapter.downloadKite(url, options);
  },

  canRunKite() {
    return this.isKiteInstalled()
    .then(() =>
      utils.reversePromise(this.isKiteRunning(),
        new KiteStateError('Kite is already runnning', {
          state: STATES.RUNNING,
        })));
  },

  runKiteWithCopilot() {
    return this.adapter.runKiteWithCopilot();
  },

  runKite() {
    return this.adapter.runKite();
  },

  runKiteAndWait(attempts, interval) {
    return this.runKite().then(() => this.waitForKite(attempts, interval));
  },

  isKiteReachable() {
    return this.client.request({
      path: '/clientapi/ping',
      method: 'GET',
    }, null, 200); // in tests, this took no longer than 15ms to respond
  },

  waitForKite(attempts, interval) {
    return utils.retryPromise(() => this.isKiteReachable(), attempts, interval);
  },

  isKiteEnterpriseInstalled() {
    return this.adapter.isKiteEnterpriseInstalled();
  },

  isKiteEnterpriseRunning() {
    return this.adapter.isKiteEnterpriseRunning();
  },

  canRunKiteEnterprise() {
    return this.isKiteEnterpriseInstalled()
    .then(() =>
      utils.reversePromise(this.isKiteEnterpriseRunning(),
        new KiteStateError('Kite Enterprise is already runnning', {
          state: STATES.RUNNING,
        })));
  },

  runKiteEnterprise() {
    return this.adapter.runKiteEnterprise();
  },

  runKiteEnterpriseAndWait(attempts, interval) {
    return this.runKiteEnterprise().then(() => this.waitForKite(attempts, interval));
  },

  hasBothKiteInstalled() {
    return this.adapter.hasBothKiteInstalled();
  },

  hasManyKiteInstallation() {
    return this.adapter.hasManyKiteInstallation();
  },

  hasManyKiteEnterpriseInstallation() {
    return this.adapter.hasManyKiteEnterpriseInstallation();
  },

  isAdmin() {
    return this.adapter.isAdmin();
  },

  arch() {
    return this.adapter.arch();
  },

  isOSSupported() {
    return this.adapter.isOSSupported();
  },

  isOSVersionSupported() {
    return this.adapter.isOSVersionSupported();
  },

  isUserAuthenticated() {
    return this.client.request({
      path: '/clientapi/user',
      method: 'GET',
    })
    .then((resp) => {
      switch (resp.statusCode) {
        case 200:
          return utils.handleResponseData(resp);
        case 401:
          throw new KiteStateError('Kite is not authenticated', {
            state: STATES.UNLOGGED,
          });
        default:
          return utils.handleResponseData(resp).then(respData => {
            throw new KiteRequestError('Invalid response status when checking Kite authentication', {
              responseStatus: resp.statusCode,
              request: {
                path: '/clientapi/user',
                method: 'GET',
              },
              response: resp,
              responseData: respData,
            });
          });
      }
    });
  },
};


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = class KiteStateError extends Error {
  get type() { return 'bad_state'; }
  
  constructor(message, data) {
    super(message);
    this.data = data;
    Error.captureStackTrace(this, this.constructor);
  }
};


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const utils = __webpack_require__(161);

const createResponse = (status, raw, req, headers = {}) => {
  const resp = {
    statusCode: status,
    req,
    on(event, callback) {
      switch (event) {
        case 'data':
          callback(raw);
          break;
        case 'end':
          callback();
          break;
      }
    },
  };
  for (let k in headers) { resp[k] = headers[k]; }
  resp.headers = resp.headers || {};

  return resp;
};

module.exports = class BrowserClient {
  constructor(hostname, port, base, ssl) {
    base = base || '';
    ssl = ssl || false;
    this.hostname = hostname;
    this.port = port;
    this.base = base;
    this.protocol = ssl ? 'https' : 'http';
    this.cookies = {};
  }

  request(opts, data, timeout) {
    const domain = this.port && this.port !== -1
      ? `${this.hostname}:${this.port}`
      : this.hostname;
    const url = `${this.protocol}://${domain}${this.base}${opts.path}`;
    const method = opts.method || 'GET';

    return new Promise((resolve, reject) => {
      const query = new XMLHttpRequest();
      query.addEventListener('error', reject);
      query.addEventListener('abort', reject);
      query.addEventListener('load', () => {
        const raw = query.responseText;

        resolve(createResponse(query.status, raw, {
          method,
          path: opts.path,
          url,
        }));
      });

      query.open(method, url);
      if (timeout) {
        query.timeout = timeout; // Set timeout to 4 seconds (4000 milliseconds)
        query.ontimeout = () => { reject(new Error('Request Timeout')); };
      }

      if (opts.headers) {
        if (opts.headers['Content-Type'] === 'multipart/form-data' ||
            opts.headers['content-type'] === 'multipart/form-data') {
          delete opts.headers['Content-Type'];
          delete opts.headers['content-type'];

          const form = new FormData();

          for (const key in data) {
            form.append(key, data[key]);
          }
          data = form;
        }

        for (const header in opts.headers) {
          query.setRequestHeader(header, opts.headers[header]);
        }
      }
      if (!opts.headers || !opts.headers['Cache-Control']) {
        query.setRequestHeader('Cache-Control', 'no-cache, must-revalidate');
      }

      query.send(data);
    });
  }

  readCookies(resp) {
    utils.parseSetCookies(resp.headers['set-cookie']).forEach(c => {
      this.cookies[c.Name] = c;
    });
  }

  writeCookies(hdrs) {
    var cookies = [];
    for (var k in this.cookies) {
      cookies.push(this.cookies[k]);
    }
    if (cookies.length) {
      hdrs.Cookies = utils.dumpCookies(cookies);
    }
  }
};


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const os = __webpack_require__(6);
const fs = __webpack_require__(28);
const path = __webpack_require__(27);
const https = __webpack_require__(11);
const child_process = __webpack_require__(16);
const utils = __webpack_require__(161);
const KiteStateError = __webpack_require__(166);
const {STATES} = __webpack_require__(157);

const OSXSupport = {
  RELEASE_URL: 'https://alpha.kite.com/release/dls/mac/current',
  APPS_PATH: '/Applications/',
  KITE_DMG_PATH: '/tmp/Kite.dmg',
  KITE_VOLUME_PATH: '/Volumes/Kite/',
  KITE_APP_PATH: {mounted: '/Volumes/Kite/Kite.app', defaultInstalled: '/Applications/Kite.app'},
  KITE_SIDEBAR_PATH: '/Applications/Kite.app/Contents/MacOS/KiteSidebar.app',
  KITE_BUNDLE_ID: 'com.kite.Kite',
  SESSION_FILE_PATH: path.join(os.homedir(), '.kite', 'session.json'),

  get releaseURL() {
    return this.RELEASE_URL;
  },

  get downloadPath() {
    return this.KITE_DMG_PATH;
  },

  get installPath() {
    return this.allInstallPaths[0];
  },

  get allInstallPaths() {
    let paths = String(child_process.spawnSync('mdfind', [
      'kMDItemCFBundleIdentifier = "com.kite.Kite"',
    ]).stdout).trim().split('\n');
    if (paths.indexOf(this.KITE_APP_PATH.defaultInstalled) === -1 && this.checkDefaultAppPath()) {
      paths.push(this.KITE_APP_PATH.defaultInstalled);
    }
    return paths.filter(p => p !== '');
  },

  get enterpriseInstallPath() {
    return this.allEnterpriseInstallPaths[0];
  },

  get allEnterpriseInstallPaths() {
    return String(child_process.spawnSync('mdfind', [
      'kMDItemCFBundleIdentifier = "enterprise.kite.Kite"',
    ]).stdout).trim().split('\n');
  },

  get sessionFilePath() {
    return this.SESSION_FILE_PATH;
  },

  isAdmin() {
    try {
      const user = utils.whoami();
      const adminUsers = String(child_process.execSync('dscacheutil -q group -a name admin'))
      .split('\n')
      .filter(l => /^users:/.test(l))[0]
      .trim()
      .replace(/users:\s+/, '')
      .split(/\s/g);
      return adminUsers.includes(user);
    } catch (e) {
      return false;
    }
  },

  arch() {
    return os.arch();
  },

  isOSSupported() {
    return true;
  },

  isOSVersionSupported() {
    return parseFloat(os.release()) >= 14;
  },

  isKiteSupported() {
    return this.isOSVersionSupported();
  },

  checkDefaultAppPath() {
    return fs.existsSync(this.KITE_APP_PATH.defaultInstalled);
  },

  isKiteInstalled() {
    return utils.spawnPromise(
      'mdfind',
      ['kMDItemCFBundleIdentifier = "com.kite.Kite"'],
      'mdfind_error',
      'Unable to run mdfind and verify that Kite is installed')
    .then(res => {
      if ((!res || res.trim() === '') && !this.checkDefaultAppPath()) {
        throw new KiteStateError('Unable to find Kite application install using mdfind', {
          state: STATES.UNINSTALLED,
        });
      }
    });
  },

  hasManyKiteInstallation() {
    return this.allInstallPaths.length > 1;
  },

  hasManyKiteEnterpriseInstallation() {
    return this.allEnterpriseInstallPaths.length > 1;
  },

  hasBothKiteInstalled() {
    return Promise.all([
      this.isKiteInstalled(),
      this.isKiteEnterpriseInstalled(),
    ]);
  },

  isKiteEnterpriseInstalled() {
    return utils.spawnPromise(
      'mdfind',
      ['kMDItemCFBundleIdentifier = "enterprise.kite.Kite"'],
      'mdfind_error',
      'Unable to run mdfind and verify that kite enterprise is installed')
    .then(res => {
      if (!res || res.trim() === '') {
        throw new KiteStateError('Unable to find Kite Enterprise application install using mdfind', {
          state: STATES.UNINSTALLED,
        });
      }
    });
  },

  downloadKiteRelease(opts) {
    return this.downloadKite(this.releaseURL, opts || {});
  },

  downloadKite(url, opts) {
    opts = opts || {};
    return this.streamKiteDownload(url, opts.onDownloadProgress)
    .then(() => utils.guardCall(opts.onDownload))
    .then(() => opts.install && this.installKite(opts));
  },

  streamKiteDownload(url, progress) {
    const req = https.request(url);
    req.end();

    return utils.followRedirections(req)
    .then(resp => {
      if (progress) {
        const total = parseInt(resp.headers['content-length'], 10);
        let length = 0;

        resp.on('data', chunk => {
          length += chunk.length;
          progress(length, total, length / total);
        });
      }

      return utils.promisifyStream(
        resp.pipe(fs.createWriteStream(this.downloadPath))
      )
      .then(() => new Promise((resolve, reject) => {
        setTimeout(resolve, 100);
      }));
    });
  },

  installKite(opts) {
    opts = opts || {};

    utils.guardCall(opts.onInstallStart);
    return utils.spawnPromise(
      'hdiutil',
      ['attach', '-nobrowse', this.KITE_DMG_PATH],
      'mount_error',
      'Unable to mount Kite.dmg')
    .then(() => utils.guardCall(opts.onMount))
    .then(() => utils.spawnPromise(
      'cp',
      ['-r', this.KITE_APP_PATH.mounted, this.APPS_PATH],
      'cp_error',
      'Unable to copy Kite.app in the applications directory'))
    .then(() => utils.guardCall(opts.onCopy))
    .then(() => utils.spawnPromise(
      'hdiutil',
      ['detach', this.KITE_VOLUME_PATH],
      'unmount_error',
      'Unable to unmount Kite.dmg'))
    .then(() => utils.guardCall(opts.onUnmount))
    .then(() => utils.spawnPromise(
      'rm', [this.KITE_DMG_PATH],
      'rm_error',
      'Unable to remove Kite.dmg'))
    .then(() => utils.guardCall(opts.onRemove))
    // mdfind takes some time to index the app location, so we need to
    // wait for the install to fully complete. Runs 10 times at 1.5s
    // intervals.
    .then(() => utils.retryPromise(() => this.isKiteInstalled(), 10, 1500));
  },

  isKiteRunning() {
    return utils.spawnPromise(
      '/bin/ps',
      ['-axco', 'command'],
      {encoding: 'utf8'},
      'ps_error',
      'Unable to run the ps command and verify that Kite is running')
    .then(stdout => {
      const procs = stdout.split('\n');
      if (!procs.some(s => /^Kite$/.test(s))) {
        throw new KiteStateError('Kite process could not be found in the processes list', {
          state: STATES.NOT_RUNNING,
        });
      }
    });
  },

  runKiteWithCopilot() {
    const env = Object.assign({}, process.env);
    delete env['ELECTRON_RUN_AS_NODE'];

    return utils.spawnPromise(
      'open',
      ['-a', this.installPath, '--args', '--plugin-launch-with-copilot', '--channel=autocomplete-python'],
      { env: env },
      'open_error',
      'Unable to run the open command to start Kite'
    );
  },

  runKite() {
    const env = Object.assign({}, process.env);
    delete env['ELECTRON_RUN_AS_NODE'];

    return this.isKiteRunning()
    .catch(() => utils.spawnPromise(
      'defaults',
      ['write', 'com.kite.Kite', 'shouldReopenSidebar', '0'],
      'defaults_error',
      'Unable to run defaults command')
    .then(() =>
    utils.spawnPromise(
      'open',
      ['-a', this.installPath, '--args', '--plugin-launch', '--channel=autocomplete-python'],
      { env: env },
      'open_error',
      'Unable to run the open command to start Kite'
    )));
  },

  isKiteEnterpriseRunning() {
    return utils.spawnPromise(
      '/bin/ps',
      ['-axco', 'command'],
      {encoding: 'utf8'},
      'ps_error',
      'Unable to run the ps command and verify that Kite enterprise is running')
    .then(stdout => {
      const procs = stdout.split('\n');
      if (!procs.some(s => /^KiteEnterprise$/.test(s))) {
        throw new KiteStateError('Kite Enterprise process could not be found in the processes list', {
          state: STATES.NOT_RUNNING,
        });
      }
    });
  },

  runKiteEnterprise() {
    const env = Object.assign({}, process.env);
    delete env['ELECTRON_RUN_AS_NODE'];

    return utils.spawnPromise(
      'defaults',
      ['write', 'enterprise.kite.Kite', 'shouldReopenSidebar', '0'],
      'defaults_error',
      'Unable to run defaults command')
    .then(() =>
      utils.spawnPromise(
        'open',
        ['-a', this.enterpriseInstallPath],
        { env: env },
        'open_error',
        'Unable to run the open command and start Kite enterprise'));
  },
};

module.exports = OSXSupport;


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const os = __webpack_require__(6);
const fs = __webpack_require__(28);
const path = __webpack_require__(27);
const https = __webpack_require__(11);
const child_process = __webpack_require__(16);
const utils = __webpack_require__(161);
const KiteStateError = __webpack_require__(166);
const KiteProcessError = __webpack_require__(163);

const {STATES} = __webpack_require__(157);

const KEY_BAT = `"${path.join(__dirname, 'read-key.bat')}"`;
const ARCH_BAT = `"${path.join(__dirname, 'read-arch.bat')}"`;
let COMPUTED_INSTALL_PATH;

const WindowsSupport = {
  RELEASE_URL: 'https://alpha.kite.com/release/dls/windows/current',
  KITE_INSTALLER_PATH: path.join(os.tmpdir(), 'KiteSetup.exe'),
  SESSION_FILE_PATH: path.join(process.env.LOCALAPPDATA, 'Kite', 'session.json'),

  // We're only setting the install path in tests
  set KITE_EXE_PATH(path) {
    COMPUTED_INSTALL_PATH = path;
  },
  get KITE_EXE_PATH() {
    if (!COMPUTED_INSTALL_PATH) {
      let installDir, fallbackInstallDir;

      if (process.env.ProgramW6432) {
        fallbackInstallDir = path.join(process.env.ProgramW6432, 'Kite');
      } else {
        // TODO: report that even the fallback needed a fallback
        fallbackInstallDir = 'C:\\Program Files\\Kite';
      }

      try {
        const registryDir = String(child_process.execSync(KEY_BAT)).trim();

        installDir = registryDir !== 'not found'
          ? registryDir
          : fallbackInstallDir;
      } catch (err) {
        installDir = fallbackInstallDir;
      }
      COMPUTED_INSTALL_PATH = path.join(installDir, 'kited.exe');
    }

    return COMPUTED_INSTALL_PATH;
  },

  get releaseURL() {
    return this.RELEASE_URL;
  },

  get downloadPath() {
    return this.KITE_INSTALLER_PATH;
  },

  get installPath() {
    return this.KITE_EXE_PATH;
  },

  get enterpriseInstallPath() {
    return null;
  },

  get allInstallPaths() {
    return [this.installPath];
  },

  get allEnterpriseInstallPaths() {
    return [];
  },

  get sessionFilePath() {
    return this.SESSION_FILE_PATH;
  },

  isAdmin() {
    try {
      // Note that this method can still fail if the server has not been started
      // but it has the merit of being simple and reliable
      // see https://stackoverflow.com/questions/4051883/batch-script-how-to-check-for-admin-rights
      // for details
      child_process.execSync('net session');
      return true;
    } catch (e) {
      return false;
    }
  },

  arch() {
    /* if (!this.cachedArch) { this.cachedArch = os.arch(); }
    
    // for backwards compatibility, we don't just return the direct result of the os call
    if (this.cachedArch === 'x32') { return '32bit'; }
    if (this.cachedArch === 'x64') { return '64bit'; }
    
    return this.cachedArch; */
    
    // we are lax here due to an edge case with a 32bit vscode running on a 64bit
    // os that results in Node getting the architecture of the VSCode environment vs.
    // the architecture of the OS itself
    // Ultimately, this deserves more thought in terms of its handling
    return '64bit';
  },

  isOSSupported() {
    return true;
  },

  isOSVersionSupported() {
    return parseFloat(os.release()) >= 6.1 &&
           this.arch() === '64bit';
  },

  isKiteSupported() {
    return this.isOSVersionSupported();
  },

  isKiteInstalled() {
    return new Promise((resolve, reject) => {
      fs.exists(this.KITE_EXE_PATH, (exists) => {
        if (exists) {
          resolve();
        } else {
          reject(new KiteStateError('', {
            state: STATES.UNINSTALLED,
          }));
        }
      });
    });
  },

  isKiteEnterpriseInstalled() {
    return Promise.reject(new KiteStateError('Kite Enterprise is currently not supported on windows', {
      state: STATES.UNSUPPORTED,
    }));
  },

  hasManyKiteInstallation() {
    return this.allInstallPaths.length > 1;
  },

  hasManyKiteEnterpriseInstallation() {
    return this.allEnterpriseInstallPaths.length > 1;
  },

  hasBothKiteInstalled() {
    return Promise.all([
      this.isKiteInstalled(),
      this.isKiteEnterpriseInstalled(),
    ]);
  },

  downloadKiteRelease(opts) {
    return this.downloadKite(this.releaseURL, opts || {});
  },

  downloadKite(url, opts) {
    opts = opts || {};
    return this.streamKiteDownload(url, opts.onDownloadProgress)
    .then(() => utils.guardCall(opts.onDownload))
    .then(() => opts.install && this.installKite(opts));
  },

  streamKiteDownload(url, progress) {
    const req = https.request(url);
    req.end();

    return utils.followRedirections(req)
    .then(resp => {
      if (progress) {
        const total = parseInt(resp.headers['content-length'], 10);
        let length = 0;

        resp.on('data', chunk => {
          length += chunk.length;
          progress(length, total, length / total);
        });
      }

      return utils.promisifyStream(
        resp.pipe(fs.createWriteStream(this.downloadPath))
      )
      .then(() => new Promise((resolve, reject) => {
        setTimeout(resolve, 100);
      }));
    });
  },

  installKite(opts) {
    opts = opts || {};
    var env = Object.create(process.env);
    env.KITE_SKIP_ONBOARDING = '1';

    utils.guardCall(opts.onInstallStart);
    return utils.execPromise(
      `"${this.KITE_INSTALLER_PATH}"` + ' --skip-onboarding --plugin-launch --channel=autocomplete-python',
      {env: env},
      'kite_install_error',
      'Unable to run Kite installer')
    .then(() => utils.guardCall(opts.onCopy))
    .then(() => fs.unlinkSync(this.KITE_INSTALLER_PATH))
    .then(() => utils.guardCall(opts.onRemove));
  },

  isKiteRunning() {
    return utils.spawnPromise(
      'tasklist',
      'tasklist_error',
      'Unable to run the tasklist command and verify whether kite is running or not')
    .then(stdout => {
      const procs = stdout.split('\n');
      if (procs.every(l => l.indexOf('kited.exe') === -1)) {
        throw new KiteStateError('Unable to find kited.exe process in the tasks list', {
          state: STATES.NOT_RUNNING,
        });
      }
    });
  },

  runKiteWithCopilot() {
    var env = Object.create(process.env);
    delete env["ELECTRON_RUN_AS_NODE"];
    return new Promise((resolve, reject) => {
      try {
        child_process.spawn(
          this.KITE_EXE_PATH,
          ['--plugin-launch-with-copilot', '--channel=autocomplete-python'],
          {detached: true, env: env});
        resolve();
      } catch (err) {
        reject(new KiteProcessError('kite_exe_error',
          {
            message: 'Unable to run kite executable',
            callStack: err.stack,
            cmd: this.KITE_EXE_PATH,
            options: {detached: true, env: env},
          }));
      }
    });
  },

  runKite() {
    return this.isKiteRunning()
    .catch(() => {
      var env = Object.create(process.env);
      env.KITE_SKIP_ONBOARDING = '1';
      delete env["ELECTRON_RUN_AS_NODE"];

      try {
        child_process.spawn(
          this.KITE_EXE_PATH,
          ['--plugin-launch', '--channel=autocomplete-python'],
          {detached: true, env: env});
      } catch (err) {
        throw new KiteProcessError('kite_exe_error',
          {
            message: 'Unable to run kite executable',
            callStack: err.stack,
            cmd: this.KITE_EXE_PATH,
            options: {detached: true, env: env},
          });
      }
    });
  },

  isKiteEnterpriseRunning() {
    return Promise.reject(new KiteStateError('Kite Enterprise is currently not supported on windows', {
      state: STATES.UNSUPPORTED,
    }));
  },

  runKiteEnterprise() {
    return Promise.reject(new KiteStateError('Kite Enterprise is currently not supported on windows', {
      state: STATES.UNSUPPORTED,
    }));
  },
};

module.exports = WindowsSupport;


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const os = __webpack_require__(6);
const fs = __webpack_require__(28);
const path = __webpack_require__(27);
const https = __webpack_require__(11);
const child_process = __webpack_require__(16);

const utils = __webpack_require__(161);
const KiteStateError = __webpack_require__(166);
const KiteProcessError = __webpack_require__(163);

const {STATES} = __webpack_require__(157);

const LinuxSupport = {
  RELEASE_URL: 'https://linux.kite.com/dls/linux/current',
  SESSION_FILE_PATH: path.join(os.homedir(), '.kite', 'session.json'),
  KITE_INSTALLER_PATH: path.join(os.tmpdir(), 'kite-installer.sh'),
  KITED_PATH: path.join(os.homedir(), '.local', 'share', 'kite', 'kited'),
  KITED_PROCESS: /kited/,
  KITE_CURRENT_LINK: path.join(os.homedir(), '.local', 'share', 'kite', 'current'),

  memKitedInstallPath: null,

  get releaseURL() {
    return this.RELEASE_URL;
  },

  get downloadPath() {
    return this.KITE_INSTALLER_PATH;
  },

  get installPath() {
    if (!this.memKitedInstallPath) {
      this.memKitedInstallPath = this.KITED_PATH;
    }
    return this.memKitedInstallPath;
  },

  resetInstallPath() {
    this.memKitedInstallPath = null;
  },

  get allInstallPaths() {
    return [this.installPath];
  },

  get enterpriseInstallPath() {
    return null;
  },

  get allEnterpriseInstallPaths() {
    return null;
  },

  get sessionFilePath() {
    return this.SESSION_FILE_PATH;
  },

  hasManyKiteInstallation() {
    return this.allInstallPaths.length > 1;
  },

  hasManyKiteEnterpriseInstallation() {
    return false;
  },

  isAdmin() {
    try {
      const user = utils.whoami();
      const adminUsers = String(child_process.execSync('getent group root adm admin sudo'))
      .split('\n')
      .map(line => line.substring(line.lastIndexOf(':') + 1))
      .reduce((acc, val) => {
        val.split(',').forEach(token => acc.push(token.trim()));
        return acc;
      }, []);
      return adminUsers.includes(user);
    } catch (e) {
      // fallback to os.userInfo()
      try {
        const userInfo = os.userInfo();
        return userInfo.uid === 0 || userInfo.username === 'root';
      } catch (ignored) {
        return false;
      }
    }
  },

  arch() {
    return os.arch();
  },

  isOSSupported() {
    return true;
  },

  isOSVersionSupported() {
    let arch = os.arch();
    return arch === 'x64';
  },

  isKiteSupported() {
    return this.isOSSupported() && this.isOSVersionSupported();
  },

  isKiteInstalled() {
    return new Promise((resolve, reject) => {
      fs.exists(this.installPath, exists => {
        if (exists) {
          resolve();
        } else {
          reject(new KiteStateError('', {
            state: STATES.UNINSTALLED,
          }));
        }
      });
    });
  },

  // downloads the latest version of kite-installer.sh
  // and uses it to retrieve the current binary installer and installation data
  downloadKiteRelease(opts) {
    return this.downloadKite(this.releaseURL, opts || {});
  },

  downloadKite(url, opts) {
    opts = opts || {};
    return this.downloadKiteInstallerScript(url, opts.onDownloadProgress)
    .then(() => this.streamKiteDownload(this.downloadPath, opts.onDownloadProgress))
    .then(() => utils.guardCall(opts.onDownload))
    .then(() => opts.install && this.installKite(opts));
  },

  downloadKiteInstallerScript(url, progress) {
    const req = https.request(url);
    req.end();

    // set download status as early as possible to display the progress bar
    if (progress) {
      progress(0, 100, 0);
    }

    return utils.followRedirections(req)
    .then(resp => {
      return utils.promisifyStream(resp.pipe(fs.createWriteStream(this.downloadPath)))
      .then(() => fs.chmodSync(this.downloadPath, 0o700))
      .then(() => new Promise((resolve, reject) => {
        setTimeout(resolve, 100);
      }));
    });
  },

  streamKiteDownload(scriptPath, progress) {
    // we can't use util.spawnPromise here because we have to stream stdout in chunks to handle the progress
    return new Promise((resolve, reject) => {
      try {
        const child = child_process.spawn(scriptPath, ['--download'], {shell: true});
        child.on('close', function(code) {
          if (code === 0) {
            resolve(child);
          } else {
            const error = new Error();

            reject(new KiteProcessError('kited_error',
            {
              message: `Unable to download Kite. Unexpected exit code ${code}.`,
              stderr: '',
              stdout: '',
              callStack: error.stack,
              cmd: `${scriptPath} --download`,
              options: ["--download"],
            }));
          }
        });

        if (progress) {
          let last = -1;
          child.stdout.on('data', chunk => {
            // chunk is a buffer when used with spawn
            let line = chunk.toString('utf8');
            let pattern = /Download: (\d+)\/(\d+)/g;
            let lastMatch, match;
            while ((match = pattern.exec(line)) !== null) {
              lastMatch = match;
            }

            if (lastMatch) {
              let received = parseInt(lastMatch[1], 10);
              let total = parseInt(lastMatch[2], 10);
              if (received >= 0 && total >= received && received > last) {
                last = received;
                progress(received, total, received / total);
              }
            }
          });
        }
      } catch (e) {
        console.error(e);
        reject(e);
      }
    });
  },

  installKite(opts) {
    opts = opts || {};

    utils.guardCall(opts.onInstallStart);
    return utils.spawnPromise(this.KITE_INSTALLER_PATH,
    ['--install'], {shell: true},
    'kite-installer install error', `unable to install kite with ${this.KITE_INSTALLER_PATH}`)
    .then(() => this.resetInstallPath()) // force recalculation of mem'd path on successful install
    .then(() => utils.guardCall(opts.onMount))
    .then(() => fs.unlinkSync(this.KITE_INSTALLER_PATH))
    .then(() => utils.guardCall(opts.onRemove));
  },

  isKiteRunning() {
    return utils.spawnPromise(
    '/bin/ps',
    ['-axo', 'pid,command'],
    {encoding: 'utf-8'},
    'ps_error',
    'unable to run the ps command and verify that Kite is running')
    .then(stdout => {
      const procs = stdout.split('\n');

      if (!procs.some(p => this.KITED_PROCESS.test(p))) {
        throw new KiteStateError('Kite process could not be found in the processes list', {
          state: STATES.NOT_RUNNING,
        });
      }
    });
  },

  runKiteWithCopilot() {
    const env = Object.assign({}, process.env);
    env.SKIP_KITE_ONBOARDING = '1';
    delete env['ELECTRON_RUN_AS_NODE'];

    return new Promise((resolve, reject) => {
      try {
        if (!fs.existsSync(this.installPath)) {
          throw new Error('kited is not installed');
        }
        child_process.spawn(this.installPath,
        ['--plugin-launch-with-copilot', '--channel=autocomplete-python'],
        {detached: true, stdio: 'ignore', env});
        resolve();
      } catch (e) {
        reject(new KiteProcessError('kited_error',
        {
          message: (e.message && e.message === 'kited is not installed') || 'unable to run kited binary',
          callStack: e.stack,
          cmd: this.installPath,
          options: {detached: true, env},
        }));
      }
    });
  },

  runKite() {
    return this.isKiteRunning()
    .catch(() => {
      const env = Object.assign({}, process.env);
      env.SKIP_KITE_ONBOARDING = '1';
      delete env['ELECTRON_RUN_AS_NODE'];

      try {
        if (!fs.existsSync(this.installPath)) {
          throw new Error('kited is not installed');
        }
        child_process.spawn(this.installPath,
        ['--plugin-launch', '--channel=autocomplete-python'],
        {detached: true, stdio: 'ignore', env});
      } catch (e) {
        throw new KiteProcessError('kited_error',
        {
          message: (e.message && e.message === 'kited is not installed') || 'unable to run kited binary',
          callStack: e.stack,
          cmd: this.installPath,
          options: {detached: true, env},
        });
      }
    });
  },

  hasBothKiteInstalled() {
    return Promise.all([
      this.isKiteInstalled(),
      this.isKiteEnterpriseInstalled(),
    ]);
  },

  isKiteEnterpriseInstalled() {
    return this.notSupported();
  },

  isKiteEnterpriseRunning() {
    return this.notSupported();
  },

  runKiteEnterprise() {
    return this.notSupported();
  },

  notSupported() {
    return Promise.reject(
    new KiteStateError('Your platform is currently not supported', {
      state: STATES.UNSUPPORTED,
    }));
  },
};

module.exports = LinuxSupport;


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const KiteStateError = __webpack_require__(166);

const {STATES} = __webpack_require__(157);

module.exports = {
  get releaseURL() {
    return null;
  },

  get downloadPath() {
    return null;
  },

  get installPath() {
    return null;
  },

  get allInstallPaths() {
    return null;
  },

  get enterpriseInstallPath() {
    return null;
  },

  get allEnterpriseInstallPaths() {
    return null;
  },

  get sessionFilePath() {
    return null;
  },

  hasManyKiteInstallation() {
    return false;
  },

  hasManyKiteEnterpriseInstallation() {
    return false;
  },

  isAdmin() {
    return false;
  },

  arch() {
    return null;
  },

  isOSSupported() {
    return false;
  },

  isOSVersionSupported() {
    return false;
  },

  isKiteSupported() {
    return false;
  },

  isKiteInstalled() {
    return this.notSupported();
  },

  downloadKite(opts) {
    return this.notSupported();
  },

  installKite(opts) {
    return this.notSupported();
  },

  isKiteRunning() {
    return this.notSupported();
  },

  runKite() {
    return this.notSupported();
  },

  hasBothKiteInstalled() {
    return Promise.all([
      this.isKiteInstalled(),
      this.isKiteEnterpriseInstalled(),
    ]);
  },

  isKiteEnterpriseInstalled() {
    return this.notSupported();
  },

  isKiteEnterpriseRunning() {
    return this.notSupported();
  },

  runKiteEnterprise() {
    return this.notSupported();
  },

  notSupported() {
    return Promise.reject(
      new KiteStateError('Your platform is currently not supported', {
        state: STATES.UNSUPPORTED,
      }));
  },
};


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const os = __webpack_require__(6);

const {
  CompositeDisposable,
  Emitter
} = __webpack_require__(2);

const KiteAPI = __webpack_require__(138);

const {
  STATES
} = KiteAPI;

const {
  fromSetting,
  all
} = __webpack_require__(173);

const NotificationQueue = __webpack_require__(175);

class NotificationsCenter {
  get NOTIFIERS() {
    return {
      [STATES.UNSUPPORTED]: 'warnNotSupported',
      [STATES.UNINSTALLED]: 'warnNotInstalled',
      // [STATES.INSTALLED]: 'warnNotRunning',
      [STATES.RUNNING]: 'warnNotReachable',
      [STATES.REACHABLE]: 'warnNotAuthenticated' // [STATES.WHITELISTED]: 'notifyReady',

    };
  }

  get NOTIFICATION_METRICS() {
    return {
      [STATES.UNSUPPORTED]: 'not-supported',
      // [STATES.UNINSTALLED]: 'not-installed',
      // [STATES.INSTALLED]: 'not-running',
      [STATES.RUNNING]: 'not-reachable',
      [STATES.REACHABLE]: 'not-authenticated' // [STATES.WHITELISTED]: 'ready',

    };
  }

  pauseNotifications() {
    this.paused = true;
  }

  resumeNotifications() {
    this.paused = false;
  }

  constructor(app) {
    this.app = app;
    this.emitter = new Emitter();
    this.subscriptions = new CompositeDisposable();
    this.lastShown = {};
    this.queue = new NotificationQueue();
    this.hasSeenGoBetaNotification = false;
    this.subscriptions.add(app.onDidGetState(({
      state,
      canNotify
    }) => {
      if (canNotify && this.shouldNotify(state)) {
        this.notify(state);
      }
    }));
    this.subscriptions.add(this.queue.onDidNotify(notification => {
      const {
        type,
        metric,
        key
      } = this.extractNotificationMetrics(notification);
      this.lastShown[key] = new Date();
      this.emit('did-notify', {
        notification: metric,
        type
      });
    }));
    this.subscriptions.add(this.queue.onDidClickNotificationButton(({
      notification,
      button
    }) => {
      const {
        type,
        metric
      } = this.extractNotificationMetrics(notification);
      this.emit('did-click-notification-button', {
        button: button.metric,
        notification: metric,
        type
      });
    }));
    this.subscriptions.add(this.queue.onDidDismissNotification(notification => {
      const {
        type,
        metric
      } = this.extractNotificationMetrics(notification);
      this.emit('did-dismiss-notification', {
        notification: metric,
        type
      });
    }));
    this.subscriptions.add(this.queue.onDidRejectNotification(notification => {
      const {
        type,
        metric
      } = this.extractNotificationMetrics(notification);
      this.emit('did-reject-notification', {
        notification: metric,
        type
      });
    }));
  }

  extractNotificationMetrics(notification) {
    const options = notification.options;
    const type = options.metricType || notification.level;
    const metric = typeof options.metric === 'number' ? this.NOTIFICATION_METRICS[options.metric] : options.metric;
    const key = options.key || options.metric;
    return {
      type,
      metric,
      key
    };
  }

  onDidNotify(listener) {
    return this.emitter.on('did-notify', listener);
  }

  onDidRejectNotification(listener) {
    return this.emitter.on('did-reject-notification', listener);
  }

  onDidDismissNotification(listener) {
    return this.emitter.on('did-dismiss-notification', listener);
  }

  onDidClickNotificationButton(listener) {
    return this.emitter.on('did-click-notification-button', listener);
  }

  activateForcedNotifications() {
    this.forceNotification = true;
  }

  deactivateForcedNotifications() {
    this.forceNotification = false;
  }

  dispose() {
    this.queue.abort();
    this.subscriptions.dispose();
    this.emitter.dispose();
    delete this.app;
    delete this.subscriptions;
    delete this.emitter;
  }

  notify(state) {
    this[this.NOTIFIERS[state]] && this[this.NOTIFIERS[state]](state);
  }

  showGoBetaNotification(kite) {
    if (this.hasSeenGoBetaNotification || !atom.config.get('kite.showGoBetaNotification')) {
      return;
    }

    this.queue.addInfo('Welcome to the Kite for Go Beta!', {
      dismissable: true,
      description: 'You\'ve got early access to our line-of-code completions for Go, powered by machine learning. If you\'d like to disable the beta, you can do so in the Copilot.',
      buttons: [{
        text: 'Open Copilot',

        onDidClick(dismiss) {
          kite.openCopilot();
          dismiss && dismiss();
        }

      }, {
        text: 'Hide Forever',

        onDidClick(dismiss) {
          atom.config.set('kite.showGoBetaNotification', false);
          dismiss && dismiss();
        }

      }]
    });
    this.queue.onDidNotify(_ => {
      this.hasSeenGoBetaNotification = true;
    });
  }

  onboardingNotifications(hasSeenOnboarding) {
    this.queue.addInfo('Kite is now integrated with Atom', {
      dismissable: true,
      description: 'Kite is an AI-powered programming assistant that shows you the right information at the right time to keep you in the flow.',
      buttons: [{
        text: 'Learn how to use Kite',

        onDidClick(dismiss) {
          atom.applicationDelegate.openExternal('http://help.kite.com/category/43-atom-integration');
          atom.config.set('kite.showWelcomeNotificationOnStartup', false);
          dismiss && dismiss();
        }

      }, {
        text: "Don't show this again",

        onDidClick(dismiss) {
          atom.config.set('kite.showWelcomeNotificationOnStartup', false);
          dismiss && dismiss();
        }

      }]
    }, {
      condition: all(fromSetting('kite.showWelcomeNotificationOnStartup'), () => !atom.inSpecMode())
    });
  }

  warnNotSupported(state) {
    let description = 'Sorry, the Kite engine only supports macOS and Windows at the moment.';

    switch (os.platform()) {
      case 'win32':
        const arch = KiteAPI.arch();

        if (arch !== '64bit') {
          description = `Sorry, the Kite engine only supports Windows7 and higher with a 64bit architecture.
          Your version is actually recognised as: ${arch}`;
        } else {
          description = 'Sorry, the Kite engine only supports Windows7 and higher.';
        }

        break;

      case 'darwin':
        description = 'Sorry, the Kite engine only supports OSX 10.10 (Yosemite) and higher.';
        break;

      case 'linux':
        description = 'Sorry, the Kite engine only supports Ubuntu 18.04 and higher';
        break;
    }

    this.queue.addError("Kite doesn't support your OS", {
      description,
      icon: 'circle-slash'
    }, {
      metric: state
    });
  }

  warnNotInstalled(state) {
    this.queue.addWarning('The Kite engine is not installed', {
      description: 'Install Kite to get Python completions, documentation, and examples.',
      icon: 'circle-slash',
      buttons: [{
        text: 'Install Kite',
        metric: 'install',
        onDidClick: dismiss => {
          dismiss && dismiss();
          this.app && this.app.installFlow();
        }
      }]
    }, {
      metric: state
    });
  }

  warnNotRunning(state) {
    Promise.all([KiteAPI.isKiteInstalled().then(() => true)["catch"](() => false), KiteAPI.isKiteEnterpriseInstalled().then(() => true)["catch"](() => false)]).then(([kiteInstalled, kiteEnterpriseInstalled]) => {
      if (KiteAPI.hasManyKiteInstallation() || KiteAPI.hasManyKiteEnterpriseInstallation()) {
        this.queue.addWarning('The Kite engine is not running', {
          description: 'You have multiple versions of Kite installed. Please launch your desired one.',
          icon: 'circle-slash'
        }, {
          metric: state
        });
      } else if (kiteInstalled && kiteEnterpriseInstalled) {
        this.queue.addWarning('The Kite engine is not running', {
          description: 'Start the Kite background service to get Python completions, documentation, and examples.',
          icon: 'circle-slash',
          buttons: [{
            text: 'Start Kite',
            metric: 'start',
            onDidClick: dismiss => {
              dismiss && dismiss();
              this.app && this.app.start()["catch"](err => this.warnFailedStart(err));
            }
          }, {
            text: 'Start Kite Enterprise',
            metric: 'startEnterprise',
            onDidClick: dismiss => {
              dismiss && dismiss();
              this.app && this.app.startEnterprise()["catch"](err => this.warnFailedStartEnterprise(err));
            }
          }]
        }, {
          metric: state
        });
      } else if (kiteInstalled) {
        this.queue.addWarning('The Kite engine is not running', {
          description: 'Start the Kite background service to get Python completions, documentation, and examples.',
          icon: 'circle-slash',
          buttons: [{
            text: 'Start Kite',
            metric: 'start',
            onDidClick: dismiss => {
              dismiss && dismiss();
              this.app && this.app.start()["catch"](err => this.warnFailedStart(err));
            }
          }]
        }, {
          metric: state
        });
      } else if (kiteEnterpriseInstalled) {
        this.queue.addWarning('The Kite engine is not running', {
          description: 'Start the Kite background service to get Python completions, documentation, and examples.',
          icon: 'circle-slash',
          buttons: [{
            text: 'Start Kite Enterprise',
            metric: 'startEnterprise',
            onDidClick: dismiss => {
              dismiss && dismiss();
              this.app && this.app.startEnterprise()["catch"](err => this.warnFailedStartEnterprise(err));
            }
          }]
        }, {
          metric: state
        });
      }
    });
  }

  warnFailedStart(err) {
    this.queue.addError('Unable to start Kite engine', {
      description: JSON.stringify(err),
      buttons: [{
        text: 'Retry',
        metric: 'retry',
        onDidClick: dismiss => {
          dismiss && dismiss();
          this.app && this.app.start()["catch"](err => this.warnFailedStart(err));
        }
      }]
    }, {
      metric: 'launch'
    });
  }

  warnFailedStartEnterprise(err) {
    this.queue.addError('Unable to start Kite engine', {
      description: JSON.stringify(err),
      buttons: [{
        text: 'Retry',
        metric: 'retryEnterprise',
        onDidClick: dismiss => {
          dismiss && dismiss();
          this.app && this.app.startEnterprise()["catch"](err => this.warnFailedStartEnterprise(err));
        }
      }]
    }, {
      metric: 'launchEnterprise'
    });
  }

  warnNotReachable(state) {
    this.queue.addError('The Kite background service is running but not reachable', {
      description: 'Try killing Kite from the Activity Monitor.'
    }, {
      metric: state
    });
  }

  warnNotAuthenticated(state) {
    if (navigator.onLine && !document.querySelector('kite-login')) {
      this.queue.addWarning('You need to login to the Kite engine', {
        description: ['Kite needs to be authenticated to access', 'the index of your code stored on the cloud.'].join(' '),
        icon: 'circle-slash',
        buttons: [{
          text: 'Login',
          metric: 'login',
          onDidClick: dismiss => {
            dismiss && dismiss();
            this.app && this.app.login();
          }
        }]
      }, {
        metric: state
      });
    }
  }

  warnUnauthorized(err) {
    this.queue.addError('Unable to login', {
      description: JSON.stringify(err),
      buttons: [{
        text: 'Retry',
        metric: 'retry',
        onDidClick: dismiss => {
          dismiss && dismiss();
          this.app && this.app.login();
        }
      }]
    }, {
      metric: 'unauthorized'
    });
  }

  warnOnboardingFileFailure() {
    this.queue.addWarning('We were unable to open the tutorial', {
      description: 'We had an internal error setting up our interactive tutorial. Try again later, or email us at feedback@kite.com',
      buttons: [{
        text: 'OK',
        onDidClick: dismiss => dismiss && dismiss()
      }]
    });
  }

  warnKSGNotSupported() {
    this.queue.addWarning('This feature is only available for Python files.', {
      description: "Kite's Search Stack Overflow is specialized for Python.",
      buttons: [{
        text: 'OK',
        onDidClick: dismiss => dismiss && dismiss()
      }]
    });
  }

  notifyReady(state) {
    this.queue.addSuccess('The Kite engine is ready', {
      description: 'We checked that the autocomplete engine is installed, running, responsive, and authenticated.'
    }, {
      metric: state,
      metricType: 'notification'
    });
  }

  shouldNotify(state) {
    return this.forceNotification || !this.lastShown[state] && !this.paused;
  }

  emit(...args) {
    this.emitter && this.emitter.emit(...args);
  }

  truncateLeft(string, length) {
    return string.length <= length ? string : `…${string.slice(string.length - length)}`;
  }

}

module.exports = NotificationsCenter;

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const MemoryStore = __webpack_require__(174);

const all = (...fs) => a => fs.every(f => f(a));

const any = (...fs) => a => fs.some(f => f(a));

const fromSetting = (key, value) => a => value ? atom.config.get(key) === value : atom.config.get(key);

const once = s => a => !once.store.getItem(`${s || ''}${a.id}`);

const oncePerWindow = s => a => !oncePerWindow.store.getItem(`${s || ''}${a.id}`);

once.store = localStorage;
oncePerWindow.store = new MemoryStore();
module.exports = {
  all,
  any,
  fromSetting,
  once,
  oncePerWindow
};

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = class MemoryStore {
  constructor() {
    this.content = {};
  }

  setItem(key, content) {
    this.content[key] = String(content);
    return content;
  }

  getItem(key) {
    return this.content[key];
  }

  removeItem(key) {
    delete this.content[key];
  }

};

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  Emitter,
  CompositeDisposable
} = __webpack_require__(2);

const KiteNotification = __webpack_require__(176);

const KiteModal = __webpack_require__(177);

module.exports = class NotificationQueue {
  constructor() {
    this.queue = [];
    this.promise = Promise.resolve();
    this.emitter = new Emitter();
  }

  onDidNotify(listener) {
    return this.emitter.on('did-notify', listener);
  }

  onDidRejectNotification(listener) {
    return this.emitter.on('did-reject-notification', listener);
  }

  onDidDismissNotification(listener) {
    return this.emitter.on('did-dismiss-notification', listener);
  }

  onDidClickNotificationButton(listener) {
    return this.emitter.on('did-click-notification-button', listener);
  }

  abort() {
    this.aborted = true;
    this.activeNotification && this.activeNotification.dismiss();
  }

  add(queuedNotification) {
    if (typeof queuedNotification == 'function') {
      return this.promise = this.promise.then(() => this.aborted ? null : queuedNotification()).then(notification => {
        this.activeNotification = notification;
        return this.execute(notification);
      }).then(() => {
        delete this.activeNotification;
      });
    } else {
      return this.promise = this.promise.then(() => {
        if (this.aborted) {
          return null;
        } else {
          this.activeNotification = queuedNotification;
          return this.execute(queuedNotification);
        }
      }).then(() => {
        delete this.activeNotification;
      });
    }
  }

  execute(notification) {
    if (notification) {
      this.subscribeToNotification(notification);
      return notification.execute();
    }

    return null;
  }

  subscribeToNotification(notification) {
    const sub = new CompositeDisposable();

    const forwardEvent = t => e => this.emitter.emit(t, e);

    const forwardEventAndDispose = t => e => {
      this.emitter.emit(t, e);
      sub.dispose();
    };

    sub.add(notification.onDidNotify(forwardEvent('did-notify')));
    sub.add(notification.onDidClickNotificationButton(forwardEvent('did-click-notification-button')));
    sub.add(notification.onDidDismissNotification(forwardEventAndDispose('did-dismiss-notification')));
    sub.add(notification.onDidRejectNotification(forwardEventAndDispose('did-reject-notification')));
  }

  addModal(item, options) {
    return this.add(new KiteModal(item, options));
  }

  addInfo(title, notificationOptions, queueOptions) {
    return this.add(new KiteNotification('info', title, notificationOptions, queueOptions));
  }

  addSuccess(title, notificationOptions, queueOptions) {
    return this.add(new KiteNotification('success', title, notificationOptions, queueOptions));
  }

  addWarning(title, notificationOptions, queueOptions) {
    return this.add(new KiteNotification('warning', title, notificationOptions, queueOptions));
  }

  addError(title, notificationOptions, queueOptions) {
    return this.add(new KiteNotification('error', title, notificationOptions, queueOptions));
  }

  addFatalError(title, notificationOptions, queueOptions) {
    return this.add(new KiteNotification('fatalError', title, notificationOptions, queueOptions));
  }

};

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  Emitter
} = __webpack_require__(2);

const capitalize = s => s.replace(/^\w/, m => m.toUpperCase());

const parameterize = s => s.toLowerCase().replace(/[^\w]+/g, '-');

module.exports = class KiteNotification {
  constructor(level, title, notificationOptions = {}, options = {}) {
    this.level = level;
    this.title = title;
    this.emitter = new Emitter();
    this.notificationOptions = notificationOptions;
    this.options = options;
    this.notificationOptions.dismissable = this.notificationOptions.dismissable != null ? this.notificationOptions.dismissable : true;
    this.id = options.id || parameterize(title);
  }

  onDidNotify(listener) {
    return this.emitter.on('did-notify', listener);
  }

  onDidRejectNotification(listener) {
    return this.emitter.on('did-reject-notification', listener);
  }

  onDidDismissNotification(listener) {
    return this.emitter.on('did-dismiss-notification', listener);
  }

  onDidClickNotificationButton(listener) {
    return this.emitter.on('did-click-notification-button', listener);
  }

  execute() {
    return new Promise((resolve, reject) => {
      const {
        condition,
        onDidDismiss
      } = this.options;

      if (!condition || condition()) {
        this.notification = atom.notifications[`add${capitalize(this.level)}`](this.title, this.notificationOptions);
        this.instrumentNotification(this.notification, res => {
          onDidDismiss && onDidDismiss(res);
          resolve(res);
        });
      } else {
        resolve();
      }
    });
  }

  dismiss() {
    this.notification && this.notification.dismiss();
  }

  instrumentNotification(notification, dismissCallback) {
    this.emitter.emit('did-notify', this);
    let actionTriggered;

    if (this.notificationOptions.buttons) {
      this.notificationOptions.buttons.forEach(button => {
        const {
          onDidClick
        } = button;

        button.onDidClick = () => {
          actionTriggered = button.text;
          this.emitter.emit('did-click-notification-button', {
            notification: this,
            button
          });
          onDidClick && onDidClick(() => notification.dismiss());
        };
      });
    }

    const sub = notification.onDidDismiss(() => {
      dismissCallback && dismissCallback(actionTriggered);

      if (actionTriggered) {
        this.emitter.emit('did-dismiss-notification', this);
      } else {
        this.emitter.emit('did-reject-notification', this);
      }

      this.emitter.dispose();
      sub.dispose();
    });
    return notification;
  }

};

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  Emitter
} = __webpack_require__(2);

module.exports = class KiteModal {
  constructor({
    content,
    buttons
  } = {}, options = {}) {
    this.content = content;
    this.buttons = buttons;
    this.options = options;
    this.emitter = new Emitter();
  }

  onDidNotify(listener) {
    return this.emitter.on('did-notify', listener);
  }

  onDidRejectNotification(listener) {
    return this.emitter.on('did-reject-notification', listener);
  }

  onDidDismissNotification(listener) {
    return this.emitter.on('did-dismiss-notification', listener);
  }

  onDidClickNotificationButton(listener) {
    return this.emitter.on('did-click-notification-button', listener);
  }

  dismiss() {
    this.destroy();
  }

  destroy() {
    this.modal.destroy();
    delete this.modal;
  }

  execute() {
    return new Promise((resolve, reject) => {
      const {
        condition,
        onDidDestroy
      } = this.options;

      if (!condition || condition()) {
        const item = document.createElement('div');
        item.innerHTML = this.content;

        if (this.buttons) {
          const buttons = document.createElement('div');
          buttons.className = 'modal-metrics-row';
          this.buttons.forEach((btn, i) => {
            const container = document.createElement('div');
            container.className = 'modal-metrics-cell';
            container.innerHTML = `
            <button tabindex="${i}"
                    class="btn btn-${btn.className || 'default'} btn-block">
              ${btn.text}
            </button>`;
            const button = container.querySelector('button');
            button.addEventListener('click', () => {
              btn.onDidClick && btn.onDidClick(this);
            });
            buttons.appendChild(container);
          });
          item.appendChild(buttons);
        }

        this.modal = atom.workspace.addModalPanel({
          item,
          autoFocus: true
        });
        const sub = this.modal.onDidDestroy(() => {
          onDidDestroy && onDidDestroy();
          sub.dispose();
          this.emitter.dispose();
          resolve();
        });
      } else {
        resolve();
      }
    });
  }

};

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const kitePkg = __webpack_require__(179);

const {
  distinctID,
  EDITOR_UUID,
  OS_VERSION
} = __webpack_require__(180);

if (!atom.inSpecMode()) {
  window._rollbarConfig = {
    accessToken: 'd1aa81c4290d409e847153a29b2872b3',
    autoInstrument: false,
    payload: {
      environment: 'production',
      distinctID: distinctID(),
      editor_uuid: EDITOR_UUID,
      editor: 'atom',
      atom_version: atom.getVersion(),
      kite_plugin_version: kitePkg.version,
      os: OS_VERSION
    }
  }; // We still want to load the browser version for security purpose

  __webpack_require__(182);

  class RollbarReporter {
    constructor() {
      this.subscription = atom.onDidThrowError(({
        column,
        line,
        message,
        originalError,
        url
      }) => {
        // We're only concerned by errors that originate or involve our code
        // but not when working on it.
        if (/\/kite\/|\/kite-installer\//.test(originalError.stack) && !/kite$/.test(atom.project.getPaths()[0] || '')) {
          window.Rollbar.error(originalError);
        }
      });
    }

    dispose() {
      this.subscription && this.subscription.dispose();
    }

  }

  module.exports = RollbarReporter;
} else {
  module.exports = class Dummy {
    dispose() {}

  };
}

/***/ }),
/* 179 */
/***/ (function(module) {

module.exports = JSON.parse("{\"name\":\"kite\",\"main\":\"./dist/main\",\"version\":\"0.178.0\",\"description\":\"Python coding assistant featuring AI-powered autocompletions, advanced function signatures, and instant documentation\",\"repository\":\"https://github.com/kiteco/atom-plugin\",\"keywords\":[],\"license\":\"SEE LICENSE IN LICENSE\",\"engines\":{\"atom\":\">=1.0.0 <2.0.0\"},\"scripts\":{\"lint\":\"eslint .\",\"lint:fix\":\"eslint --fix .\",\"build-prod\":\"webpack --config config/webpack.config.js --mode production\",\"prepublishOnly\":\"rm -rf node_modules && rm -f package-lock.json && apm install && rm -rf dist && npm run build-prod\",\"build-dev\":\"webpack --config config/webpack.config.js --mode none\",\"clean-dev-install\":\"apm unlink && rm -rf node_modules && rm -f package-lock.json && apm install && rm -rf dist && npm run build-dev && apm link\"},\"configSchema\":{\"showGoBetaNotification\":{\"type\":\"boolean\",\"default\":true,\"title\":\"Show Go beta notification\",\"description\":\"Whether or not to show the Go beta notification.\"},\"showWelcomeNotificationOnStartup\":{\"type\":\"boolean\",\"default\":true,\"title\":\"Show welcome notification on startup\",\"description\":\"Whether or not to show the Kite welcome notification on startup.\"},\"enableCompletions\":{\"type\":\"boolean\",\"default\":true,\"title\":\"Enable completions\",\"description\":\"Automatically show completions from Kite as you type.\"},\"enableHoverUI\":{\"type\":\"boolean\",\"default\":true,\"title\":\"Enable hover\",\"description\":\"Show a quick summary of a symbol when you hover your mouse over it.\"},\"enableSnippets\":{\"type\":\"boolean\",\"default\":true,\"title\":\"Enable snippets\",\"description\":\"Enable snippets feature.\"},\"maxVisibleSuggestionsAlongSignature\":{\"type\":\"integer\",\"default\":5,\"title\":\"Completions limit with function signature\",\"description\":\"Maximum number of completions that can be shown when a function signature is also shown.\"},\"loggingLevel\":{\"type\":\"string\",\"default\":\"info\",\"enum\":[\"silly\",\"verbose\",\"debug\",\"info\",\"warning\",\"error\"],\"title\":\"Logging level\",\"description\":\"The verbosity level of Kite logs.\"},\"pollingInterval\":{\"type\":\"integer\",\"default\":15000,\"min\":1000,\"max\":60000,\"title\":\"Polling interval\",\"description\":\"Interval in milliseconds at which the Kite package polls Kite Engine to get the status of the current file.\"},\"developerMode\":{\"type\":\"boolean\",\"default\":false,\"title\":\"Developer mode\",\"description\":\"Displays JSON data from Kite Engine that's used when rendering a UI element.\"},\"startKiteAtStartup\":{\"type\":\"boolean\",\"default\":true,\"title\":\"Start Kite Engine on startup\",\"description\":\"Automatically start Kite Engine on editor startup if it's not already running.\"},\"signatureKwargsVisible\":{\"type\":\"boolean\",\"default\":false,\"title\":\"Show function keyword arguments\",\"description\":\"Show inferred keyword arguments for a function when the function signature panel is shown\"},\"signaturePopularPatternsVisible\":{\"type\":\"boolean\",\"default\":false,\"title\":\"Show function call examples\",\"description\":\"Show examples on how to call a function when the function signature panel is shown\"}},\"providedServices\":{\"autocomplete.provider\":{\"versions\":{\"2.0.0\":\"completions\"}}},\"consumedServices\":{\"status-bar\":{\"versions\":{\"^1.0.0\":\"consumeStatusBar\"}}},\"dependencies\":{\"analytics-node\":\"^3.1.1\",\"element-resize-detector\":\"^1.1.11\",\"fuzzaldrin-plus\":\"^0.4.1\",\"getmac\":\"1.2.1\",\"kite-api\":\"=3.12.0\",\"kite-connector\":\"=3.12.0\",\"kite-installer\":\"=3.16.0\",\"lodash\":\"^4.17.11\",\"md5\":\"^2.2.0\",\"rollbar\":\"^2.3.8\",\"tiny-relative-date\":\"^1.3.0\",\"underscore-plus\":\"^1\"},\"devDependencies\":{\"@babel/core\":\"^7.4.3\",\"@babel/preset-env\":\"^7.4.3\",\"babel-eslint\":\"^6.1.2\",\"babel-loader\":\"^8.0.5\",\"editors-json-tests\":\"git://github.com/kiteco/editors-json-tests.git#master\",\"eslint\":\"^4.18.2\",\"eslint-config\":\"^0.3.0\",\"eslint-config-fbjs\":\"^1.1.1\",\"eslint-plugin-babel\":\"^3.3.0\",\"eslint-plugin-flowtype\":\"^2.29.1\",\"eslint-plugin-jasmine\":\"^2.2.0\",\"eslint-plugin-prefer-object-spread\":\"^1.1.0\",\"eslint-plugin-react\":\"^5.2.2\",\"fbjs\":\"^0.8.6\",\"file-loader\":\"^5.1.0\",\"javascript-obfuscator\":\"^0.8.3\",\"sinon\":\"^2.3.5\",\"webpack\":\"^4.30.0\",\"webpack-cli\":\"^3.3.0\"}}");

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var os = __webpack_require__(6);

const crypto = __webpack_require__(62);

const KiteAPI = __webpack_require__(138);

const {
  metricsCounterPath
} = __webpack_require__(181);

const localconfig = __webpack_require__(164);

const version = __webpack_require__(179).version;

const OS_VERSION = os.type() + ' ' + os.release();
const EDITOR_UUID = localStorage.getItem('metrics.userId'); // Generate a unique ID for this user and save it for future use.

function distinctID() {
  var id = localconfig.get('distinctID');

  if (id === undefined) {
    // use the atom UUID
    id = EDITOR_UUID || crypto.randomBytes(32).toString('hex');
    localconfig.set('distinctID', id);
  }

  return id;
}

function sendFeatureMetric(name) {
  const path = metricsCounterPath();
  console.log(name);
  return !atom.inSpecMode() && KiteAPI.request({
    path,
    method: 'POST'
  }, JSON.stringify({
    name,
    value: 1
  }))["catch"](() => {});
}

function featureRequested(name) {
  sendFeatureMetric(`atom_${name}_requested`);
}

function featureFulfilled(name) {
  sendFeatureMetric(`atom_${name}_fulfilled`);
}

function featureApplied(name, suffix = '') {
  sendFeatureMetric(`atom_${name}_applied${suffix}`);
}

function record(name, action) {
  sendFeatureMetric(`atom_${name}_${action}`);
}

function getOsName() {
  switch (os.platform()) {
    case 'darwin':
      return 'macos';

    case 'win32':
      return 'windows';

    case 'linux':
      return 'linux';

    default:
      return '';
  }
}

module.exports = {
  distinctID,
  featureApplied,
  sendFeatureMetric,
  featureRequested,
  featureFulfilled,
  record,
  getOsName,
  version,
  EDITOR_UUID,
  OS_VERSION
};

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const md5 = __webpack_require__(53);

const {
  Point,
  Range
} = __webpack_require__(2);

const {
  head
} = __webpack_require__(5);

function tokensPath(editor) {
  const state = md5(editor.getText());
  const filename = editor.getPath();
  const buffer = cleanPath(filename);
  return `/api/buffer/atom/${buffer}/${state}/tokens`;
}

function languagesPath() {
  return '/clientapi/languages';
}

function metricsCounterPath() {
  return '/clientapi/metrics/counters';
}

function accountPath() {
  return '/api/account/user';
}

function signaturePath() {
  return '/clientapi/editor/signatures';
}

function authorizedPath(editor) {
  return `/clientapi/permissions/authorized?filename=${encodeURI(editor.getPath())}`;
}

function searchPath(query, offset = 0, limit = 10) {
  return ['/api/editor/search', [`q=${encodeURI(query)}`, `offset=${offset}`, `limit=${limit}`].join('&')].join('?');
}

function projectDirPath(path) {
  return ['/clientapi/projectdir', `filename=${encodeURI(path)}`].join('?');
}

function shouldNotifyPath(path) {
  return ['/clientapi/permissions/notify', `filename=${encodeURI(path)}`].join('?');
}

function statusPath(path) {
  return ['/clientapi/status', `filename=${encodeURI(path)}`].join('?');
}

function reportPath(data) {
  const value = head(head(data.symbol).value);
  return valueReportPath(value.id);
}

function valueReportPath(id) {
  return `/api/editor/value/${id}`;
}

function symbolReportPath(id) {
  return `/api/editor/symbol/${id}`;
}

function membersPath(id, page = 0, limit = 999) {
  return [`/api/editor/value/${id}/members`, [`offset=${page}`, `limit=${limit}`].join('&')].join('?');
}

function usagesPath(id, page = 0, limit = 999) {
  return [`/api/editor/value/${id}/usages`, [`offset=${page}`, `limit=${limit}`].join('&')].join('?');
}

function usagePath(id) {
  return `/api/editor/usages/${id}`;
}

function examplePath(id) {
  return `/api/python/curation/${id}`;
}

function openExampleInWebURL(id) {
  return `http://localhost:46624/clientapi/desktoplogin?d=/examples/python/${escapeId(id)}`;
}

function hoverPath(editor, range) {
  range = Range.fromObject(range);
  const state = md5(editor.getText());
  const filename = editor.getPath();
  const buffer = cleanPath(filename);
  const start = editor.getBuffer().characterIndexForPosition(range.start);
  const end = editor.getBuffer().characterIndexForPosition(range.end);
  return [`/api/buffer/atom/${buffer}/${state}/hover`, [`selection_begin_runes=${start}`, `selection_end_runes=${end}`].join('&')].join('?');
}

function hoverPositionPath(editor, position) {
  position = Point.fromObject(position);
  const state = md5(editor.getText());
  const filename = editor.getPath();
  const buffer = cleanPath(filename);
  const pos = editor.getBuffer().characterIndexForPosition(position);
  return [`/api/buffer/atom/${buffer}/${state}/hover`, `cursor_runes=${pos}`].join('?');
}

function escapeId(id) {
  return encodeURI(String(id)).replace(/;/g, '%3B');
}

function cleanPath(p) {
  return encodeURI(p).replace(/^([A-Z]):/, '/windows/$1').replace(/\/|\\|%5C/g, ':');
}

function internalURL(path) {
  return `kite-atom-internal://${path}`;
}

function internalGotoURL(def) {
  return internalURL(`goto/${encodeURI(def.filename)}:${def.line}`);
}

function internalGotoIdURL(id) {
  return internalURL(`goto-id/${id}`);
}

function internalExpandURL(id) {
  return internalURL(`expand/${id}`);
}

function internalGotoRangeURL(range) {
  return internalURL(`goto-range/${serializeRangeForPath(range)}`);
}

function internalOpenRangeInWebURL(range) {
  return internalURL(`open-range/${serializeRangeForPath(range)}`);
}

function internalExpandPositionURL(position) {
  return internalURL(`expand-position/${serializePositionForPath(position)}`);
}

function internalGotoPositionURL(position) {
  return internalURL(`goto-position/${serializePositionForPath(position)}`);
}

function internalOpenPositionInWebURL(position) {
  return internalURL(`open-position/${serializePositionForPath(position)}`);
}

function serializeRangeForPath(range) {
  return `${serializePositionForPath(range.start)}/${serializePositionForPath(range.end)}`;
}

function serializePositionForPath(position) {
  return `${position.row}:${position.column}`;
}

module.exports = {
  accountPath,
  authorizedPath,
  examplePath,
  hoverPath,
  hoverPositionPath,
  internalExpandPositionURL,
  internalExpandURL,
  internalGotoIdURL,
  internalGotoPositionURL,
  internalGotoRangeURL,
  internalGotoURL,
  internalOpenPositionInWebURL,
  internalOpenRangeInWebURL,
  internalURL,
  languagesPath,
  membersPath,
  metricsCounterPath,
  openExampleInWebURL,
  projectDirPath,
  reportPath,
  searchPath,
  serializeRangeForPath,
  shouldNotifyPath,
  signaturePath,
  statusPath,
  symbolReportPath,
  tokensPath,
  usagePath,
  usagesPath,
  valueReportPath
};

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var merge = __webpack_require__(9);

var RollbarJSON = {};
var __initRollbarJSON = false;
function setupJSON() {
  if (__initRollbarJSON) {
    return;
  }
  __initRollbarJSON = true;

  if (isDefined(JSON)) {
    if (isNativeFunction(JSON.stringify)) {
      RollbarJSON.stringify = JSON.stringify;
    }
    if (isNativeFunction(JSON.parse)) {
      RollbarJSON.parse = JSON.parse;
    }
  }
  if (!isFunction(RollbarJSON.stringify) || !isFunction(RollbarJSON.parse)) {
    var setupCustomJSON = __webpack_require__(10);
    setupCustomJSON(RollbarJSON);
  }
}
setupJSON();

/*
 * isType - Given a Javascript value and a string, returns true if the type of the value matches the
 * given string.
 *
 * @param x - any value
 * @param t - a lowercase string containing one of the following type names:
 *    - undefined
 *    - null
 *    - error
 *    - number
 *    - boolean
 *    - string
 *    - symbol
 *    - function
 *    - object
 *    - array
 * @returns true if x is of type t, otherwise false
 */
function isType(x, t) {
  return t === typeName(x);
}

/*
 * typeName - Given a Javascript value, returns the type of the object as a string
 */
function typeName(x) {
  var name = typeof x;
  if (name !== 'object') {
    return name;
  }
  if (!x) {
    return 'null';
  }
  if (x instanceof Error) {
    return 'error';
  }
  return ({}).toString.call(x).match(/\s([a-zA-Z]+)/)[1].toLowerCase();
}

/* isFunction - a convenience function for checking if a value is a function
 *
 * @param f - any value
 * @returns true if f is a function, otherwise false
 */
function isFunction(f) {
  return isType(f, 'function');
}

/* isNativeFunction - a convenience function for checking if a value is a native JS function
 *
 * @param f - any value
 * @returns true if f is a native JS function, otherwise false
 */
function isNativeFunction(f) {
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
  var funcMatchString = Function.prototype.toString.call(Object.prototype.hasOwnProperty)
    .replace(reRegExpChar, '\\$&')
    .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?');
  var reIsNative = RegExp('^' + funcMatchString + '$');
  return isObject(f) && reIsNative.test(f);
}

/* isObject - Checks if the argument is an object
 *
 * @param value - any value
 * @returns true is value is an object function is an object)
*/
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

/* isString - Checks if the argument is a string
 *
 * @param value - any value
 * @returns true if value is a string
*/
function isString(value) {
  return typeof value === 'string' || value instanceof String
}

/*
 * isDefined - a convenience function for checking if a value is not equal to undefined
 *
 * @param u - any value
 * @returns true if u is anything other than undefined
 */
function isDefined(u) {
  return !isType(u, 'undefined');
}

/*
 * isIterable - convenience function for checking if a value can be iterated, essentially
 * whether it is an object or an array.
 *
 * @param i - any value
 * @returns true if i is an object or an array as determined by `typeName`
 */
function isIterable(i) {
  var type = typeName(i);
  return (type === 'object' || type === 'array');
}

/*
 * isError - convenience function for checking if a value is of an error type
 *
 * @param e - any value
 * @returns true if e is an error
 */
function isError(e) {
  // Detect both Error and Firefox Exception type
  return isType(e, 'error') || isType(e, 'exception');
}

function traverse(obj, func, seen) {
  var k, v, i;
  var isObj = isType(obj, 'object');
  var isArray = isType(obj, 'array');
  var keys = [];

  if (isObj && seen.indexOf(obj) !== -1) {
    return obj;
  }
  seen.push(obj);

  if (isObj) {
    for (k in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, k)) {
        keys.push(k);
      }
    }
  } else if (isArray) {
    for (i = 0; i < obj.length; ++i) {
      keys.push(i);
    }
  }

  var result = isObj ? {} : [];
  var same = true;
  for (i = 0; i < keys.length; ++i) {
    k = keys[i];
    v = obj[k];
    result[k] = func(k, v, seen);
    same = same && result[k] === obj[k];
  }

  return (keys.length != 0 && !same) ? result : obj;
}

function redact() {
  return '********';
}

// from http://stackoverflow.com/a/8809472/1138191
function uuid4() {
  var d = now();
  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
    var r = (d + Math.random() * 16) % 16 | 0;
    d = Math.floor(d / 16);
    return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);
  });
  return uuid;
}

var LEVELS = {
  debug: 0,
  info: 1,
  warning: 2,
  error: 3,
  critical: 4
};

function sanitizeUrl(url) {
  var baseUrlParts = parseUri(url);
  if (!baseUrlParts) {
    return '(unknown)';
  }

  // remove a trailing # if there is no anchor
  if (baseUrlParts.anchor === '') {
    baseUrlParts.source = baseUrlParts.source.replace('#', '');
  }

  url = baseUrlParts.source.replace('?' + baseUrlParts.query, '');
  return url;
}

var parseUriOptions = {
  strictMode: false,
  key: [
    'source',
    'protocol',
    'authority',
    'userInfo',
    'user',
    'password',
    'host',
    'port',
    'relative',
    'path',
    'directory',
    'file',
    'query',
    'anchor'
  ],
  q: {
    name: 'queryKey',
    parser: /(?:^|&)([^&=]*)=?([^&]*)/g
  },
  parser: {
    strict: /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
    loose: /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
  }
};

function parseUri(str) {
  if (!isType(str, 'string')) {
    return undefined;
  }

  var o = parseUriOptions;
  var m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);
  var uri = {};

  for (var i = 0, l = o.key.length; i < l; ++i) {
    uri[o.key[i]] = m[i] || '';
  }

  uri[o.q.name] = {};
  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {
    if ($1) {
      uri[o.q.name][$1] = $2;
    }
  });

  return uri;
}

function addParamsAndAccessTokenToPath(accessToken, options, params) {
  params = params || {};
  params.access_token = accessToken;
  var paramsArray = [];
  var k;
  for (k in params) {
    if (Object.prototype.hasOwnProperty.call(params, k)) {
      paramsArray.push([k, params[k]].join('='));
    }
  }
  var query = '?' + paramsArray.sort().join('&');

  options = options || {};
  options.path = options.path || '';
  var qs = options.path.indexOf('?');
  var h = options.path.indexOf('#');
  var p;
  if (qs !== -1 && (h === -1 || h > qs)) {
    p = options.path;
    options.path = p.substring(0,qs) + query + '&' + p.substring(qs+1);
  } else {
    if (h !== -1) {
      p = options.path;
      options.path = p.substring(0,h) + query + p.substring(h);
    } else {
      options.path = options.path + query;
    }
  }
}

function formatUrl(u, protocol) {
  protocol = protocol || u.protocol;
  if (!protocol && u.port) {
    if (u.port === 80) {
      protocol = 'http:';
    } else if (u.port === 443) {
      protocol = 'https:';
    }
  }
  protocol = protocol || 'https:';

  if (!u.hostname) {
    return null;
  }
  var result = protocol + '//' + u.hostname;
  if (u.port) {
    result = result + ':' + u.port;
  }
  if (u.path) {
    result = result + u.path;
  }
  return result;
}

function stringify(obj, backup) {
  var value, error;
  try {
    value = RollbarJSON.stringify(obj);
  } catch (jsonError) {
    if (backup && isFunction(backup)) {
      try {
        value = backup(obj);
      } catch (backupError) {
        error = backupError;
      }
    } else {
      error = jsonError;
    }
  }
  return {error: error, value: value};
}

function maxByteSize(string) {
  // The transport will use utf-8, so assume utf-8 encoding.
  //
  // This minimal implementation will accurately count bytes for all UCS-2 and
  // single code point UTF-16. If presented with multi code point UTF-16,
  // which should be rare, it will safely overcount, not undercount.
  //
  // While robust utf-8 encoders exist, this is far smaller and far more performant.
  // For quickly counting payload size for truncation, smaller is better.

  var count = 0;
  var length = string.length;

  for (var i = 0; i < length; i++) {
    var code = string.charCodeAt(i);
    if (code < 128) { // up to 7 bits
      count = count + 1;
    } else if (code < 2048) { // up to 11 bits
      count = count + 2;
    } else if (code < 65536) { // up to 16 bits
      count = count + 3;
    }
  }

  return count;
}

function jsonParse(s) {
  var value, error;
  try {
    value = RollbarJSON.parse(s);
  } catch (e) {
    error = e;
  }
  return {error: error, value: value};
}

function makeUnhandledStackInfo(
  message,
  url,
  lineno,
  colno,
  error,
  mode,
  backupMessage,
  errorParser
) {
  var location = {
    url: url || '',
    line: lineno,
    column: colno
  };
  location.func = errorParser.guessFunctionName(location.url, location.line);
  location.context = errorParser.gatherContext(location.url, location.line);
  var href = document && document.location && document.location.href;
  var useragent = window && window.navigator && window.navigator.userAgent;
  return {
    'mode': mode,
    'message': error ? String(error) : (message || backupMessage),
    'url': href,
    'stack': [location],
    'useragent': useragent
  };
}

function wrapCallback(logger, f) {
  return function(err, resp) {
    try {
      f(err, resp);
    } catch (e) {
      logger.error(e);
    }
  };
}

function createItem(args, logger, notifier, requestKeys, lambdaContext) {
  var message, err, custom, callback, request;
  var arg;
  var extraArgs = [];
  var diagnostic = {};

  for (var i = 0, l = args.length; i < l; ++i) {
    arg = args[i];

    var typ = typeName(arg);
    switch (typ) {
      case 'undefined':
        break;
      case 'string':
        message ? extraArgs.push(arg) : message = arg;
        break;
      case 'function':
        callback = wrapCallback(logger, arg);
        break;
      case 'date':
        extraArgs.push(arg);
        break;
      case 'error':
      case 'domexception':
      case 'exception': // Firefox Exception type
        err ? extraArgs.push(arg) : err = arg;
        break;
      case 'object':
      case 'array':
        if (arg instanceof Error || (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {
          err ? extraArgs.push(arg) : err = arg;
          break;
        }
        if (requestKeys && typ === 'object' && !request) {
          for (var j = 0, len = requestKeys.length; j < len; ++j) {
            if (arg[requestKeys[j]] !== undefined) {
              request = arg;
              break;
            }
          }
          if (request) {
            break;
          }
        }
        custom ? extraArgs.push(arg) : custom = arg;
        break;
      default:
        if (arg instanceof Error || (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {
          err ? extraArgs.push(arg) : err = arg;
          break;
        }
        extraArgs.push(arg);
    }
  }

  if (extraArgs.length > 0) {
    // if custom is an array this turns it into an object with integer keys
    custom = merge(custom);
    custom.extraArgs = extraArgs;
  }

  var item = {
    message: message,
    err: err,
    custom: custom,
    timestamp: now(),
    callback: callback,
    notifier: notifier,
    diagnostic: diagnostic,
    uuid: uuid4()
  };

  setCustomItemKeys(item, custom);

  if (requestKeys && request) {
    item.request = request;
  }
  if (lambdaContext) {
    item.lambdaContext = lambdaContext;
  }
  item._originalArgs = args;
  return item;
}

function setCustomItemKeys(item, custom) {
  if (custom && custom.level !== undefined) {
    item.level = custom.level;
    delete custom.level;
  }
  if (custom && custom.skipFrames !== undefined) {
    item.skipFrames = custom.skipFrames;
    delete custom.skipFrames;
  }
}

var TELEMETRY_TYPES = ['log', 'network', 'dom', 'navigation', 'error', 'manual'];
var TELEMETRY_LEVELS = ['critical', 'error', 'warning', 'info', 'debug'];

function arrayIncludes(arr, val) {
  for (var k = 0; k < arr.length; ++k) {
    if (arr[k] === val) {
      return true;
    }
  }

  return false;
}

function createTelemetryEvent(args) {
  var type, metadata, level;
  var arg;

  for (var i = 0, l = args.length; i < l; ++i) {
    arg = args[i];

    var typ = typeName(arg);
    switch (typ) {
      case 'string':
        if (!type && arrayIncludes(TELEMETRY_TYPES, arg)) {
          type = arg;
        } else if (!level && arrayIncludes(TELEMETRY_LEVELS, arg)) {
          level = arg;
        }
        break;
      case 'object':
        metadata = arg;
        break;
      default:
        break;
    }
  }
  var event = {
    type: type || 'manual',
    metadata: metadata || {},
    level: level
  };

  return event;
}

/*
 * get - given an obj/array and a keypath, return the value at that keypath or
 *       undefined if not possible.
 *
 * @param obj - an object or array
 * @param path - a string of keys separated by '.' such as 'plugin.jquery.0.message'
 *    which would correspond to 42 in `{plugin: {jquery: [{message: 42}]}}`
 */
function get(obj, path) {
  if (!obj) {
    return undefined;
  }
  var keys = path.split('.');
  var result = obj;
  try {
    for (var i = 0, len = keys.length; i < len; ++i) {
      result = result[keys[i]];
    }
  } catch (e) {
    result = undefined;
  }
  return result;
}

function set(obj, path, value) {
  if (!obj) {
    return;
  }
  var keys = path.split('.');
  var len = keys.length;
  if (len < 1) {
    return;
  }
  if (len === 1) {
    obj[keys[0]] = value;
    return;
  }
  try {
    var temp = obj[keys[0]] || {};
    var replacement = temp;
    for (var i = 1; i < len - 1; ++i) {
      temp[keys[i]] = temp[keys[i]] || {};
      temp = temp[keys[i]];
    }
    temp[keys[len-1]] = value;
    obj[keys[0]] = replacement;
  } catch (e) {
    return;
  }
}

function scrub(data, scrubFields) {
  scrubFields = scrubFields || [];
  var paramRes = _getScrubFieldRegexs(scrubFields);
  var queryRes = _getScrubQueryParamRegexs(scrubFields);

  function redactQueryParam(dummy0, paramPart) {
    return paramPart + redact();
  }

  function paramScrubber(v) {
    var i;
    if (isType(v, 'string')) {
      for (i = 0; i < queryRes.length; ++i) {
        v = v.replace(queryRes[i], redactQueryParam);
      }
    }
    return v;
  }

  function valScrubber(k, v) {
    var i;
    for (i = 0; i < paramRes.length; ++i) {
      if (paramRes[i].test(k)) {
        v = redact();
        break;
      }
    }
    return v;
  }

  function scrubber(k, v, seen) {
    var tmpV = valScrubber(k, v);
    if (tmpV === v) {
      if (isType(v, 'object') || isType(v, 'array')) {
        return traverse(v, scrubber, seen);
      }
      return paramScrubber(tmpV);
    } else {
      return tmpV;
    }
  }

  return traverse(data, scrubber, []);
}

function _getScrubFieldRegexs(scrubFields) {
  var ret = [];
  var pat;
  for (var i = 0; i < scrubFields.length; ++i) {
    pat = '^\\[?(%5[bB])?' + scrubFields[i] + '\\[?(%5[bB])?\\]?(%5[dD])?$';
    ret.push(new RegExp(pat, 'i'));
  }
  return ret;
}


function _getScrubQueryParamRegexs(scrubFields) {
  var ret = [];
  var pat;
  for (var i = 0; i < scrubFields.length; ++i) {
    pat = '\\[?(%5[bB])?' + scrubFields[i] + '\\[?(%5[bB])?\\]?(%5[dD])?';
    ret.push(new RegExp('(' + pat + '=)([^&\\n]+)', 'igm'));
  }
  return ret;
}

function formatArgsAsString(args) {
  var i, len, arg;
  var result = [];
  for (i = 0, len = args.length; i < len; ++i) {
    arg = args[i];
    switch (typeName(arg)) {
      case 'object':
        arg = stringify(arg);
        arg = arg.error || arg.value;
        if (arg.length > 500) {
          arg = arg.substr(0, 497) + '...';
        }
        break;
      case 'null':
        arg = 'null';
        break;
      case 'undefined':
        arg = 'undefined';
        break;
      case 'symbol':
        arg = arg.toString();
        break;
    }
    result.push(arg);
  }
  return result.join(' ');
}

function now() {
  if (Date.now) {
    return +Date.now();
  }
  return +new Date();
}

function filterIp(requestData, captureIp) {
  if (!requestData || !requestData['user_ip'] || captureIp === true) {
    return;
  }
  var newIp = requestData['user_ip'];
  if (!captureIp) {
    newIp = null;
  } else {
    try {
      var parts;
      if (newIp.indexOf('.') !== -1) {
        parts = newIp.split('.');
        parts.pop();
        parts.push('0');
        newIp = parts.join('.');
      } else if (newIp.indexOf(':') !== -1) {
        parts = newIp.split(':');
        if (parts.length > 2) {
          var beginning = parts.slice(0, 3);
          var slashIdx = beginning[2].indexOf('/');
          if (slashIdx !== -1) {
            beginning[2] = beginning[2].substring(0, slashIdx);
          }
          var terminal = '0000:0000:0000:0000:0000';
          newIp = beginning.concat(terminal).join(':');
        }
      } else {
        newIp = null;
      }
    } catch (e) {
      newIp = null;
    }
  }
  requestData['user_ip'] = newIp;
}

function handleOptions(current, input, payload) {
  var result = merge(current, input, payload);
  if (!input || input.overwriteScrubFields) {
    return result;
  }
  if (input.scrubFields) {
    result.scrubFields = (current.scrubFields || []).concat(input.scrubFields);
  }
  return result;
}

module.exports = {
  addParamsAndAccessTokenToPath: addParamsAndAccessTokenToPath,
  createItem: createItem,
  createTelemetryEvent: createTelemetryEvent,
  filterIp: filterIp,
  formatArgsAsString: formatArgsAsString,
  formatUrl: formatUrl,
  get: get,
  handleOptions: handleOptions,
  isError: isError,
  isFunction: isFunction,
  isIterable: isIterable,
  isNativeFunction: isNativeFunction,
  isType: isType,
  isObject: isObject,
  isString: isString,
  jsonParse: jsonParse,
  LEVELS: LEVELS,
  makeUnhandledStackInfo: makeUnhandledStackInfo,
  merge: merge,
  now: now,
  redact: redact,
  sanitizeUrl: sanitizeUrl,
  scrub: scrub,
  set: set,
  stringify: stringify,
  maxByteSize: maxByteSize,
  traverse: traverse,
  typeName: typeName,
  uuid4: uuid4
};


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint-disable no-console */
__webpack_require__(16);
var detection = __webpack_require__(17);
var _ = __webpack_require__(0);

function error() {
  var args = Array.prototype.slice.call(arguments, 0);
  args.unshift('Rollbar:');
  if (detection.ieVersion() <= 8) {
    console.error(_.formatArgsAsString(args));
  } else {
    console.error.apply(console, args);
  }
}

function info() {
  var args = Array.prototype.slice.call(arguments, 0);
  args.unshift('Rollbar:');
  if (detection.ieVersion() <= 8) {
    console.info(_.formatArgsAsString(args));
  } else {
    console.info.apply(console, args);
  }
}

function log() {
  var args = Array.prototype.slice.call(arguments, 0);
  args.unshift('Rollbar:');
  if (detection.ieVersion() <= 8) {
    console.log(_.formatArgsAsString(args));
  } else {
    console.log.apply(console, args);
  }
}

/* eslint-enable no-console */

module.exports = {
  error: error,
  info: info,
  log: log
};


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _ = __webpack_require__(0);

function raw(payload, jsonBackup) {
  return [payload, _.stringify(payload, jsonBackup)];
}

function selectFrames(frames, range) {
  var len = frames.length;
  if (len > range * 2) {
    return frames.slice(0, range).concat(frames.slice(len - range));
  }
  return frames;
}

function truncateFrames(payload, jsonBackup, range) {
  range = (typeof range === 'undefined') ? 30 : range;
  var body = payload.data.body;
  var frames;
  if (body.trace_chain) {
    var chain = body.trace_chain;
    for (var i = 0; i < chain.length; i++) {
      frames = chain[i].frames;
      frames = selectFrames(frames, range);
      chain[i].frames = frames;
    }
  } else if (body.trace) {
    frames = body.trace.frames;
    frames = selectFrames(frames, range);
    body.trace.frames = frames;
  }
  return [payload, _.stringify(payload, jsonBackup)];
}

function maybeTruncateValue(len, val) {
  if (!val) {
    return val;
  }
  if (val.length > len) {
    return val.slice(0, len - 3).concat('...');
  }
  return val;
}

function truncateStrings(len, payload, jsonBackup) {
  function truncator(k, v, seen) {
    switch (_.typeName(v)) {
      case 'string':
        return maybeTruncateValue(len, v);
      case 'object':
      case 'array':
        return _.traverse(v, truncator, seen);
      default:
        return v;
    }
  }
  payload = _.traverse(payload, truncator, []);
  return [payload, _.stringify(payload, jsonBackup)];
}

function truncateTraceData(traceData) {
  if (traceData.exception) {
    delete traceData.exception.description;
    traceData.exception.message = maybeTruncateValue(255, traceData.exception.message);
  }
  traceData.frames = selectFrames(traceData.frames, 1);
  return traceData;
}

function minBody(payload, jsonBackup) {
  var body = payload.data.body;
  if (body.trace_chain) {
    var chain = body.trace_chain;
    for (var i = 0; i < chain.length; i++) {
      chain[i] = truncateTraceData(chain[i]);
    }
  } else if (body.trace) {
    body.trace = truncateTraceData(body.trace);
  }
  return [payload, _.stringify(payload, jsonBackup)];
}

function needsTruncation(payload, maxSize) {
  return _.maxByteSize(payload) > maxSize;
}

function truncate(payload, jsonBackup, maxSize) {
  maxSize = (typeof maxSize === 'undefined') ? (512 * 1024) : maxSize;
  var strategies = [
    raw,
    truncateFrames,
    truncateStrings.bind(null, 1024),
    truncateStrings.bind(null, 512),
    truncateStrings.bind(null, 256),
    minBody
  ];
  var strategy, results, result;

  while ((strategy = strategies.shift())) {
    results = strategy(payload, jsonBackup);
    payload = results[0];
    result = results[1];
    if (result.error || !needsTruncation(result.value, maxSize)) {
      return result;
    }
  }
  return result;
}

module.exports = {
  truncate: truncate,

  /* for testing */
  raw: raw,
  truncateFrames: truncateFrames,
  truncateStrings: truncateStrings,
  maybeTruncateValue: maybeTruncateValue
};


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// See https://nodejs.org/docs/latest/api/url.html
function parse(url) {
  var result = {
    protocol: null, auth: null, host: null, path: null,
    hash: null, href: url, hostname: null, port: null,
    pathname: null, search: null, query: null
  };

  var i, last;
  i = url.indexOf('//');
  if (i !== -1) {
    result.protocol = url.substring(0,i);
    last = i+2;
  } else {
    last = 0;
  }
  
  i = url.indexOf('@', last);
  if (i !== -1) {
    result.auth = url.substring(last, i);
    last = i+1;
  }

  i = url.indexOf('/', last);
  if (i === -1) {
    i = url.indexOf('?', last);
    if (i === -1) {
      i = url.indexOf('#', last);
      if (i === -1) {
        result.host = url.substring(last);
      } else {
        result.host = url.substring(last, i);
        result.hash = url.substring(i);
      }
      result.hostname = result.host.split(':')[0];
      result.port = result.host.split(':')[1];
      if (result.port) {
        result.port = parseInt(result.port, 10);
      }
      return result;
    } else {
      result.host = url.substring(last, i);
      result.hostname = result.host.split(':')[0];
      result.port = result.host.split(':')[1];
      if (result.port) {
        result.port = parseInt(result.port, 10);
      }
      last = i;
    }
  } else {
    result.host = url.substring(last, i);
    result.hostname = result.host.split(':')[0];
    result.port = result.host.split(':')[1];
    if (result.port) {
      result.port = parseInt(result.port, 10);
    }
    last = i;
  }

  i = url.indexOf('#', last);
  if (i === -1) {
    result.path = url.substring(last);
  } else {
    result.path = url.substring(last, i);
    result.hash = url.substring(i);
  }

  if (result.path) {
    var pathParts = result.path.split('?');
    result.pathname = pathParts[0];
    result.query = pathParts[1];
    result.search = result.query ? '?' + result.query : null;
  }
  return result;
}

module.exports = {
  parse: parse
};


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ErrorStackParser = __webpack_require__(21);

var UNKNOWN_FUNCTION = '?';
var ERR_CLASS_REGEXP = new RegExp('^(([a-zA-Z0-9-_$ ]*): *)?(Uncaught )?([a-zA-Z0-9-_$ ]*): ');

function guessFunctionName() {
  return UNKNOWN_FUNCTION;
}


function gatherContext() {
  return null;
}


function Frame(stackFrame) {
  var data = {};

  data._stackFrame = stackFrame;

  data.url = stackFrame.fileName;
  data.line = stackFrame.lineNumber;
  data.func = stackFrame.functionName;
  data.column = stackFrame.columnNumber;
  data.args = stackFrame.args;

  data.context = gatherContext();

  return data;
}


function Stack(exception, skip) {
  function getStack() {
    var parserStack = [];

    skip = skip || 0;

    try {
      parserStack = ErrorStackParser.parse(exception);
    } catch(e) {
      parserStack = [];
    }

    var stack = [];

    for (var i = skip; i < parserStack.length; i++) {
      stack.push(new Frame(parserStack[i]));
    }

    return stack;
  }

  return {
    stack: getStack(),
    message: exception.message,
    name: _mostSpecificErrorName(exception),
    rawStack: exception.stack,
    rawException: exception
  };
}


function parse(e, skip) {
  var err = e;

  if (err.nested) {
    var traceChain = [];
    while (err) {
      traceChain.push(new Stack(err, skip));
      err = err.nested;

      skip = 0; // Only apply skip value to primary error
    }

    // Return primary error with full trace chain attached.
    traceChain[0].traceChain = traceChain;
    return traceChain[0];
  } else {
    return new Stack(err, skip);
  }
}


function guessErrorClass(errMsg) {
  if (!errMsg || !errMsg.match) {
    return ['Unknown error. There was no error message to display.', ''];
  }
  var errClassMatch = errMsg.match(ERR_CLASS_REGEXP);
  var errClass = '(unknown)';

  if (errClassMatch) {
    errClass = errClassMatch[errClassMatch.length - 1];
    errMsg = errMsg.replace((errClassMatch[errClassMatch.length - 2] || '') + errClass + ':', '');
    errMsg = errMsg.replace(/(^[\s]+|[\s]+$)/g, '');
  }
  return [errClass, errMsg];
}

// * Prefers any value over an empty string
// * Prefers any value over 'Error' where possible
// * Prefers name over constructor.name when both are more specific than 'Error'
function _mostSpecificErrorName(error) {
  var name = error.name && error.name.length && error.name;
  var constructorName = error.constructor.name && error.constructor.name.length && error.constructor.name;

  if (!name || !constructorName) {
    return name || constructorName;
  }

  if (name === 'Error') {
    return constructorName;
  }
  return name;
}

module.exports = {
  guessFunctionName: guessFunctionName,
  guessErrorClass: guessErrorClass,
  gatherContext: gatherContext,
  parse: parse,
  Stack: Stack,
  Frame: Frame
};


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var rollbar = __webpack_require__(6);

var options = (typeof window !== 'undefined') && window._rollbarConfig;
var alias = options && options.globalAlias || 'Rollbar';
var shimRunning = (typeof window !== 'undefined') && window[alias] && typeof window[alias].shimId === 'function' && window[alias].shimId() !== undefined;

if ((typeof window !== 'undefined') && !window._rollbarStartTime) {
  window._rollbarStartTime = (new Date()).getTime();
}

if (!shimRunning && options) {
  var Rollbar = new rollbar(options);
  window[alias] = Rollbar;
} else if (typeof window !== 'undefined') {
  window.rollbar = rollbar;
  window._rollbarDidLoad = true;
} else if (typeof self !== 'undefined') {
  self.rollbar = rollbar;
  self._rollbarDidLoad = true;
}

module.exports = rollbar;


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Client = __webpack_require__(7);
var _ = __webpack_require__(0);
var API = __webpack_require__(14);
var logger = __webpack_require__(1);
var globals = __webpack_require__(18);

var transport = __webpack_require__(19);
var urllib = __webpack_require__(3);

var transforms = __webpack_require__(20);
var sharedTransforms = __webpack_require__(23);
var predicates = __webpack_require__(24);
var sharedPredicates = __webpack_require__(25);
var errorParser = __webpack_require__(4);
var Instrumenter = __webpack_require__(26);

function Rollbar(options, client) {
  this.options = _.handleOptions(defaultOptions, options);
  this.options._configuredOptions = options;
  var api = new API(this.options, transport, urllib);
  this.client = client || new Client(this.options, api, logger, 'browser');

  var gWindow = _gWindow();
  var gDocument = (typeof document != 'undefined') && document;
  this.isChrome = gWindow.chrome && gWindow.chrome.runtime; // check .runtime to avoid Edge browsers
  this.anonymousErrorsPending = 0;
  addTransformsToNotifier(this.client.notifier, gWindow);
  addPredicatesToQueue(this.client.queue);
  this.setupUnhandledCapture();
  this.instrumenter = new Instrumenter(this.options, this.client.telemeter, this, gWindow, gDocument);
  this.instrumenter.instrument();
}

var _instance = null;
Rollbar.init = function(options, client) {
  if (_instance) {
    return _instance.global(options).configure(options);
  }
  _instance = new Rollbar(options, client);
  return _instance;
};

function handleUninitialized(maybeCallback) {
  var message = 'Rollbar is not initialized';
  logger.error(message);
  if (maybeCallback) {
    maybeCallback(new Error(message));
  }
}

Rollbar.prototype.global = function(options) {
  this.client.global(options);
  return this;
};
Rollbar.global = function(options) {
  if (_instance) {
    return _instance.global(options);
  } else {
    handleUninitialized();
  }
};

Rollbar.prototype.configure = function(options, payloadData) {
  var oldOptions = this.options;
  var payload = {};
  if (payloadData) {
    payload = {payload: payloadData};
  }
  this.options = _.handleOptions(oldOptions, options, payload);
  this.options._configuredOptions = _.handleOptions(oldOptions._configuredOptions, options, payload);
  this.client.configure(this.options, payloadData);
  this.instrumenter.configure(this.options);
  this.setupUnhandledCapture();
  return this;
};
Rollbar.configure = function(options, payloadData) {
  if (_instance) {
    return _instance.configure(options, payloadData);
  } else {
    handleUninitialized();
  }
};

Rollbar.prototype.lastError = function() {
  return this.client.lastError;
};
Rollbar.lastError = function() {
  if (_instance) {
    return _instance.lastError();
  } else {
    handleUninitialized();
  }
};

Rollbar.prototype.log = function() {
  var item = this._createItem(arguments);
  var uuid = item.uuid;
  this.client.log(item);
  return {uuid: uuid};
};
Rollbar.log = function() {
  if (_instance) {
    return _instance.log.apply(_instance, arguments);
  } else {
    var maybeCallback = _getFirstFunction(arguments);
    handleUninitialized(maybeCallback);
  }
};

Rollbar.prototype.debug = function() {
  var item = this._createItem(arguments);
  var uuid = item.uuid;
  this.client.debug(item);
  return {uuid: uuid};
};
Rollbar.debug = function() {
  if (_instance) {
    return _instance.debug.apply(_instance, arguments);
  } else {
    var maybeCallback = _getFirstFunction(arguments);
    handleUninitialized(maybeCallback);
  }
};

Rollbar.prototype.info = function() {
  var item = this._createItem(arguments);
  var uuid = item.uuid;
  this.client.info(item);
  return {uuid: uuid};
};
Rollbar.info = function() {
  if (_instance) {
    return _instance.info.apply(_instance, arguments);
  } else {
    var maybeCallback = _getFirstFunction(arguments);
    handleUninitialized(maybeCallback);
  }
};

Rollbar.prototype.warn = function() {
  var item = this._createItem(arguments);
  var uuid = item.uuid;
  this.client.warn(item);
  return {uuid: uuid};
};
Rollbar.warn = function() {
  if (_instance) {
    return _instance.warn.apply(_instance, arguments);
  } else {
    var maybeCallback = _getFirstFunction(arguments);
    handleUninitialized(maybeCallback);
  }
};

Rollbar.prototype.warning = function() {
  var item = this._createItem(arguments);
  var uuid = item.uuid;
  this.client.warning(item);
  return {uuid: uuid};
};
Rollbar.warning = function() {
  if (_instance) {
    return _instance.warning.apply(_instance, arguments);
  } else {
    var maybeCallback = _getFirstFunction(arguments);
    handleUninitialized(maybeCallback);
  }
};

Rollbar.prototype.error = function() {
  var item = this._createItem(arguments);
  var uuid = item.uuid;
  this.client.error(item);
  return {uuid: uuid};
};
Rollbar.error = function() {
  if (_instance) {
    return _instance.error.apply(_instance, arguments);
  } else {
    var maybeCallback = _getFirstFunction(arguments);
    handleUninitialized(maybeCallback);
  }
};

Rollbar.prototype.critical = function() {
  var item = this._createItem(arguments);
  var uuid = item.uuid;
  this.client.critical(item);
  return {uuid: uuid};
};
Rollbar.critical = function() {
  if (_instance) {
    return _instance.critical.apply(_instance, arguments);
  } else {
    var maybeCallback = _getFirstFunction(arguments);
    handleUninitialized(maybeCallback);
  }
};

Rollbar.prototype.buildJsonPayload = function(item) {
  return this.client.buildJsonPayload(item);
};
Rollbar.buildJsonPayload = function() {
  if (_instance) {
    return _instance.buildJsonPayload.apply(_instance, arguments);
  } else {
    handleUninitialized();
  }
};

Rollbar.prototype.sendJsonPayload = function(jsonPayload) {
  return this.client.sendJsonPayload(jsonPayload);
};
Rollbar.sendJsonPayload = function() {
  if (_instance) {
    return _instance.sendJsonPayload.apply(_instance, arguments);
  } else {
    handleUninitialized();
  }
};

Rollbar.prototype.setupUnhandledCapture = function() {
  var gWindow = _gWindow();

  if (!this.unhandledExceptionsInitialized) {
    if (this.options.captureUncaught || this.options.handleUncaughtExceptions) {
      globals.captureUncaughtExceptions(gWindow, this);
      if (this.options.wrapGlobalEventHandlers) {
        globals.wrapGlobals(gWindow, this);
      }
      this.unhandledExceptionsInitialized = true;
    }
  }
  if (!this.unhandledRejectionsInitialized) {
    if (this.options.captureUnhandledRejections || this.options.handleUnhandledRejections) {
      globals.captureUnhandledRejections(gWindow, this);
      this.unhandledRejectionsInitialized = true;
    }
  }
};

Rollbar.prototype.handleUncaughtException = function(message, url, lineno, colno, error, context) {
  if (!this.options.captureUncaught && !this.options.handleUncaughtExceptions) {
    return;
  }

  // Chrome will always send 5+ arguments and error will be valid or null, not undefined.
  // If error is undefined, we have a different caller.
  if (this.options.inspectAnonymousErrors && this.isChrome && (error === null)) {
    return 'anonymous';
  }

  var item;
  var stackInfo = _.makeUnhandledStackInfo(
    message,
    url,
    lineno,
    colno,
    error,
    'onerror',
    'uncaught exception',
    errorParser
  );
  if (_.isError(error)) {
    item = this._createItem([message, error, context]);
    item._unhandledStackInfo = stackInfo;
  } else if (_.isError(url)) {
    item = this._createItem([message, url, context]);
    item._unhandledStackInfo = stackInfo;
  } else {
    item = this._createItem([message, context]);
    item.stackInfo = stackInfo;
  }
  item.level = this.options.uncaughtErrorLevel;
  item._isUncaught = true;
  this.client.log(item);
};

/**
 * Chrome only. Other browsers will ignore.
 *
 * Use Error.prepareStackTrace to extract information about errors that
 * do not have a valid error object in onerror().
 *
 * In tested version of Chrome, onerror is called first but has no way
 * to communicate with prepareStackTrace. Use a counter to let this
 * handler know which errors to send to Rollbar.
 *
 * In config options, set inspectAnonymousErrors to enable.
 */
Rollbar.prototype.handleAnonymousErrors = function() {
  if (!this.options.inspectAnonymousErrors || !this.isChrome) {
    return;
  }

  var r = this;
  function prepareStackTrace(error, _stack) { // eslint-disable-line no-unused-vars
    if (r.options.inspectAnonymousErrors) {
      if (r.anonymousErrorsPending) {
        // This is the only known way to detect that onerror saw an anonymous error.
        // It depends on onerror reliably being called before Error.prepareStackTrace,
        // which so far holds true on tested versions of Chrome. If versions of Chrome
        // are tested that behave differently, this logic will need to be updated
        // accordingly.
        r.anonymousErrorsPending -= 1;

        if (!error) {
          // Not likely to get here, but calling handleUncaughtException from here
          // without an error object would throw off the anonymousErrorsPending counter,
          // so return now.
          return;
        }

        // Allow this to be tracked later.
        error._isAnonymous = true;

        // url, lineno, colno shouldn't be needed for these errors.
        // If that changes, update this accordingly, using the unused
        // _stack param as needed (rather than parse error.toString()).
        r.handleUncaughtException(error.message, null, null, null, error);
      }
    }

    // Workaround to ensure stack is preserved for normal errors.
    return error.stack;
  }

  // https://v8.dev/docs/stack-trace-api
  try {
    Error.prepareStackTrace = prepareStackTrace;
  } catch (e) {
    this.options.inspectAnonymousErrors = false;
    this.error('anonymous error handler failed', e);
  }
}

Rollbar.prototype.handleUnhandledRejection = function(reason, promise) {
  if (!this.options.captureUnhandledRejections && !this.options.handleUnhandledRejections) {
    return;
  }

  var message = 'unhandled rejection was null or undefined!';
  if (reason) {
    if (reason.message) {
      message = reason.message;
    } else {
      var reasonResult = _.stringify(reason);
      if (reasonResult.value) {
        message = reasonResult.value;
      }
    }
  }
  var context = (reason && reason._rollbarContext) || (promise && promise._rollbarContext);

  var item;
  if (_.isError(reason)) {
    item = this._createItem([message, reason, context]);
  } else {
    item = this._createItem([message, reason, context]);
    item.stackInfo = _.makeUnhandledStackInfo(
      message,
      '',
      0,
      0,
      null,
      'unhandledrejection',
      '',
      errorParser
    );
  }
  item.level = this.options.uncaughtErrorLevel;
  item._isUncaught = true;
  item._originalArgs = item._originalArgs || [];
  item._originalArgs.push(promise);
  this.client.log(item);
};

Rollbar.prototype.wrap = function(f, context, _before) {
  try {
    var ctxFn;
    if(_.isFunction(context)) {
      ctxFn = context;
    } else {
      ctxFn = function() { return context || {}; };
    }

    if (!_.isFunction(f)) {
      return f;
    }

    if (f._isWrap) {
      return f;
    }

    if (!f._rollbar_wrapped) {
      f._rollbar_wrapped = function () {
        if (_before && _.isFunction(_before)) {
          _before.apply(this, arguments);
        }
        try {
          return f.apply(this, arguments);
        } catch(exc) {
          var e = exc;
          if (e && window._rollbarWrappedError !== e) {
            if (_.isType(e, 'string')) {
              e = new String(e);
            }
            e._rollbarContext = ctxFn() || {};
            e._rollbarContext._wrappedSource = f.toString();

            window._rollbarWrappedError = e;
          }
          throw e;
        }
      };

      f._rollbar_wrapped._isWrap = true;

      if (f.hasOwnProperty) {
        for (var prop in f) {
          if (f.hasOwnProperty(prop) && prop !== '_rollbar_wrapped') {
            f._rollbar_wrapped[prop] = f[prop];
          }
        }
      }
    }

    return f._rollbar_wrapped;
  } catch (e) {
    // Return the original function if the wrap fails.
    return f;
  }
};
Rollbar.wrap = function(f, context) {
  if (_instance) {
    return _instance.wrap(f, context);
  } else {
    handleUninitialized();
  }
};

Rollbar.prototype.captureEvent = function() {
  var event = _.createTelemetryEvent(arguments);
  return this.client.captureEvent(event.type, event.metadata, event.level);
};
Rollbar.captureEvent = function() {
  if (_instance) {
    return _instance.captureEvent.apply(_instance, arguments);
  } else {
    handleUninitialized();
  }
};

// The following two methods are used internally and are not meant for public use
Rollbar.prototype.captureDomContentLoaded = function(e, ts) {
  if (!ts) {
    ts = new Date();
  }
  return this.client.captureDomContentLoaded(ts);
};

Rollbar.prototype.captureLoad = function(e, ts) {
  if (!ts) {
    ts = new Date();
  }
  return this.client.captureLoad(ts);
};

/* Internal */

function addTransformsToNotifier(notifier, gWindow) {
  notifier
    .addTransform(transforms.handleDomException)
    .addTransform(transforms.handleItemWithError)
    .addTransform(transforms.ensureItemHasSomethingToSay)
    .addTransform(transforms.addBaseInfo)
    .addTransform(transforms.addRequestInfo(gWindow))
    .addTransform(transforms.addClientInfo(gWindow))
    .addTransform(transforms.addPluginInfo(gWindow))
    .addTransform(transforms.addBody)
    .addTransform(sharedTransforms.addMessageWithError)
    .addTransform(sharedTransforms.addTelemetryData)
    .addTransform(sharedTransforms.addConfigToPayload)
    .addTransform(transforms.scrubPayload)
    .addTransform(sharedTransforms.userTransform(logger))
    .addTransform(sharedTransforms.addConfiguredOptions)
    .addTransform(sharedTransforms.addDiagnosticKeys)
    .addTransform(sharedTransforms.itemToPayload);
}

function addPredicatesToQueue(queue) {
  queue
    .addPredicate(sharedPredicates.checkLevel)
    .addPredicate(predicates.checkIgnore)
    .addPredicate(sharedPredicates.userCheckIgnore(logger))
    .addPredicate(sharedPredicates.urlIsNotBlacklisted(logger))
    .addPredicate(sharedPredicates.urlIsWhitelisted(logger))
    .addPredicate(sharedPredicates.messageIsIgnored(logger));
}

Rollbar.prototype._createItem = function(args) {
  return _.createItem(args, logger, this);
};

Rollbar.prototype.loadFull = function() {
  logger.info('Unexpected Rollbar.loadFull() called on a Notifier instance. This can happen when Rollbar is loaded multiple times.');
};

function _getFirstFunction(args) {
  for (var i = 0, len = args.length; i < len; ++i) {
    if (_.isFunction(args[i])) {
      return args[i];
    }
  }
  return undefined;
}

function _gWindow() {
  return ((typeof window != 'undefined') && window) || ((typeof self != 'undefined') && self);
}

/* global __NOTIFIER_VERSION__:false */
/* global __DEFAULT_BROWSER_SCRUB_FIELDS__:false */
/* global __DEFAULT_LOG_LEVEL__:false */
/* global __DEFAULT_REPORT_LEVEL__:false */
/* global __DEFAULT_UNCAUGHT_ERROR_LEVEL:false */
/* global __DEFAULT_ENDPOINT__:false */

var defaultOptions = {
  version: "2.15.0",
  scrubFields: ["pw","pass","passwd","password","secret","confirm_password","confirmPassword","password_confirmation","passwordConfirmation","access_token","accessToken","X-Rollbar-Access-Token","secret_key","secretKey","secretToken","cc-number","card number","cardnumber","cardnum","ccnum","ccnumber","cc num","creditcardnumber","credit card number","newcreditcardnumber","new credit card","creditcardno","credit card no","card#","card #","cc-csc","cvc","cvc2","cvv2","ccv2","security code","card verification","name on credit card","name on card","nameoncard","cardholder","card holder","name des karteninhabers","ccname","card type","cardtype","cc type","cctype","payment type","expiration date","expirationdate","expdate","cc-exp","ccmonth","ccyear"],
  logLevel: "debug",
  reportLevel: "debug",
  uncaughtErrorLevel: "error",
  endpoint: "api.rollbar.com/api/1/item/",
  verbose: false,
  enabled: true,
  transmit: true,
  sendConfig: false,
  includeItemsInTelemetry: true,
  captureIp: true,
  inspectAnonymousErrors: true,
  ignoreDuplicateErrors: true,
  wrapGlobalEventHandlers: false
};

module.exports = Rollbar;


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var RateLimiter = __webpack_require__(8);
var Queue = __webpack_require__(11);
var Notifier = __webpack_require__(12);
var Telemeter = __webpack_require__(13);
var _ = __webpack_require__(0);

/*
 * Rollbar - the interface to Rollbar
 *
 * @param options
 * @param api
 * @param logger
 */
function Rollbar(options, api, logger, platform) {
  this.options = _.merge(options);
  this.logger = logger;
  Rollbar.rateLimiter.configureGlobal(this.options);
  Rollbar.rateLimiter.setPlatformOptions(platform, this.options);
  this.api = api;
  this.queue = new Queue(Rollbar.rateLimiter, api, logger, this.options);
  this.notifier = new Notifier(this.queue, this.options);
  this.telemeter = new Telemeter(this.options);
  this.lastError = null;
  this.lastErrorHash = 'none';
}

var defaultOptions = {
  maxItems: 0,
  itemsPerMinute: 60
};

Rollbar.rateLimiter = new RateLimiter(defaultOptions);

Rollbar.prototype.global = function(options) {
  Rollbar.rateLimiter.configureGlobal(options);
  return this;
};

Rollbar.prototype.configure = function(options, payloadData) {
  var oldOptions = this.options;
  var payload = {};
  if (payloadData) {
    payload = {payload: payloadData};
  }
  this.options = _.merge(oldOptions, options, payload);
  this.notifier && this.notifier.configure(this.options);
  this.telemeter && this.telemeter.configure(this.options);
  this.global(this.options);
  return this;
};

Rollbar.prototype.log = function(item) {
  var level = this._defaultLogLevel();
  return this._log(level, item);
};

Rollbar.prototype.debug = function(item) {
  this._log('debug', item);
};

Rollbar.prototype.info = function(item) {
  this._log('info', item);
};

Rollbar.prototype.warn = function(item) {
  this._log('warning', item);
};

Rollbar.prototype.warning = function(item) {
  this._log('warning', item);
};

Rollbar.prototype.error = function(item) {
  this._log('error', item);
};

Rollbar.prototype.critical = function(item) {
  this._log('critical', item);
};

Rollbar.prototype.wait = function(callback) {
  this.queue.wait(callback);
};

Rollbar.prototype.captureEvent = function(type, metadata, level) {
  return this.telemeter.captureEvent(type, metadata, level);
};

Rollbar.prototype.captureDomContentLoaded = function(ts) {
  return this.telemeter.captureDomContentLoaded(ts);
};

Rollbar.prototype.captureLoad = function(ts) {
  return this.telemeter.captureLoad(ts);
};

Rollbar.prototype.buildJsonPayload = function(item) {
  return this.api.buildJsonPayload(item);
};

Rollbar.prototype.sendJsonPayload = function(jsonPayload) {
  this.api.postJsonPayload(jsonPayload);
};

/* Internal */

Rollbar.prototype._log = function(defaultLevel, item) {
  var callback;
  if (item.callback) {
    callback = item.callback;
    delete item.callback;
  }
  if (this.options.ignoreDuplicateErrors && this._sameAsLastError(item)) {
    if (callback) {
      var error = new Error('ignored identical item');
      error.item = item;
      callback(error);
    }
    return;
  }
  try {
    item.level = item.level || defaultLevel;
    this.telemeter._captureRollbarItem(item);
    item.telemetryEvents = this.telemeter.copyEvents();
    this.notifier.log(item, callback);
  } catch (e) {
    this.logger.error(e);
  }
};

Rollbar.prototype._defaultLogLevel = function() {
  return this.options.logLevel || 'debug';
};

Rollbar.prototype._sameAsLastError = function(item) {
  if (!item._isUncaught) {
    return false;
  }
  var itemHash = generateItemHash(item);
  if (this.lastErrorHash === itemHash) {
    return true;
  }
  this.lastError = item.err;
  this.lastErrorHash = itemHash;
  return false;
};

function generateItemHash(item) {
  var message = item.message || '';
  var stack = (item.err || {}).stack || String(item.err);
  return message + '::' + stack;
}

module.exports = Rollbar;


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _ = __webpack_require__(0);

/*
 * RateLimiter - an object that encapsulates the logic for counting items sent to Rollbar
 *
 * @param options - the same options that are accepted by configureGlobal offered as a convenience
 */
function RateLimiter(options) {
  this.startTime = _.now();
  this.counter = 0;
  this.perMinCounter = 0;
  this.platform = null;
  this.platformOptions = {};
  this.configureGlobal(options);
}

RateLimiter.globalSettings = {
  startTime: _.now(),
  maxItems: undefined,
  itemsPerMinute: undefined
};

/*
 * configureGlobal - set the global rate limiter options
 *
 * @param options - Only the following values are recognized:
 *    startTime: a timestamp of the form returned by (new Date()).getTime()
 *    maxItems: the maximum items
 *    itemsPerMinute: the max number of items to send in a given minute
 */
RateLimiter.prototype.configureGlobal = function(options) {
  if (options.startTime !== undefined) {
    RateLimiter.globalSettings.startTime = options.startTime;
  }
  if (options.maxItems !== undefined) {
    RateLimiter.globalSettings.maxItems = options.maxItems;
  }
  if (options.itemsPerMinute !== undefined) {
    RateLimiter.globalSettings.itemsPerMinute = options.itemsPerMinute;
  }
};

/*
 * shouldSend - determine if we should send a given item based on rate limit settings
 *
 * @param item - the item we are about to send
 * @returns An object with the following structure:
 *  error: (Error|null)
 *  shouldSend: bool
 *  payload: (Object|null)
 *  If shouldSend is false, the item passed as a parameter should not be sent to Rollbar, and
 *  exactly one of error or payload will be non-null. If error is non-null, the returned Error will
 *  describe the situation, but it means that we were already over a rate limit (either globally or
 *  per minute) when this item was checked. If error is null, and therefore payload is non-null, it
 *  means this item put us over the global rate limit and the payload should be sent to Rollbar in
 *  place of the passed in item.
 */
RateLimiter.prototype.shouldSend = function(item, now) {
  now = now || _.now();
  var elapsedTime = now - this.startTime;
  if (elapsedTime < 0 || elapsedTime >= 60000) {
    this.startTime = now;
    this.perMinCounter = 0;
  }

  var globalRateLimit = RateLimiter.globalSettings.maxItems;
  var globalRateLimitPerMin = RateLimiter.globalSettings.itemsPerMinute;

  if (checkRate(item, globalRateLimit, this.counter)) {
    return shouldSendValue(this.platform, this.platformOptions, globalRateLimit + ' max items reached', false);
  } else if (checkRate(item, globalRateLimitPerMin, this.perMinCounter)) {
    return shouldSendValue(this.platform, this.platformOptions, globalRateLimitPerMin + ' items per minute reached', false);
  }
  this.counter++;
  this.perMinCounter++;

  var shouldSend = !checkRate(item, globalRateLimit, this.counter);
  var perMinute = shouldSend;
  shouldSend = shouldSend && !checkRate(item, globalRateLimitPerMin, this.perMinCounter);
  return shouldSendValue(this.platform, this.platformOptions, null, shouldSend, globalRateLimit, globalRateLimitPerMin, perMinute);
};

RateLimiter.prototype.setPlatformOptions = function(platform, options) {
  this.platform = platform;
  this.platformOptions = options;
};

/* Helpers */

function checkRate(item, limit, counter) {
  return !item.ignoreRateLimit && limit >= 1 && counter > limit;
}

function shouldSendValue(platform, options, error, shouldSend, globalRateLimit, limitPerMin, perMinute) {
  var payload = null;
  if (error) {
    error = new Error(error);
  }
  if (!error && !shouldSend) {
    payload = rateLimitPayload(platform, options, globalRateLimit, limitPerMin, perMinute);
  }
  return {error: error, shouldSend: shouldSend, payload: payload};
}

function rateLimitPayload(platform, options, globalRateLimit, limitPerMin, perMinute) {
  var environment = options.environment || (options.payload && options.payload.environment);
  var msg;
  if (perMinute) {
    msg = 'item per minute limit reached, ignoring errors until timeout';
  } else {
    msg = 'maxItems has been hit, ignoring errors until reset.';
  }
  var item = {
    body: {
      message: {
        body: msg,
        extra: {
          maxItems: globalRateLimit,
          itemsPerMinute: limitPerMin
        }
      }
    },
    language: 'javascript',
    environment: environment,
    notifier: {
      version: (options.notifier && options.notifier.version) || options.version
    }
  };
  if (platform === 'browser') {
    item.platform = 'browser';
    item.framework = 'browser-js';
    item.notifier.name = 'rollbar-browser-js';
  } else if (platform === 'server') {
    item.framework = options.framework || 'node-js';
    item.notifier.name = options.notifier.name;
  } else if (platform === 'react-native') {
    item.framework = options.framework || 'react-native';
    item.notifier.name = options.notifier.name;
  }
  return item;
}

module.exports = RateLimiter;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


'use strict';

var hasOwn = Object.prototype.hasOwnProperty;
var toStr = Object.prototype.toString;

var isPlainObject = function isPlainObject(obj) {
	if (!obj || toStr.call(obj) !== '[object Object]') {
		return false;
	}

	var hasOwnConstructor = hasOwn.call(obj, 'constructor');
	var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
	// Not own constructor property must be Object
	if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
		return false;
	}

	// Own properties are enumerated firstly, so to speed up,
	// if last one is own, then all properties are own.
	var key;
	for (key in obj) {/**/}

	return typeof key === 'undefined' || hasOwn.call(obj, key);
};

function merge() {
  var i, src, copy, clone, name,
      result = {},
     current = null,
      length = arguments.length;

  for (i=0; i < length; i++) {
    current = arguments[i];
    if (current == null) {
      continue;
    }

    for (name in current) {
      src = result[name];
      copy = current[name];
      if (result !== copy) {
        if (copy && isPlainObject(copy)) {
          clone = src && isPlainObject(src) ? src : {};
          result[name] = merge(clone, copy);
        } else if (typeof copy !== 'undefined') {
          result[name] = copy;
        }
      }
    }
  }
  return result;
}

module.exports = merge;


/***/ }),
/* 10 */
/***/ (function(module, exports) {

//  json3.js
//  2017-02-21
//  Public Domain.
//  NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.
//  See http://www.JSON.org/js.html
//  This code should be minified before deployment.
//  See http://javascript.crockford.com/jsmin.html

//  USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO
//  NOT CONTROL.

//  This file creates a global JSON object containing two methods: stringify
//  and parse. This file provides the ES5 JSON capability to ES3 systems.
//  If a project might run on IE8 or earlier, then this file should be included.
//  This file does nothing on ES5 systems.

//      JSON.stringify(value, replacer, space)
//          value       any JavaScript value, usually an object or array.
//          replacer    an optional parameter that determines how object
//                      values are stringified for objects. It can be a
//                      function or an array of strings.
//          space       an optional parameter that specifies the indentation
//                      of nested structures. If it is omitted, the text will
//                      be packed without extra whitespace. If it is a number,
//                      it will specify the number of spaces to indent at each
//                      level. If it is a string (such as "\t" or "&nbsp;"),
//                      it contains the characters used to indent at each level.
//          This method produces a JSON text from a JavaScript value.
//          When an object value is found, if the object contains a toJSON
//          method, its toJSON method will be called and the result will be
//          stringified. A toJSON method does not serialize: it returns the
//          value represented by the name/value pair that should be serialized,
//          or undefined if nothing should be serialized. The toJSON method
//          will be passed the key associated with the value, and this will be
//          bound to the value.

//          For example, this would serialize Dates as ISO strings.

//              Date.prototype.toJSON = function (key) {
//                  function f(n) {
//                      // Format integers to have at least two digits.
//                      return (n < 10)
//                          ? "0" + n
//                          : n;
//                  }
//                  return this.getUTCFullYear()   + "-" +
//                       f(this.getUTCMonth() + 1) + "-" +
//                       f(this.getUTCDate())      + "T" +
//                       f(this.getUTCHours())     + ":" +
//                       f(this.getUTCMinutes())   + ":" +
//                       f(this.getUTCSeconds())   + "Z";
//              };

//          You can provide an optional replacer method. It will be passed the
//          key and value of each member, with this bound to the containing
//          object. The value that is returned from your method will be
//          serialized. If your method returns undefined, then the member will
//          be excluded from the serialization.

//          If the replacer parameter is an array of strings, then it will be
//          used to select the members to be serialized. It filters the results
//          such that only members with keys listed in the replacer array are
//          stringified.

//          Values that do not have JSON representations, such as undefined or
//          functions, will not be serialized. Such values in objects will be
//          dropped; in arrays they will be replaced with null. You can use
//          a replacer function to replace those with JSON values.

//          JSON.stringify(undefined) returns undefined.

//          The optional space parameter produces a stringification of the
//          value that is filled with line breaks and indentation to make it
//          easier to read.

//          If the space parameter is a non-empty string, then that string will
//          be used for indentation. If the space parameter is a number, then
//          the indentation will be that many spaces.

//          Example:

//          text = JSON.stringify(["e", {pluribus: "unum"}]);
//          // text is '["e",{"pluribus":"unum"}]'

//          text = JSON.stringify(["e", {pluribus: "unum"}], null, "\t");
//          // text is '[\n\t"e",\n\t{\n\t\t"pluribus": "unum"\n\t}\n]'

//          text = JSON.stringify([new Date()], function (key, value) {
//              return this[key] instanceof Date
//                  ? "Date(" + this[key] + ")"
//                  : value;
//          });
//          // text is '["Date(---current time---)"]'

//      JSON.parse(text, reviver)
//          This method parses a JSON text to produce an object or array.
//          It can throw a SyntaxError exception.
//          This has been modified to use JSON-js/json_parse_state.js as the
//          parser instead of the one built around eval found in JSON-js/json2.js

//          The optional reviver parameter is a function that can filter and
//          transform the results. It receives each of the keys and values,
//          and its return value is used instead of the original value.
//          If it returns what it received, then the structure is not modified.
//          If it returns undefined then the member is deleted.

//          Example:

//          // Parse the text. Values that look like ISO date strings will
//          // be converted to Date objects.

//          myData = JSON.parse(text, function (key, value) {
//              var a;
//              if (typeof value === "string") {
//                  a =
//   /^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)Z$/.exec(value);
//                  if (a) {
//                      return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],
//                          +a[5], +a[6]));
//                  }
//              }
//              return value;
//          });

//          myData = JSON.parse('["Date(09/09/2001)"]', function (key, value) {
//              var d;
//              if (typeof value === "string" &&
//                      value.slice(0, 5) === "Date(" &&
//                      value.slice(-1) === ")") {
//                  d = new Date(value.slice(5, -1));
//                  if (d) {
//                      return d;
//                  }
//              }
//              return value;
//          });

//  This is a reference implementation. You are free to copy, modify, or
//  redistribute.

/*jslint
  for, this
  */

/*property
  JSON, apply, call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,
  getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,
  lastIndex, length, parse, prototype, push, replace, slice, stringify,
  test, toJSON, toString, valueOf
  */

var setupCustomJSON = function(JSON) {

  var rx_one = /^[\],:{}\s]*$/;
  var rx_two = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
  var rx_three = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var rx_four = /(?:^|:|,)(?:\s*\[)+/g;
  var rx_escapable = /[\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
  var rx_dangerous = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;

  function f(n) {
    // Format integers to have at least two digits.
    return n < 10
      ? "0" + n
      : n;
  }

  function this_value() {
    return this.valueOf();
  }

  if (typeof Date.prototype.toJSON !== "function") {

    Date.prototype.toJSON = function () {

      return isFinite(this.valueOf())
        ? this.getUTCFullYear() + "-" +
        f(this.getUTCMonth() + 1) + "-" +
        f(this.getUTCDate()) + "T" +
        f(this.getUTCHours()) + ":" +
        f(this.getUTCMinutes()) + ":" +
        f(this.getUTCSeconds()) + "Z"
        : null;
    };

    Boolean.prototype.toJSON = this_value;
    Number.prototype.toJSON = this_value;
    String.prototype.toJSON = this_value;
  }

  var gap;
  var indent;
  var meta;
  var rep;


  function quote(string) {

    // If the string contains no control characters, no quote characters, and no
    // backslash characters, then we can safely slap some quotes around it.
    // Otherwise we must also replace the offending characters with safe escape
    // sequences.

    rx_escapable.lastIndex = 0;
    return rx_escapable.test(string)
      ? "\"" + string.replace(rx_escapable, function (a) {
        var c = meta[a];
        return typeof c === "string"
          ? c
          : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
      }) + "\""
    : "\"" + string + "\"";
  }


  function str(key, holder) {

    // Produce a string from holder[key].

    var i;          // The loop counter.
    var k;          // The member key.
    var v;          // The member value.
    var length;
    var mind = gap;
    var partial;
    var value = holder[key];

    // If the value has a toJSON method, call it to obtain a replacement value.

    if (value && typeof value === "object" &&
        typeof value.toJSON === "function") {
      value = value.toJSON(key);
    }

    // If we were called with a replacer function, then call the replacer to
    // obtain a replacement value.

    if (typeof rep === "function") {
      value = rep.call(holder, key, value);
    }

    // What happens next depends on the value's type.

    switch (typeof value) {
      case "string":
        return quote(value);

      case "number":

        // JSON numbers must be finite. Encode non-finite numbers as null.

        return isFinite(value)
          ? String(value)
          : "null";

      case "boolean":
      case "null":

        // If the value is a boolean or null, convert it to a string. Note:
        // typeof null does not produce "null". The case is included here in
        // the remote chance that this gets fixed someday.

        return String(value);

        // If the type is "object", we might be dealing with an object or an array or
        // null.

      case "object":

        // Due to a specification blunder in ECMAScript, typeof null is "object",
        // so watch out for that case.

        if (!value) {
          return "null";
        }

        // Make an array to hold the partial results of stringifying this object value.

        gap += indent;
        partial = [];

        // Is the value an array?

        if (Object.prototype.toString.apply(value) === "[object Array]") {

          // The value is an array. Stringify every element. Use null as a placeholder
          // for non-JSON values.

          length = value.length;
          for (i = 0; i < length; i += 1) {
            partial[i] = str(i, value) || "null";
          }

          // Join all of the elements together, separated with commas, and wrap them in
          // brackets.

          v = partial.length === 0
            ? "[]"
            : gap
            ? "[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]"
            : "[" + partial.join(",") + "]";
          gap = mind;
          return v;
        }

        // If the replacer is an array, use it to select the members to be stringified.

        if (rep && typeof rep === "object") {
          length = rep.length;
          for (i = 0; i < length; i += 1) {
            if (typeof rep[i] === "string") {
              k = rep[i];
              v = str(k, value);
              if (v) {
                partial.push(quote(k) + (
                      gap
                      ? ": "
                      : ":"
                      ) + v);
              }
            }
          }
        } else {

          // Otherwise, iterate through all of the keys in the object.

          for (k in value) {
            if (Object.prototype.hasOwnProperty.call(value, k)) {
              v = str(k, value);
              if (v) {
                partial.push(quote(k) + (
                      gap
                      ? ": "
                      : ":"
                      ) + v);
              }
            }
          }
        }

        // Join all of the member texts together, separated with commas,
        // and wrap them in braces.

        v = partial.length === 0
          ? "{}"
          : gap
          ? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}"
          : "{" + partial.join(",") + "}";
        gap = mind;
        return v;
    }
  }

  // If the JSON object does not yet have a stringify method, give it one.

  if (typeof JSON.stringify !== "function") {
    meta = {    // table of character substitutions
      "\b": "\\b",
      "\t": "\\t",
      "\n": "\\n",
      "\f": "\\f",
      "\r": "\\r",
      "\"": "\\\"",
      "\\": "\\\\"
    };
    JSON.stringify = function (value, replacer, space) {

      // The stringify method takes a value and an optional replacer, and an optional
      // space parameter, and returns a JSON text. The replacer can be a function
      // that can replace values, or an array of strings that will select the keys.
      // A default replacer method can be provided. Use of the space parameter can
      // produce text that is more easily readable.

      var i;
      gap = "";
      indent = "";

      // If the space parameter is a number, make an indent string containing that
      // many spaces.

      if (typeof space === "number") {
        for (i = 0; i < space; i += 1) {
          indent += " ";
        }

        // If the space parameter is a string, it will be used as the indent string.

      } else if (typeof space === "string") {
        indent = space;
      }

      // If there is a replacer, it must be a function or an array.
      // Otherwise, throw an error.

      rep = replacer;
      if (replacer && typeof replacer !== "function" &&
          (typeof replacer !== "object" ||
           typeof replacer.length !== "number")) {
        throw new Error("JSON.stringify");
      }

      // Make a fake root object containing our value under the key of "".
      // Return the result of stringifying the value.

      return str("", {"": value});
    };
  }


  // If the JSON object does not yet have a parse method, give it one.

  if (typeof JSON.parse !== "function") {
    JSON.parse = (function () {

      // This function creates a JSON parse function that uses a state machine rather
      // than the dangerous eval function to parse a JSON text.

      var state;      // The state of the parser, one of
      // 'go'         The starting state
      // 'ok'         The final, accepting state
      // 'firstokey'  Ready for the first key of the object or
      //              the closing of an empty object
      // 'okey'       Ready for the next key of the object
      // 'colon'      Ready for the colon
      // 'ovalue'     Ready for the value half of a key/value pair
      // 'ocomma'     Ready for a comma or closing }
      // 'firstavalue' Ready for the first value of an array or
      //              an empty array
      // 'avalue'     Ready for the next value of an array
      // 'acomma'     Ready for a comma or closing ]
      var stack;      // The stack, for controlling nesting.
      var container;  // The current container object or array
      var key;        // The current key
      var value;      // The current value
      var escapes = { // Escapement translation table
        "\\": "\\",
        "\"": "\"",
        "/": "/",
        "t": "\t",
        "n": "\n",
        "r": "\r",
        "f": "\f",
        "b": "\b"
      };
      var string = {   // The actions for string tokens
        go: function () {
          state = "ok";
        },
        firstokey: function () {
          key = value;
          state = "colon";
        },
        okey: function () {
          key = value;
          state = "colon";
        },
        ovalue: function () {
          state = "ocomma";
        },
        firstavalue: function () {
          state = "acomma";
        },
        avalue: function () {
          state = "acomma";
        }
      };
      var number = {   // The actions for number tokens
        go: function () {
          state = "ok";
        },
        ovalue: function () {
          state = "ocomma";
        },
        firstavalue: function () {
          state = "acomma";
        },
        avalue: function () {
          state = "acomma";
        }
      };
      var action = {

        // The action table describes the behavior of the machine. It contains an
        // object for each token. Each object contains a method that is called when
        // a token is matched in a state. An object will lack a method for illegal
        // states.

        "{": {
          go: function () {
            stack.push({state: "ok"});
            container = {};
            state = "firstokey";
          },
          ovalue: function () {
            stack.push({container: container, state: "ocomma", key: key});
            container = {};
            state = "firstokey";
          },
          firstavalue: function () {
            stack.push({container: container, state: "acomma"});
            container = {};
            state = "firstokey";
          },
          avalue: function () {
            stack.push({container: container, state: "acomma"});
            container = {};
            state = "firstokey";
          }
        },
        "}": {
          firstokey: function () {
            var pop = stack.pop();
            value = container;
            container = pop.container;
            key = pop.key;
            state = pop.state;
          },
          ocomma: function () {
            var pop = stack.pop();
            container[key] = value;
            value = container;
            container = pop.container;
            key = pop.key;
            state = pop.state;
          }
        },
        "[": {
          go: function () {
            stack.push({state: "ok"});
            container = [];
            state = "firstavalue";
          },
          ovalue: function () {
            stack.push({container: container, state: "ocomma", key: key});
            container = [];
            state = "firstavalue";
          },
          firstavalue: function () {
            stack.push({container: container, state: "acomma"});
            container = [];
            state = "firstavalue";
          },
          avalue: function () {
            stack.push({container: container, state: "acomma"});
            container = [];
            state = "firstavalue";
          }
        },
        "]": {
          firstavalue: function () {
            var pop = stack.pop();
            value = container;
            container = pop.container;
            key = pop.key;
            state = pop.state;
          },
          acomma: function () {
            var pop = stack.pop();
            container.push(value);
            value = container;
            container = pop.container;
            key = pop.key;
            state = pop.state;
          }
        },
        ":": {
          colon: function () {
            if (Object.hasOwnProperty.call(container, key)) {
              throw new SyntaxError("Duplicate key '" + key + "\"");
            }
            state = "ovalue";
          }
        },
        ",": {
          ocomma: function () {
            container[key] = value;
            state = "okey";
          },
          acomma: function () {
            container.push(value);
            state = "avalue";
          }
        },
        "true": {
          go: function () {
            value = true;
            state = "ok";
          },
          ovalue: function () {
            value = true;
            state = "ocomma";
          },
          firstavalue: function () {
            value = true;
            state = "acomma";
          },
          avalue: function () {
            value = true;
            state = "acomma";
          }
        },
        "false": {
          go: function () {
            value = false;
            state = "ok";
          },
          ovalue: function () {
            value = false;
            state = "ocomma";
          },
          firstavalue: function () {
            value = false;
            state = "acomma";
          },
          avalue: function () {
            value = false;
            state = "acomma";
          }
        },
        "null": {
          go: function () {
            value = null;
            state = "ok";
          },
          ovalue: function () {
            value = null;
            state = "ocomma";
          },
          firstavalue: function () {
            value = null;
            state = "acomma";
          },
          avalue: function () {
            value = null;
            state = "acomma";
          }
        }
      };

      function debackslashify(text) {

        // Remove and replace any backslash escapement.

        return text.replace(/\\(?:u(.{4})|([^u]))/g, function (ignore, b, c) {
          return b
            ? String.fromCharCode(parseInt(b, 16))
            : escapes[c];
        });
      }

      return function (source, reviver) {

        // A regular expression is used to extract tokens from the JSON text.
        // The extraction process is cautious.

        var result;
        var tx = /^[\u0020\t\n\r]*(?:([,:\[\]{}]|true|false|null)|(-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)|"((?:[^\r\n\t\\\"]|\\(?:["\\\/trnfb]|u[0-9a-fA-F]{4}))*)")/;

        // Set the starting state.

        state = "go";

        // The stack records the container, key, and state for each object or array
        // that contains another object or array while processing nested structures.

        stack = [];

        // If any error occurs, we will catch it and ultimately throw a syntax error.

        try {

          // For each token...

          while (true) {
            result = tx.exec(source);
            if (!result) {
              break;
            }

            // result is the result array from matching the tokenizing regular expression.
            //  result[0] contains everything that matched, including any initial whitespace.
            //  result[1] contains any punctuation that was matched, or true, false, or null.
            //  result[2] contains a matched number, still in string form.
            //  result[3] contains a matched string, without quotes but with escapement.

            if (result[1]) {

              // Token: Execute the action for this state and token.

              action[result[1]][state]();

            } else if (result[2]) {

              // Number token: Convert the number string into a number value and execute
              // the action for this state and number.

              value = +result[2];
              number[state]();
            } else {

              // String token: Replace the escapement sequences and execute the action for
              // this state and string.

              value = debackslashify(result[3]);
              string[state]();
            }

            // Remove the token from the string. The loop will continue as long as there
            // are tokens. This is a slow process, but it allows the use of ^ matching,
            // which assures that no illegal tokens slip through.

            source = source.slice(result[0].length);
          }

          // If we find a state/token combination that is illegal, then the action will
          // cause an error. We handle the error by simply changing the state.

        } catch (e) {
          state = e;
        }

        // The parsing is finished. If we are not in the final "ok" state, or if the
        // remaining source contains anything except whitespace, then we did not have
        //a well-formed JSON text.

        if (state !== "ok" || (/[^\u0020\t\n\r]/.test(source))) {
          throw (state instanceof SyntaxError)
            ? state
            : new SyntaxError("JSON");
        }

        // If there is a reviver function, we recursively walk the new structure,
        // passing each name/value pair to the reviver function for possible
        // transformation, starting with a temporary root object that holds the current
        // value in an empty key. If there is not a reviver function, we simply return
        // that value.

        return (typeof reviver === "function")
          ? (function walk(holder, key) {
            var k;
            var v;
            var val = holder[key];
            if (val && typeof val === "object") {
              for (k in value) {
                if (Object.prototype.hasOwnProperty.call(val, k)) {
                  v = walk(val, k);
                  if (v !== undefined) {
                    val[k] = v;
                  } else {
                    delete val[k];
                  }
                }
              }
            }
            return reviver.call(holder, key, val);
          }({"": value}, ""))
        : value;
      };
    }());
  }
}

module.exports = setupCustomJSON;


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _ = __webpack_require__(0);

/*
 * Queue - an object which handles which handles a queue of items to be sent to Rollbar.
 *   This object handles rate limiting via a passed in rate limiter, retries based on connection
 *   errors, and filtering of items based on a set of configurable predicates. The communication to
 *   the backend is performed via a given API object.
 *
 * @param rateLimiter - An object which conforms to the interface
 *    rateLimiter.shouldSend(item) -> bool
 * @param api - An object which conforms to the interface
 *    api.postItem(payload, function(err, response))
 * @param logger - An object used to log verbose messages if desired
 * @param options - see Queue.prototype.configure
 */
function Queue(rateLimiter, api, logger, options) {
  this.rateLimiter = rateLimiter;
  this.api = api;
  this.logger = logger;
  this.options = options;
  this.predicates = [];
  this.pendingItems = [];
  this.pendingRequests = [];
  this.retryQueue = [];
  this.retryHandle = null;
  this.waitCallback = null;
  this.waitIntervalID = null;
}

/*
 * configure - updates the options this queue uses
 *
 * @param options
 */
Queue.prototype.configure = function(options) {
  this.api && this.api.configure(options);
  var oldOptions = this.options;
  this.options = _.merge(oldOptions, options);
  return this;
};

/*
 * addPredicate - adds a predicate to the end of the list of predicates for this queue
 *
 * @param predicate - function(item, options) -> (bool|{err: Error})
 *  Returning true means that this predicate passes and the item is okay to go on the queue
 *  Returning false means do not add the item to the queue, but it is not an error
 *  Returning {err: Error} means do not add the item to the queue, and the given error explains why
 *  Returning {err: undefined} is equivalent to returning true but don't do that
 */
Queue.prototype.addPredicate = function(predicate) {
  if (_.isFunction(predicate)) {
    this.predicates.push(predicate);
  }
  return this;
};

Queue.prototype.addPendingItem = function(item) {
  this.pendingItems.push(item);
};

Queue.prototype.removePendingItem = function(item) {
  var idx = this.pendingItems.indexOf(item);
  if (idx !== -1) {
    this.pendingItems.splice(idx, 1);
  }
};

/*
 * addItem - Send an item to the Rollbar API if all of the predicates are satisfied
 *
 * @param item - The payload to send to the backend
 * @param callback - function(error, repsonse) which will be called with the response from the API
 *  in the case of a success, otherwise response will be null and error will have a value. If both
 *  error and response are null then the item was stopped by a predicate which did not consider this
 *  to be an error condition, but nonetheless did not send the item to the API.
 *  @param originalError - The original error before any transformations that is to be logged if any
 */
Queue.prototype.addItem = function(item, callback, originalError, originalItem) {
  if (!callback || !_.isFunction(callback)) {
    callback = function() { return; };
  }
  var predicateResult = this._applyPredicates(item);
  if (predicateResult.stop) {
    this.removePendingItem(originalItem);
    callback(predicateResult.err);
    return;
  }
  this._maybeLog(item, originalError);
  this.removePendingItem(originalItem);
  if (!this.options.transmit) {
    callback(new Error('Transmit disabled'));
    return;
  }
  this.pendingRequests.push(item);
  try {
    this._makeApiRequest(item, function(err, resp) {
      this._dequeuePendingRequest(item);
      callback(err, resp);
    }.bind(this));
  } catch (e) {
    this._dequeuePendingRequest(item);
    callback(e);
  }
};

/*
 * wait - Stop any further errors from being added to the queue, and get called back when all items
 *   currently processing have finished sending to the backend.
 *
 * @param callback - function() called when all pending items have been sent
 */
Queue.prototype.wait = function(callback) {
  if (!_.isFunction(callback)) {
    return;
  }
  this.waitCallback = callback;
  if (this._maybeCallWait()) {
    return;
  }
  if (this.waitIntervalID) {
    this.waitIntervalID = clearInterval(this.waitIntervalID);
  }
  this.waitIntervalID = setInterval(function() {
    this._maybeCallWait();
  }.bind(this), 500);
};

/* _applyPredicates - Sequentially applies the predicates that have been added to the queue to the
 *   given item with the currently configured options.
 *
 * @param item - An item in the queue
 * @returns {stop: bool, err: (Error|null)} - stop being true means do not add item to the queue,
 *   the error value should be passed up to a callbak if we are stopping.
 */
Queue.prototype._applyPredicates = function(item) {
  var p = null;
  for (var i = 0, len = this.predicates.length; i < len; i++) {
    p = this.predicates[i](item, this.options);
    if (!p || p.err !== undefined) {
      return {stop: true, err: p.err};
    }
  }
  return {stop: false, err: null};
};

/*
 * _makeApiRequest - Send an item to Rollbar, callback when done, if there is an error make an
 *   effort to retry if we are configured to do so.
 *
 * @param item - an item ready to send to the backend
 * @param callback - function(err, response)
 */
Queue.prototype._makeApiRequest = function(item, callback) {
  var rateLimitResponse = this.rateLimiter.shouldSend(item);
  if (rateLimitResponse.shouldSend) {
    this.api.postItem(item, function(err, resp) {
      if (err) {
        this._maybeRetry(err, item, callback);
      } else {
        callback(err, resp);
      }
    }.bind(this));
  } else if (rateLimitResponse.error) {
    callback(rateLimitResponse.error);
  } else {
    this.api.postItem(rateLimitResponse.payload, callback);
  }
};

// These are errors basically mean there is no internet connection
var RETRIABLE_ERRORS = ['ECONNRESET', 'ENOTFOUND', 'ESOCKETTIMEDOUT', 'ETIMEDOUT', 'ECONNREFUSED', 'EHOSTUNREACH', 'EPIPE', 'EAI_AGAIN'];

/*
 * _maybeRetry - Given the error returned by the API, decide if we should retry or just callback
 *   with the error.
 *
 * @param err - an error returned by the API transport
 * @param item - the item that was trying to be sent when this error occured
 * @param callback - function(err, response)
 */
Queue.prototype._maybeRetry = function(err, item, callback) {
  var shouldRetry = false;
  if (this.options.retryInterval) {
    for (var i = 0, len = RETRIABLE_ERRORS.length; i < len; i++) {
      if (err.code === RETRIABLE_ERRORS[i]) {
        shouldRetry = true;
        break;
      }
    }
  }
  if (shouldRetry) {
    this._retryApiRequest(item, callback);
  } else {
    callback(err);
  }
};

/*
 * _retryApiRequest - Add an item and a callback to a queue and possibly start a timer to process
 *   that queue based on the retryInterval in the options for this queue.
 *
 * @param item - an item that failed to send due to an error we deem retriable
 * @param callback - function(err, response)
 */
Queue.prototype._retryApiRequest = function(item, callback) {
  this.retryQueue.push({item: item, callback: callback});

  if (!this.retryHandle) {
    this.retryHandle = setInterval(function() {
      while (this.retryQueue.length) {
        var retryObject = this.retryQueue.shift();
        this._makeApiRequest(retryObject.item, retryObject.callback);
      }
    }.bind(this), this.options.retryInterval);
  }
};

/*
 * _dequeuePendingRequest - Removes the item from the pending request queue, this queue is used to
 *   enable to functionality of providing a callback that clients can pass to `wait` to be notified
 *   when the pending request queue has been emptied. This must be called when the API finishes
 *   processing this item. If a `wait` callback is configured, it is called by this function.
 *
 * @param item - the item previously added to the pending request queue
 */
Queue.prototype._dequeuePendingRequest = function(item) {
  var idx = this.pendingRequests.indexOf(item);
  if (idx !== -1) {
    this.pendingRequests.splice(idx, 1);
    this._maybeCallWait();
  }
};

Queue.prototype._maybeLog = function(data, originalError) {
  if (this.logger && this.options.verbose) {
    var message = originalError;
    message = message || _.get(data, 'body.trace.exception.message');
    message = message || _.get(data, 'body.trace_chain.0.exception.message');
    if (message) {
      this.logger.error(message);
      return;
    }
    message = _.get(data, 'body.message.body');
    if (message) {
      this.logger.log(message);
    }
  }
};

Queue.prototype._maybeCallWait = function() {
  if (_.isFunction(this.waitCallback) && this.pendingItems.length === 0 && this.pendingRequests.length === 0) {
    if (this.waitIntervalID) {
      this.waitIntervalID = clearInterval(this.waitIntervalID);
    }
    this.waitCallback();
    return true;
  }
  return false;
};

module.exports = Queue;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _ = __webpack_require__(0);

/*
 * Notifier - the internal object responsible for delegating between the client exposed API, the
 * chain of transforms necessary to turn an item into something that can be sent to Rollbar, and the
 * queue which handles the communcation with the Rollbar API servers.
 *
 * @param queue - an object that conforms to the interface: addItem(item, callback)
 * @param options - an object representing the options to be set for this notifier, this should have
 * any defaults already set by the caller
 */
function Notifier(queue, options) {
  this.queue = queue;
  this.options = options;
  this.transforms = [];
  this.diagnostic = {};
}

/*
 * configure - updates the options for this notifier with the passed in object
 *
 * @param options - an object which gets merged with the current options set on this notifier
 * @returns this
 */
Notifier.prototype.configure = function(options) {
  this.queue && this.queue.configure(options);
  var oldOptions = this.options;
  this.options = _.merge(oldOptions, options);
  return this;
};

/*
 * addTransform - adds a transform onto the end of the queue of transforms for this notifier
 *
 * @param transform - a function which takes three arguments:
 *    * item: An Object representing the data to eventually be sent to Rollbar
 *    * options: The current value of the options for this notifier
 *    * callback: function(err: (Null|Error), item: (Null|Object)) the transform must call this
 *    callback with a null value for error if it wants the processing chain to continue, otherwise
 *    with an error to terminate the processing. The item should be the updated item after this
 *    transform is finished modifying it.
 */
Notifier.prototype.addTransform = function(transform) {
  if (_.isFunction(transform)) {
    this.transforms.push(transform);
  }
  return this;
};

/*
 * log - the internal log function which applies the configured transforms and then pushes onto the
 * queue to be sent to the backend.
 *
 * @param item - An object with the following structure:
 *    message [String] - An optional string to be sent to rollbar
 *    error [Error] - An optional error
 *
 * @param callback - A function of type function(err, resp) which will be called with exactly one
 * null argument and one non-null argument. The callback will be called once, either during the
 * transform stage if an error occurs inside a transform, or in response to the communication with
 * the backend. The second argument will be the response from the backend in case of success.
 */
Notifier.prototype.log = function(item, callback) {
  if (!callback || !_.isFunction(callback)) {
    callback = function() {};
  }

  if (!this.options.enabled) {
    return callback(new Error('Rollbar is not enabled'));
  }

  this.queue.addPendingItem(item);
  var originalError = item.err;
  this._applyTransforms(item, function(err, i) {
    if (err) {
      this.queue.removePendingItem(item);
      return callback(err, null);
    }
    this.queue.addItem(i, callback, originalError, item);
  }.bind(this));
};

/* Internal */

/*
 * _applyTransforms - Applies the transforms that have been added to this notifier sequentially. See
 * `addTransform` for more information.
 *
 * @param item - An item to be transformed
 * @param callback - A function of type function(err, item) which will be called with a non-null
 * error and a null item in the case of a transform failure, or a null error and non-null item after
 * all transforms have been applied.
 */
Notifier.prototype._applyTransforms = function(item, callback) {
  var transformIndex = -1;
  var transformsLength = this.transforms.length;
  var transforms = this.transforms;
  var options = this.options;

  var cb = function(err, i) {
    if (err) {
      callback(err, null);
      return;
    }

    transformIndex++;

    if (transformIndex === transformsLength) {
      callback(null, i);
      return;
    }

    transforms[transformIndex](i, options, cb);
  };

  cb(null, item);
};

module.exports = Notifier;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _ = __webpack_require__(0);

var MAX_EVENTS = 100;

function Telemeter(options) {
  this.queue = [];
  this.options = _.merge(options);
  var maxTelemetryEvents = this.options.maxTelemetryEvents || MAX_EVENTS;
  this.maxQueueSize = Math.max(0, Math.min(maxTelemetryEvents, MAX_EVENTS));
}

Telemeter.prototype.configure = function(options) {
  var oldOptions = this.options;
  this.options = _.merge(oldOptions, options);
  var maxTelemetryEvents = this.options.maxTelemetryEvents || MAX_EVENTS;
  var newMaxEvents = Math.max(0, Math.min(maxTelemetryEvents, MAX_EVENTS));
  var deleteCount = 0;
  if (this.maxQueueSize > newMaxEvents) {
    deleteCount = this.maxQueueSize - newMaxEvents;
  }
  this.maxQueueSize = newMaxEvents;
  this.queue.splice(0, deleteCount);
};

Telemeter.prototype.copyEvents = function() {
  var events = Array.prototype.slice.call(this.queue, 0);
  if (_.isFunction(this.options.filterTelemetry)) {
    try {
      var i = events.length;
      while (i--) {
        if (this.options.filterTelemetry(events[i])) {
          events.splice(i, 1);
        }
      }
    } catch (e) {
      this.options.filterTelemetry = null;
    }
  }
  return events;
};

Telemeter.prototype.capture = function(type, metadata, level, rollbarUUID, timestamp) {
  var e = {
    level: getLevel(type, level),
    type: type,
    timestamp_ms: timestamp || _.now(),
    body: metadata,
    source: 'client'
  };
  if (rollbarUUID) {
    e.uuid = rollbarUUID;
  }

  try {
    if (_.isFunction(this.options.filterTelemetry) && this.options.filterTelemetry(e)) {
      return false;
    }
  } catch (exc) {
    this.options.filterTelemetry = null;
  }

  this.push(e);
  return e;
};

Telemeter.prototype.captureEvent = function(type, metadata, level, rollbarUUID) {
  return this.capture(type, metadata, level, rollbarUUID);
};

Telemeter.prototype.captureError = function(err, level, rollbarUUID, timestamp) {
  var metadata = {
    message: err.message || String(err)
  };
  if (err.stack) {
    metadata.stack = err.stack;
  }
  return this.capture('error', metadata, level, rollbarUUID, timestamp);
};

Telemeter.prototype.captureLog = function(message, level, rollbarUUID, timestamp) {
  return this.capture('log', {
    message: message
  }, level, rollbarUUID, timestamp);
};

Telemeter.prototype.captureNetwork = function(metadata, subtype, rollbarUUID, requestData) {
  subtype = subtype || 'xhr';
  metadata.subtype = metadata.subtype || subtype;
  if (requestData) {
    metadata.request = requestData;
  }
  var level = this.levelFromStatus(metadata.status_code);
  return this.capture('network', metadata, level, rollbarUUID);
};

Telemeter.prototype.levelFromStatus = function(statusCode) {
  if (statusCode >= 200 && statusCode < 400) {
    return 'info';
  }
  if (statusCode === 0 || statusCode >= 400) {
    return 'error';
  }
  return 'info';
};

Telemeter.prototype.captureDom = function(subtype, element, value, checked, rollbarUUID) {
  var metadata = {
    subtype: subtype,
    element: element
  };
  if (value !== undefined) {
    metadata.value = value;
  }
  if (checked !== undefined) {
    metadata.checked = checked;
  }
  return this.capture('dom', metadata, 'info', rollbarUUID);
};

Telemeter.prototype.captureNavigation = function(from, to, rollbarUUID) {
  return this.capture('navigation', {from: from, to: to}, 'info', rollbarUUID);
};

Telemeter.prototype.captureDomContentLoaded = function(ts) {
  return this.capture('navigation', {subtype: 'DOMContentLoaded'}, 'info', undefined, ts && ts.getTime());
  /**
   * If we decide to make this a dom event instead, then use the line below:
  return this.capture('dom', {subtype: 'DOMContentLoaded'}, 'info', undefined, ts && ts.getTime());
  */
};
Telemeter.prototype.captureLoad = function(ts) {
  return this.capture('navigation', {subtype: 'load'}, 'info', undefined, ts && ts.getTime());
  /**
   * If we decide to make this a dom event instead, then use the line below:
  return this.capture('dom', {subtype: 'load'}, 'info', undefined, ts && ts.getTime());
  */
};

Telemeter.prototype.captureConnectivityChange = function(type, rollbarUUID) {
  return this.captureNetwork({change: type}, 'connectivity', rollbarUUID);
};

// Only intended to be used internally by the notifier
Telemeter.prototype._captureRollbarItem = function(item) {
  if (!this.options.includeItemsInTelemetry) {
    return;
  }
  if (item.err) {
    return this.captureError(item.err, item.level, item.uuid, item.timestamp);
  }
  if (item.message) {
    return this.captureLog(item.message, item.level, item.uuid, item.timestamp);
  }
  if (item.custom) {
    return this.capture('log', item.custom, item.level, item.uuid, item.timestamp);
  }
};

Telemeter.prototype.push = function(e) {
  this.queue.push(e);
  if (this.queue.length > this.maxQueueSize) {
    this.queue.shift();
  }
};

function getLevel(type, level) {
  if (level) {
    return level;
  }
  var defaultLevel = {
    error: 'error',
    manual: 'info'
  };
  return defaultLevel[type] || 'info';
}

module.exports = Telemeter;


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _ = __webpack_require__(0);
var helpers = __webpack_require__(15);
var truncation = __webpack_require__(2);

var defaultOptions = {
  hostname: 'api.rollbar.com',
  path: '/api/1/item/',
  search: null,
  version: '1',
  protocol: 'https:',
  port: 443
};

/**
 * Api is an object that encapsulates methods of communicating with
 * the Rollbar API.  It is a standard interface with some parts implemented
 * differently for server or browser contexts.  It is an object that should
 * be instantiated when used so it can contain non-global options that may
 * be different for another instance of RollbarApi.
 *
 * @param options {
 *    accessToken: the accessToken to use for posting items to rollbar
 *    endpoint: an alternative endpoint to send errors to
 *        must be a valid, fully qualified URL.
 *        The default is: https://api.rollbar.com/api/1/item
 *    proxy: if you wish to proxy requests provide an object
 *        with the following keys:
 *          host or hostname (required): foo.example.com
 *          port (optional): 123
 *          protocol (optional): https
 * }
 */
function Api(options, t, u, j) {
  this.options = options;
  this.transport = t;
  this.url = u;
  this.jsonBackup = j;
  this.accessToken = options.accessToken;
  this.transportOptions = _getTransport(options, u);
}

/**
 *
 * @param data
 * @param callback
 */
Api.prototype.postItem = function(data, callback) {
  var transportOptions = helpers.transportOptions(this.transportOptions, 'POST');
  var payload = helpers.buildPayload(this.accessToken, data, this.jsonBackup);
  this.transport.post(this.accessToken, transportOptions, payload, callback);
};

/**
 *
 * @param data
 * @param callback
 */
Api.prototype.buildJsonPayload = function(data, callback) {
  var payload = helpers.buildPayload(this.accessToken, data, this.jsonBackup);

  var stringifyResult = truncation.truncate(payload);
  if (stringifyResult.error) {
    if (callback) {
      callback(stringifyResult.error);
    }
    return null;
  }

  return stringifyResult.value;
};

/**
 *
 * @param jsonPayload
 * @param callback
 */
Api.prototype.postJsonPayload = function(jsonPayload, callback) {
  var transportOptions = helpers.transportOptions(this.transportOptions, 'POST');
  this.transport.postJsonPayload(this.accessToken, transportOptions, jsonPayload, callback);
};

Api.prototype.configure = function(options) {
  var oldOptions = this.oldOptions;
  this.options = _.merge(oldOptions, options);
  this.transportOptions = _getTransport(this.options, this.url);
  if (this.options.accessToken !== undefined) {
    this.accessToken = this.options.accessToken;
  }
  return this;
};

function _getTransport(options, url) {
  return helpers.getTransportFromOptions(options, defaultOptions, url);
}

module.exports = Api;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _ = __webpack_require__(0);

function buildPayload(accessToken, data, jsonBackup) {
  if (!_.isType(data.context, 'string')) {
    var contextResult = _.stringify(data.context, jsonBackup);
    if (contextResult.error) {
      data.context = 'Error: could not serialize \'context\'';
    } else {
      data.context = contextResult.value || '';
    }
    if (data.context.length > 255) {
      data.context = data.context.substr(0, 255);
    }
  }
  return {
    access_token: accessToken,
    data: data
  };
}

function getTransportFromOptions(options, defaults, url) {
  var hostname = defaults.hostname;
  var protocol = defaults.protocol;
  var port = defaults.port;
  var path = defaults.path;
  var search = defaults.search;

  var proxy = options.proxy;
  if (options.endpoint) {
    var opts = url.parse(options.endpoint);
    hostname = opts.hostname;
    protocol = opts.protocol;
    port = opts.port;
    path = opts.pathname;
    search = opts.search;
  }
  return {
    hostname: hostname,
    protocol: protocol,
    port: port,
    path: path,
    search: search,
    proxy: proxy
  };
}

function transportOptions(transport, method) {
  var protocol = transport.protocol || 'https:';
  var port = transport.port || (protocol === 'http:' ? 80 : protocol === 'https:' ? 443 : undefined);
  var hostname = transport.hostname;
  var path = transport.path;
  if (transport.search) {
    path = path + transport.search;
  }
  if (transport.proxy) {
    path = protocol + '//' + hostname + path;
    hostname = transport.proxy.host || transport.proxy.hostname;
    port = transport.proxy.port;
    protocol = transport.proxy.protocol || protocol;
  }
  return {
    protocol: protocol,
    hostname: hostname,
    path: path,
    port: port,
    method: method
  };
}

function appendPathToPath(base, path) {
  var baseTrailingSlash = /\/$/.test(base);
  var pathBeginningSlash = /^\//.test(path);

  if (baseTrailingSlash && pathBeginningSlash) {
    path = path.substring(1);
  } else if (!baseTrailingSlash && !pathBeginningSlash) {
    path = '/' + path;
  }

  return base + path;
}

module.exports = {
  buildPayload: buildPayload,
  getTransportFromOptions: getTransportFromOptions,
  transportOptions: transportOptions,
  appendPathToPath: appendPathToPath
};


/***/ }),
/* 16 */
/***/ (function(module, exports) {

// Console-polyfill. MIT license.
// https://github.com/paulmillr/console-polyfill
// Make it safe to do console.log() always.
(function(global) {
  'use strict';
  if (!global.console) {
    global.console = {};
  }
  var con = global.console;
  var prop, method;
  var dummy = function() {};
  var properties = ['memory'];
  var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' +
     'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +
     'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');
  while (prop = properties.pop()) if (!con[prop]) con[prop] = {};
  while (method = methods.pop()) if (!con[method]) con[method] = dummy;
  // Using `this` for web workers & supports Browserify / Webpack.
})(typeof window === 'undefined' ? this : window);


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// This detection.js module is used to encapsulate any ugly browser/feature
// detection we may need to do.

// Figure out which version of IE we're using, if any.
// This is gleaned from http://stackoverflow.com/questions/5574842/best-way-to-check-for-ie-less-than-9-in-javascript-without-library
// Will return an integer on IE (i.e. 8)
// Will return undefined otherwise
function getIEVersion() {
	var undef;
	if (typeof document === 'undefined') {
		return undef;
	}

  var v = 3,
    div = document.createElement('div'),
    all = div.getElementsByTagName('i');

  while (
    div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->',
      all[0]
    );

  return v > 4 ? v : undef;
}

var Detection = {
  ieVersion: getIEVersion
};

module.exports = Detection;


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function captureUncaughtExceptions(window, handler, shim) {
  if (!window) { return; }
  var oldOnError;

  if (typeof handler._rollbarOldOnError === 'function') {
    oldOnError = handler._rollbarOldOnError;
  } else if (window.onerror) {
    oldOnError = window.onerror;
    while (oldOnError._rollbarOldOnError) {
      oldOnError = oldOnError._rollbarOldOnError;
    }
    handler._rollbarOldOnError = oldOnError;
  }

  handler.handleAnonymousErrors();

  var fn = function() {
    var args = Array.prototype.slice.call(arguments, 0);
    _rollbarWindowOnError(window, handler, oldOnError, args);
  };
  if (shim) {
    fn._rollbarOldOnError = oldOnError;
  }
  window.onerror = fn;
}

function _rollbarWindowOnError(window, r, old, args) {
  if (window._rollbarWrappedError) {
    if (!args[4]) {
      args[4] = window._rollbarWrappedError;
    }
    if (!args[5]) {
      args[5] = window._rollbarWrappedError._rollbarContext;
    }
    window._rollbarWrappedError = null;
  }

  var ret = r.handleUncaughtException.apply(r, args);

  if (old) {
    old.apply(window, args);
  }

  // Let other chained onerror handlers above run before setting this.
  // If an error is thrown and caught within a chained onerror handler,
  // Error.prepareStackTrace() will see that one before the one we want.
  if (ret === 'anonymous') {
    r.anonymousErrorsPending += 1; // See Rollbar.prototype.handleAnonymousErrors()
  }
}

function captureUnhandledRejections(window, handler, shim) {
  if (!window) { return; }

  if (typeof window._rollbarURH === 'function' && window._rollbarURH.belongsToShim) {
    window.removeEventListener('unhandledrejection', window._rollbarURH);
  }

  var rejectionHandler = function (evt) {
    var reason, promise, detail;
    try {
      reason = evt.reason;
    } catch (e) {
      reason = undefined;
    }
    try {
      promise = evt.promise;
    } catch (e) {
      promise = '[unhandledrejection] error getting `promise` from event';
    }
    try {
      detail = evt.detail;
      if (!reason && detail) {
        reason = detail.reason;
        promise = detail.promise;
      }
    } catch (e) {
      // Ignore
    }
    if (!reason) {
      reason = '[unhandledrejection] error getting `reason` from event';
    }

    if (handler && handler.handleUnhandledRejection) {
      handler.handleUnhandledRejection(reason, promise);
    }
  };
  rejectionHandler.belongsToShim = shim;
  window._rollbarURH = rejectionHandler;
  window.addEventListener('unhandledrejection', rejectionHandler);
}

function wrapGlobals(window, handler, shim) {
  if (!window) { return; }
  // Adapted from https://github.com/bugsnag/bugsnag-js
  var globals = 'EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload'.split(',');
  var i, global;
  for (i = 0; i < globals.length; ++i) {
    global = globals[i];

    if (window[global] && window[global].prototype) {
      _extendListenerPrototype(handler, window[global].prototype, shim);
    }
  }
}

function _extendListenerPrototype(handler, prototype, shim) {
  if (prototype.hasOwnProperty && prototype.hasOwnProperty('addEventListener')) {
    var oldAddEventListener = prototype.addEventListener;
    while (oldAddEventListener._rollbarOldAdd && oldAddEventListener.belongsToShim) {
      oldAddEventListener = oldAddEventListener._rollbarOldAdd;
    }
    var addFn = function(event, callback, bubble) {
      oldAddEventListener.call(this, event, handler.wrap(callback), bubble);
    };
    addFn._rollbarOldAdd = oldAddEventListener;
    addFn.belongsToShim = shim;
    prototype.addEventListener = addFn;

    var oldRemoveEventListener = prototype.removeEventListener;
    while (oldRemoveEventListener._rollbarOldRemove && oldRemoveEventListener.belongsToShim) {
      oldRemoveEventListener = oldRemoveEventListener._rollbarOldRemove;
    }
    var removeFn = function(event, callback, bubble) {
      oldRemoveEventListener.call(this, event, callback && callback._rollbar_wrapped || callback, bubble);
    };
    removeFn._rollbarOldRemove = oldRemoveEventListener;
    removeFn.belongsToShim = shim;
    prototype.removeEventListener = removeFn;
  }
}

module.exports = {
  captureUncaughtExceptions: captureUncaughtExceptions,
  captureUnhandledRejections: captureUnhandledRejections,
  wrapGlobals: wrapGlobals
};


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*global XDomainRequest*/

var _ = __webpack_require__(0);
var truncation = __webpack_require__(2);
var logger = __webpack_require__(1);

/*
 * accessToken may be embedded in payload but that should not
 *   be assumed
 *
 * options: {
 *   hostname
 *   protocol
 *   path
 *   port
 *   method
 * }
 *
 *  params is an object containing key/value pairs. These
 *    will be appended to the path as 'key=value&key=value'
 *
 * payload is an unserialized object
 */

function get(accessToken, options, params, callback, requestFactory) {
  if (!callback || !_.isFunction(callback)) {
    callback = function() {};
  }
  _.addParamsAndAccessTokenToPath(accessToken, options, params);

  var method = 'GET';
  var url = _.formatUrl(options);
  _makeZoneRequest(accessToken, url, method, null, callback, requestFactory);
}

function post(accessToken, options, payload, callback, requestFactory) {
  if (!callback || !_.isFunction(callback)) {
    callback = function() {};
  }

  if (!payload) {
    return callback(new Error('Cannot send empty request'));
  }

  var stringifyResult = truncation.truncate(payload);
  if (stringifyResult.error) {
    return callback(stringifyResult.error);
  }

  var writeData = stringifyResult.value;
  var method = 'POST';
  var url = _.formatUrl(options);
  _makeZoneRequest(accessToken, url, method, writeData, callback, requestFactory);
}

function postJsonPayload(accessToken, options, jsonPayload, callback, requestFactory) {
  if (!callback || !_.isFunction(callback)) {
    callback = function() {};
  }

  var method = 'POST';
  var url = _.formatUrl(options);
  _makeZoneRequest(accessToken, url, method, jsonPayload, callback, requestFactory);
}

// Wraps _makeRequest and if Angular 2+ Zone.js is detected, changes scope
// so Angular change detection isn't triggered on each API call.
// This is the equivalent of runOutsideAngular().
//
function _makeZoneRequest(accessToken, url, method, data, callback, requestFactory) {
  var gWindow = ((typeof window != 'undefined') && window) || ((typeof self != 'undefined') && self);
  var currentZone = gWindow && gWindow.Zone && gWindow.Zone.current;

  if (currentZone && currentZone._name === 'angular') {
    var rootZone = currentZone._parent;
    rootZone.run(function () {
      _makeRequest(accessToken, url, method, data, callback, requestFactory);
    });
  } else {
    _makeRequest(accessToken, url, method, data, callback, requestFactory);
  }
}

/* global RollbarProxy */
function _proxyRequest(json, callback) {
  var rollbarProxy = new RollbarProxy();
  rollbarProxy.sendJsonPayload(
    json,
    function(_msg) { /* do nothing */ }, // eslint-disable-line no-unused-vars
    function(err) {
      callback(new Error(err));
    }
  );
}

function _makeRequest(accessToken, url, method, data, callback, requestFactory) {
  if (typeof RollbarProxy !== 'undefined') {
    return _proxyRequest(data, callback);
  }

  var request;
  if (requestFactory) {
    request = requestFactory();
  } else {
    request = _createXMLHTTPObject();
  }
  if (!request) {
    // Give up, no way to send requests
    return callback(new Error('No way to send a request'));
  }
  try {
    try {
      var onreadystatechange = function() {
        try {
          if (onreadystatechange && request.readyState === 4) {
            onreadystatechange = undefined;

            var parseResponse = _.jsonParse(request.responseText);
            if (_isSuccess(request)) {
              callback(parseResponse.error, parseResponse.value);
              return;
            } else if (_isNormalFailure(request)) {
              if (request.status === 403) {
                // likely caused by using a server access token
                var message = parseResponse.value && parseResponse.value.message;
                logger.error(message);
              }
              // return valid http status codes
              callback(new Error(String(request.status)));
            } else {
              // IE will return a status 12000+ on some sort of connection failure,
              // so we return a blank error
              // http://msdn.microsoft.com/en-us/library/aa383770%28VS.85%29.aspx
              var msg = 'XHR response had no status code (likely connection failure)';
              callback(_newRetriableError(msg));
            }
          }
        } catch (ex) {
          //jquery source mentions firefox may error out while accessing the
          //request members if there is a network error
          //https://github.com/jquery/jquery/blob/a938d7b1282fc0e5c52502c225ae8f0cef219f0a/src/ajax/xhr.js#L111
          var exc;
          if (ex && ex.stack) {
            exc = ex;
          } else {
            exc = new Error(ex);
          }
          callback(exc);
        }
      };

      request.open(method, url, true);
      if (request.setRequestHeader) {
        request.setRequestHeader('Content-Type', 'application/json');
        request.setRequestHeader('X-Rollbar-Access-Token', accessToken);
      }
      request.onreadystatechange = onreadystatechange;
      request.send(data);
    } catch (e1) {
      // Sending using the normal xmlhttprequest object didn't work, try XDomainRequest
      if (typeof XDomainRequest !== 'undefined') {

        // Assume we are in a really old browser which has a bunch of limitations:
        // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx

        // Extreme paranoia: if we have XDomainRequest then we have a window, but just in case
        if (!window || !window.location) {
          return callback(new Error('No window available during request, unknown environment'));
        }

        // If the current page is http, try and send over http
        if (window.location.href.substring(0, 5) === 'http:' && url.substring(0, 5) === 'https') {
          url = 'http' + url.substring(5);
        }

        var xdomainrequest = new XDomainRequest();
        xdomainrequest.onprogress = function() {};
        xdomainrequest.ontimeout = function() {
          var msg = 'Request timed out';
          var code = 'ETIMEDOUT';
          callback(_newRetriableError(msg, code));
        };
        xdomainrequest.onerror = function() {
          callback(new Error('Error during request'));
        };
        xdomainrequest.onload = function() {
          var parseResponse = _.jsonParse(xdomainrequest.responseText);
          callback(parseResponse.error, parseResponse.value);
        };
        xdomainrequest.open(method, url, true);
        xdomainrequest.send(data);
      } else {
        callback(new Error('Cannot find a method to transport a request'));
      }
    }
  } catch (e2) {
    callback(e2);
  }
}

function _createXMLHTTPObject() {
  /* global ActiveXObject:false */

  var factories = [
    function () {
      return new XMLHttpRequest();
    },
    function () {
      return new ActiveXObject('Msxml2.XMLHTTP');
    },
    function () {
      return new ActiveXObject('Msxml3.XMLHTTP');
    },
    function () {
      return new ActiveXObject('Microsoft.XMLHTTP');
    }
  ];
  var xmlhttp;
  var i;
  var numFactories = factories.length;
  for (i = 0; i < numFactories; i++) {
    /* eslint-disable no-empty */
    try {
      xmlhttp = factories[i]();
      break;
    } catch (e) {
      // pass
    }
    /* eslint-enable no-empty */
  }
  return xmlhttp;
}

function _isSuccess(r) {
  return r && r.status && r.status === 200;
}

function _isNormalFailure(r) {
  return r && _.isType(r.status, 'number') && r.status >= 400 && r.status < 600;
}

function _newRetriableError(message, code) {
  var err = new Error(message);
  err.code = code || 'ENOTFOUND';
  return err;
}

module.exports = {
  get: get,
  post: post,
  postJsonPayload: postJsonPayload
};


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _ = __webpack_require__(0);
var errorParser = __webpack_require__(4);
var logger = __webpack_require__(1);

function handleDomException(item, options, callback) {
  if(item.err && errorParser.Stack(item.err).name === 'DOMException') {
    var originalError = new Error();
    originalError.name = item.err.name;
    originalError.message = item.err.message;
    originalError.stack = item.err.stack;
    originalError.nested = item.err;
    item.err = originalError;
  }
  callback(null, item);
}

function handleItemWithError(item, options, callback) {
  item.data = item.data || {};
  if (item.err) {
    try {
      item.stackInfo = item.err._savedStackTrace || errorParser.parse(item.err, item.skipFrames);
    } catch (e) {
      logger.error('Error while parsing the error object.', e);
      try {
        item.message = item.err.message || item.err.description || item.message || String(item.err);
      } catch (e2) {
        item.message = String(item.err) || String(e2);
      }
      delete item.err;
    }
  }
  callback(null, item);
}

function ensureItemHasSomethingToSay(item, options, callback) {
  if (!item.message && !item.stackInfo && !item.custom) {
    callback(new Error('No message, stack info, or custom data'), null);
  }
  callback(null, item);
}

function addBaseInfo(item, options, callback) {
  var environment = (options.payload && options.payload.environment) || options.environment;
  item.data = _.merge(item.data, {
    environment: environment,
    level: item.level,
    endpoint: options.endpoint,
    platform: 'browser',
    framework: 'browser-js',
    language: 'javascript',
    server: {},
    uuid: item.uuid,
    notifier: {
      name: 'rollbar-browser-js',
      version: options.version
    }
  });
  callback(null, item);
}

function addRequestInfo(window) {
  return function(item, options, callback) {
    if (!window || !window.location) {
      return callback(null, item);
    }
    var remoteString = '$remote_ip';
    if (!options.captureIp) {
      remoteString = null;
    } else if (options.captureIp !== true) {
      remoteString += '_anonymize';
    }
    _.set(item, 'data.request', {
      url: window.location.href,
      query_string: window.location.search,
      user_ip: remoteString
    });
    callback(null, item);
  };
}

function addClientInfo(window) {
  return function(item, options, callback) {
    if (!window) {
      return callback(null, item);
    }
    var nav = window.navigator || {};
    var scr = window.screen || {};
    _.set(item, 'data.client', {
      runtime_ms: item.timestamp - window._rollbarStartTime,
      timestamp: Math.round(item.timestamp / 1000),
      javascript: {
        browser: nav.userAgent,
        language: nav.language,
        cookie_enabled: nav.cookieEnabled,
        screen: {
          width: scr.width,
          height: scr.height
        }
      }
    });
    callback(null, item);
  };
}

function addPluginInfo(window) {
  return function(item, options, callback) {
    if (!window || !window.navigator) {
      return callback(null, item);
    }
    var plugins = [];
    var navPlugins = window.navigator.plugins || [];
    var cur;
    for (var i=0, l=navPlugins.length; i < l; ++i) {
      cur = navPlugins[i];
      plugins.push({name: cur.name, description: cur.description});
    }
    _.set(item, 'data.client.javascript.plugins', plugins);
    callback(null, item);
  };
}

function addBody(item, options, callback) {
  if (item.stackInfo) {
    if (item.stackInfo.traceChain) {
      addBodyTraceChain(item, options, callback);
    } else {
      addBodyTrace(item, options, callback);
    }
  } else {
    addBodyMessage(item, options, callback);
  }
}

function addBodyMessage(item, options, callback) {
  var message = item.message;
  var custom = item.custom;

  if (!message) {
    message = 'Item sent with null or missing arguments.';
  }
  var result = {
    body: message
  };

  if (custom) {
    result.extra = _.merge(custom);
  }

  _.set(item, 'data.body', {message: result});
  callback(null, item);
}

function stackFromItem(item) {
  // Transform a TraceKit stackInfo object into a Rollbar trace
  var stack = item.stackInfo.stack;
  if (stack && stack.length === 0 && item._unhandledStackInfo && item._unhandledStackInfo.stack) {
    stack = item._unhandledStackInfo.stack;
  }
  return stack;
}

function addBodyTraceChain(item, options, callback) {
  var traceChain = item.stackInfo.traceChain;
  var traces = [];

  var traceChainLength = traceChain.length;
  for (var i = 0; i < traceChainLength; i++) {
    var trace = buildTrace(item, traceChain[i], options);
    traces.push(trace);
  }

  _.set(item, 'data.body', {trace_chain: traces});
  callback(null, item);
}

function addBodyTrace(item, options, callback) {
  var stack = stackFromItem(item);

  if (stack) {
    var trace = buildTrace(item, item.stackInfo, options);
    _.set(item, 'data.body', {trace: trace});
    callback(null, item);
  } else {
    var stackInfo = item.stackInfo;
    var guess = errorParser.guessErrorClass(stackInfo.message);
    var className = errorClass(stackInfo, guess[0], options);
    var message = guess[1];

    item.message = className + ': ' + message;
    addBodyMessage(item, options, callback);
  }
}

function buildTrace(item, stackInfo, options) {
  var description = item && item.data.description;
  var custom = item && item.custom;
  var stack = stackFromItem(item);

  var guess = errorParser.guessErrorClass(stackInfo.message);
  var className = errorClass(stackInfo, guess[0], options);
  var message = guess[1];
  var trace = {
    exception: {
      'class': className,
      message: message
    }
  };

  if (description) {
    trace.exception.description = description;
  }

  if (stack) {
    if (stack.length === 0) {
      trace.exception.stack = stackInfo.rawStack;
      trace.exception.raw = String(stackInfo.rawException);
    }
    var stackFrame;
    var frame;
    var code;
    var pre;
    var post;
    var contextLength;
    var i, mid;

    trace.frames = [];
    for (i = 0; i < stack.length; ++i) {
      stackFrame = stack[i];
      frame = {
        filename: stackFrame.url ? _.sanitizeUrl(stackFrame.url) : '(unknown)',
        lineno: stackFrame.line || null,
        method: (!stackFrame.func || stackFrame.func === '?') ? '[anonymous]' : stackFrame.func,
        colno: stackFrame.column
      };
      if (options.sendFrameUrl) {
        frame.url = stackFrame.url;
      }
      if (frame.method && frame.method.endsWith && frame.method.endsWith('_rollbar_wrapped')) {
        continue;
      }

      code = pre = post = null;
      contextLength = stackFrame.context ? stackFrame.context.length : 0;
      if (contextLength) {
        mid = Math.floor(contextLength / 2);
        pre = stackFrame.context.slice(0, mid);
        code = stackFrame.context[mid];
        post = stackFrame.context.slice(mid);
      }

      if (code) {
        frame.code = code;
      }

      if (pre || post) {
        frame.context = {};
        if (pre && pre.length) {
          frame.context.pre = pre;
        }
        if (post && post.length) {
          frame.context.post = post;
        }
      }

      if (stackFrame.args) {
        frame.args = stackFrame.args;
      }

      trace.frames.push(frame);
    }

    // NOTE(cory): reverse the frames since rollbar.com expects the most recent call last
    trace.frames.reverse();

    if (custom) {
      trace.extra = _.merge(custom);
    }
  }

  return trace;
}

function errorClass(stackInfo, guess, options) {
  if (stackInfo.name) {
    return stackInfo.name;
  } else if (options.guessErrorClass) {
    return guess;
  } else {
    return '(unknown)';
  }
}

function scrubPayload(item, options, callback) {
  var scrubFields = options.scrubFields;
  item.data = _.scrub(item.data, scrubFields);
  callback(null, item);
}

module.exports = {
  handleDomException: handleDomException,
  handleItemWithError: handleItemWithError,
  ensureItemHasSomethingToSay: ensureItemHasSomethingToSay,
  addBaseInfo: addBaseInfo,
  addRequestInfo: addRequestInfo,
  addClientInfo: addClientInfo,
  addPluginInfo: addPluginInfo,
  addBody: addBody,
  scrubPayload: scrubPayload
};


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {
    'use strict';
    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.

    /* istanbul ignore next */
    if (true) {
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(22)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else {}
}(this, function ErrorStackParser(StackFrame) {
    'use strict';

    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\S+:\d+/;
    var CHROME_IE_STACK_REGEXP = /^\s*at .*(\S+:\d+|\(native\))/m;
    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\[native code])?$/;

    return {
        /**
         * Given an Error object, extract the most information from it.
         *
         * @param {Error} error object
         * @return {Array} of StackFrames
         */
        parse: function ErrorStackParser$$parse(error) {
            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {
                return this.parseOpera(error);
            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {
                return this.parseV8OrIE(error);
            } else if (error.stack) {
                return this.parseFFOrSafari(error);
            } else {
                throw new Error('Cannot parse given Error object');
            }
        },

        // Separate line and column numbers from a string of the form: (URI:Line:Column)
        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {
            // Fail-fast but return locations like "(native)"
            if (urlLike.indexOf(':') === -1) {
                return [urlLike];
            }

            var regExp = /(.+?)(?::(\d+))?(?::(\d+))?$/;
            var parts = regExp.exec(urlLike.replace(/[()]/g, ''));
            return [parts[1], parts[2] || undefined, parts[3] || undefined];
        },

        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {
            var filtered = error.stack.split('\n').filter(function(line) {
                return !!line.match(CHROME_IE_STACK_REGEXP);
            }, this);

            return filtered.map(function(line) {
                if (line.indexOf('(eval ') > -1) {
                    // Throw away eval information until we implement stacktrace.js/stackframe#8
                    line = line.replace(/eval code/g, 'eval').replace(/(\(eval at [^()]*)|(\),.*$)/g, '');
                }
                var sanitizedLine = line.replace(/^\s+/, '').replace(/\(eval code/g, '(');

                // capture and preseve the parenthesized location "(/foo/my bar.js:12:87)" in
                // case it has spaces in it, as the string is split on \s+ later on
                var location = sanitizedLine.match(/ (\((.+):(\d+):(\d+)\)$)/);

                // remove the parenthesized location from the line, if it was matched
                sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;

                var tokens = sanitizedLine.split(/\s+/).slice(1);
                // if a location was matched, pass it to extractLocation() otherwise pop the last token
                var locationParts = this.extractLocation(location ? location[1] : tokens.pop());
                var functionName = tokens.join(' ') || undefined;
                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];

                return new StackFrame({
                    functionName: functionName,
                    fileName: fileName,
                    lineNumber: locationParts[1],
                    columnNumber: locationParts[2],
                    source: line
                });
            }, this);
        },

        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {
            var filtered = error.stack.split('\n').filter(function(line) {
                return !line.match(SAFARI_NATIVE_CODE_REGEXP);
            }, this);

            return filtered.map(function(line) {
                // Throw away eval information until we implement stacktrace.js/stackframe#8
                if (line.indexOf(' > eval') > -1) {
                    line = line.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g, ':$1');
                }

                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {
                    // Safari eval frames only have function names and nothing else
                    return new StackFrame({
                        functionName: line
                    });
                } else {
                    var functionNameRegex = /((.*".+"[^@]*)?[^@]*)(?:@)/;
                    var matches = line.match(functionNameRegex);
                    var functionName = matches && matches[1] ? matches[1] : undefined;
                    var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));

                    return new StackFrame({
                        functionName: functionName,
                        fileName: locationParts[0],
                        lineNumber: locationParts[1],
                        columnNumber: locationParts[2],
                        source: line
                    });
                }
            }, this);
        },

        parseOpera: function ErrorStackParser$$parseOpera(e) {
            if (!e.stacktrace || (e.message.indexOf('\n') > -1 &&
                e.message.split('\n').length > e.stacktrace.split('\n').length)) {
                return this.parseOpera9(e);
            } else if (!e.stack) {
                return this.parseOpera10(e);
            } else {
                return this.parseOpera11(e);
            }
        },

        parseOpera9: function ErrorStackParser$$parseOpera9(e) {
            var lineRE = /Line (\d+).*script (?:in )?(\S+)/i;
            var lines = e.message.split('\n');
            var result = [];

            for (var i = 2, len = lines.length; i < len; i += 2) {
                var match = lineRE.exec(lines[i]);
                if (match) {
                    result.push(new StackFrame({
                        fileName: match[2],
                        lineNumber: match[1],
                        source: lines[i]
                    }));
                }
            }

            return result;
        },

        parseOpera10: function ErrorStackParser$$parseOpera10(e) {
            var lineRE = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i;
            var lines = e.stacktrace.split('\n');
            var result = [];

            for (var i = 0, len = lines.length; i < len; i += 2) {
                var match = lineRE.exec(lines[i]);
                if (match) {
                    result.push(
                        new StackFrame({
                            functionName: match[3] || undefined,
                            fileName: match[2],
                            lineNumber: match[1],
                            source: lines[i]
                        })
                    );
                }
            }

            return result;
        },

        // Opera 10.65+ Error.stack very similar to FF/Safari
        parseOpera11: function ErrorStackParser$$parseOpera11(error) {
            var filtered = error.stack.split('\n').filter(function(line) {
                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);
            }, this);

            return filtered.map(function(line) {
                var tokens = line.split('@');
                var locationParts = this.extractLocation(tokens.pop());
                var functionCall = (tokens.shift() || '');
                var functionName = functionCall
                    .replace(/<anonymous function(: (\w+))?>/, '$2')
                    .replace(/\([^)]*\)/g, '') || undefined;
                var argsRaw;
                if (functionCall.match(/\(([^)]*)\)/)) {
                    argsRaw = functionCall.replace(/^[^(]+\(([^)]*)\)$/, '$1');
                }
                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?
                    undefined : argsRaw.split(',');

                return new StackFrame({
                    functionName: functionName,
                    args: args,
                    fileName: locationParts[0],
                    lineNumber: locationParts[1],
                    columnNumber: locationParts[2],
                    source: line
                });
            }, this);
        }
    };
}));


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {
    'use strict';
    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.

    /* istanbul ignore next */
    if (true) {
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else {}
}(this, function() {
    'use strict';
    function _isNumber(n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
    }

    function _capitalize(str) {
        return str.charAt(0).toUpperCase() + str.substring(1);
    }

    function _getter(p) {
        return function() {
            return this[p];
        };
    }

    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];
    var numericProps = ['columnNumber', 'lineNumber'];
    var stringProps = ['fileName', 'functionName', 'source'];
    var arrayProps = ['args'];

    var props = booleanProps.concat(numericProps, stringProps, arrayProps);

    function StackFrame(obj) {
        if (!obj) return;
        for (var i = 0; i < props.length; i++) {
            if (obj[props[i]] !== undefined) {
                this['set' + _capitalize(props[i])](obj[props[i]]);
            }
        }
    }

    StackFrame.prototype = {
        getArgs: function() {
            return this.args;
        },
        setArgs: function(v) {
            if (Object.prototype.toString.call(v) !== '[object Array]') {
                throw new TypeError('Args must be an Array');
            }
            this.args = v;
        },

        getEvalOrigin: function() {
            return this.evalOrigin;
        },
        setEvalOrigin: function(v) {
            if (v instanceof StackFrame) {
                this.evalOrigin = v;
            } else if (v instanceof Object) {
                this.evalOrigin = new StackFrame(v);
            } else {
                throw new TypeError('Eval Origin must be an Object or StackFrame');
            }
        },

        toString: function() {
            var fileName = this.getFileName() || '';
            var lineNumber = this.getLineNumber() || '';
            var columnNumber = this.getColumnNumber() || '';
            var functionName = this.getFunctionName() || '';
            if (this.getIsEval()) {
                if (fileName) {
                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';
                }
                return '[eval]:' + lineNumber + ':' + columnNumber;
            }
            if (functionName) {
                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';
            }
            return fileName + ':' + lineNumber + ':' + columnNumber;
        }
    };

    StackFrame.fromString = function StackFrame$$fromString(str) {
        var argsStartIndex = str.indexOf('(');
        var argsEndIndex = str.lastIndexOf(')');

        var functionName = str.substring(0, argsStartIndex);
        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');
        var locationString = str.substring(argsEndIndex + 1);

        if (locationString.indexOf('@') === 0) {
            var parts = /@(.+?)(?::(\d+))?(?::(\d+))?$/.exec(locationString, '');
            var fileName = parts[1];
            var lineNumber = parts[2];
            var columnNumber = parts[3];
        }

        return new StackFrame({
            functionName: functionName,
            args: args || undefined,
            fileName: fileName,
            lineNumber: lineNumber || undefined,
            columnNumber: columnNumber || undefined
        });
    };

    for (var i = 0; i < booleanProps.length; i++) {
        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);
        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {
            return function(v) {
                this[p] = Boolean(v);
            };
        })(booleanProps[i]);
    }

    for (var j = 0; j < numericProps.length; j++) {
        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);
        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {
            return function(v) {
                if (!_isNumber(v)) {
                    throw new TypeError(p + ' must be a Number');
                }
                this[p] = Number(v);
            };
        })(numericProps[j]);
    }

    for (var k = 0; k < stringProps.length; k++) {
        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);
        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {
            return function(v) {
                this[p] = String(v);
            };
        })(stringProps[k]);
    }

    return StackFrame;
}));


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _ = __webpack_require__(0);

function itemToPayload(item, options, callback) {
  var payloadOptions = options.payload || {};
  if (payloadOptions.body) {
    delete payloadOptions.body;
  }

  var data = _.merge(item.data, payloadOptions);
  if (item._isUncaught) {
    data._isUncaught = true;
  }
  if (item._originalArgs) {
    data._originalArgs = item._originalArgs;
  }
  callback(null, data);
}

function addTelemetryData(item, options, callback) {
  if (item.telemetryEvents) {
    _.set(item, 'data.body.telemetry', item.telemetryEvents);
  }
  callback(null, item);
}

function addMessageWithError(item, options, callback) {
  if (!item.message) {
    callback(null, item);
    return;
  }
  var tracePath = 'data.body.trace_chain.0';
  var trace = _.get(item, tracePath);
  if (!trace) {
    tracePath = 'data.body.trace';
    trace = _.get(item, tracePath);
  }
  if (trace) {
    if (!(trace.exception && trace.exception.description)) {
      _.set(item, tracePath+'.exception.description', item.message);
      callback(null, item);
      return;
    }
    var extra = _.get(item, tracePath+'.extra') || {};
    var newExtra =  _.merge(extra, {message: item.message});
    _.set(item, tracePath+'.extra', newExtra);
  }
  callback(null, item);
}

function userTransform(logger) {
  return function(item, options, callback) {
    var newItem = _.merge(item);
    try {
      if (_.isFunction(options.transform)) {
        options.transform(newItem.data, item);
      }
    } catch (e) {
      options.transform = null;
      logger.error('Error while calling custom transform() function. Removing custom transform().', e);
      callback(null, item);
      return;
    }
    callback(null, newItem);
  }
}

function addConfigToPayload(item, options, callback) {
  if (!options.sendConfig) {
    return callback(null, item);
  }
  var configKey = '_rollbarConfig';
  var custom = _.get(item, 'data.custom') || {};
  custom[configKey] = options;
  item.data.custom = custom;
  callback(null, item);
}

function addConfiguredOptions(item, options, callback) {
  delete options._configuredOptions.accessToken;
  item.data.notifier.configured_options = options._configuredOptions;
  callback(null, item);
}

function addDiagnosticKeys(item, options, callback) {
  var diagnostic = _.merge(item.notifier.client.notifier.diagnostic, item.diagnostic);

  if (_.get(item, 'err._isAnonymous')) {
    diagnostic.is_anonymous = true;
  }

  if (item.err) {
    try {
      diagnostic.raw_error = {
        message: item.err.message,
        name: item.err.name,
        constructor_name: item.err.constructor && item.err.constructor.name,
        filename: item.err.fileName,
        line: item.err.lineNumber,
        column: item.err.columnNumber,
        stack: item.err.stack
      };
    } catch (e) {
      diagnostic.raw_error = { failed: String(e) };
    }
  }

  item.data.notifier.diagnostic = _.merge(item.data.notifier.diagnostic, diagnostic);
  callback(null, item);
}

module.exports = {
  itemToPayload: itemToPayload,
  addTelemetryData: addTelemetryData,
  addMessageWithError: addMessageWithError,
  userTransform: userTransform,
  addConfigToPayload: addConfigToPayload,
  addConfiguredOptions: addConfiguredOptions,
  addDiagnosticKeys: addDiagnosticKeys
};


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _ = __webpack_require__(0);

function checkIgnore(item, settings) {
  if (_.get(settings, 'plugins.jquery.ignoreAjaxErrors')) {
    return !_.get(item, 'body.message.extra.isAjax');
  }
  return true;
}

module.exports = {
  checkIgnore: checkIgnore
};


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _ = __webpack_require__(0);

function checkLevel(item, settings) {
  var level = item.level;
  var levelVal = _.LEVELS[level] || 0;
  var reportLevel = settings.reportLevel;
  var reportLevelVal = _.LEVELS[reportLevel] || 0;

  if (levelVal < reportLevelVal) {
    return false;
  }
  return true;
}

function userCheckIgnore(logger) {
  return function(item, settings) {
    var isUncaught = !!item._isUncaught;
    delete item._isUncaught;
    var args = item._originalArgs;
    delete item._originalArgs;
    try {
      if (_.isFunction(settings.onSendCallback)) {
        settings.onSendCallback(isUncaught, args, item);
      }
    } catch (e) {
      settings.onSendCallback = null;
      logger.error('Error while calling onSendCallback, removing', e);
    }
    try {
      if (_.isFunction(settings.checkIgnore) && settings.checkIgnore(isUncaught, args, item)) {
        return false;
      }
    } catch (e) {
      settings.checkIgnore = null;
      logger.error('Error while calling custom checkIgnore(), removing', e);
    }
    return true;
  }
}

function urlIsNotBlacklisted(logger) {
  return function(item, settings) {
    return !urlIsOnAList(item, settings, 'blacklist', logger);
  }
}

function urlIsWhitelisted(logger) {
  return function(item, settings) {
    return urlIsOnAList(item, settings, 'whitelist', logger);
  }
}

function matchFrames(trace, list, black) {
  if (!trace) { return !black }

  var frames = trace.frames;

  if (!frames || frames.length === 0) { return !black; }

  var frame, filename, url, urlRegex;
  var listLength = list.length;
  var frameLength = frames.length;
  for (var i = 0; i < frameLength; i++) {
    frame = frames[i];
    filename = frame.filename;

    if (!_.isType(filename, 'string')) { return !black; }

    for (var j = 0; j < listLength; j++) {
      url = list[j];
      urlRegex = new RegExp(url);

      if (urlRegex.test(filename)) {
        return true;
      }
    }
  }
  return false;
}

function urlIsOnAList(item, settings, whiteOrBlack, logger) {
  // whitelist is the default
  var black = false;
  if (whiteOrBlack === 'blacklist') {
    black = true;
  }

  var list, traces;
  try {
    list = black ? settings.hostBlackList : settings.hostWhiteList;
    traces = _.get(item, 'body.trace_chain') || [_.get(item, 'body.trace')];

    // These two checks are important to come first as they are defaults
    // in case the list is missing or the trace is missing or not well-formed
    if (!list || list.length === 0) {
      return !black;
    }
    if (traces.length === 0 || !traces[0]) {
      return !black;
    }

    var tracesLength = traces.length;
    for (var i = 0; i < tracesLength; i++) {
      if(matchFrames(traces[i], list, black)) {
        return true;
      }
    }
  } catch (e)
  /* istanbul ignore next */
  {
    if (black) {
      settings.hostBlackList = null;
    } else {
      settings.hostWhiteList = null;
    }
    var listName = black ? 'hostBlackList' : 'hostWhiteList';
    logger.error('Error while reading your configuration\'s ' + listName + ' option. Removing custom ' + listName + '.', e);
    return !black;
  }
  return false;
}

function messageIsIgnored(logger) {
  return function(item, settings) {
    var exceptionMessage, i, ignoredMessages,
        len, messageIsIgnored, rIgnoredMessage,
        body, traceMessage, bodyMessage;

    try {
      messageIsIgnored = false;
      ignoredMessages = settings.ignoredMessages;

      if (!ignoredMessages || ignoredMessages.length === 0) {
        return true;
      }

      body = item.body;
      traceMessage = _.get(body, 'trace.exception.message');
      bodyMessage = _.get(body, 'message.body');

      exceptionMessage = traceMessage || bodyMessage;

      if (!exceptionMessage){
        return true;
      }

      len = ignoredMessages.length;
      for (i = 0; i < len; i++) {
        rIgnoredMessage = new RegExp(ignoredMessages[i], 'gi');
        messageIsIgnored = rIgnoredMessage.test(exceptionMessage);

        if (messageIsIgnored) {
          break;
        }
      }
    } catch(e)
    /* istanbul ignore next */
    {
      settings.ignoredMessages = null;
      logger.error('Error while reading your configuration\'s ignoredMessages option. Removing custom ignoredMessages.');
    }

    return !messageIsIgnored;
  }
}

module.exports = {
  checkLevel: checkLevel,
  userCheckIgnore: userCheckIgnore,
  urlIsNotBlacklisted: urlIsNotBlacklisted,
  urlIsWhitelisted: urlIsWhitelisted,
  messageIsIgnored: messageIsIgnored
};


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _ = __webpack_require__(0);
var urlparser = __webpack_require__(3);
var domUtil = __webpack_require__(27);

var defaults = {
  network: true,
  networkResponseHeaders: false,
  networkResponseBody: false,
  networkRequestHeaders: false,
  networkRequestBody: false,
  networkErrorOnHttp5xx: false,
  networkErrorOnHttp4xx: false,
  networkErrorOnHttp0: false,
  log: true,
  dom: true,
  navigation: true,
  connectivity: true
};

function replace(obj, name, replacement, replacements, type) {
  var orig = obj[name];
  obj[name] = replacement(orig);
  if (replacements) {
    replacements[type].push([obj, name, orig]);
  }
}

function restore(replacements, type) {
  var b;
  while (replacements[type].length) {
    b = replacements[type].shift();
    b[0][b[1]] = b[2];
  }
}

function nameFromDescription(description) {
  if (!description || !description.attributes) { return null; }
  var attrs = description.attributes;
  for (var a = 0; a < attrs.length; ++a) {
    if (attrs[a].key === 'name') {
      return attrs[a].value;
    }
  }
  return null;
}

function defaultValueScrubber(scrubFields) {
  var patterns = [];
  for (var i = 0; i < scrubFields.length; ++i) {
    patterns.push(new RegExp(scrubFields[i], 'i'));
  }
  return function(description) {
    var name = nameFromDescription(description);
    if (!name) { return false; }
    for (var i = 0; i < patterns.length; ++i) {
      if (patterns[i].test(name)) {
        return true;
      }
    }
    return false;
  };
}

function Instrumenter(options, telemeter, rollbar, _window, _document) {
  this.options = options;
  var autoInstrument = options.autoInstrument;
  if (options.enabled === false || autoInstrument === false) {
    this.autoInstrument = {};
  } else {
    if (!_.isType(autoInstrument, 'object')) {
      autoInstrument = defaults;
    }
    this.autoInstrument = _.merge(defaults, autoInstrument);
  }
  this.scrubTelemetryInputs = !!options.scrubTelemetryInputs;
  this.telemetryScrubber = options.telemetryScrubber;
  this.defaultValueScrubber = defaultValueScrubber(options.scrubFields);
  this.telemeter = telemeter;
  this.rollbar = rollbar;
  this.diagnostic = rollbar.client.notifier.diagnostic;
  this._window = _window || {};
  this._document = _document || {};
  this.replacements = {
    network: [],
    log: [],
    navigation: [],
    connectivity: []
  };
  this.eventRemovers = {
    dom: [],
    connectivity: []
  };

  this._location = this._window.location;
  this._lastHref = this._location && this._location.href;
}

Instrumenter.prototype.configure = function(options) {
  this.options = _.merge(this.options, options);
  var autoInstrument = options.autoInstrument;
  var oldSettings = _.merge(this.autoInstrument);
  if (options.enabled === false || autoInstrument === false) {
    this.autoInstrument = {};
  } else {
    if (!_.isType(autoInstrument, 'object')) {
      autoInstrument = defaults;
    }
    this.autoInstrument = _.merge(defaults, autoInstrument);
  }
  this.instrument(oldSettings);
  if (options.scrubTelemetryInputs !== undefined) {
    this.scrubTelemetryInputs = !!options.scrubTelemetryInputs;
  }
  if (options.telemetryScrubber !== undefined) {
    this.telemetryScrubber = options.telemetryScrubber;
  }
};

Instrumenter.prototype.instrument = function(oldSettings) {
  if (this.autoInstrument.network && !(oldSettings && oldSettings.network)) {
    this.instrumentNetwork();
  } else if (!this.autoInstrument.network && oldSettings && oldSettings.network) {
    this.deinstrumentNetwork();
  }

  if (this.autoInstrument.log && !(oldSettings && oldSettings.log)) {
    this.instrumentConsole();
  } else if (!this.autoInstrument.log && oldSettings && oldSettings.log) {
    this.deinstrumentConsole();
  }

  if (this.autoInstrument.dom && !(oldSettings && oldSettings.dom)) {
    this.instrumentDom();
  } else if (!this.autoInstrument.dom && oldSettings && oldSettings.dom) {
    this.deinstrumentDom();
  }

  if (this.autoInstrument.navigation && !(oldSettings && oldSettings.navigation)) {
    this.instrumentNavigation();
  } else if (!this.autoInstrument.navigation && oldSettings && oldSettings.navigation) {
    this.deinstrumentNavigation();
  }

  if (this.autoInstrument.connectivity && !(oldSettings && oldSettings.connectivity)) {
    this.instrumentConnectivity();
  } else if (!this.autoInstrument.connectivity && oldSettings && oldSettings.connectivity) {
    this.deinstrumentConnectivity();
  }
};

Instrumenter.prototype.deinstrumentNetwork = function() {
  restore(this.replacements, 'network');
};

Instrumenter.prototype.instrumentNetwork = function() {
  var self = this;

  function wrapProp(prop, xhr) {
    if (prop in xhr && _.isFunction(xhr[prop])) {
      replace(xhr, prop, function(orig) {
        return self.rollbar.wrap(orig);
      });
    }
  }

  if ('XMLHttpRequest' in this._window) {
    var xhrp = this._window.XMLHttpRequest.prototype;
    replace(xhrp, 'open', function(orig) {
      return function(method, url) {
        if (_.isType(url, 'string')) {
          this.__rollbar_xhr = {
            method: method,
            url: url,
            status_code: null,
            start_time_ms: _.now(),
            end_time_ms: null
          };
          if (self.autoInstrument.networkRequestHeaders) {
            this.__rollbar_xhr.request_headers = {};
          }
        }
        return orig.apply(this, arguments);
      };
    }, this.replacements, 'network');

    replace(xhrp, 'setRequestHeader', function(orig) {
      return function(header, value) {
        if (self.autoInstrument.networkRequestHeaders && this.__rollbar_xhr &&
          _.isType(header, 'string') && _.isType(value, 'string')) {
          this.__rollbar_xhr.request_headers[header] = value;
        }
        if (header.toLowerCase() === 'content-type') {
          this.__rollbar_xhr.request_content_type = value;
        }
        return orig.apply(this, arguments);
      };
    }, this.replacements, 'network');

    replace(xhrp, 'send', function(orig) {
      /* eslint-disable no-unused-vars */
      return function(data) {
      /* eslint-enable no-unused-vars */
        var xhr = this;

        function onreadystatechangeHandler() {
          if (xhr.__rollbar_xhr) {
            if (xhr.__rollbar_xhr.status_code === null) {
              xhr.__rollbar_xhr.status_code = 0;
              if (self.autoInstrument.networkRequestBody) {
                xhr.__rollbar_xhr.request = data;
              }
              xhr.__rollbar_event = self.captureNetwork(xhr.__rollbar_xhr, 'xhr', undefined);
            }
            if (xhr.readyState < 2) {
              xhr.__rollbar_xhr.start_time_ms = _.now();
            }
            if (xhr.readyState > 3) {
              xhr.__rollbar_xhr.end_time_ms = _.now();

              var headers = null;
              xhr.__rollbar_xhr.response_content_type = xhr.getResponseHeader('Content-Type');
              if (self.autoInstrument.networkResponseHeaders) {
                var headersConfig = self.autoInstrument.networkResponseHeaders;
                headers = {};
                try {
                  var header, i;
                  if (headersConfig === true) {
                    var allHeaders = xhr.getAllResponseHeaders();
                    if (allHeaders) {
                      var arr = allHeaders.trim().split(/[\r\n]+/);
                      var parts, value;
                      for (i=0; i < arr.length; i++) {
                        parts = arr[i].split(': ');
                        header = parts.shift();
                        value = parts.join(': ');
                        headers[header] = value;
                      }
                    }
                  } else {
                    for (i=0; i < headersConfig.length; i++) {
                      header = headersConfig[i];
                      headers[header] = xhr.getResponseHeader(header);
                    }
                  }
                } catch (e) {
                  /* we ignore the errors here that could come from different
                   * browser issues with the xhr methods */
                }
              }
              var body = null;
              if (self.autoInstrument.networkResponseBody) {
                try {
                  body = xhr.responseText;
                } catch (e) {
                  /* ignore errors from reading responseText */
                }
              }
              var response = null;
              if (body || headers) {
                response = {};
                if (body) {
                  if (self.isJsonContentType(xhr.__rollbar_xhr.request_content_type)) {
                    response.body = self.scrubJson(body);
                  } else {
                    response.body = body;
                  }
                }
                if (headers) {
                  response.headers = headers;
                }
              }
              if (response) {
                xhr.__rollbar_xhr.response = response;
              }
              try {
                var code = xhr.status;
                code = code === 1223 ? 204 : code;
                xhr.__rollbar_xhr.status_code = code;
                xhr.__rollbar_event.level = self.telemeter.levelFromStatus(code);
                self.errorOnHttpStatus(xhr.__rollbar_xhr);
              } catch (e) {
                /* ignore possible exception from xhr.status */
              }
            }
          }
        }

        wrapProp('onload', xhr);
        wrapProp('onerror', xhr);
        wrapProp('onprogress', xhr);

        if ('onreadystatechange' in xhr && _.isFunction(xhr.onreadystatechange)) {
          replace(xhr, 'onreadystatechange', function(orig) {
            return self.rollbar.wrap(orig, undefined, onreadystatechangeHandler);
          });
        } else {
          xhr.onreadystatechange = onreadystatechangeHandler;
        }
        if (xhr.__rollbar_xhr) {
          xhr.__rollbar_xhr.stack = (new Error()).stack;
        }
        return orig.apply(this, arguments);
      }
    }, this.replacements, 'network');
  }

  if ('fetch' in this._window) {
    replace(this._window, 'fetch', function(orig) {
      /* eslint-disable no-unused-vars */
      return function(fn, t) {
      /* eslint-enable no-unused-vars */
        var args = new Array(arguments.length);
        for (var i=0, len=args.length; i < len; i++) {
          args[i] = arguments[i];
        }
        var input = args[0];
        var method = 'GET';
        var url;
        if (_.isType(input, 'string')) {
          url = input;
        } else if (input) {
          url = input.url;
          if (input.method) {
            method = input.method;
          }
        }
        if (args[1] && args[1].method) {
          method = args[1].method;
        }
        var metadata = {
          method: method,
          url: url,
          status_code: null,
          start_time_ms: _.now(),
          end_time_ms: null
        };
        if (args[1] && args[1].headers) {
          // Argument may be a Headers object, or plain object. Ensure here that
          // we are working with a Headers object with case-insensitive keys.
          var reqHeaders = new Headers(args[1].headers);

          metadata.request_content_type = reqHeaders.get('Content-Type');

          if (self.autoInstrument.networkRequestHeaders) {
            metadata.request_headers = self.fetchHeaders(reqHeaders, self.autoInstrument.networkRequestHeaders)
          }
        }

        if (self.autoInstrument.networkRequestBody) {
          if (args[1] && args[1].body) {
            metadata.request = args[1].body;
          } else if (args[0] && !_.isType(args[0], 'string') && args[0].body) {
            metadata.request = args[0].body;
          }
        }
        self.captureNetwork(metadata, 'fetch', undefined);
        metadata.stack = (new Error()).stack;
        return orig.apply(this, args).then(function (resp) {
          metadata.end_time_ms = _.now();
          metadata.status_code = resp.status;
          metadata.response_content_type = resp.headers.get('Content-Type');
          var headers = null;
          if (self.autoInstrument.networkResponseHeaders) {
            headers = self.fetchHeaders(resp.headers, self.autoInstrument.networkResponseHeaders);
          }
          var body = null;
          if (self.autoInstrument.networkResponseBody) {
            if (typeof resp.text === 'function') { // Response.text() is not implemented on multiple platforms
              body = resp.text(); //returns a Promise
            }
          }
          if (headers || body) {
            metadata.response = {};
            if (body) {
              // Test to ensure body is a Promise, which it should always be.
              if (typeof body.then === 'function') {
                body.then(function (text) {
                  if (self.isJsonContentType(metadata.response_content_type)) {
                    metadata.response.body = self.scrubJson(text);
                  }
                });
              } else {
                metadata.response.body = body;
              }
            }
            if (headers) {
              metadata.response.headers = headers;
            }
          }
          self.errorOnHttpStatus(metadata);
          return resp;
        });
      };
    }, this.replacements, 'network');
  }
};

Instrumenter.prototype.captureNetwork = function(metadata, subtype, rollbarUUID) {
  if (metadata.request && this.isJsonContentType(metadata.request_content_type)) {
    metadata.request = this.scrubJson(metadata.request);
  }
  return this.telemeter.captureNetwork(metadata, subtype, rollbarUUID);
};

Instrumenter.prototype.isJsonContentType = function(contentType) {
  return (contentType && contentType.toLowerCase().includes('json')) ? true : false;
}

Instrumenter.prototype.scrubJson = function(json) {
  return JSON.stringify(_.scrub(JSON.parse(json), this.options.scrubFields));
}

Instrumenter.prototype.fetchHeaders = function(inHeaders, headersConfig) {
  var outHeaders = {};
  try {
    var i;
    if (headersConfig === true) {
      if (typeof inHeaders.entries === 'function') { // Headers.entries() is not implemented in IE
        var allHeaders = inHeaders.entries();
        var currentHeader = allHeaders.next();
        while (!currentHeader.done) {
          outHeaders[currentHeader.value[0]] = currentHeader.value[1];
          currentHeader = allHeaders.next();
        }
      }
    } else {
      for (i=0; i < headersConfig.length; i++) {
        var header = headersConfig[i];
        outHeaders[header] = inHeaders.get(header);
      }
    }
  } catch (e) {
    /* ignore probable IE errors */
  }
  return outHeaders;
}

Instrumenter.prototype.errorOnHttpStatus = function(metadata) {
  var status = metadata.status_code;

  if ((status >= 500 && this.autoInstrument.networkErrorOnHttp5xx) ||
    (status >= 400 && this.autoInstrument.networkErrorOnHttp4xx) ||
    (status === 0 && this.autoInstrument.networkErrorOnHttp0)) {
    var error = new Error('HTTP request failed with Status ' + status);
    error.stack = metadata.stack;
    this.rollbar.error(error, { skipFrames: 1 });
  }
}

Instrumenter.prototype.deinstrumentConsole = function() {
  if (!('console' in this._window && this._window.console.log)) {
    return;
  }
  var b;
  while (this.replacements['log'].length) {
    b = this.replacements['log'].shift();
    this._window.console[b[0]] = b[1];
  }
};

Instrumenter.prototype.instrumentConsole = function() {
  if (!('console' in this._window && this._window.console.log)) {
    return;
  }

  var self = this;
  var c = this._window.console;

  function wrapConsole(method) {
    'use strict'; // See https://github.com/rollbar/rollbar.js/pull/778

    var orig = c[method];
    var origConsole = c;
    var level = method === 'warn' ? 'warning' : method;
    c[method] = function() {
      var args = Array.prototype.slice.call(arguments);
      var message = _.formatArgsAsString(args);
      self.telemeter.captureLog(message, level);
      if (orig) {
        Function.prototype.apply.call(orig, origConsole, args);
      }
    };
    self.replacements['log'].push([method, orig]);
  }
  var methods = ['debug','info','warn','error','log'];
  try {
    for (var i=0, len=methods.length; i < len; i++) {
      wrapConsole(methods[i]);
    }
  } catch (e) {
    this.diagnostic.instrumentConsole = { error: e.message };
  }
};

Instrumenter.prototype.deinstrumentDom = function() {
  if (!('addEventListener' in this._window || 'attachEvent' in this._window)) {
    return;
  }
  this.removeListeners('dom');
};

Instrumenter.prototype.instrumentDom = function() {
  if (!('addEventListener' in this._window || 'attachEvent' in this._window)) {
    return;
  }
  var clickHandler = this.handleClick.bind(this);
  var blurHandler = this.handleBlur.bind(this);
  this.addListener('dom', this._window, 'click', 'onclick', clickHandler, true);
  this.addListener('dom', this._window, 'blur', 'onfocusout', blurHandler, true);
};

Instrumenter.prototype.handleClick = function(evt) {
  try {
    var e = domUtil.getElementFromEvent(evt, this._document);
    var hasTag = e && e.tagName;
    var anchorOrButton = domUtil.isDescribedElement(e, 'a') || domUtil.isDescribedElement(e, 'button');
    if (hasTag && (anchorOrButton || domUtil.isDescribedElement(e, 'input', ['button', 'submit']))) {
        this.captureDomEvent('click', e);
    } else if (domUtil.isDescribedElement(e, 'input', ['checkbox', 'radio'])) {
      this.captureDomEvent('input', e, e.value, e.checked);
    }
  } catch (exc) {
    // TODO: Not sure what to do here
  }
};

Instrumenter.prototype.handleBlur = function(evt) {
  try {
    var e = domUtil.getElementFromEvent(evt, this._document);
    if (e && e.tagName) {
      if (domUtil.isDescribedElement(e, 'textarea')) {
        this.captureDomEvent('input', e, e.value);
      } else if (domUtil.isDescribedElement(e, 'select') && e.options && e.options.length) {
        this.handleSelectInputChanged(e);
      } else if (domUtil.isDescribedElement(e, 'input') && !domUtil.isDescribedElement(e, 'input', ['button', 'submit', 'hidden', 'checkbox', 'radio'])) {
        this.captureDomEvent('input', e, e.value);
      }
    }
  } catch (exc) {
    // TODO: Not sure what to do here
  }
};

Instrumenter.prototype.handleSelectInputChanged = function(elem) {
  if (elem.multiple) {
    for (var i = 0; i < elem.options.length; i++) {
      if (elem.options[i].selected) {
        this.captureDomEvent('input', elem, elem.options[i].value);
      }
    }
  } else if (elem.selectedIndex >= 0 && elem.options[elem.selectedIndex]) {
    this.captureDomEvent('input', elem, elem.options[elem.selectedIndex].value);
  }
};

Instrumenter.prototype.captureDomEvent = function(subtype, element, value, isChecked) {
  if (value !== undefined) {
    if (this.scrubTelemetryInputs || (domUtil.getElementType(element) === 'password')) {
      value = '[scrubbed]';
    } else {
      var description = domUtil.describeElement(element);
      if (this.telemetryScrubber) {
        if (this.telemetryScrubber(description)) {
          value = '[scrubbed]';
        }
      } else if (this.defaultValueScrubber(description)) {
        value = '[scrubbed]';
      }
    }
  }
  var elementString = domUtil.elementArrayToString(domUtil.treeToArray(element));
  this.telemeter.captureDom(subtype, elementString, value, isChecked);
};

Instrumenter.prototype.deinstrumentNavigation = function() {
  var chrome = this._window.chrome;
  var chromePackagedApp = chrome && chrome.app && chrome.app.runtime;
  // See https://github.com/angular/angular.js/pull/13945/files
  var hasPushState = !chromePackagedApp && this._window.history && this._window.history.pushState;
  if (!hasPushState) {
    return;
  }
  restore(this.replacements, 'navigation');
};

Instrumenter.prototype.instrumentNavigation = function() {
  var chrome = this._window.chrome;
  var chromePackagedApp = chrome && chrome.app && chrome.app.runtime;
  // See https://github.com/angular/angular.js/pull/13945/files
  var hasPushState = !chromePackagedApp && this._window.history && this._window.history.pushState;
  if (!hasPushState) {
    return;
  }
  var self = this;
  replace(this._window, 'onpopstate', function(orig) {
    return function() {
      var current = self._location.href;
      self.handleUrlChange(self._lastHref, current);
      if (orig) {
        orig.apply(this, arguments);
      }
    };
  }, this.replacements, 'navigation');

  replace(this._window.history, 'pushState', function(orig) {
    return function() {
      var url = arguments.length > 2 ? arguments[2] : undefined;
      if (url) {
        self.handleUrlChange(self._lastHref, url + '');
      }
      return orig.apply(this, arguments);
    };
  }, this.replacements, 'navigation');
};

Instrumenter.prototype.handleUrlChange = function(from, to) {
  var parsedHref = urlparser.parse(this._location.href);
  var parsedTo = urlparser.parse(to);
  var parsedFrom = urlparser.parse(from);
  this._lastHref = to;
  if (parsedHref.protocol === parsedTo.protocol && parsedHref.host === parsedTo.host) {
    to = parsedTo.path + (parsedTo.hash || '');
  }
  if (parsedHref.protocol === parsedFrom.protocol && parsedHref.host === parsedFrom.host) {
    from = parsedFrom.path + (parsedFrom.hash || '');
  }
  this.telemeter.captureNavigation(from, to);
};

Instrumenter.prototype.deinstrumentConnectivity = function() {
  if (!('addEventListener' in this._window || 'body' in this._document)) {
    return;
  }
  if (this._window.addEventListener) {
    this.removeListeners('connectivity');
  } else {
    restore(this.replacements, 'connectivity');
  }
};

Instrumenter.prototype.instrumentConnectivity = function() {
  if (!('addEventListener' in this._window || 'body' in this._document)) {
    return;
  }
  if (this._window.addEventListener) {
    this.addListener('connectivity', this._window, 'online', undefined, function() {
      this.telemeter.captureConnectivityChange('online');
    }.bind(this), true);
    this.addListener('connectivity', this._window, 'offline', undefined, function() {
      this.telemeter.captureConnectivityChange('offline');
    }.bind(this), true);
  } else {
    var self = this;
    replace(this._document.body, 'ononline', function(orig) {
      return function() {
        self.telemeter.captureConnectivityChange('online');
        if (orig) {
          orig.apply(this, arguments);
        }
      }
    }, this.replacements, 'connectivity');
    replace(this._document.body, 'onoffline', function(orig) {
      return function() {
        self.telemeter.captureConnectivityChange('offline');
        if (orig) {
          orig.apply(this, arguments);
        }
      }
    }, this.replacements, 'connectivity');
  }
};

Instrumenter.prototype.addListener = function(section, obj, type, altType, handler, capture) {
  if (obj.addEventListener) {
    obj.addEventListener(type, handler, capture);
    this.eventRemovers[section].push(function() {
      obj.removeEventListener(type, handler, capture);
    });
  } else if (altType) {
    obj.attachEvent(altType, handler);
    this.eventRemovers[section].push(function() {
      obj.detachEvent(altType, handler);
    });
  }
};

Instrumenter.prototype.removeListeners = function(section) {
  var r;
  while (this.eventRemovers[section].length) {
    r = this.eventRemovers[section].shift();
    r();
  }
};

module.exports = Instrumenter;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function getElementType(e) {
  return (e.getAttribute('type') || '').toLowerCase();
}

function isDescribedElement(element, type, subtypes) {
  if (element.tagName.toLowerCase() !== type.toLowerCase()) {
    return false;
  }
  if (!subtypes) {
    return true;
  }
  element = getElementType(element);
  for (var i = 0; i < subtypes.length; i++) {
    if (subtypes[i] === element) {
      return true;
    }
  }
  return false;
}

function getElementFromEvent(evt, doc) {
  if (evt.target) {
    return evt.target;
  }
  if (doc && doc.elementFromPoint) {
    return doc.elementFromPoint(evt.clientX, evt.clientY);
  }
  return undefined;
}

function treeToArray(elem) {
  var MAX_HEIGHT = 5;
  var out = [];
  var nextDescription;
  for (var height = 0; elem && height < MAX_HEIGHT; height++) {
    nextDescription = describeElement(elem);
    if (nextDescription.tagName === 'html') {
      break;
    }
    out.unshift(nextDescription);
    elem = elem.parentNode;
  }
  return out;
}

function elementArrayToString(a) {
  var MAX_LENGTH = 80;
  var separator = ' > ', separatorLength = separator.length;
  var out = [], len = 0, nextStr, totalLength;

  for (var i = a.length - 1; i >= 0; i--) {
    nextStr = descriptionToString(a[i]);
    totalLength = len + (out.length * separatorLength) + nextStr.length;
    if (i < a.length - 1 && totalLength >= MAX_LENGTH + 3) {
      out.unshift('...');
      break;
    }
    out.unshift(nextStr);
    len += nextStr.length;
  }
  return out.join(separator);
}

function descriptionToString(desc) {
  if (!desc || !desc.tagName) {
    return '';
  }
  var out = [desc.tagName];
  if (desc.id) {
    out.push('#' + desc.id);
  }
  if (desc.classes) {
    out.push('.' + desc.classes.join('.'));
  }
  for (var i = 0; i < desc.attributes.length; i++) {
    out.push('[' + desc.attributes[i].key + '="' + desc.attributes[i].value + '"]');
  }

  return out.join('');
}

/**
 * Input: a dom element
 * Output: null if tagName is falsey or input is falsey, else
 *  {
 *    tagName: String,
 *    id: String | undefined,
 *    classes: [String] | undefined,
 *    attributes: [
 *      {
 *        key: OneOf(type, name, title, alt),
 *        value: String
 *      }
 *    ]
 *  }
 */
function describeElement(elem) {
  if (!elem || !elem.tagName) {
    return null;
  }
  var out = {}, className, key, attr, i;
  out.tagName = elem.tagName.toLowerCase();
  if (elem.id) {
    out.id = elem.id;
  }
  className = elem.className;
  if (className && (typeof className === 'string')) {
    out.classes = className.split(/\s+/);
  }
  var attributes = ['type', 'name', 'title', 'alt'];
  out.attributes = [];
  for (i = 0; i < attributes.length; i++) {
    key = attributes[i];
    attr = elem.getAttribute(key);
    if (attr) {
      out.attributes.push({key: key, value: attr});
    }
  }
  return out;
}

module.exports = {
  describeElement: describeElement,
  descriptionToString: descriptionToString,
  elementArrayToString: elementArrayToString,
  treeToArray: treeToArray,
  getElementFromEvent: getElementFromEvent,
  isDescribedElement: isDescribedElement,
  getElementType: getElementType
};


/***/ })
/******/ ]);

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const KiteAPI = __webpack_require__(138);

const KiteConnect = __webpack_require__(165);

const metrics = __webpack_require__(180);

const {
  escapeHTML
} = __webpack_require__(184);

const {
  appendCompletionsFooter,
  parseSnippetCompletion,
  symbolTypeString,
  kindLabel
} = __webpack_require__(189);

const pendingStatusRequestByEditor = {};
const DataLoader = {
  isEditorAuthorized(editor) {
    return KiteAPI.isPathWhitelisted(editor.getPath());
  },

  getSupportedLanguages() {
    return KiteAPI.getSupportedLanguages();
  },

  getPlugins() {
    return KiteAPI.requestJSON({
      path: '/clientapi/plugins'
    });
  },

  getStatus(editor) {
    if (!editor) {
      return Promise.resolve({
        status: 'ready'
      });
    }

    const filepath = editor.getPath();

    if (pendingStatusRequestByEditor[filepath]) {
      return pendingStatusRequestByEditor[filepath];
    }

    return pendingStatusRequestByEditor[filepath] = KiteAPI.getStatus(editor.getPath()).then(res => {
      delete pendingStatusRequestByEditor[filepath];
      return res;
    });
  },

  getCompletions(editor, yesSnippets) {
    const buffer = editor.getBuffer();
    const text = buffer.getText();
    const ranges = editor.getSelectedBufferRanges();

    if (ranges.length !== 1) {
      return Promise.resolve([]);
    }

    const begin = buffer.characterIndexForPosition(ranges[0].start);
    const end = buffer.characterIndexForPosition(ranges[0].end);
    return KiteAPI.getCompletions({
      text,
      editor: 'atom',
      filename: editor.getPath(),
      position: {
        begin,
        end
      },
      offset_encoding: 'utf-16',
      no_snippets: !yesSnippets
    }).then(completions => {
      var parsedCompletions = [];
      completions.forEach(function (c) {
        parsedCompletions.push(parseSnippetCompletion(editor, c, ''));

        if (c.children) {
          c.children.forEach(function (child) {
            parsedCompletions.push(parseSnippetCompletion(editor, child, String.fromCharCode(0x00A0).repeat(2)));
          });
        }
      });
      return parsedCompletions;
    });
  },

  getKSGCompletions(query) {
    return KiteAPI.getKSGCompletions(query);
  },

  getKSGCodeBlocks(query) {
    // we desire 3 results
    return KiteAPI.getKSGCodeBlocks(query, 3);
  },

  getSignaturesAtPosition(editor, position) {
    const buffer = editor.getBuffer();
    const text = buffer.getText();
    const cursorPosition = buffer.characterIndexForPosition(position);
    return KiteAPI.getSignaturesAtPosition(editor.getPath(), text, cursorPosition, 'atom', 'utf-16');
  },

  getHoverDataAtRange(editor, range) {
    throw new Error('deprecated');
  },

  getHoverDataAtPosition(editor, position) {
    const buffer = editor.getBuffer();
    const text = buffer.getText();
    const cursorPosition = buffer.characterIndexForPosition(position);
    return KiteAPI.getHoverDataAtPosition(editor.getPath(), text, cursorPosition, 'atom', 'utf-16');
  },

  getReportDataAtRange(editor, range) {
    throw new Error('deprecated');
  },

  getReportDataAtPosition(editor, position) {
    const buffer = editor.getBuffer();
    const text = buffer.getText();
    const cursorPosition = buffer.characterIndexForPosition(position);
    return KiteAPI.getReportDataAtPosition(editor.getPath(), text, cursorPosition, 'atom', 'utf-16');
  },

  getValueReportDataForId(id) {
    return KiteAPI.getValueReportDataForId(id);
  },

  getSymbolReportDataForId(id) {
    return KiteAPI.getSymbolReportDataForId(id);
  },

  getMembersDataForId(id) {
    return KiteAPI.getMembersDataForId(id);
  },

  getUsagesDataForValueId(id, page, limit) {
    return KiteAPI.getUsagesDataForValueId(id);
  },

  getUsageDataForId(id) {
    return KiteAPI.getUsageDataForId(id);
  },

  getExampleDataForId(id) {
    return KiteAPI.getExampleDataForId(id);
  },

  getUserAccountInfo() {
    return KiteAPI.getUserAccountInfo();
  },

  isUserAuthenticated() {
    return KiteConnect.client.request({
      path: '/clientapi/user',
      method: 'GET'
    }).then(resp => resp.statusCode !== 401);
  }

};
module.exports = DataLoader;

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const _ = __webpack_require__(185);

const {
  last
} = __webpack_require__(5);

const escapeHTML = str => str.replace(/</g, '&lt;').replace(/>/g, '&gt;');

const wrapLine = str => `<div class="line">${str}</div>`;

const wrapPre = str => `<pre class="editor editor-colors">${str}</pre>`;

const splitByLine = str => str.split('\n').reduce((m, l, i) => {
  return m.concat({
    start: last(m) ? last(m).end + 1 : 0,
    end: last(m) ? last(m).end + 1 + l.length : l.length,
    content: l,
    line: i
  });
}, []);

const escapeString = string => {
  return string.replace(/[&"'<> ]/g, match => {
    switch (match) {
      case '&':
        return '&amp;';

      case '"':
        return '&quot;';

      case "'":
        return '&#39;';

      case '<':
        return '&lt;';

      case '>':
        return '&gt;';
      // case ' ': return '&nbsp;';

      default:
        return match;
    }
  });
};

const updateScopeStack = (scopeStack, desiredScopes, html) => {
  let i;
  let excessScopes = scopeStack.length - desiredScopes.length;

  if (excessScopes > 0) {
    while (excessScopes--) {
      html = popScope(scopeStack, html);
    }
  } // pop until common prefix


  for (i = scopeStack.length, asc = scopeStack.length <= 0; asc ? i <= 0 : i >= 0; asc ? i++ : i--) {
    var asc;

    if (_.isEqual(scopeStack.slice(0, i), desiredScopes.slice(0, i))) {
      break;
    }

    html = popScope(scopeStack, html);
  } // push on top of common prefix until scopeStack is desiredScopes


  for (let j = i, end = desiredScopes.length, asc1 = i <= end; asc1 ? j < end : j > end; asc1 ? j++ : j--) {
    html = pushScope(scopeStack, desiredScopes[j], html);
  }

  return html;
};

const scopePrefix = 'syntax--';

const pushScope = (scopeStack, scope, html) => {
  scopeStack.push(scope);

  if (scope) {
    let className = scopePrefix + scope.replace(/\.+/g, ` ${scopePrefix}`);
    return html += `<span class=\"${className}\">`;
  } else {
    return html += '<span>';
  }
};

const popScope = (scopeStack, html) => {
  scopeStack.pop();
  return html += '</span>';
};

const highlights = ({
  fileContents,
  scopeName
}) => {
  const grammar = atom.grammars.grammarForScopeName(scopeName);
  const lineTokens = grammar.tokenizeLines(fileContents);

  if (lineTokens.length > 0) {
    const lastLineTokens = lineTokens[lineTokens.length - 1];

    if (lastLineTokens.length === 1 && lastLineTokens[0].value === '') {
      lineTokens.pop();
    }
  }

  let html = '';

  for (let tokens of Array.from(lineTokens)) {
    let scopeStack = [];

    for (let {
      value,
      scopes
    } of Array.from(tokens)) {
      if (!value) {
        value = ' ';
      }

      html = updateScopeStack(scopeStack, scopes, html);
      html += `<span>${escapeString(value)}</span>`;
    }

    while (scopeStack.length > 0) {
      html = popScope(scopeStack, html);
    }
  }

  return html;
};

const highlightChunk = chunk => highlights({
  fileContents: chunk,
  scopeName: 'source.python'
});

module.exports = {
  escapeHTML,
  highlightChunk,
  highlights,
  splitByLine,
  wrapLine,
  wrapPre
};

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

(function() {
  var isEqual, isPlainObject, macModifierKeyMap, nonMacModifierKeyMap, plus, shiftKeyMap, splitKeyPath, _,
    __slice = [].slice;

  _ = __webpack_require__(186);

  macModifierKeyMap = {
    cmd: '\u2318',
    ctrl: '\u2303',
    alt: '\u2325',
    option: '\u2325',
    shift: '\u21e7',
    enter: '\u23ce',
    left: '\u2190',
    right: '\u2192',
    up: '\u2191',
    down: '\u2193'
  };

  nonMacModifierKeyMap = {
    cmd: 'Cmd',
    ctrl: 'Ctrl',
    alt: 'Alt',
    option: 'Alt',
    shift: 'Shift',
    enter: 'Enter',
    left: 'Left',
    right: 'Right',
    up: 'Up',
    down: 'Down'
  };

  shiftKeyMap = {
    '~': '`',
    '_': '-',
    '+': '=',
    '|': '\\',
    '{': '[',
    '}': ']',
    ':': ';',
    '"': '\'',
    '<': ',',
    '>': '.',
    '?': '/'
  };

  splitKeyPath = function(keyPath) {
    var char, i, keyPathArray, startIndex, _i, _len;
    startIndex = 0;
    keyPathArray = [];
    if (keyPath == null) {
      return keyPathArray;
    }
    for (i = _i = 0, _len = keyPath.length; _i < _len; i = ++_i) {
      char = keyPath[i];
      if (char === '.' && (i === 0 || keyPath[i - 1] !== '\\')) {
        keyPathArray.push(keyPath.substring(startIndex, i));
        startIndex = i + 1;
      }
    }
    keyPathArray.push(keyPath.substr(startIndex, keyPath.length));
    return keyPathArray;
  };

  isPlainObject = function(value) {
    return _.isObject(value) && !_.isArray(value);
  };

  plus = {
    adviseBefore: function(object, methodName, advice) {
      var original;
      original = object[methodName];
      return object[methodName] = function() {
        var args;
        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        if (advice.apply(this, args) !== false) {
          return original.apply(this, args);
        }
      };
    },
    camelize: function(string) {
      if (string) {
        return string.replace(/[_-]+(\w)/g, function(m) {
          return m[1].toUpperCase();
        });
      } else {
        return '';
      }
    },
    capitalize: function(word) {
      if (!word) {
        return '';
      }
      if (word.toLowerCase() === 'github') {
        return 'GitHub';
      } else {
        return word[0].toUpperCase() + word.slice(1);
      }
    },
    compactObject: function(object) {
      var key, newObject, value;
      newObject = {};
      for (key in object) {
        value = object[key];
        if (value != null) {
          newObject[key] = value;
        }
      }
      return newObject;
    },
    dasherize: function(string) {
      if (!string) {
        return '';
      }
      string = string[0].toLowerCase() + string.slice(1);
      return string.replace(/([A-Z])|(_)/g, function(m, letter) {
        if (letter) {
          return "-" + letter.toLowerCase();
        } else {
          return "-";
        }
      });
    },
    deepClone: function(object) {
      if (_.isArray(object)) {
        return object.map(function(value) {
          return plus.deepClone(value);
        });
      } else if (_.isObject(object) && !_.isFunction(object)) {
        return plus.mapObject(object, (function(_this) {
          return function(key, value) {
            return [key, plus.deepClone(value)];
          };
        })(this));
      } else {
        return object;
      }
    },
    deepExtend: function(target) {
      var i, key, object, result, _i, _len, _ref;
      result = target;
      i = 0;
      while (++i < arguments.length) {
        object = arguments[i];
        if (isPlainObject(result) && isPlainObject(object)) {
          _ref = Object.keys(object);
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            key = _ref[_i];
            result[key] = plus.deepExtend(result[key], object[key]);
          }
        } else {
          result = plus.deepClone(object);
        }
      }
      return result;
    },
    deepContains: function(array, target) {
      var object, _i, _len;
      if (array == null) {
        return false;
      }
      for (_i = 0, _len = array.length; _i < _len; _i++) {
        object = array[_i];
        if (_.isEqual(object, target)) {
          return true;
        }
      }
      return false;
    },
    endsWith: function(string, suffix) {
      if (suffix == null) {
        suffix = '';
      }
      if (string) {
        return string.indexOf(suffix, string.length - suffix.length) !== -1;
      } else {
        return false;
      }
    },
    escapeAttribute: function(string) {
      if (string) {
        return string.replace(/"/g, '&quot;').replace(/\n/g, '').replace(/\\/g, '-');
      } else {
        return '';
      }
    },
    escapeRegExp: function(string) {
      if (string) {
        return string.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
      } else {
        return '';
      }
    },
    humanizeEventName: function(eventName, eventDoc) {
      var event, namespace, namespaceDoc, _ref;
      _ref = eventName.split(':'), namespace = _ref[0], event = _ref[1];
      if (event == null) {
        return plus.undasherize(namespace);
      }
      namespaceDoc = plus.undasherize(namespace);
      if (eventDoc == null) {
        eventDoc = plus.undasherize(event);
      }
      return "" + namespaceDoc + ": " + eventDoc;
    },
    humanizeKey: function(key, platform) {
      var modifierKeyMap;
      if (platform == null) {
        platform = process.platform;
      }
      if (!key) {
        return key;
      }
      modifierKeyMap = platform === 'darwin' ? macModifierKeyMap : nonMacModifierKeyMap;
      if (modifierKeyMap[key]) {
        return modifierKeyMap[key];
      } else if (key.length === 1 && (shiftKeyMap[key] != null)) {
        return [modifierKeyMap.shift, shiftKeyMap[key]];
      } else if (key.length === 1 && key === key.toUpperCase() && key.toUpperCase() !== key.toLowerCase()) {
        return [modifierKeyMap.shift, key.toUpperCase()];
      } else if (key.length === 1 || /f[0-9]{1,2}/.test(key)) {
        return key.toUpperCase();
      } else {
        if (platform === 'darwin') {
          return key;
        } else {
          return plus.capitalize(key);
        }
      }
    },
    humanizeKeystroke: function(keystroke, platform) {
      var humanizedKeystrokes, index, key, keys, keystrokes, splitKeystroke, _i, _j, _len, _len1;
      if (platform == null) {
        platform = process.platform;
      }
      if (!keystroke) {
        return keystroke;
      }
      keystrokes = keystroke.split(' ');
      humanizedKeystrokes = [];
      for (_i = 0, _len = keystrokes.length; _i < _len; _i++) {
        keystroke = keystrokes[_i];
        keys = [];
        splitKeystroke = keystroke.split('-');
        for (index = _j = 0, _len1 = splitKeystroke.length; _j < _len1; index = ++_j) {
          key = splitKeystroke[index];
          if (key === '' && splitKeystroke[index - 1] === '') {
            key = '-';
          }
          if (key) {
            keys.push(plus.humanizeKey(key, platform));
          }
        }
        keys = _.uniq(_.flatten(keys));
        if (platform === 'darwin') {
          keys = keys.join('');
        } else {
          keys = keys.join('+');
        }
        humanizedKeystrokes.push(keys);
      }
      return humanizedKeystrokes.join(' ');
    },
    isSubset: function(potentialSubset, potentialSuperset) {
      return _.every(potentialSubset, function(element) {
        return _.include(potentialSuperset, element);
      });
    },
    losslessInvert: function(hash) {
      var inverted, key, value;
      inverted = {};
      for (key in hash) {
        value = hash[key];
        if (inverted[value] == null) {
          inverted[value] = [];
        }
        inverted[value].push(key);
      }
      return inverted;
    },
    mapObject: function(object, iterator) {
      var key, newObject, value, _i, _len, _ref, _ref1;
      newObject = {};
      _ref = Object.keys(object);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        key = _ref[_i];
        _ref1 = iterator(key, object[key]), key = _ref1[0], value = _ref1[1];
        newObject[key] = value;
      }
      return newObject;
    },
    multiplyString: function(string, n) {
      var finalString, i;
      finalString = "";
      i = 0;
      while (i < n) {
        finalString += string;
        i++;
      }
      return finalString;
    },
    pluralize: function(count, singular, plural) {
      if (count == null) {
        count = 0;
      }
      if (plural == null) {
        plural = singular + 's';
      }
      if (count === 1) {
        return "" + count + " " + singular;
      } else {
        return "" + count + " " + plural;
      }
    },
    remove: function(array, element) {
      var index;
      index = array.indexOf(element);
      if (index >= 0) {
        array.splice(index, 1);
      }
      return array;
    },
    setValueForKeyPath: function(object, keyPath, value) {
      var key, keys;
      keys = splitKeyPath(keyPath);
      while (keys.length > 1) {
        key = keys.shift();
        if (object[key] == null) {
          object[key] = {};
        }
        object = object[key];
      }
      if (value != null) {
        return object[keys.shift()] = value;
      } else {
        return delete object[keys.shift()];
      }
    },
    hasKeyPath: function(object, keyPath) {
      var key, keys, _i, _len;
      keys = splitKeyPath(keyPath);
      for (_i = 0, _len = keys.length; _i < _len; _i++) {
        key = keys[_i];
        if (!object.hasOwnProperty(key)) {
          return false;
        }
        object = object[key];
      }
      return true;
    },
    spliceWithArray: function(originalArray, start, length, insertedArray, chunkSize) {
      var chunkStart, _i, _ref, _results;
      if (chunkSize == null) {
        chunkSize = 100000;
      }
      if (insertedArray.length < chunkSize) {
        return originalArray.splice.apply(originalArray, [start, length].concat(__slice.call(insertedArray)));
      } else {
        originalArray.splice(start, length);
        _results = [];
        for (chunkStart = _i = 0, _ref = insertedArray.length; chunkSize > 0 ? _i <= _ref : _i >= _ref; chunkStart = _i += chunkSize) {
          _results.push(originalArray.splice.apply(originalArray, [start + chunkStart, 0].concat(__slice.call(insertedArray.slice(chunkStart, chunkStart + chunkSize)))));
        }
        return _results;
      }
    },
    sum: function(array) {
      var elt, sum, _i, _len;
      sum = 0;
      for (_i = 0, _len = array.length; _i < _len; _i++) {
        elt = array[_i];
        sum += elt;
      }
      return sum;
    },
    uncamelcase: function(string) {
      var result;
      if (!string) {
        return '';
      }
      result = string.replace(/([A-Z])|_+/g, function(match, letter) {
        if (letter == null) {
          letter = '';
        }
        return " " + letter;
      });
      return plus.capitalize(result.trim());
    },
    undasherize: function(string) {
      if (string) {
        return string.split('-').map(plus.capitalize).join(' ');
      } else {
        return '';
      }
    },
    underscore: function(string) {
      if (!string) {
        return '';
      }
      string = string[0].toLowerCase() + string.slice(1);
      return string.replace(/([A-Z])|-+/g, function(match, letter) {
        if (letter == null) {
          letter = '';
        }
        return "_" + (letter.toLowerCase());
      });
    },
    valueForKeyPath: function(object, keyPath) {
      var key, keys, _i, _len;
      keys = splitKeyPath(keyPath);
      for (_i = 0, _len = keys.length; _i < _len; _i++) {
        key = keys[_i];
        object = object[key];
        if (object == null) {
          return;
        }
      }
      return object;
    },
    isEqual: function(a, b, aStack, bStack) {
      if (_.isArray(aStack) && _.isArray(bStack)) {
        return isEqual(a, b, aStack, bStack);
      } else {
        return isEqual(a, b);
      }
    },
    isEqualForProperties: function() {
      var a, b, properties, property, _i, _len;
      a = arguments[0], b = arguments[1], properties = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
      for (_i = 0, _len = properties.length; _i < _len; _i++) {
        property = properties[_i];
        if (!_.isEqual(a[property], b[property])) {
          return false;
        }
      }
      return true;
    }
  };

  isEqual = function(a, b, aStack, bStack) {
    var aCtor, aCtorValid, aElement, aKeyCount, aValue, bCtor, bCtorValid, bKeyCount, bValue, equal, i, key, stackIndex, _i, _len;
    if (aStack == null) {
      aStack = [];
    }
    if (bStack == null) {
      bStack = [];
    }
    if (a === b) {
      return _.isEqual(a, b);
    }
    if (_.isFunction(a) || _.isFunction(b)) {
      return _.isEqual(a, b);
    }
    stackIndex = aStack.length;
    while (stackIndex--) {
      if (aStack[stackIndex] === a) {
        return bStack[stackIndex] === b;
      }
    }
    aStack.push(a);
    bStack.push(b);
    equal = false;
    if (_.isFunction(a != null ? a.isEqual : void 0)) {
      equal = a.isEqual(b, aStack, bStack);
    } else if (_.isFunction(b != null ? b.isEqual : void 0)) {
      equal = b.isEqual(a, bStack, aStack);
    } else if (_.isArray(a) && _.isArray(b) && a.length === b.length) {
      equal = true;
      for (i = _i = 0, _len = a.length; _i < _len; i = ++_i) {
        aElement = a[i];
        if (!isEqual(aElement, b[i], aStack, bStack)) {
          equal = false;
          break;
        }
      }
    } else if (_.isRegExp(a) && _.isRegExp(b)) {
      equal = _.isEqual(a, b);
    } else if (_.isElement(a) && _.isElement(b)) {
      equal = a === b;
    } else if (_.isObject(a) && _.isObject(b)) {
      aCtor = a.constructor;
      bCtor = b.constructor;
      aCtorValid = _.isFunction(aCtor) && aCtor instanceof aCtor;
      bCtorValid = _.isFunction(bCtor) && bCtor instanceof bCtor;
      if (aCtor !== bCtor && !(aCtorValid && bCtorValid)) {
        equal = false;
      } else {
        aKeyCount = 0;
        equal = true;
        for (key in a) {
          aValue = a[key];
          if (!_.has(a, key)) {
            continue;
          }
          aKeyCount++;
          if (!(_.has(b, key) && isEqual(aValue, b[key], aStack, bStack))) {
            equal = false;
            break;
          }
        }
        if (equal) {
          bKeyCount = 0;
          for (key in b) {
            bValue = b[key];
            if (_.has(b, key)) {
              bKeyCount++;
            }
          }
          equal = aKeyCount === bKeyCount;
        }
      }
    } else {
      equal = _.isEqual(a, b);
    }
    aStack.pop();
    bStack.pop();
    return equal;
  };

  module.exports = _.extend({}, _, plus);

}).call(this);


/***/ }),
/* 186 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_default_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(187);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _index_default_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(188);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["VERSION"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "iteratee", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["iteratee"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "restArguments", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["restArguments"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "each", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["each"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["forEach"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "map", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["map"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "collect", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["collect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["reduce"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "foldl", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["foldl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inject", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["inject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reduceRight", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["reduceRight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "foldr", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["foldr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "find", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["find"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "detect", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["detect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["filter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "select", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["select"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reject", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["reject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "every", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["every"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "all", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["all"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "some", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["some"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "any", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["any"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "contains", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["contains"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "includes", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["includes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "include", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["include"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "invoke", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["invoke"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pluck", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["pluck"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "where", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["where"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findWhere", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["findWhere"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["max"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["min"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["shuffle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sample", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["sample"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortBy", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["sortBy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "groupBy", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["groupBy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "indexBy", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["indexBy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "countBy", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["countBy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["toArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "size", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["size"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["partition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "first", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["first"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "head", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["head"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "take", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["take"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "initial", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["initial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "last", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["last"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rest", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["rest"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tail", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["tail"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drop", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["drop"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compact", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["compact"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatten", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["flatten"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "without", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["without"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "uniq", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["uniq"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unique", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["unique"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "union", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["union"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersection", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["intersection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "difference", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["difference"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unzip", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["unzip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["zip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "object", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["object"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findIndex", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["findIndex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findLastIndex", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["findLastIndex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortedIndex", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["sortedIndex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "indexOf", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["indexOf"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lastIndexOf", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["lastIndexOf"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["range"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "chunk", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["chunk"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bind", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["bind"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partial", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["partial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bindAll", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["bindAll"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "memoize", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["memoize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "delay", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["delay"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defer", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["defer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throttle", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["throttle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["debounce"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wrap", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["wrap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "negate", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["negate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compose", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["compose"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "after", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["after"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "before", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["before"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "once", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["once"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "keys", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["keys"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "allKeys", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["allKeys"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "values", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["values"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mapObject", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["mapObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["pairs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["invert"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "functions", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["functions"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "methods", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["methods"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["extend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extendOwn", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["extendOwn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "assign", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["assign"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findKey", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["findKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pick", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["pick"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "omit", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["omit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaults", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["defaults"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "create", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["create"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["clone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tap", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["tap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isMatch", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isMatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEqual", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEmpty", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isEmpty"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isElement", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArguments", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isArguments"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRegExp", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isRegExp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isError", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isError"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSymbol", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isSymbol"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isMap", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isMap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isWeakMap", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isWeakMap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSet", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isWeakSet", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isWeakSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFinite", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isFinite"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNaN", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isNaN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isBoolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNull", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isNull"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isUndefined", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["isUndefined"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "has", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["has"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["identity"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "constant", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["constant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["noop"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "property", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["property"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "propertyOf", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["propertyOf"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matcher", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["matcher"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matches", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["matches"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "times", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["times"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "random", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["random"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "now", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["now"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "escape", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["escape"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unescape", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["unescape"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "result", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["result"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "uniqueId", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["uniqueId"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "templateSettings", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["templateSettings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "template", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["template"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "chain", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["chain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mixin", function() { return _index_js__WEBPACK_IMPORTED_MODULE_1__["mixin"]; });





/***/ }),
/* 187 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(188);



// Add all of the Underscore functions to the wrapper object.
var _ = Object(_index_js__WEBPACK_IMPORTED_MODULE_0__["mixin"])(_index_js__WEBPACK_IMPORTED_MODULE_0__);
// Legacy Node.js API
_._ = _;
// Export the Underscore API.
/* harmony default export */ __webpack_exports__["default"] = (_);


/***/ }),
/* 188 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iteratee", function() { return iteratee; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "restArguments", function() { return restArguments; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "each", function() { return each; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return each; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "collect", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return reduce; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "foldl", function() { return reduce; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inject", function() { return reduce; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reduceRight", function() { return reduceRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "foldr", function() { return reduceRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "find", function() { return find; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detect", function() { return find; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return filter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "select", function() { return filter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reject", function() { return reject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "every", function() { return every; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "all", function() { return every; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "some", function() { return some; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "any", function() { return some; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "contains", function() { return contains; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "includes", function() { return contains; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "include", function() { return contains; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invoke", function() { return invoke; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pluck", function() { return pluck; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "where", function() { return where; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findWhere", function() { return findWhere; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return shuffle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sample", function() { return sample; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortBy", function() { return sortBy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "groupBy", function() { return groupBy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "indexBy", function() { return indexBy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "countBy", function() { return countBy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return toArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "size", function() { return size; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return partition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "first", function() { return first; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "head", function() { return first; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "take", function() { return first; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initial", function() { return initial; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "last", function() { return last; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rest", function() { return rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tail", function() { return rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "drop", function() { return rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compact", function() { return compact; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flatten", function() { return flatten; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "without", function() { return without; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uniq", function() { return uniq; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unique", function() { return uniq; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "union", function() { return union; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intersection", function() { return intersection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "difference", function() { return difference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unzip", function() { return unzip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return zip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "object", function() { return object; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findIndex", function() { return findIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findLastIndex", function() { return findLastIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortedIndex", function() { return sortedIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "indexOf", function() { return indexOf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lastIndexOf", function() { return lastIndexOf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "range", function() { return range; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "chunk", function() { return chunk; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bind", function() { return bind; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "partial", function() { return partial; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bindAll", function() { return bindAll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "memoize", function() { return memoize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "delay", function() { return delay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defer", function() { return defer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throttle", function() { return throttle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return debounce; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrap", function() { return wrap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "negate", function() { return negate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compose", function() { return compose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "after", function() { return after; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "before", function() { return before; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "once", function() { return once; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keys", function() { return keys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "allKeys", function() { return allKeys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "values", function() { return values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapObject", function() { return mapObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return pairs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return invert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "functions", function() { return functions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "methods", function() { return functions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extendOwn", function() { return extendOwn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assign", function() { return extendOwn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findKey", function() { return findKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pick", function() { return pick; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "omit", function() { return omit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaults", function() { return defaults; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tap", function() { return tap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMatch", function() { return isMatch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEqual", function() { return isEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEmpty", function() { return isEmpty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isElement", function() { return isElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return isArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return isObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArguments", function() { return isArguments; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return isFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return isString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return isNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return isDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRegExp", function() { return isRegExp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isError", function() { return isError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSymbol", function() { return isSymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMap", function() { return isMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isWeakMap", function() { return isWeakMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSet", function() { return isSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isWeakSet", function() { return isWeakSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFinite", function() { return isFinite; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNaN", function() { return isNaN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return isBoolean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNull", function() { return isNull; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUndefined", function() { return isUndefined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "has", function() { return has; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "constant", function() { return constant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return noop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "property", function() { return property; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "propertyOf", function() { return propertyOf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matcher", function() { return matcher; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matches", function() { return matcher; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "times", function() { return times; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "now", function() { return now; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "escape", function() { return escape; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unescape", function() { return unescape; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "result", function() { return result; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uniqueId", function() { return uniqueId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "templateSettings", function() { return templateSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "template", function() { return template; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "chain", function() { return chain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixin", function() { return mixin; });
//     Underscore.js 1.10.2
//     https://underscorejs.org
//     (c) 2009-2020 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.

// Baseline setup
// --------------

// Establish the root object, `window` (`self`) in the browser, `global`
// on the server, or `this` in some virtual machines. We use `self`
// instead of `window` for `WebWorker` support.
var root = typeof self == 'object' && self.self === self && self ||
          typeof global == 'object' && global.global === global && global ||
          Function('return this')() ||
          {};

// Save bytes in the minified (but not gzipped) version:
var ArrayProto = Array.prototype, ObjProto = Object.prototype;
var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;

// Create quick reference variables for speed access to core prototypes.
var push = ArrayProto.push,
    slice = ArrayProto.slice,
    toString = ObjProto.toString,
    hasOwnProperty = ObjProto.hasOwnProperty;

// All **ECMAScript 5** native function implementations that we hope to use
// are declared here.
var nativeIsArray = Array.isArray,
    nativeKeys = Object.keys,
    nativeCreate = Object.create;

// Create references to these builtin functions because we override them.
var _isNaN = root.isNaN,
    _isFinite = root.isFinite;

// Naked function reference for surrogate-prototype-swapping.
var Ctor = function(){};

// The Underscore object. All exported functions below are added to it in the
// modules/index-all.js using the mixin function.
function _(obj) {
  if (obj instanceof _) return obj;
  if (!(this instanceof _)) return new _(obj);
  this._wrapped = obj;
}

// Current version.
var VERSION = _.VERSION = '1.10.2';

// Internal function that returns an efficient (for current engines) version
// of the passed-in callback, to be repeatedly applied in other Underscore
// functions.
function optimizeCb(func, context, argCount) {
  if (context === void 0) return func;
  switch (argCount == null ? 3 : argCount) {
    case 1: return function(value) {
      return func.call(context, value);
    };
    // The 2-argument case is omitted because we’re not using it.
    case 3: return function(value, index, collection) {
      return func.call(context, value, index, collection);
    };
    case 4: return function(accumulator, value, index, collection) {
      return func.call(context, accumulator, value, index, collection);
    };
  }
  return function() {
    return func.apply(context, arguments);
  };
}

// An internal function to generate callbacks that can be applied to each
// element in a collection, returning the desired result — either `identity`,
// an arbitrary callback, a property matcher, or a property accessor.
function baseIteratee(value, context, argCount) {
  if (value == null) return identity;
  if (isFunction(value)) return optimizeCb(value, context, argCount);
  if (isObject(value) && !isArray(value)) return matcher(value);
  return property(value);
}

// External wrapper for our callback generator. Users may customize
// `_.iteratee` if they want additional predicate/iteratee shorthand styles.
// This abstraction hides the internal-only argCount argument.
_.iteratee = iteratee;
function iteratee(value, context) {
  return baseIteratee(value, context, Infinity);
}

// The function we actually call internally. It invokes _.iteratee if
// overridden, otherwise baseIteratee.
function cb(value, context, argCount) {
  if (_.iteratee !== iteratee) return _.iteratee(value, context);
  return baseIteratee(value, context, argCount);
}

// Some functions take a variable number of arguments, or a few expected
// arguments at the beginning and then a variable number of values to operate
// on. This helper accumulates all remaining arguments past the function’s
// argument length (or an explicit `startIndex`), into an array that becomes
// the last argument. Similar to ES6’s "rest parameter".
function restArguments(func, startIndex) {
  startIndex = startIndex == null ? func.length - 1 : +startIndex;
  return function() {
    var length = Math.max(arguments.length - startIndex, 0),
        rest = Array(length),
        index = 0;
    for (; index < length; index++) {
      rest[index] = arguments[index + startIndex];
    }
    switch (startIndex) {
      case 0: return func.call(this, rest);
      case 1: return func.call(this, arguments[0], rest);
      case 2: return func.call(this, arguments[0], arguments[1], rest);
    }
    var args = Array(startIndex + 1);
    for (index = 0; index < startIndex; index++) {
      args[index] = arguments[index];
    }
    args[startIndex] = rest;
    return func.apply(this, args);
  };
}

// An internal function for creating a new object that inherits from another.
function baseCreate(prototype) {
  if (!isObject(prototype)) return {};
  if (nativeCreate) return nativeCreate(prototype);
  Ctor.prototype = prototype;
  var result = new Ctor;
  Ctor.prototype = null;
  return result;
}

function shallowProperty(key) {
  return function(obj) {
    return obj == null ? void 0 : obj[key];
  };
}

function _has(obj, path) {
  return obj != null && hasOwnProperty.call(obj, path);
}

function deepGet(obj, path) {
  var length = path.length;
  for (var i = 0; i < length; i++) {
    if (obj == null) return void 0;
    obj = obj[path[i]];
  }
  return length ? obj : void 0;
}

// Helper for collection methods to determine whether a collection
// should be iterated as an array or as an object.
// Related: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
// Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094
var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;
var getLength = shallowProperty('length');
function isArrayLike(collection) {
  var length = getLength(collection);
  return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;
}

// Collection Functions
// --------------------

// The cornerstone, an `each` implementation, aka `forEach`.
// Handles raw objects in addition to array-likes. Treats all
// sparse array-likes as if they were dense.
function each(obj, iteratee, context) {
  iteratee = optimizeCb(iteratee, context);
  var i, length;
  if (isArrayLike(obj)) {
    for (i = 0, length = obj.length; i < length; i++) {
      iteratee(obj[i], i, obj);
    }
  } else {
    var _keys = keys(obj);
    for (i = 0, length = _keys.length; i < length; i++) {
      iteratee(obj[_keys[i]], _keys[i], obj);
    }
  }
  return obj;
}


// Return the results of applying the iteratee to each element.
function map(obj, iteratee, context) {
  iteratee = cb(iteratee, context);
  var _keys = !isArrayLike(obj) && keys(obj),
      length = (_keys || obj).length,
      results = Array(length);
  for (var index = 0; index < length; index++) {
    var currentKey = _keys ? _keys[index] : index;
    results[index] = iteratee(obj[currentKey], currentKey, obj);
  }
  return results;
}


// Create a reducing function iterating left or right.
function createReduce(dir) {
  // Wrap code that reassigns argument variables in a separate function than
  // the one that accesses `arguments.length` to avoid a perf hit. (#1991)
  var reducer = function(obj, iteratee, memo, initial) {
    var _keys = !isArrayLike(obj) && keys(obj),
        length = (_keys || obj).length,
        index = dir > 0 ? 0 : length - 1;
    if (!initial) {
      memo = obj[_keys ? _keys[index] : index];
      index += dir;
    }
    for (; index >= 0 && index < length; index += dir) {
      var currentKey = _keys ? _keys[index] : index;
      memo = iteratee(memo, obj[currentKey], currentKey, obj);
    }
    return memo;
  };

  return function(obj, iteratee, memo, context) {
    var initial = arguments.length >= 3;
    return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);
  };
}

// **Reduce** builds up a single result from a list of values, aka `inject`,
// or `foldl`.
var reduce = createReduce(1);


// The right-associative version of reduce, also known as `foldr`.
var reduceRight = createReduce(-1);


// Return the first value which passes a truth test.
function find(obj, predicate, context) {
  var keyFinder = isArrayLike(obj) ? findIndex : findKey;
  var key = keyFinder(obj, predicate, context);
  if (key !== void 0 && key !== -1) return obj[key];
}


// Return all the elements that pass a truth test.
function filter(obj, predicate, context) {
  var results = [];
  predicate = cb(predicate, context);
  each(obj, function(value, index, list) {
    if (predicate(value, index, list)) results.push(value);
  });
  return results;
}


// Return all the elements for which a truth test fails.
function reject(obj, predicate, context) {
  return filter(obj, negate(cb(predicate)), context);
}

// Determine whether all of the elements match a truth test.
function every(obj, predicate, context) {
  predicate = cb(predicate, context);
  var _keys = !isArrayLike(obj) && keys(obj),
      length = (_keys || obj).length;
  for (var index = 0; index < length; index++) {
    var currentKey = _keys ? _keys[index] : index;
    if (!predicate(obj[currentKey], currentKey, obj)) return false;
  }
  return true;
}


// Determine if at least one element in the object matches a truth test.
function some(obj, predicate, context) {
  predicate = cb(predicate, context);
  var _keys = !isArrayLike(obj) && keys(obj),
      length = (_keys || obj).length;
  for (var index = 0; index < length; index++) {
    var currentKey = _keys ? _keys[index] : index;
    if (predicate(obj[currentKey], currentKey, obj)) return true;
  }
  return false;
}


// Determine if the array or object contains a given item (using `===`).
function contains(obj, item, fromIndex, guard) {
  if (!isArrayLike(obj)) obj = values(obj);
  if (typeof fromIndex != 'number' || guard) fromIndex = 0;
  return indexOf(obj, item, fromIndex) >= 0;
}


// Invoke a method (with arguments) on every item in a collection.
var invoke = restArguments(function(obj, path, args) {
  var contextPath, func;
  if (isFunction(path)) {
    func = path;
  } else if (isArray(path)) {
    contextPath = path.slice(0, -1);
    path = path[path.length - 1];
  }
  return map(obj, function(context) {
    var method = func;
    if (!method) {
      if (contextPath && contextPath.length) {
        context = deepGet(context, contextPath);
      }
      if (context == null) return void 0;
      method = context[path];
    }
    return method == null ? method : method.apply(context, args);
  });
});

// Convenience version of a common use case of `map`: fetching a property.
function pluck(obj, key) {
  return map(obj, property(key));
}

// Convenience version of a common use case of `filter`: selecting only objects
// containing specific `key:value` pairs.
function where(obj, attrs) {
  return filter(obj, matcher(attrs));
}

// Convenience version of a common use case of `find`: getting the first object
// containing specific `key:value` pairs.
function findWhere(obj, attrs) {
  return find(obj, matcher(attrs));
}

// Return the maximum element (or element-based computation).
function max(obj, iteratee, context) {
  var result = -Infinity, lastComputed = -Infinity,
      value, computed;
  if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {
    obj = isArrayLike(obj) ? obj : values(obj);
    for (var i = 0, length = obj.length; i < length; i++) {
      value = obj[i];
      if (value != null && value > result) {
        result = value;
      }
    }
  } else {
    iteratee = cb(iteratee, context);
    each(obj, function(v, index, list) {
      computed = iteratee(v, index, list);
      if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
        result = v;
        lastComputed = computed;
      }
    });
  }
  return result;
}

// Return the minimum element (or element-based computation).
function min(obj, iteratee, context) {
  var result = Infinity, lastComputed = Infinity,
      value, computed;
  if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {
    obj = isArrayLike(obj) ? obj : values(obj);
    for (var i = 0, length = obj.length; i < length; i++) {
      value = obj[i];
      if (value != null && value < result) {
        result = value;
      }
    }
  } else {
    iteratee = cb(iteratee, context);
    each(obj, function(v, index, list) {
      computed = iteratee(v, index, list);
      if (computed < lastComputed || computed === Infinity && result === Infinity) {
        result = v;
        lastComputed = computed;
      }
    });
  }
  return result;
}

// Shuffle a collection.
function shuffle(obj) {
  return sample(obj, Infinity);
}

// Sample **n** random values from a collection using the modern version of the
// [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
// If **n** is not specified, returns a single random element.
// The internal `guard` argument allows it to work with `map`.
function sample(obj, n, guard) {
  if (n == null || guard) {
    if (!isArrayLike(obj)) obj = values(obj);
    return obj[random(obj.length - 1)];
  }
  var sample = isArrayLike(obj) ? clone(obj) : values(obj);
  var length = getLength(sample);
  n = Math.max(Math.min(n, length), 0);
  var last = length - 1;
  for (var index = 0; index < n; index++) {
    var rand = random(index, last);
    var temp = sample[index];
    sample[index] = sample[rand];
    sample[rand] = temp;
  }
  return sample.slice(0, n);
}

// Sort the object's values by a criterion produced by an iteratee.
function sortBy(obj, iteratee, context) {
  var index = 0;
  iteratee = cb(iteratee, context);
  return pluck(map(obj, function(value, key, list) {
    return {
      value: value,
      index: index++,
      criteria: iteratee(value, key, list)
    };
  }).sort(function(left, right) {
    var a = left.criteria;
    var b = right.criteria;
    if (a !== b) {
      if (a > b || a === void 0) return 1;
      if (a < b || b === void 0) return -1;
    }
    return left.index - right.index;
  }), 'value');
}

// An internal function used for aggregate "group by" operations.
function group(behavior, partition) {
  return function(obj, iteratee, context) {
    var result = partition ? [[], []] : {};
    iteratee = cb(iteratee, context);
    each(obj, function(value, index) {
      var key = iteratee(value, index, obj);
      behavior(result, value, key);
    });
    return result;
  };
}

// Groups the object's values by a criterion. Pass either a string attribute
// to group by, or a function that returns the criterion.
var groupBy = group(function(result, value, key) {
  if (_has(result, key)) result[key].push(value); else result[key] = [value];
});

// Indexes the object's values by a criterion, similar to `groupBy`, but for
// when you know that your index values will be unique.
var indexBy = group(function(result, value, key) {
  result[key] = value;
});

// Counts instances of an object that group by a certain criterion. Pass
// either a string attribute to count by, or a function that returns the
// criterion.
var countBy = group(function(result, value, key) {
  if (_has(result, key)) result[key]++; else result[key] = 1;
});

var reStrSymbol = /[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;
// Safely create a real, live array from anything iterable.
function toArray(obj) {
  if (!obj) return [];
  if (isArray(obj)) return slice.call(obj);
  if (isString(obj)) {
    // Keep surrogate pair characters together
    return obj.match(reStrSymbol);
  }
  if (isArrayLike(obj)) return map(obj, identity);
  return values(obj);
}

// Return the number of elements in an object.
function size(obj) {
  if (obj == null) return 0;
  return isArrayLike(obj) ? obj.length : keys(obj).length;
}

// Split a collection into two arrays: one whose elements all satisfy the given
// predicate, and one whose elements all do not satisfy the predicate.
var partition = group(function(result, value, pass) {
  result[pass ? 0 : 1].push(value);
}, true);

// Array Functions
// ---------------

// Get the first element of an array. Passing **n** will return the first N
// values in the array. The **guard** check allows it to work with `map`.
function first(array, n, guard) {
  if (array == null || array.length < 1) return n == null ? void 0 : [];
  if (n == null || guard) return array[0];
  return initial(array, array.length - n);
}


// Returns everything but the last entry of the array. Especially useful on
// the arguments object. Passing **n** will return all the values in
// the array, excluding the last N.
function initial(array, n, guard) {
  return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
}

// Get the last element of an array. Passing **n** will return the last N
// values in the array.
function last(array, n, guard) {
  if (array == null || array.length < 1) return n == null ? void 0 : [];
  if (n == null || guard) return array[array.length - 1];
  return rest(array, Math.max(0, array.length - n));
}

// Returns everything but the first entry of the array. Especially useful on
// the arguments object. Passing an **n** will return the rest N values in the
// array.
function rest(array, n, guard) {
  return slice.call(array, n == null || guard ? 1 : n);
}


// Trim out all falsy values from an array.
function compact(array) {
  return filter(array, Boolean);
}

// Internal implementation of a recursive `flatten` function.
function _flatten(input, shallow, strict, output) {
  output = output || [];
  var idx = output.length;
  for (var i = 0, length = getLength(input); i < length; i++) {
    var value = input[i];
    if (isArrayLike(value) && (isArray(value) || isArguments(value))) {
      // Flatten current level of array or arguments object.
      if (shallow) {
        var j = 0, len = value.length;
        while (j < len) output[idx++] = value[j++];
      } else {
        _flatten(value, shallow, strict, output);
        idx = output.length;
      }
    } else if (!strict) {
      output[idx++] = value;
    }
  }
  return output;
}

// Flatten out an array, either recursively (by default), or just one level.
function flatten(array, shallow) {
  return _flatten(array, shallow, false);
}

// Return a version of the array that does not contain the specified value(s).
var without = restArguments(function(array, otherArrays) {
  return difference(array, otherArrays);
});

// Produce a duplicate-free version of the array. If the array has already
// been sorted, you have the option of using a faster algorithm.
// The faster algorithm will not work with an iteratee if the iteratee
// is not a one-to-one function, so providing an iteratee will disable
// the faster algorithm.
function uniq(array, isSorted, iteratee, context) {
  if (!isBoolean(isSorted)) {
    context = iteratee;
    iteratee = isSorted;
    isSorted = false;
  }
  if (iteratee != null) iteratee = cb(iteratee, context);
  var result = [];
  var seen = [];
  for (var i = 0, length = getLength(array); i < length; i++) {
    var value = array[i],
        computed = iteratee ? iteratee(value, i, array) : value;
    if (isSorted && !iteratee) {
      if (!i || seen !== computed) result.push(value);
      seen = computed;
    } else if (iteratee) {
      if (!contains(seen, computed)) {
        seen.push(computed);
        result.push(value);
      }
    } else if (!contains(result, value)) {
      result.push(value);
    }
  }
  return result;
}


// Produce an array that contains the union: each distinct element from all of
// the passed-in arrays.
var union = restArguments(function(arrays) {
  return uniq(_flatten(arrays, true, true));
});

// Produce an array that contains every item shared between all the
// passed-in arrays.
function intersection(array) {
  var result = [];
  var argsLength = arguments.length;
  for (var i = 0, length = getLength(array); i < length; i++) {
    var item = array[i];
    if (contains(result, item)) continue;
    var j;
    for (j = 1; j < argsLength; j++) {
      if (!contains(arguments[j], item)) break;
    }
    if (j === argsLength) result.push(item);
  }
  return result;
}

// Take the difference between one array and a number of other arrays.
// Only the elements present in just the first array will remain.
var difference = restArguments(function(array, rest) {
  rest = _flatten(rest, true, true);
  return filter(array, function(value){
    return !contains(rest, value);
  });
});

// Complement of zip. Unzip accepts an array of arrays and groups
// each array's elements on shared indices.
function unzip(array) {
  var length = array && max(array, getLength).length || 0;
  var result = Array(length);

  for (var index = 0; index < length; index++) {
    result[index] = pluck(array, index);
  }
  return result;
}

// Zip together multiple lists into a single array -- elements that share
// an index go together.
var zip = restArguments(unzip);

// Converts lists into objects. Pass either a single array of `[key, value]`
// pairs, or two parallel arrays of the same length -- one of keys, and one of
// the corresponding values. Passing by pairs is the reverse of pairs.
function object(list, values) {
  var result = {};
  for (var i = 0, length = getLength(list); i < length; i++) {
    if (values) {
      result[list[i]] = values[i];
    } else {
      result[list[i][0]] = list[i][1];
    }
  }
  return result;
}

// Generator function to create the findIndex and findLastIndex functions.
function createPredicateIndexFinder(dir) {
  return function(array, predicate, context) {
    predicate = cb(predicate, context);
    var length = getLength(array);
    var index = dir > 0 ? 0 : length - 1;
    for (; index >= 0 && index < length; index += dir) {
      if (predicate(array[index], index, array)) return index;
    }
    return -1;
  };
}

// Returns the first index on an array-like that passes a predicate test.
var findIndex = createPredicateIndexFinder(1);
var findLastIndex = createPredicateIndexFinder(-1);

// Use a comparator function to figure out the smallest index at which
// an object should be inserted so as to maintain order. Uses binary search.
function sortedIndex(array, obj, iteratee, context) {
  iteratee = cb(iteratee, context, 1);
  var value = iteratee(obj);
  var low = 0, high = getLength(array);
  while (low < high) {
    var mid = Math.floor((low + high) / 2);
    if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;
  }
  return low;
}

// Generator function to create the indexOf and lastIndexOf functions.
function createIndexFinder(dir, predicateFind, sortedIndex) {
  return function(array, item, idx) {
    var i = 0, length = getLength(array);
    if (typeof idx == 'number') {
      if (dir > 0) {
        i = idx >= 0 ? idx : Math.max(idx + length, i);
      } else {
        length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;
      }
    } else if (sortedIndex && idx && length) {
      idx = sortedIndex(array, item);
      return array[idx] === item ? idx : -1;
    }
    if (item !== item) {
      idx = predicateFind(slice.call(array, i, length), isNaN);
      return idx >= 0 ? idx + i : -1;
    }
    for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {
      if (array[idx] === item) return idx;
    }
    return -1;
  };
}

// Return the position of the first occurrence of an item in an array,
// or -1 if the item is not included in the array.
// If the array is large and already in sort order, pass `true`
// for **isSorted** to use binary search.
var indexOf = createIndexFinder(1, findIndex, sortedIndex);
var lastIndexOf = createIndexFinder(-1, findLastIndex);

// Generate an integer Array containing an arithmetic progression. A port of
// the native Python `range()` function. See
// [the Python documentation](https://docs.python.org/library/functions.html#range).
function range(start, stop, step) {
  if (stop == null) {
    stop = start || 0;
    start = 0;
  }
  if (!step) {
    step = stop < start ? -1 : 1;
  }

  var length = Math.max(Math.ceil((stop - start) / step), 0);
  var range = Array(length);

  for (var idx = 0; idx < length; idx++, start += step) {
    range[idx] = start;
  }

  return range;
}

// Chunk a single array into multiple arrays, each containing `count` or fewer
// items.
function chunk(array, count) {
  if (count == null || count < 1) return [];
  var result = [];
  var i = 0, length = array.length;
  while (i < length) {
    result.push(slice.call(array, i, i += count));
  }
  return result;
}

// Function (ahem) Functions
// ------------------

// Determines whether to execute a function as a constructor
// or a normal function with the provided arguments.
function executeBound(sourceFunc, boundFunc, context, callingContext, args) {
  if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);
  var self = baseCreate(sourceFunc.prototype);
  var result = sourceFunc.apply(self, args);
  if (isObject(result)) return result;
  return self;
}

// Create a function bound to a given object (assigning `this`, and arguments,
// optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
// available.
var bind = restArguments(function(func, context, args) {
  if (!isFunction(func)) throw new TypeError('Bind must be called on a function');
  var bound = restArguments(function(callArgs) {
    return executeBound(func, bound, context, this, args.concat(callArgs));
  });
  return bound;
});

// Partially apply a function by creating a version that has had some of its
// arguments pre-filled, without changing its dynamic `this` context. _ acts
// as a placeholder by default, allowing any combination of arguments to be
// pre-filled. Set `partial.placeholder` for a custom placeholder argument.
var partial = restArguments(function(func, boundArgs) {
  var placeholder = partial.placeholder;
  var bound = function() {
    var position = 0, length = boundArgs.length;
    var args = Array(length);
    for (var i = 0; i < length; i++) {
      args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];
    }
    while (position < arguments.length) args.push(arguments[position++]);
    return executeBound(func, bound, this, this, args);
  };
  return bound;
});

partial.placeholder = _;

// Bind a number of an object's methods to that object. Remaining arguments
// are the method names to be bound. Useful for ensuring that all callbacks
// defined on an object belong to it.
var bindAll = restArguments(function(obj, _keys) {
  _keys = _flatten(_keys, false, false);
  var index = _keys.length;
  if (index < 1) throw new Error('bindAll must be passed function names');
  while (index--) {
    var key = _keys[index];
    obj[key] = bind(obj[key], obj);
  }
});

// Memoize an expensive function by storing its results.
function memoize(func, hasher) {
  var memoize = function(key) {
    var cache = memoize.cache;
    var address = '' + (hasher ? hasher.apply(this, arguments) : key);
    if (!_has(cache, address)) cache[address] = func.apply(this, arguments);
    return cache[address];
  };
  memoize.cache = {};
  return memoize;
}

// Delays a function for the given number of milliseconds, and then calls
// it with the arguments supplied.
var delay = restArguments(function(func, wait, args) {
  return setTimeout(function() {
    return func.apply(null, args);
  }, wait);
});

// Defers a function, scheduling it to run after the current call stack has
// cleared.
var defer = partial(delay, _, 1);

// Returns a function, that, when invoked, will only be triggered at most once
// during a given window of time. Normally, the throttled function will run
// as much as it can, without ever going more than once per `wait` duration;
// but if you'd like to disable the execution on the leading edge, pass
// `{leading: false}`. To disable execution on the trailing edge, ditto.
function throttle(func, wait, options) {
  var timeout, context, args, result;
  var previous = 0;
  if (!options) options = {};

  var later = function() {
    previous = options.leading === false ? 0 : now();
    timeout = null;
    result = func.apply(context, args);
    if (!timeout) context = args = null;
  };

  var throttled = function() {
    var _now = now();
    if (!previous && options.leading === false) previous = _now;
    var remaining = wait - (_now - previous);
    context = this;
    args = arguments;
    if (remaining <= 0 || remaining > wait) {
      if (timeout) {
        clearTimeout(timeout);
        timeout = null;
      }
      previous = _now;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    } else if (!timeout && options.trailing !== false) {
      timeout = setTimeout(later, remaining);
    }
    return result;
  };

  throttled.cancel = function() {
    clearTimeout(timeout);
    previous = 0;
    timeout = context = args = null;
  };

  return throttled;
}

// Returns a function, that, as long as it continues to be invoked, will not
// be triggered. The function will be called after it stops being called for
// N milliseconds. If `immediate` is passed, trigger the function on the
// leading edge, instead of the trailing.
function debounce(func, wait, immediate) {
  var timeout, result;

  var later = function(context, args) {
    timeout = null;
    if (args) result = func.apply(context, args);
  };

  var debounced = restArguments(function(args) {
    if (timeout) clearTimeout(timeout);
    if (immediate) {
      var callNow = !timeout;
      timeout = setTimeout(later, wait);
      if (callNow) result = func.apply(this, args);
    } else {
      timeout = delay(later, wait, this, args);
    }

    return result;
  });

  debounced.cancel = function() {
    clearTimeout(timeout);
    timeout = null;
  };

  return debounced;
}

// Returns the first function passed as an argument to the second,
// allowing you to adjust arguments, run code before and after, and
// conditionally execute the original function.
function wrap(func, wrapper) {
  return partial(wrapper, func);
}

// Returns a negated version of the passed-in predicate.
function negate(predicate) {
  return function() {
    return !predicate.apply(this, arguments);
  };
}

// Returns a function that is the composition of a list of functions, each
// consuming the return value of the function that follows.
function compose() {
  var args = arguments;
  var start = args.length - 1;
  return function() {
    var i = start;
    var result = args[start].apply(this, arguments);
    while (i--) result = args[i].call(this, result);
    return result;
  };
}

// Returns a function that will only be executed on and after the Nth call.
function after(times, func) {
  return function() {
    if (--times < 1) {
      return func.apply(this, arguments);
    }
  };
}

// Returns a function that will only be executed up to (but not including) the Nth call.
function before(times, func) {
  var memo;
  return function() {
    if (--times > 0) {
      memo = func.apply(this, arguments);
    }
    if (times <= 1) func = null;
    return memo;
  };
}

// Returns a function that will be executed at most one time, no matter how
// often you call it. Useful for lazy initialization.
var once = partial(before, 2);

// Object Functions
// ----------------

// Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.
var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');
var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',
  'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

function collectNonEnumProps(obj, _keys) {
  var nonEnumIdx = nonEnumerableProps.length;
  var constructor = obj.constructor;
  var proto = isFunction(constructor) && constructor.prototype || ObjProto;

  // Constructor is a special case.
  var prop = 'constructor';
  if (_has(obj, prop) && !contains(_keys, prop)) _keys.push(prop);

  while (nonEnumIdx--) {
    prop = nonEnumerableProps[nonEnumIdx];
    if (prop in obj && obj[prop] !== proto[prop] && !contains(_keys, prop)) {
      _keys.push(prop);
    }
  }
}

// Retrieve the names of an object's own properties.
// Delegates to **ECMAScript 5**'s native `Object.keys`.
function keys(obj) {
  if (!isObject(obj)) return [];
  if (nativeKeys) return nativeKeys(obj);
  var _keys = [];
  for (var key in obj) if (_has(obj, key)) _keys.push(key);
  // Ahem, IE < 9.
  if (hasEnumBug) collectNonEnumProps(obj, _keys);
  return _keys;
}

// Retrieve all the property names of an object.
function allKeys(obj) {
  if (!isObject(obj)) return [];
  var _keys = [];
  for (var key in obj) _keys.push(key);
  // Ahem, IE < 9.
  if (hasEnumBug) collectNonEnumProps(obj, _keys);
  return _keys;
}

// Retrieve the values of an object's properties.
function values(obj) {
  var _keys = keys(obj);
  var length = _keys.length;
  var values = Array(length);
  for (var i = 0; i < length; i++) {
    values[i] = obj[_keys[i]];
  }
  return values;
}

// Returns the results of applying the iteratee to each element of the object.
// In contrast to map it returns an object.
function mapObject(obj, iteratee, context) {
  iteratee = cb(iteratee, context);
  var _keys = keys(obj),
      length = _keys.length,
      results = {};
  for (var index = 0; index < length; index++) {
    var currentKey = _keys[index];
    results[currentKey] = iteratee(obj[currentKey], currentKey, obj);
  }
  return results;
}

// Convert an object into a list of `[key, value]` pairs.
// The opposite of object.
function pairs(obj) {
  var _keys = keys(obj);
  var length = _keys.length;
  var pairs = Array(length);
  for (var i = 0; i < length; i++) {
    pairs[i] = [_keys[i], obj[_keys[i]]];
  }
  return pairs;
}

// Invert the keys and values of an object. The values must be serializable.
function invert(obj) {
  var result = {};
  var _keys = keys(obj);
  for (var i = 0, length = _keys.length; i < length; i++) {
    result[obj[_keys[i]]] = _keys[i];
  }
  return result;
}

// Return a sorted list of the function names available on the object.
function functions(obj) {
  var names = [];
  for (var key in obj) {
    if (isFunction(obj[key])) names.push(key);
  }
  return names.sort();
}


// An internal function for creating assigner functions.
function createAssigner(keysFunc, defaults) {
  return function(obj) {
    var length = arguments.length;
    if (defaults) obj = Object(obj);
    if (length < 2 || obj == null) return obj;
    for (var index = 1; index < length; index++) {
      var source = arguments[index],
          _keys = keysFunc(source),
          l = _keys.length;
      for (var i = 0; i < l; i++) {
        var key = _keys[i];
        if (!defaults || obj[key] === void 0) obj[key] = source[key];
      }
    }
    return obj;
  };
}

// Extend a given object with all the properties in passed-in object(s).
var extend = createAssigner(allKeys);

// Assigns a given object with all the own properties in the passed-in object(s).
// (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)
var extendOwn = createAssigner(keys);


// Returns the first key on an object that passes a predicate test.
function findKey(obj, predicate, context) {
  predicate = cb(predicate, context);
  var _keys = keys(obj), key;
  for (var i = 0, length = _keys.length; i < length; i++) {
    key = _keys[i];
    if (predicate(obj[key], key, obj)) return key;
  }
}

// Internal pick helper function to determine if `obj` has key `key`.
function keyInObj(value, key, obj) {
  return key in obj;
}

// Return a copy of the object only containing the whitelisted properties.
var pick = restArguments(function(obj, _keys) {
  var result = {}, iteratee = _keys[0];
  if (obj == null) return result;
  if (isFunction(iteratee)) {
    if (_keys.length > 1) iteratee = optimizeCb(iteratee, _keys[1]);
    _keys = allKeys(obj);
  } else {
    iteratee = keyInObj;
    _keys = _flatten(_keys, false, false);
    obj = Object(obj);
  }
  for (var i = 0, length = _keys.length; i < length; i++) {
    var key = _keys[i];
    var value = obj[key];
    if (iteratee(value, key, obj)) result[key] = value;
  }
  return result;
});

// Return a copy of the object without the blacklisted properties.
var omit = restArguments(function(obj, _keys) {
  var iteratee = _keys[0], context;
  if (isFunction(iteratee)) {
    iteratee = negate(iteratee);
    if (_keys.length > 1) context = _keys[1];
  } else {
    _keys = map(_flatten(_keys, false, false), String);
    iteratee = function(value, key) {
      return !contains(_keys, key);
    };
  }
  return pick(obj, iteratee, context);
});

// Fill in a given object with default properties.
var defaults = createAssigner(allKeys, true);

// Creates an object that inherits from the given prototype object.
// If additional properties are provided then they will be added to the
// created object.
function create(prototype, props) {
  var result = baseCreate(prototype);
  if (props) extendOwn(result, props);
  return result;
}

// Create a (shallow-cloned) duplicate of an object.
function clone(obj) {
  if (!isObject(obj)) return obj;
  return isArray(obj) ? obj.slice() : extend({}, obj);
}

// Invokes interceptor with the obj, and then returns obj.
// The primary purpose of this method is to "tap into" a method chain, in
// order to perform operations on intermediate results within the chain.
function tap(obj, interceptor) {
  interceptor(obj);
  return obj;
}

// Returns whether an object has a given set of `key:value` pairs.
function isMatch(object, attrs) {
  var _keys = keys(attrs), length = _keys.length;
  if (object == null) return !length;
  var obj = Object(object);
  for (var i = 0; i < length; i++) {
    var key = _keys[i];
    if (attrs[key] !== obj[key] || !(key in obj)) return false;
  }
  return true;
}


// Internal recursive comparison function for `isEqual`.
function eq(a, b, aStack, bStack) {
  // Identical objects are equal. `0 === -0`, but they aren't identical.
  // See the [Harmony `egal` proposal](https://wiki.ecmascript.org/doku.php?id=harmony:egal).
  if (a === b) return a !== 0 || 1 / a === 1 / b;
  // `null` or `undefined` only equal to itself (strict comparison).
  if (a == null || b == null) return false;
  // `NaN`s are equivalent, but non-reflexive.
  if (a !== a) return b !== b;
  // Exhaust primitive checks
  var type = typeof a;
  if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;
  return deepEq(a, b, aStack, bStack);
}

// Internal recursive comparison function for `isEqual`.
function deepEq(a, b, aStack, bStack) {
  // Unwrap any wrapped objects.
  if (a instanceof _) a = a._wrapped;
  if (b instanceof _) b = b._wrapped;
  // Compare `[[Class]]` names.
  var className = toString.call(a);
  if (className !== toString.call(b)) return false;
  switch (className) {
    // Strings, numbers, regular expressions, dates, and booleans are compared by value.
    case '[object RegExp]':
    // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
    case '[object String]':
      // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
      // equivalent to `new String("5")`.
      return '' + a === '' + b;
    case '[object Number]':
      // `NaN`s are equivalent, but non-reflexive.
      // Object(NaN) is equivalent to NaN.
      if (+a !== +a) return +b !== +b;
      // An `egal` comparison is performed for other numeric values.
      return +a === 0 ? 1 / +a === 1 / b : +a === +b;
    case '[object Date]':
    case '[object Boolean]':
      // Coerce dates and booleans to numeric primitive values. Dates are compared by their
      // millisecond representations. Note that invalid dates with millisecond representations
      // of `NaN` are not equivalent.
      return +a === +b;
    case '[object Symbol]':
      return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);
  }

  var areArrays = className === '[object Array]';
  if (!areArrays) {
    if (typeof a != 'object' || typeof b != 'object') return false;

    // Objects with different constructors are not equivalent, but `Object`s or `Array`s
    // from different frames are.
    var aCtor = a.constructor, bCtor = b.constructor;
    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&
                             isFunction(bCtor) && bCtor instanceof bCtor)
                        && ('constructor' in a && 'constructor' in b)) {
      return false;
    }
  }
  // Assume equality for cyclic structures. The algorithm for detecting cyclic
  // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.

  // Initializing stack of traversed objects.
  // It's done here since we only need them for objects and arrays comparison.
  aStack = aStack || [];
  bStack = bStack || [];
  var length = aStack.length;
  while (length--) {
    // Linear search. Performance is inversely proportional to the number of
    // unique nested structures.
    if (aStack[length] === a) return bStack[length] === b;
  }

  // Add the first object to the stack of traversed objects.
  aStack.push(a);
  bStack.push(b);

  // Recursively compare objects and arrays.
  if (areArrays) {
    // Compare array lengths to determine if a deep comparison is necessary.
    length = a.length;
    if (length !== b.length) return false;
    // Deep compare the contents, ignoring non-numeric properties.
    while (length--) {
      if (!eq(a[length], b[length], aStack, bStack)) return false;
    }
  } else {
    // Deep compare objects.
    var _keys = keys(a), key;
    length = _keys.length;
    // Ensure that both objects contain the same number of properties before comparing deep equality.
    if (keys(b).length !== length) return false;
    while (length--) {
      // Deep compare each member
      key = _keys[length];
      if (!(_has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;
    }
  }
  // Remove the first object from the stack of traversed objects.
  aStack.pop();
  bStack.pop();
  return true;
}

// Perform a deep comparison to check if two objects are equal.
function isEqual(a, b) {
  return eq(a, b);
}

// Is a given array, string, or object empty?
// An "empty" object has no enumerable own-properties.
function isEmpty(obj) {
  if (obj == null) return true;
  if (isArrayLike(obj) && (isArray(obj) || isString(obj) || isArguments(obj))) return obj.length === 0;
  return keys(obj).length === 0;
}

// Is a given value a DOM element?
function isElement(obj) {
  return !!(obj && obj.nodeType === 1);
}

// Internal function for creating a toString-based type tester.
function tagTester(name) {
  return function(obj) {
    return toString.call(obj) === '[object ' + name + ']';
  };
}

// Is a given value an array?
// Delegates to ECMA5's native Array.isArray
var isArray = nativeIsArray || tagTester('Array');

// Is a given variable an object?
function isObject(obj) {
  var type = typeof obj;
  return type === 'function' || type === 'object' && !!obj;
}

// Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.
var isArguments = tagTester('Arguments');
var isFunction = tagTester('Function');
var isString = tagTester('String');
var isNumber = tagTester('Number');
var isDate = tagTester('Date');
var isRegExp = tagTester('RegExp');
var isError = tagTester('Error');
var isSymbol = tagTester('Symbol');
var isMap = tagTester('Map');
var isWeakMap = tagTester('WeakMap');
var isSet = tagTester('Set');
var isWeakSet = tagTester('WeakSet');

// Define a fallback version of the method in browsers (ahem, IE < 9), where
// there isn't any inspectable "Arguments" type.
(function() {
  if (!isArguments(arguments)) {
    isArguments = function(obj) {
      return _has(obj, 'callee');
    };
  }
}());

// Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,
// IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).
var nodelist = root.document && root.document.childNodes;
if ( true && typeof Int8Array != 'object' && typeof nodelist != 'function') {
  isFunction = function(obj) {
    return typeof obj == 'function' || false;
  };
}

// Is a given object a finite number?
function isFinite(obj) {
  return !isSymbol(obj) && _isFinite(obj) && !_isNaN(parseFloat(obj));
}

// Is the given value `NaN`?
function isNaN(obj) {
  return isNumber(obj) && _isNaN(obj);
}

// Is a given value a boolean?
function isBoolean(obj) {
  return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
}

// Is a given value equal to null?
function isNull(obj) {
  return obj === null;
}

// Is a given variable undefined?
function isUndefined(obj) {
  return obj === void 0;
}

// Shortcut function for checking if an object has a given property directly
// on itself (in other words, not on a prototype).
function has(obj, path) {
  if (!isArray(path)) {
    return _has(obj, path);
  }
  var length = path.length;
  for (var i = 0; i < length; i++) {
    var key = path[i];
    if (obj == null || !hasOwnProperty.call(obj, key)) {
      return false;
    }
    obj = obj[key];
  }
  return !!length;
}

// Utility Functions
// -----------------

// Keep the identity function around for default iteratees.
function identity(value) {
  return value;
}

// Predicate-generating functions. Often useful outside of Underscore.
function constant(value) {
  return function() {
    return value;
  };
}

function noop(){}

// Creates a function that, when passed an object, will traverse that object’s
// properties down the given `path`, specified as an array of keys or indexes.
function property(path) {
  if (!isArray(path)) {
    return shallowProperty(path);
  }
  return function(obj) {
    return deepGet(obj, path);
  };
}

// Generates a function for a given object that returns a given property.
function propertyOf(obj) {
  if (obj == null) {
    return function(){};
  }
  return function(path) {
    return !isArray(path) ? obj[path] : deepGet(obj, path);
  };
}

// Returns a predicate for checking whether an object has a given set of
// `key:value` pairs.
function matcher(attrs) {
  attrs = extendOwn({}, attrs);
  return function(obj) {
    return isMatch(obj, attrs);
  };
}


// Run a function **n** times.
function times(n, iteratee, context) {
  var accum = Array(Math.max(0, n));
  iteratee = optimizeCb(iteratee, context, 1);
  for (var i = 0; i < n; i++) accum[i] = iteratee(i);
  return accum;
}

// Return a random integer between min and max (inclusive).
function random(min, max) {
  if (max == null) {
    max = min;
    min = 0;
  }
  return min + Math.floor(Math.random() * (max - min + 1));
}

// A (possibly faster) way to get the current timestamp as an integer.
var now = Date.now || function() {
  return new Date().getTime();
};

// List of HTML entities for escaping.
var escapeMap = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&#x27;',
  '`': '&#x60;'
};
var unescapeMap = invert(escapeMap);

// Functions for escaping and unescaping strings to/from HTML interpolation.
function createEscaper(map) {
  var escaper = function(match) {
    return map[match];
  };
  // Regexes for identifying a key that needs to be escaped.
  var source = '(?:' + keys(map).join('|') + ')';
  var testRegexp = RegExp(source);
  var replaceRegexp = RegExp(source, 'g');
  return function(string) {
    string = string == null ? '' : '' + string;
    return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
  };
}
var escape = createEscaper(escapeMap);
var unescape = createEscaper(unescapeMap);

// Traverses the children of `obj` along `path`. If a child is a function, it
// is invoked with its parent as context. Returns the value of the final
// child, or `fallback` if any child is undefined.
function result(obj, path, fallback) {
  if (!isArray(path)) path = [path];
  var length = path.length;
  if (!length) {
    return isFunction(fallback) ? fallback.call(obj) : fallback;
  }
  for (var i = 0; i < length; i++) {
    var prop = obj == null ? void 0 : obj[path[i]];
    if (prop === void 0) {
      prop = fallback;
      i = length; // Ensure we don't continue iterating.
    }
    obj = isFunction(prop) ? prop.call(obj) : prop;
  }
  return obj;
}

// Generate a unique integer id (unique within the entire client session).
// Useful for temporary DOM ids.
var idCounter = 0;
function uniqueId(prefix) {
  var id = ++idCounter + '';
  return prefix ? prefix + id : id;
}

// By default, Underscore uses ERB-style template delimiters, change the
// following template settings to use alternative delimiters.
var templateSettings = _.templateSettings = {
  evaluate: /<%([\s\S]+?)%>/g,
  interpolate: /<%=([\s\S]+?)%>/g,
  escape: /<%-([\s\S]+?)%>/g
};

// When customizing `templateSettings`, if you don't want to define an
// interpolation, evaluation or escaping regex, we need one that is
// guaranteed not to match.
var noMatch = /(.)^/;

// Certain characters need to be escaped so that they can be put into a
// string literal.
var escapes = {
  "'": "'",
  '\\': '\\',
  '\r': 'r',
  '\n': 'n',
  '\u2028': 'u2028',
  '\u2029': 'u2029'
};

var escapeRegExp = /\\|'|\r|\n|\u2028|\u2029/g;

var escapeChar = function(match) {
  return '\\' + escapes[match];
};

// JavaScript micro-templating, similar to John Resig's implementation.
// Underscore templating handles arbitrary delimiters, preserves whitespace,
// and correctly escapes quotes within interpolated code.
// NB: `oldSettings` only exists for backwards compatibility.
function template(text, settings, oldSettings) {
  if (!settings && oldSettings) settings = oldSettings;
  settings = defaults({}, settings, _.templateSettings);

  // Combine delimiters into one regular expression via alternation.
  var matcher = RegExp([
    (settings.escape || noMatch).source,
    (settings.interpolate || noMatch).source,
    (settings.evaluate || noMatch).source
  ].join('|') + '|$', 'g');

  // Compile the template source, escaping string literals appropriately.
  var index = 0;
  var source = "__p+='";
  text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
    source += text.slice(index, offset).replace(escapeRegExp, escapeChar);
    index = offset + match.length;

    if (escape) {
      source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
    } else if (interpolate) {
      source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
    } else if (evaluate) {
      source += "';\n" + evaluate + "\n__p+='";
    }

    // Adobe VMs need the match returned to produce the correct offset.
    return match;
  });
  source += "';\n";

  // If a variable is not specified, place data values in local scope.
  if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

  source = "var __t,__p='',__j=Array.prototype.join," +
    "print=function(){__p+=__j.call(arguments,'');};\n" +
    source + 'return __p;\n';

  var render;
  try {
    render = new Function(settings.variable || 'obj', '_', source);
  } catch (e) {
    e.source = source;
    throw e;
  }

  var template = function(data) {
    return render.call(this, data, _);
  };

  // Provide the compiled source as a convenience for precompilation.
  var argument = settings.variable || 'obj';
  template.source = 'function(' + argument + '){\n' + source + '}';

  return template;
}

// Add a "chain" function. Start chaining a wrapped Underscore object.
function chain(obj) {
  var instance = _(obj);
  instance._chain = true;
  return instance;
}

// OOP
// ---------------
// If Underscore is called as a function, it returns a wrapped object that
// can be used OO-style. This wrapper holds altered versions of all the
// underscore functions. Wrapped objects may be chained.

// Helper function to continue chaining intermediate results.
function chainResult(instance, obj) {
  return instance._chain ? _(obj).chain() : obj;
}

// Add your own custom functions to the Underscore object.
function mixin(obj) {
  each(functions(obj), function(name) {
    var func = _[name] = obj[name];
    _.prototype[name] = function() {
      var args = [this._wrapped];
      push.apply(args, arguments);
      return chainResult(this, func.apply(_, args));
    };
  });
  return _;
}

// Add all mutator Array functions to the wrapper.
each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
  var method = ArrayProto[name];
  _.prototype[name] = function() {
    var obj = this._wrapped;
    method.apply(obj, arguments);
    if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
    return chainResult(this, obj);
  };
});

// Add all accessor Array functions to the wrapper.
each(['concat', 'join', 'slice'], function(name) {
  var method = ArrayProto[name];
  _.prototype[name] = function() {
    return chainResult(this, method.apply(this._wrapped, arguments));
  };
});

// Extracts the result from a wrapped and chained object.
_.prototype.value = function() {
  return this._wrapped;
};

// Provide unwrapping proxy for some methods used in engine operations
// such as arithmetic and JSON stringification.
_.prototype.valueOf = _.prototype.toJSON = _.prototype.value;

_.prototype.toString = function() {
  return String(this._wrapped);
};


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  compact,
  flatten,
  head,
  last,
  uniq,
  detailGet,
  detailNotEmpty,
  detailLang,
  getFunctionDetails,
  idToDottedPath
} = __webpack_require__(5);

const {
  escapeHTML,
  highlightChunk
} = __webpack_require__(184);

const {
  UNKNOWN_TYPE
} = __webpack_require__(190);

const idIsEmpty = id => !id || id === '';

const isFunctionKind = kind => ['function', 'type'].includes(kind);

const parameterName = (p, prefix = '', w) => p ? w ? `<${w}>${prefix}<span class="syntax--source"><span class="syntax--variable syntax--parameter syntax--function parameter-name">${p.name}</span></span></${head(w.split(/\s/g))}>` : `${prefix}<span class="syntax--python"><span class="syntax--variable syntax--parameter syntax--function parameter-name">${p.name}</span></span>` : undefined;

const parameterDefault = p => {
  if (!p) {
    return '';
  }

  const lang = detailLang(p);

  switch (lang) {
    case 'python':
    case 'javascript':
      return detailNotEmpty(p, 'default_value') ? '<span class="syntax--source"><span class="syntax--keyword syntax--operator syntax--assignment">=</span></span>' + `<span class="parameter-default">${highlightChunk(head(detailGet(p, 'default_value')).repr)}</span>` : '';

    default:
      return '';
  }
};

const parameterType = (p, prefix = '') => p.inferred_value ? `${prefix}${uniq(compact(p.inferred_value).slice(0, 3) //only take the first 3 for UI purposes
.map(v => `<a href="kite-atom-internal://type/${v.type_id}" class="parameter-type">${v.type}</a>`)).join('<span class="type-separator">&#8910;</span>')}` : '';

const parameterValue = p => `${parameterName(p)}${parameterType(p, ':')}${parameterDefault(p)}`;

const parameters = (d, withType = true, keywordOnly = false) => d.parameters ? withType ? d.parameters.filter(p => keywordOnly === detailGet(p, 'keyword_only')).map(parameterValue) : d.parameters.filter(p => keywordOnly === detailGet(p, 'keyword_only')).map(p => `${parameterName(p)}${parameterDefault(p)}`) : [];

const gatherParameters = (detail, withType) => {
  const lang = detailLang(detail);
  const keywordOnly = parameters(detail, withType, true);
  const vararg = detailGet(detail, 'vararg') || keywordOnly.length > 0 && {
    name: ''
  };

  switch (lang) {
    case 'python':
      return [parameters(detail, withType, false), parameterName(vararg, '*'), keywordOnly, parameterName(detailGet(detail, 'kwarg'), '**', 'a class="kwargs" href="#"')];

    case 'javascript':
      return [parameters(detail, withType), parameterName(detailGet(detail, 'rest'), '…')];

    default:
      return [parameters(detail, withType)];
  }
};

const signature = (data, withType = true, current = -1) => {
  const detail = getFunctionDetails(data);
  return detail ? `<span class="signature">${compact(flatten(gatherParameters(detail, withType))).map((p, i, a) => {
    const s = i === a.length - 1 ? '' : ', ';
    return i === current ? `<span class="parameter parameter-highlight">${p}${s}</span>` : `<span class="parameter">${p}${s}</span>`;
  }).join('')}</span>` : '<span class="signature"></span>';
};

const callParameterName = parameter => parameter.name;

const callKwargParameter = (parameter, withType) => {
  const example = head(parameter.types.filter(t => t.examples));
  return example ? compact([callParameterName(parameter), head(example.examples).replace(/"'/g, "'").replace(/'"/g, "'")]).join('=') : callParameterName(parameter);
};

const callKwargParameters = (signature, withType) => detailNotEmpty(signature, 'kwargs') ? detailGet(signature, 'kwargs').map(p => callKwargParameter(p)).join(', ') : null;

const callSignature = data => compact(flatten([(data.args || []).map(callParameterName), callKwargParameters(data)])).join(', ');

const valueName = value => last(last(value.repr.replace(/\(|\)/g, '').split('|').map(s => s.trim().split(':'))));

const valueNameFromId = value => value.id ? last(value.id.split(/[;.]/g)) : last(head(value.value).id.split(/[;.]/g));

const valueLabel = (value, current) => isFunctionKind(value.kind) ? highlightChunk(valueName(value) + '(') + '\u200b' + // \u200b = zero-width space
signature(value, false, current) + ')' : value.kind === 'instance' ? valueNameFromId(value) : valueName(value);

const symbolName = s => {
  const value = head(s.value);
  return value.kind === 'instance' ? s.name : valueName(value);
};

const symbolLabel = (s, current) => {
  const value = head(s.value);
  return isFunctionKind(value.kind) ? symbolName(s) : symbolName(s);
};

const memberLabel = s => {
  const value = s.value ? head(s.value) : {};
  const name = isFunctionKind(value.kind) ? s.name + '()' : s.name;
  return `<span class="repr"><code>${name}</code></span>`;
};

const wrapType = o => {
  const {
    name,
    id
  } = o || {};
  return name ? !idIsEmpty(id) ? `<a href="kite-atom-internal://type/${id}" class="type-value">${name}</a>` : `<span class="type-value">${name}</span>` : null;
};

const unionType = (vs, map) => uniq(flatten(compact(vs.map(map))).map(wrapType)).join(' | ');

const returnType = v => v && v.length ? `-> <span class="return-type">${v}</span>` : '';

const symbolValue = s => s ? head(s.value) : {};

const symbolKind = s => symbolValue(s).kind;

const reportFromHover = hover => {
  const symbol = head(hover.symbol);
  const data = {
    symbol,
    report: hover.report
  };

  if (data.value && data.value.id === '') {
    data.value.id = symbol.name;
  }

  return data;
};

const extractInstanceType = v => ({
  name: v.type,
  id: v.type_id
});

const extractFunctionType = v => {
  const detail = getFunctionDetails(v);
  return detail && detail.return_value ? detail.return_value.map(v => ({
    name: v.type,
    id: v.type_id
  })) : [];
};

const returnTypes = v => {
  const types = extractFunctionType(v);
  return types.length ? `${types.slice(0, 3) //only take the first 3 for UI purposes
  .map(type => `<span class="return-type">${type.name}</span>`).join('<span class="type-separator">&#8910;</span>')}` : null;
};

const symbolType = s => symbolKind(s) === 'instance' //only take the first 3 for UI purposes
? unionType(s.value.slice(0, 3), extractInstanceType) || 'instance' : symbolKind(s);

const symbolTypeString = s => {
  if (symbolKind(s) === 'instance') {
    //only take the first 3 for UI purposes
    const reprs = s.value.slice(0, 3).map(v => v.repr);

    if (reprs.length > 1) {
      return '\u2772' + reprs.join(' \u22CE ') + '\u2773';
    } else {
      return reprs.join('');
    }
  }

  return symbolKind(s);
};

const completionRightLabel = s => {
  let label;

  if (symbolKind(s) === 'instance') {
    //only take the first 3 for UI purposes
    const reprs = s.value.slice(0, 3).map(v => `<span class="type">${v.repr}</span>`);

    if (reprs.length > 1) {
      label = '\u2772' + reprs.join('<span class="separator">&#8910;</span>') + '\u2773';
    } else {
      label = reprs.join('');
    }
  } else {
    label = symbolKind(s);
  }

  return `<span class="kind">${label}</span>`;
};

const kindLabel = label => `<span class="kind">${label}</span>`;

const symbolReturnType = s => unionType(s.value, extractFunctionType);

const valueType = value => isFunctionKind(value.kind) ? returnType(unionType([value], extractFunctionType)) : unionType([value], extractInstanceType);

const symbolId = symbol => symbol ? !idIsEmpty(symbol.id) ? symbol.id : head(symbol.value).id : '';

const appendCompletionsFooter = (completion, descriptionHTML) => {
  const id = completion.symbol && completion.symbol.value && completion.symbol.value[0] && completion.symbol.value[0].id;
  let actions = id ? `<a href="kite-atom-internal://open-search-docs/${idToDottedPath(id)}">Docs<span class="kite-link-icon">&#8663;</span></a>` : '';

  if (atom.config.get('kite.enableSnippets')) {
    actions = completion.local_id ? `<a href="kite-atom-internal://open-search-docs/${completion.local_id}">Docs<span class="kite-link-icon">&#8663;</span></a>` : '';
  }

  return `
  <div class="kite-completions">
    <div class="kite-completion-description">${descriptionHTML}</div>
    <div class="kite-completion-footer">
      <kite-links class="one-line" metric="Suggestion">
        ${actions}
        <div class="flex-separator"></div>
        <kite-logo small title="Powered by Kite" class="badge"></kite-logo>
      </kite-links>
    </div>
  </div>`;
};

const parseSnippetCompletion = (editor, c, displayPrefix) => {
  const buffer = editor.getBuffer();
  const completion = {
    text: c.snippet.text,
    displayText: displayPrefix + c.display,
    className: 'kite-completion'
  };

  if (c.replace) {
    completion.replacementRange = {
      begin: buffer.positionForCharacterIndex(c.replace.begin),
      end: buffer.positionForCharacterIndex(c.replace.end)
    };
  }

  if (c.snippet.placeholders.length > 0) {
    var snippetStr = c.snippet.text;
    var offset = 0;

    for (let i = 0; i < c.snippet.placeholders.length; i++) {
      let placeholder = c.snippet.placeholders[i];
      placeholder.begin += offset;
      placeholder.end += offset;
      snippetStr = snippetStr.slice(0, placeholder.begin) + '${' + (i + 1).toString() + ':' + snippetStr.slice(placeholder.begin, placeholder.end) + '}' + snippetStr.slice(placeholder.end);
      offset += 5;
    }

    if (snippetStr) {
      snippetStr += '$0';
    }

    completion.snippet = snippetStr;
  }

  completion.type = c.hint ? c.hint : UNKNOWN_TYPE;
  completion.rightLabelHTML = kindLabel(c.hint);

  if (c.documentation.text) {
    completion.descriptionHTML = appendCompletionsFooter(c, escapeHTML(c.documentation.text));
    completion.description = c.documentation.text;
  }

  return completion;
};

module.exports = {
  appendCompletionsFooter,
  callSignature,
  completionRightLabel,
  extractFunctionType,
  idIsEmpty,
  isFunctionKind,
  kindLabel,
  memberLabel,
  parameterDefault,
  parameterName,
  parameterType,
  parameterValue,
  parseSnippetCompletion,
  reportFromHover,
  returnType,
  returnTypes,
  signature,
  symbolId,
  symbolKind,
  symbolLabel,
  symbolName,
  symbolReturnType,
  symbolType,
  symbolTypeString,
  symbolValue,
  unionType,
  valueLabel,
  valueName,
  valueNameFromId,
  valueType
};

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // Enable or disable debug mode

const DEBUG = false; // MAX_FILE_SIZE is the maximum file size to send to Kite

const MAX_FILE_SIZE = 75 * Math.pow(2, 10); // 75 KB
// MAX_PAYLOAD_SIZE is the maximum length for a POST reqest body

const MAX_PAYLOAD_SIZE = 2 ** 21; // 2097152
// minimum interval in seconds between sending "could not connect..."
// events

const CONNECT_ERROR_LOCKOUT = 15 * 60;
const ERROR_RESCUE_SHOW_SIDEBAR = 'Reopen sidebar';
const ERROR_RESCUE_DONT_SHOW_SIDEBAR = 'Fix code quietly';
const UNKNOWN_TYPE = 'kite-empty-type';
module.exports = {
  CONNECT_ERROR_LOCKOUT,
  DEBUG,
  MAX_FILE_SIZE,
  MAX_PAYLOAD_SIZE,
  ERROR_RESCUE_SHOW_SIDEBAR,
  ERROR_RESCUE_DONT_SHOW_SIDEBAR,
  UNKNOWN_TYPE
};

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  CompositeDisposable
} = __webpack_require__(2);

const {
  flatten,
  compact
} = __webpack_require__(5);

const KiteEditor = __webpack_require__(192);

const EXTENSIONS_BY_LANGUAGES = {
  python: ['py'],
  go: ['go'],
  javascript: ['js', 'jsx', 'vue']
};
module.exports = class KiteEditors {
  init(kite) {
    this.Kite = kite;
    this.subscriptions = new CompositeDisposable();
    this.kiteEditorByEditorID = [];
    this.pathSubscriptionsByEditorID = {};
    this.subscriptions.add(atom.workspace.observeTextEditors(editor => {
      // The grammar is known and supported, we can subscribe to that editor
      if (this.isGrammarSupported(editor)) {
        this.subscribeToEditor(editor);
      } // We still want to know when an editor path changes so we can check
      // if it is now supported/unsupported


      if (!this.pathSubscriptionsByEditorID[editor.id]) {
        const sub = new CompositeDisposable();

        const dispose = () => {
          sub.dispose();
          delete this.pathSubscriptionsByEditorID[editor.id];
          this.subscriptions.remove(sub);
        };

        this.subscriptions.add(sub);
        sub.add(editor.onDidChangePath(() => {
          if (this.isGrammarSupported(editor)) {
            this.subscribeToEditor(editor);
          } else if (this.hasEditorSubscription(editor)) {
            this.unsubscribeFromEditor(editor);
          }
        }));
        sub.add(editor.onDidDestroy(() => dispose()));
        this.pathSubscriptionsByEditorID[editor.id] = sub;
      }
    }));
    this.subscriptions.add(atom.workspace.observeActiveTextEditor(editor => {
      if (editor && editor.getGrammar().name === 'Go') {
        this.Kite && this.Kite.notifications.showGoBetaNotification(this.Kite);
      }
    }));
  }

  dispose() {
    delete this.kiteEditorByEditorID;
    this.subscriptions && this.subscriptions.dispose();
  }

  subscribeToEditor(editor) {
    // We don't want to subscribe twice to the same editor
    if (!this.hasEditorSubscription(editor)) {
      const kiteEditor = new KiteEditor(editor);
      this.kiteEditorByEditorID[editor.id] = kiteEditor;
      this.subscriptions.add(kiteEditor);
      const disposable = editor.onDidDestroy(() => {
        this.unsubscribeFromEditor(editor);
        this.subscriptions.remove(disposable);
      });
      this.subscriptions.add(disposable);
    }
  }

  unsubscribeFromEditor(editor) {
    if (!this.hasEditorSubscription(editor)) {
      return;
    }

    const kiteEditor = this.kiteEditorByEditorID[editor.id];
    kiteEditor.dispose();
    this.subscriptions.remove(kiteEditor);
    delete this.kiteEditorByEditorID[editor.id];
  }

  hasEditorSubscription(editor) {
    return this.kiteEditorForEditor(editor) != null;
  }

  kiteEditorForEditor(editor) {
    return editor && this.kiteEditorByEditorID && this.kiteEditorByEditorID[editor.id];
  }

  getSupportedLanguages() {
    return ['python', 'go', 'javascript'];
  }

  hasSupportedFileOpen() {
    return atom.workspace.getTextEditors().some(e => this.isGrammarSupported(e));
  }

  hasActiveSupportedFile() {
    const editor = atom.workspace.getActiveTextEditor();
    return editor && this.isGrammarSupported(editor);
  }

  isGrammarSupported(editor) {
    return editor && new RegExp(this.getSupportedLanguagesRegExp(this.getSupportedLanguages())).test(editor.getPath() || '');
  }

  getSupportedLanguagesRegExp(languages) {
    return `\.(${compact(flatten(languages.map(l => EXTENSIONS_BY_LANGUAGES[l]))).join('|')})$`;
  }

  getEditorsForPath(path) {
    return atom.workspace.getPaneItems().filter(i => i && i.getURI && i.getURI() === path);
  }

};

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


let Kite, DataLoader, OverlayManager, WordHoverGesture, EditorEvents, screenPositionForMouseEvent, pixelPositionForMouseEvent, CompositeDisposable, metrics;

class KiteEditor {
  constructor(editor) {
    this.editor = editor;
    this.buffer = editor.getBuffer();
    this.editorElement = atom.views.getView(editor);
    this.fixesHistory = [];
    this.subscribeToEditor(editor);
  }

  dispose() {
    this.subscriptions && this.subscriptions.dispose();
    delete this.subscriptions;
    delete this.editorElement;
    delete this.editor;
    delete this.buffer;
  }

  subscribeToEditor(editor) {
    if (!CompositeDisposable) {
      ({
        CompositeDisposable
      } = __webpack_require__(2));
      ({
        screenPositionForMouseEvent,
        pixelPositionForMouseEvent
      } = __webpack_require__(5));
      WordHoverGesture = __webpack_require__(193);
      DataLoader = __webpack_require__(183);
      EditorEvents = __webpack_require__(197);
    }

    const subs = new CompositeDisposable();
    this.subscriptions = subs;
    this.events = new EditorEvents(editor);
    subs.add(this.events);
    const activeEditor = atom.workspace.getActiveTextEditor(); // When opening a file and no other editor is open we can enter here before
    // the workspace knows that it's the active editor

    if (!activeEditor || editor === activeEditor) {
      this.events.focus();
    }

    this.hoverGesture = new WordHoverGesture(editor, {
      ignoredSelector: 'atom-overlay, atom-overlay *'
    });
    subs.add(this.hoverGesture);
    subs.add(this.hoverGesture.onDidActivate(({
      position
    }) => {
      if (atom.config.get('kite.enableHoverUI')) {
        if (!OverlayManager) {
          OverlayManager = __webpack_require__(198);
        }

        OverlayManager.showHoverAtPositionWithDelay(editor, position);
        OverlayManager.setWordHoverActive(true);
      }
    }));
    subs.add(this.hoverGesture.onDidDeactivate(() => {
      if (atom.config.get('kite.enableHoverUI')) {
        if (!OverlayManager) {
          OverlayManager = __webpack_require__(198);
        }

        OverlayManager.setWordHoverActive(false);
      }
    }));
    subs.add(editor.onDidChangeCursorPosition(() => {
      if (!Kite) {
        Kite = __webpack_require__(0);
      }

      if (atom.config.get('kite.enableHoverUI')) {
        if (!OverlayManager) {
          OverlayManager = __webpack_require__(198);
        }

        OverlayManager.setWordHoverActive(false);
      }
    }));
  }

  expandPosition(position) {
    if (!metrics) {
      metrics = __webpack_require__(180);
    }

    DataLoader.getHoverDataAtPosition(this.editor, position).then(data => {
      const [symbol] = data.symbol;

      if (symbol && symbol.id) {
        this.expandId(symbol.id);
      }
    });
  }

  expandId(id) {
    atom.applicationDelegate.openExternal(`kite://docs/${encodeURI(id)}`);
  }

  openDefinitionForId(id) {
    return DataLoader.getValueReportDataForId(id).then(data => this.openDefinition(data.report.definition));
  }

  openDefinitionAtRange(range) {
    const token = this.tokensList.tokenAtRange(range);
    return this.openTokenDefinition(token);
  }

  openDefinitionAtPosition(position) {
    const token = this.tokensList.tokenAtPosition(position);
    return this.openTokenDefinition(token);
  }

  openDefinition(definition) {
    if (!metrics) {
      metrics = __webpack_require__(180);
    }

    if (definition.filename.trim() === '') {
      return Promise.resolve(false);
    }

    return new Promise((resolve, reject) => {
      metrics.featureRequested('definition');

      if (definition) {
        return atom.workspace.open(definition.filename).then(editor => {
          metrics.featureFulfilled('definition');
          editor.setCursorBufferPosition([definition.line - 1, definition.column ? definition.column - 1 : 0], {
            autoscroll: true
          });
          return true;
        });
      }

      return false;
    });
  }

  screenPositionForMouseEvent(event) {
    return screenPositionForMouseEvent(this.editorElement, event);
  }

  pixelPositionForMouseEvent(event) {
    return pixelPositionForMouseEvent(this.editorElement, event);
  }

}

module.exports = KiteEditor;

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  CompositeDisposable
} = __webpack_require__(2);

const MouseEventGesture = __webpack_require__(194);

const {
  DisposableEvent,
  isWithinTextOfLine
} = __webpack_require__(5);

module.exports = class HoverGesture extends MouseEventGesture {
  constructor(editor, options) {
    super(editor, options);
    this.registerEvents();
  }

  dispose() {
    super.dispose();
    this.subscriptions.dispose();
  }

  registerEvents() {
    this.subscriptions = new CompositeDisposable();
    this.subscriptions.add(new DisposableEvent(document, 'mouseout', e => {
      const from = e.relatedTarget || e.toElement;

      if (!from || from.nodeName == 'HTML') {
        this.deactivate();
      }
    }));
    this.subscriptions.add(new DisposableEvent(this.editorElement, 'mousemove', e => {
      if (!this.matchesModifiers(e)) {
        this.deactivate();
        return;
      }

      if (e.target.matches(this.options.ignoredSelector)) {
        return;
      }

      const textRange = this.wordRangeForMouseEvent(event);

      if (textRange && this.lastRange && !this.lastRange.isEqual(textRange) && !textRange.isEmpty()) {
        if (isWithinTextOfLine(this.editorElement, event)) {
          this.activate({
            position: this.screenPositionForMouseEvent(event),
            range: textRange
          });
        }
      } else if (!textRange || textRange.isEmpty()) {
        this.deactivate();
      }

      this.lastRange = textRange;
    }));
  }

};

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  Range
} = __webpack_require__(2);

const BaseGesture = __webpack_require__(195);

const VirtualCursor = __webpack_require__(196);

const {
  screenPositionForMouseEvent
} = __webpack_require__(5);

module.exports = class MouseEventGesture extends BaseGesture {
  constructor(editor, options) {
    super(editor, options);
  }

  matchesModifiers(e) {
    return e.altKey == !!this.options.altKey && e.ctrlKey == !!this.options.ctrlKey && e.shiftKey == !!this.options.shiftKey && e.metaKey == !!this.options.metaKey;
  }

  screenPositionForMouseEvent(event) {
    return screenPositionForMouseEvent(this.editorElement, event);
  }

  wordRangeForMouseEvent(event) {
    const position = screenPositionForMouseEvent(this.editorElement, event);

    if (position) {
      const cursor = new VirtualCursor(this.editor);
      cursor.setScreenPosition(position);
      return Range.fromObject(cursor.getCurrentWordBufferRange({
        includeNonWordCharacters: false
      }));
    } else {
      return null;
    }
  }

};

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  Emitter
} = __webpack_require__(2);

module.exports = class BaseGesture {
  constructor(editor, options) {
    this.editor = editor;
    this.buffer = editor.getBuffer();
    this.editorElement = atom.views.getView(editor);
    this.options = options || {};
    this.emitter = new Emitter();
  }

  dispose() {
    this.emitter.dispose();
  }

  pause() {
    this.paused = true;
  }

  resume() {
    this.paused = false;
  }

  isActive() {
    return this.active;
  }

  activate(data) {
    if (this.active) {
      this.deactivate();
    }

    this.active = true;

    if (!this.paused) {
      this.emitter.emit('did-activate', data);
    }
  }

  deactivate(data) {
    if (!this.active) {
      return;
    }

    this.active = false;

    if (!this.paused) {
      this.emitter.emit('did-deactivate', data);
    }
  }

  onDidActivate(listener) {
    return this.emitter.on('did-activate', listener);
  }

  onDidDeactivate(listener) {
    return this.emitter.on('did-deactivate', listener);
  }

};

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  Point
} = __webpack_require__(2);

let Cursor;

class VirtualCursor {
  static get DELEGATED_METHODS() {
    return ['getScreenRow', 'getScreenColumn', 'getBufferRow', 'getBufferColumn', 'getCurrentBufferLine', 'isAtBeginningOfLine', 'isAtEndOfLine', 'isSurroundedByWhitespace', 'isBetweenWordAndNonWord', 'isInsideWord', 'getIndentLevel', 'getScopeDescriptor', 'hasPrecedingCharactersOnLine', 'moveUp', 'moveDown', 'moveLeft', 'moveRight', 'moveToTop', 'moveToBottom', 'moveToBeginningOfScreenLine', 'moveToBeginningOfLine', 'moveToFirstCharacterOfLine', 'moveToEndOfScreenLine', 'moveToEndOfLine', 'moveToBeginningOfWord', 'moveToEndOfWord', 'moveToBeginningOfNextWord', 'moveToPreviousWordBoundary', 'moveToNextWordBoundary', 'moveToPreviousSubwordBoundary', 'moveToNextSubwordBoundary', 'skipLeadingWhitespace', 'moveToBeginningOfNextParagraph', 'moveToBeginningOfPreviousParagraph', 'getPreviousWordBoundaryBufferPosition', 'getNextWordBoundaryBufferPosition', 'getBeginningOfCurrentWordBufferPosition', 'getEndOfCurrentWordBufferPosition', 'getBeginningOfNextWordBufferPosition', 'getCurrentWordBufferRange', 'getCurrentLineBufferRange', 'getCurrentParagraphBufferRange', 'getCurrentWordPrefix', 'wordRegExp', 'subwordRegExp', 'getNonWordCharacters', 'getScreenRange', 'getBeginningOfNextParagraphBufferPosition', 'getBeginningOfPreviousParagraphBufferPosition'];
  }

  static initClass() {
    this.DELEGATED_METHODS.forEach(key => {
      this.prototype[key] = function (...args) {
        return Cursor.prototype[key].apply(this, args);
      };
    });
    return this;
  }

  constructor(editor, bufferPosition) {
    this.editor = editor;

    if (bufferPosition) {
      this.setBufferPosition(bufferPosition);
    }

    Cursor = Cursor || this.editor.getLastCursor().constructor;
  }

  setBufferPosition(position) {
    this.bufferPosition = Point.fromObject(position);
  }

  getBufferPosition() {
    return this.bufferPosition;
  }

  setScreenPosition(position, options) {
    if (position) {
      this.setBufferPosition(this.editor.bufferPositionForScreenPosition(position, options));
    }
  }

  getScreenPosition(options) {
    return this.editor.screenPositionForBufferPosition(this.bufferPosition, options);
  }

}

module.exports = VirtualCursor.initClass();

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  CompositeDisposable
} = __webpack_require__(2);

const KiteAPI = __webpack_require__(138);

const {
  MAX_FILE_SIZE,
  MAX_PAYLOAD_SIZE
} = __webpack_require__(190);

const {
  DisposableEvent
} = __webpack_require__(5);

const {
  version: plugin_version
} = __webpack_require__(180);

let Kite;

class EditorEvents {
  constructor(editor) {
    if (!Kite) {
      Kite = __webpack_require__(0);
    }

    this.editor = editor;
    this.subscriptions = new CompositeDisposable();
    this.pendingEvents = [];
    this.subscriptions.add(editor.onDidChange(changes => {
      this.send('edit');
    }));
    this.subscriptions.add(editor.onDidChangeSelectionRange(() => {
      this.send('selection');
    }));
    const view = atom.views.getView(this.editor);
    let editorHadFocus; // We need to track whether the editor view already had focus prior
    // to a mousedown event as we're now receiving a focus event for each click.
    // In case the editor already had focus we won't send the focus event to kited.

    this.subscriptions.add(new DisposableEvent(view, 'mousedown', () => {
      editorHadFocus = view.hasFocus();
    }));
    this.subscriptions.add(new DisposableEvent(view, 'focus', () => {
      if (!editorHadFocus) {
        this.focus();
      }

      editorHadFocus = null;
    }));
  }

  focus() {
    return this.send('focus');
  }

  dispose() {
    delete this.editor;
    this.subscriptions.dispose();
  }

  reset() {
    clearTimeout(this.timeout);
    this.pendingEvents = [];
  }

  send(action) {
    if (!this.pendingPromise) {
      this.pendingPromise = new Promise((resolve, reject) => {
        this.pendingPromiseResolve = resolve;
        this.pendingPromiseReject = reject;
      });
    }

    this.pendingEvents.push(action);
    clearTimeout(this.timeout);
    this.timeout = setTimeout(() => this.mergeEvents(), 0); // was resulting in unhandled Promise rejection from `this.pendingPromiseReject(err)`
    // below... so we catch it

    return this.pendingPromise["catch"](err => {});
  }

  mergeEvents() {
    if (!this.editor) {
      return;
    }

    let focus = this.pendingEvents.filter(e => e === 'focus')[0];
    let action = this.pendingEvents.some(e => e === 'edit') ? 'edit' : this.pendingEvents.pop();
    this.reset();
    const payload = JSON.stringify(this.buildEvent(action));

    if (payload.length > MAX_PAYLOAD_SIZE) {
      return this.reset();
    }

    let promise = Promise.resolve();

    if (focus && action !== focus) {
      promise = promise.then(() => KiteAPI.request({
        path: '/clientapi/editor/event',
        method: 'POST'
      }, JSON.stringify(this.buildEvent(focus))));
    }

    return promise.then(() => KiteAPI.request({
      path: '/clientapi/editor/event',
      method: 'POST'
    }, payload)).then(res => {
      this.pendingPromiseResolve(res);
    })["catch"](err => {
      this.pendingPromiseReject && this.pendingPromiseReject(err); // on connection error send a metric, but not too often or we will generate too many events
      // if (!this.lastErrorAt ||
      //     secondsSince(this.lastErrorAt) >= CONNECT_ERROR_LOCKOUT) {
      //   this.lastErrorAt = new Date();
      //   // metrics.track('could not connect to event endpoint', err);
      // }
    }).then(() => {
      delete this.pendingPromise;
      delete this.pendingPromiseResolve;
      delete this.pendingPromiseReject;
    });
  }

  buildEvent(action) {
    let text = this.editor.getText();
    const cursorPoint = this.editor.getCursorBufferPosition(); // The TextBuffer class already provides position->char
    // index conversion with regard for unicode's surrogate pairs

    const buffer = this.editor.getBuffer();
    const cursorOffset = buffer.characterIndexForPosition(cursorPoint); // don't send content over 1mb

    if (text && text.length > MAX_FILE_SIZE) {
      action = 'skip';
      text = '';
    }

    return this.makeEvent(action, this.editor.getPath(), text, action === 'skip' ? 0 : cursorOffset);
  }

  makeEvent(action, filename, text, cursor) {
    return {
      source: 'atom',
      action,
      filename,
      text,
      selections: [{
        start: cursor,
        end: cursor
      }],
      editor_version: atom.getVersion(),
      plugin_version
    };
  }

}

module.exports = EditorEvents;

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  Emitter,
  CompositeDisposable
} = __webpack_require__(2);

const VirtualCursor = __webpack_require__(196);

const KiteHover = __webpack_require__(199);

const DataLoader = __webpack_require__(183);

const metrics = __webpack_require__(180);

const {
  DisposableEvent
} = __webpack_require__(5);

module.exports = {
  emitter: new Emitter(),
  queue: Promise.resolve(),
  hoverDefault: {
    show: 750,
    hide: 500
  },
  isCursorInHover: false,
  isWordHoverActive: false,

  reset() {
    this.queue = Promise.resolve();
    delete this.lastHoverRange;
    delete this.lastExpandRange;
  },

  enqueue(promiseGenerator) {
    this.queue = this.queue.then(promiseGenerator)["catch"](err => {});
    return this.queue;
  },

  setWordHoverActive(isActive) {
    this.isWordHoverActive = isActive;

    if (!this.isWordHoverActive && !this.isCursorInHover) {
      this.dismissWithDelay();
    }
  },

  onDidShowExpand(listener) {
    return this.emitter.on('did-show-expand', listener);
  },

  onDidShowHover(listener) {
    return this.emitter.on('did-show-hover', listener);
  },

  onDidDismiss(listener) {
    return this.emitter.on('did-dismiss', listener);
  },

  dismiss(from) {
    this.marker && this.marker.destroy();
    this.decoration && this.decoration.destroy();
    this.hoverSubscriptions && this.hoverSubscriptions.dispose();
    delete this.marker;
    delete this.decoration;
    delete this.lastHoverRange;
    delete this.lastExpandRange;
    delete this.expandDisplayed;
    this.isCursorInHover = false;
    this.isWordHoverActive = false;
    this.emitter.emit('did-dismiss');
  },

  dismissWithDelay() {
    this.abortHoverWithDelay();

    if (this.decoration && this.dismissTimeout == null) {
      this.dismissTimeout = setTimeout(() => {
        this.dismiss();
        delete this.dismissTimeout;
      }, this.hoverDefault.hide);
    }
  },

  abortHoverWithDelay() {
    // this.abortDismissWithDelay();
    clearTimeout(this.hoverTimeout);
  },

  abortDismissWithDelay() {
    if (this.dismissTimeout) {
      clearTimeout(this.dismissTimeout);
      delete this.dismissTimeout;
    }
  },

  showHoverAtPositionWithDelay(editor, position) {
    if (!editor || !position) {
      return;
    }

    clearTimeout(this.hoverTimeout);
    this.dismissWithDelay();
    this.hoverTimeout = setTimeout(() => {
      if (!this.expandDisplayed) {
        metrics.featureRequested && metrics.featureRequested('hover');
        this.showHoverAtPosition(editor, position);
      }
    }, this.hoverDefault.show);
  },

  showHoverAtPosition(editor, position) {
    if (!editor || !position) {
      return Promise.resolve();
    }

    const cursor = new VirtualCursor(editor, position);
    return this.enqueue(() => {
      const range = cursor.getCurrentWordBufferRange({
        includeNonWordCharacters: false
      });

      if (this.lastHoverRange && this.lastHoverRange.isEqual(range) || this.lastExpandRange && this.lastExpandRange.isEqual(range)) {
        return null;
      }

      this.dismiss('hover');

      if (range.isEmpty()) {
        return null;
      }

      this.lastHoverRange = range;
      return DataLoader.getHoverDataAtPosition(editor, position).then(data => {
        if (data.symbol && data.symbol.length) {
          metrics.featureFulfilled && metrics.featureFulfilled('hover');
          const hover = new KiteHover();
          this.hoverSubscriptions = new CompositeDisposable();
          this.hoverSubscriptions.add(new DisposableEvent(hover, 'mouseover', e => {
            this.isCursorInHover = true;
            this.abortDismissWithDelay();
          }));
          this.hoverSubscriptions.add(new DisposableEvent(hover, 'mouseout', e => {
            this.isCursorInHover = false;

            if (!this.isCursorInHover && !this.isWordHoverActive) {
              this.dismissWithDelay();
            }
          }));
          hover.setData(data, editor, position);
          this.marker = editor.markBufferRange(range, {
            invalidate: 'touch'
          });
          this.decoration = editor.decorateMarker(this.marker, {
            type: 'overlay',
            position: 'tail',
            item: hover,
            "class": 'kite-hover'
          });
          this.emitter.emit('did-show-hover');
        }
      });
    });
  }

};

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(1);

const {
  Point,
  CompositeDisposable
} = __webpack_require__(2);

const {
  symbolName,
  symbolType
} = __webpack_require__(189);

const {
  internalGotoURL
} = __webpack_require__(181);

const {
  debugData,
  wrapAfterParenthesisAndDots
} = __webpack_require__(200);

const {
  DisposableEvent,
  idToDottedPath
} = __webpack_require__(5);

let OverlayManager;

class KiteHover extends HTMLElement {
  static initClass() {
    customElements.define('kite-hover', this);
    return this;
  }

  disconnectedCallback() {
    this.subscriptions && this.subscriptions.dispose();
  }

  connectedCallback() {
    this.classList.add('native-key-bindings');
    this.setAttribute('tabindex', '-1');
  }

  setData(data, editor, position) {
    position = Point.fromObject(position);

    if (data && data.symbol && data.symbol.length) {
      const [symbol] = data.symbol; // const type = symbolType(symbol);

      const actions = [];

      if (data.report.definition && data.report.definition.filename && data.report.definition.filename.trim() !== '') {
        actions.push(`<a
        href="${internalGotoURL(data.report.definition)}">Def<span class="kite-link-icon">&#8619;</span></a>`);
      }

      actions.push(`<a href="kite-atom-internal://open-search-docs/${idToDottedPath(symbol.id)}">Docs<span class="kite-link-icon">&#8663;</span></a>`);
      this.innerHTML = `
    <div class="definition">
      <kite-logo small title="Powered by Kite" class="badge"></kite-logo>
      <span class="name"><code>${wrapAfterParenthesisAndDots(symbolName(symbol))}</code></span>
      <span class="type">&#10098; ${symbolType(symbol)} &#10099;</span>
      <kite-links metric="Hover">
        ${actions.join(' ')}
      </kite-links>
    </div>
    ${debugData(data)}`;
      this.subscriptions = new CompositeDisposable();
      const links = this.querySelector('kite-links');
      const debug = this.querySelector('.debug');

      if (debug) {
        this.subscriptions.add(new DisposableEvent(debug, 'mousewheel', e => {
          e.stopPropagation();
        }));
      }

      if (links) {
        this.subscriptions.add(links.onDidClickMoreLink(() => {
          if (!OverlayManager) {
            OverlayManager = __webpack_require__(198);
          }

          OverlayManager.dismiss();
        }));
      }
    } else {
      this.innerHTML = '';
    }
  }

}

module.exports = KiteHover.initClass();

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

const path = __webpack_require__(27);

const {
  head,
  compact,
  flatten,
  detailGet,
  detailLang,
  getDetails,
  getFunctionDetails
} = __webpack_require__(5);

const {
  symbolLabel,
  symbolType,
  valueLabel,
  valueType,
  idIsEmpty,
  memberLabel,
  parameterName,
  parameterType,
  parameterDefault,
  symbolReturnType
} = __webpack_require__(189);

const {
  highlightChunk,
  wrapLine,
  wrapPre
} = __webpack_require__(184);

const pluralize = (a, s, p) => a === 1 ? s : p;

function highlightCode(content) {
  return wrapPre(content.split('\n').map(highlightChunk).map(wrapLine).join(''));
} // Helps with intentional text wrapping. HTML is not very well equipped to break code strings in natural places.
// To get ahead of word-break doing it haphazardly (although we still keep it as a last measure), we’ll insert
// zero-width spaces in all the right places – the same places a programmer might choose to break to a new line.


function wrapAfterParenthesis(content) {
  return content.replace(/(\()/g, '$1\u200b'
  /* zero-width space */
  );
} // This seems to affect syntax highlighting somewhat, so shouldn’t be used when syntax highlighting


function wrapAfterParenthesisAndDots(content) {
  return content.replace(/([\(\.])/g, '$1\u200b'
  /* zero-width space */
  );
}

function stripBody(html) {
  return (html || '').replace(/<body>/, '').replace(/<\/body>/, '');
}

function valueDescription(data) {
  const {
    value
  } = data;
  return `<div class="description">${data.report && data.report.description_html && data.report.description_html !== '' ? stripBody(data.report.description_html) : value.synopsis}</div>`;
}

function symbolDescription(data) {
  const {
    symbol
  } = data;
  const value = head(symbol.value);
  return `${data.report && data.report.description_html && data.report.description_html !== '' ? stripBody(data.report.description_html) : value.synopsis != '' ? value.synopsis : symbol.synopsis}`;
}

function renderSymbolHeader(symbol) {
  return renderHeader(symbolLabel(symbol), symbolType(symbol));
}

function renderValueHeader(symbol) {
  return renderHeader(valueLabel(symbol), valueType(symbol));
}

function renderHeader(name, type) {
  return `
  <div class="expand-header split-line">
    <span class="name"><code>${wrapAfterParenthesisAndDots(name)}</code></span>
    <span class="type">${type}</span>
  </div>`;
}

function debugData(data) {
  return atom.config.get('kite.developerMode') ? `<div class="debug">
        ${highlightCode(JSON.stringify(data, null, 2))}
      </div>` : '';
}

function parameterize(string) {
  return string.toLowerCase().replace(/\s+/g, '-');
}

function section(title, content, {
  help = ''
} = {}) {
  return `<section class="${parameterize(title)}">
    <h4>${title}${help}</h4>
    <div class="section-content">
      ${content}
    </div>
  </section>`;
}

function renderExtend(symbol) {
  return ''; // return !symbol.bases || symbol.bases.length === 0
  //   ? ''
  //   : `
  //   <div class="expand-extend split-line">
  //     <span class="name">
  //       <a href="kite-atom-internal://base/method">BaseCounter.increment(n)</a>
  //     </span>
  //     <span class="type"><a href="kite-atom-internal://base/return">-> int</a></span>
  //   </div>`;
}

function renderDefinition(value) {
  const def = value.report && value.report.definition;

  if (def && def.filename && def.filename.trim() !== '') {
    const url = `kite-atom-internal://goto/${encodeURI(stripLeadingSlash(def.filename))}:${def.line}`;
    return section('Definition', `
    <ul>
      <li>
        <i class="icon icon-file-code"></i>
        <a href="${url}" class="file">
          <span class="title">${path.basename(def.filename)}<span class="line-colon">:</span>${def.line}</span>
        </a>
      </li>
    </ul>`);
  } else {
    return '';
  }
}

function renderLinks(data, limit = 2) {
  return data.report && data.report.links && data.report.links.length ? section('Links', `
      <ul>${data.report.links.slice(0, limit).map(renderLink).join('')}</ul>
      ${additionalLinksLink(data.report.links.length, data, limit)}
    `) : '';
}

function renderLink(link) {
  return `<li data-name="${link.title}">
    <i class="icon icon-so"></i>
    <a href="${link.url}" class="link so-link">
      <span class="title">${link.title}</span>
      <i class="icon icon-chevron-right"></i>
    </a>
  </li>`;
}

function additionalLinksLink(linksCount, data, limit) {
  return linksCount <= limit ? '' : `<a href="kite-atom-internal://links-list/${data.value ? data.value.id : data.symbol.id}"
          class="more-links">All ${linksCount} links
          <i class="icon icon-chevron-right"></i></a>`;
}

function renderExamples(data, limit = 2) {
  return data.report && data.report.examples && data.report.examples.length ? section('How to', `
      <ul>${data.report.examples.slice(0, limit).map(renderExample).join('')}</ul>
      ${additionalExamplesLink(data.report.examples.length, data, limit)}
    `) : '';
}

function renderExample(example) {
  return `<li data-name="${example.title}">
    <a href="kite-atom-internal://example/${example.id}" class="example">
      <span class="title">${example.title}</span>
      <i class="icon icon-chevron-right"></i>
    </a>
  </li>`;
}

function additionalExamplesLink(examplesCount, data, limit) {
  const id = data.value ? data.value.id : data.symbol.id ? data.symbol.id : data.symbol.value.id ? data.symbol.value.id : data.symbol.value[0].id;
  return examplesCount <= limit // Don’t show an overflow link if it doesn’t contain any new stuff
  ? '' : `<a href="kite-atom-internal://examples-list/${id}"
          class="more-examples">All ${examplesCount} examples
          <i class="icon icon-chevron-right"></i>
          </a>`;
}

function renderUsages(symbol) {
  return symbol.report && symbol.report.usages && symbol.report.usages.length ? section('Examples from your code', `<ul class="usages-box">
        ${symbol.report.usages.map(renderUsage).join('')}
      </ul>`, {
    help: `<a href="https://help.kite.com/article/58-why-kite-is-cloud-powered"
          title="This section is visible just to you. Click to learn more."
          class="learn-more icon icon-question"></a>`
  }) : '';
}

function renderUsage(usage) {
  const base = path.basename(usage.filename);
  const url = [`kite-atom-internal://goto/${stripLeadingSlash(usage.filename)}`, usage.line, usage.begin_runes].join(':');
  return `<div class="usage-container">
    <li class="usage">
      ${highlightCode(wrapAfterParenthesis(usage.code.trim()))}
      <div class="links">
        <i class="icon icon-file-code"></i>
        <a href="${url}">${base}<span class="line-colon">:</span>${usage.line}</a>
      </div>
    </li>
  </div>`;
}

function renderMembers(value, limit) {
  if (!value || !value.details) {
    return '';
  }

  const detail = getDetails(value, 'type', 'module');
  const {
    members,
    total_members
  } = detail;
  return members.length === 0 ? '' : limit != null ? section('Popular members', `
        <ul class='code'>
          ${members.slice(0, limit).map(m => renderMember(m)).join('')}
        </ul>
        ${additionalMembersLink(total_members - limit, value, limit)}`) : section('Popular members', `
        <ul class='code'>
          ${members.map(m => renderMember(m)).join('')}
        </ul>
        ${total_members > members.length ? additionalMembersLink(total_members, value, limit) : ''}`);
}

function stripLeadingSlash(str) {
  return str.replace(/^\//, '');
}

function renderMember(member) {
  const label = !idIsEmpty(member.id) ? `<a href="kite-atom-internal://member/${member.id}">${memberLabel(member)}</a>` : memberLabel(member);

  if (member.value) {
    const type = head(member.value).kind;
    const synopsis = head(member.value).synopsis;
    const description = synopsis ? `<p>${synopsis}</p>` : '';
    return `<li data-name="${member.name}">
    <div class="split-line">
      <span class="name">${label}</span>
      <span class="type"><code>${type}</code></span>
    </div>
    ${description}
    </li>`;
  } else {
    return '';
  }
}

function additionalMembersLink(membersCount, value, kind, limit) {
  return membersCount <= limit ? '' : `<a href="kite-atom-internal://members-list/${value.id}"
          class="more-members">All ${membersCount} ${value.kind === 'type' ? 'attributes' : 'members'}
          <i class="icon icon-chevron-right"></i>
          </a>`;
}

function renderParameters(value) {
  const detail = getFunctionDetails(value);
  const allParameters = compact(flatten(gatherParameters(detail)));
  return detail && allParameters.length ? section('Parameters', `
    <dl>
      ${detail.parameters ? detail.parameters.map(p => renderParameter(p)).join('') : ''}
      ${renderLanguageSpecificArguments(detail)}
    </dl>`) : '';
}

function gatherParameters(detail) {
  const lang = detailLang(detail);

  switch (lang) {
    case 'python':
      return [detail ? detail.parameters || detailGet(detail, 'constructor', 'parameters') : null, detail ? detailGet(detail, 'vararg') : null, detail ? detailGet(detail, 'kwarg') : null];

    case 'javascript':
      return [detail ? detail.parameters : null, detail ? detailGet(detail, 'rest') : null];

    default:
      return [detail ? detail.parameters : null];
  }
}

function renderLanguageSpecificArguments(detail) {
  const lang = detailLang(detail);

  switch (lang) {
    case 'python':
      return [renderParameter(detailGet(detail, 'vararg'), '*'), renderParameter(detailGet(detail, 'kwarg'), '**')].join('');

    case 'javascript':
      return [renderParameter(detailGet(detail, 'rest'), '…')].join('');

    default:
      return '';
  }
}

function renderParameter(param, prefix = '', highlight = false) {
  return !param ? '' : `<dt class="split-line ${highlight ? 'highlight' : ''}">
      <span class="name"><code>${parameterName(param, prefix)}${parameterDefault(param)}</code></span>
      <span class="type"><code>${parameterType(param)}</code></span>
    </dt>
    <dd>${param.synopsis}</dd>
    `;
}

function renderReturnType(symbol) {
  const ret = symbolReturnType(symbol);
  return ret !== '' ? section('Returns', `<code>${ret}</code>`) : '';
}

function renderDocs(data) {
  const docs = symbolDescription(data);
  return docs && docs.trim() !== '' ? `<section class="summary collapsible collapse">
        <h4>Description</h4>
        <div class="description section-content">${docs}</div>
      </section>` : '';
}

function renderInvocations(symbol) {
  return ''; //   return section('Invocations', `<pre><code>Counter.increment(10)
  // Counter.increment(10, foo='bar')</code></pre>`);
}

module.exports = {
  debugData,
  highlightCode,
  pluralize,
  renderDefinition,
  renderDocs,
  renderExample,
  renderExamples,
  renderExtend,
  renderHeader,
  renderInvocations,
  renderLink,
  renderLinks,
  renderMember,
  renderMembers,
  renderParameter,
  renderParameters,
  renderReturnType,
  renderSymbolHeader,
  renderUsages,
  renderValueHeader,
  section,
  symbolDescription,
  valueDescription,
  wrapAfterParenthesis,
  wrapAfterParenthesisAndDots
};

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  CompositeDisposable,
  Disposable,
  TextEditor
} = __webpack_require__(2);

const KiteAPI = __webpack_require__(138);

const urls = __webpack_require__(155);

const {
  MAX_FILE_SIZE
} = __webpack_require__(190);

__webpack_require__(202);

const {
  STATES
} = KiteAPI;
const TOOLTIPS = {
  [STATES.UNSUPPORTED]: 'Kite only supports macOS, Windows, and Ubuntu at the moment.',
  [STATES.UNINSTALLED]: 'Kite is not installed.',
  [STATES.INSTALLED]: 'Kite is not running.',
  [STATES.RUNNING]: 'Kite is running but not reachable.',
  [STATES.READY]: 'Kite is ready.',
  sizeExceedsLimit: 'The current file is too large for Kite to handle',
  noIndex: 'Kite is ready, but no index available',
  indexing: 'Kite engine is indexing your code',
  syncing: 'Kite engine is syncing your code'
};
const STATUSES = {
  [STATES.UNSUPPORTED]: 'unsupported',
  [STATES.UNINSTALLED]: 'uninstalled',
  [STATES.INSTALLED]: 'installed',
  [STATES.RUNNING]: 'running',
  [STATES.READY]: 'ready'
};
const LABELS = {
  [STATES.UNSUPPORTED]: '',
  [STATES.UNINSTALLED]: 'Kite: not installed',
  [STATES.INSTALLED]: 'Kite: not running',
  [STATES.RUNNING]: '',
  [STATES.NOINDEX]: 'Kite: ready (unindexed)',
  [STATES.READY]: ''
};
module.exports = class Status {
  constructor() {
    this.element = document.createElement('div');
    this.element.className = 'kite-status';
    this.element.setAttribute('status', 'unknown');
    this.element.innerHTML = `<kite-logo small class="badge"></kite-logo>
                      <kite-logo sync></kite-logo>
                      <span class="text"></span>`;
    this.element.classList.add('inline-block');
    this.tooltipText = '';
    this.statusText = this.element.querySelector('.text');
  }

  init(K) {
    this.subscriptions = new CompositeDisposable();
    this.editors = K.getModule('editors');

    if (!this.editors) {
      return;
    }

    this.subscriptions.add(atom.tooltips.add(this.element, {
      title: () => this.tooltipText
    }));
    this.subscriptions.add(atom.workspace.onDidChangeActivePaneItem(item => {
      if (item instanceof TextEditor && this.editors.isGrammarSupported(item)) {
        this.startPolling();
      } else {
        this.stopPolling();
      }
    }));

    if (this.editors.isGrammarSupported(atom.workspace.getActiveTextEditor())) {
      this.startPolling();
    }
  }

  dispose() {
    this.subscriptions && this.subscriptions.dispose();
    delete this.subscriptions;
  }

  getElement() {
    return this.element;
  }

  startPolling() {
    const interval = setInterval(() => this.pollStatus(), atom.config.get('kite.pollingInterval'));
    this.pollingDisposable = new Disposable(() => {
      clearInterval(interval);
    });
    this.subscriptions.add(this.pollingDisposable);
    return this.pollStatus();
  }

  stopPolling() {
    if (this.pollingDisposable) {
      this.subscriptions.remove(this.pollingDisposable);
      this.pollingDisposable.dispose();
    }

    return this.pollStatus();
  }

  pollStatus() {
    if (this.isPolling) {
      return this.pollPromise;
    }

    this.isPolling = true;

    if (this.editors.hasActiveSupportedFile()) {
      const editor = atom.workspace.getActiveTextEditor();
      this.pollPromise = KiteAPI.requestJSON({
        path: urls.statusPath(editor.getPath())
      }).then(o => {
        this.element.removeAttribute('is-syncing');
        this.element.removeAttribute('is-indexing');
        this.element.removeAttribute('noIndex');
        this.statusText.innerHTML = LABELS[STATES.READY];
        this.element.setAttribute('status', STATUSES[STATES.READY]);

        if (o.status === 'indexing') {
          this.element.setAttribute('is-indexing', '');
          this.tooltipText = TOOLTIPS.indexing;
        } else if (o.status === 'syncing') {
          this.element.setAttribute('is-syncing', '');
          this.tooltipText = TOOLTIPS.syncing;
        } else if (o.status === 'noIndex') {
          this.element.setAttribute('noIndex', '');
          this.tooltipText = TOOLTIPS.noIndex;
          this.statusText.innerHTML = LABELS[STATES.NOINDEX];
        } else {
          if (this.fileExceedsMaxSize(editor)) {
            this.tooltipText = TOOLTIPS.sizeExceedsLimit;
          } else {
            this.tooltipText = TOOLTIPS[STATES.READY];
          }
        }
      })["catch"](err => {
        const {
          state
        } = err.data;
        this.element.removeAttribute('is-syncing');
        this.element.removeAttribute('is-indexing');
        this.element.removeAttribute('noIndex');

        if (state != undefined) {
          this.tooltipText = TOOLTIPS[state];
          this.statusText.innerHTML = LABELS[state];
          this.element.setAttribute('status', STATUSES[state]);
        } else {
          this.element.setAttribute('status', 'unsupported');
          this.statusText.innerHTML = '';
          this.tooltipText = '';
        }
      });
    } else {
      this.element.removeAttribute('is-syncing');
      this.element.removeAttribute('is-indexing');
      this.element.removeAttribute('nodindex');
      this.element.setAttribute('status', 'unsupported');
      this.tooltipText = '';
      this.statusText.innerHTML = '';
      this.pollPromise = Promise.resolve();
    }

    this.pollPromise = this.pollPromise.then(() => {
      this.isPolling = false;
    });
    return this.pollPromise;
  }

  fileExceedsMaxSize(editor) {
    return editor.getBuffer().getLength() > MAX_FILE_SIZE;
  }

};

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const fs = __webpack_require__(28);

const path = __webpack_require__(27);

const ASSETS_PATH =  true ? path.resolve(__dirname, '..', 'assets') : undefined;
const syncLogoSvg = String(fs.readFileSync(path.join(ASSETS_PATH, 'kitesync.svg')));
const logoSvg = String(fs.readFileSync(path.join(ASSETS_PATH, 'logo-no-text.svg')));
const logoSmallSvg = String(fs.readFileSync(path.join(ASSETS_PATH, 'logo-small.svg')));

class KiteLogo extends HTMLElement {
  static initClass() {
    customElements.define('kite-logo', this);
    return this;
  }

  constructor() {
    super();

    if (this.hasAttribute('sync')) {
      this.innerHTML = syncLogoSvg;
    } else if (this.hasAttribute('small')) {
      this.innerHTML = logoSmallSvg;
    } else {
      this.innerHTML = logoSvg;
    }
  }

}

module.exports = KiteLogo.initClass();

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  CompositeDisposable
} = __webpack_require__(2);

const KSGElement = __webpack_require__(204);

const {
  KSGSearchResult,
  KSGDefaultSearchResult
} = __webpack_require__(207);

const SearchModel = __webpack_require__(220);

const CodeblocksModel = __webpack_require__(221);

const {
  SEARCH_QUERY_SELECTION_EVENT,
  CODEBLOCKS_SELECTION_EVENT,
  SEARCH_QUERY_EVENT,
  DEFAULT_QUERY_SELECTION_EVENT,
  DEFAULT_CODEBLOCKS_SELECTION_EVENT
} = __webpack_require__(206);

const {
  DisposableEvent
} = __webpack_require__(5);

const metrics = __webpack_require__(180);

module.exports = class KSG {
  constructor() {
    this.codeblocks = new CodeblocksModel();
    this.search = new SearchModel();
    this._visible = false;
    this._needsRefresh = true;
    this.currentEditor = null; // use below for reinsertion

    this.cachedCursorPos = null;
    this.marker = null;
    this.decoration = null;
  }

  init(Kite) {
    // will need to pay attention to a notion of 'editors'
    this.element = new KSGElement();
    this._needsRefresh = false;
    this.subscriptions = new CompositeDisposable();
    this.subscriptions.add(atom.commands.add(this.element, {
      'core:close': () => this.hide(),
      'core:cancel': () => this.hide(),
      // what other commands (e.g. `core:confirm`) need to be added here?
      'kite:search-stack-overflow': () => {
        this.visible ? this.hide() : this.show(atom.workspace.getActiveTextEditor());
      }
    }));
    this.subscriptions.add(this.element.onCodeBlocksEvent(payload => {
      switch (payload.type) {
        case SEARCH_QUERY_SELECTION_EVENT:
          metrics.record('ksg_query', 'searched');
          this.codeblocks.executeQuery(payload);
          break;

        case CODEBLOCKS_SELECTION_EVENT:
          this.insertCodeblocks(payload);
          break;

        case DEFAULT_CODEBLOCKS_SELECTION_EVENT:
          this.executeExternalSearch(payload);
          break;
      }
    }));
    this.subscriptions.add(this.element.onSearchEvent(payload => {
      switch (payload.type) {
        case SEARCH_QUERY_EVENT:
          this.search.executeQuery(payload);
          break;

        case DEFAULT_QUERY_SELECTION_EVENT:
          this.executeExternalSearch(payload);
          break;
      }
    }));
    this.subscriptions.add(this.codeblocks.onDidUpdate(payload => {
      this.element.updateCodeBlocks(payload);
    }));
    this.subscriptions.add(this.codeblocks.onDidLoading(() => {
      this.element.toggleCodeBlocksLoading();
    }));
    this.subscriptions.add(this.search.onDidUpdate(payload => {
      this.element.updateSearch(payload);
    }));
    this.subscriptions.add(this.search.onDidLoading(() => {
      this.element.toggleSearchLoading();
    }));
  }

  executeExternalSearch({
    query
  }) {
    atom.applicationDelegate.openExternal(`https://www.google.com/search?q=${encodeURIComponent(query)}`);
    metrics.record('ksg_google', 'opened');
    this.hide();
  }

  insertCodeblocks({
    blocks,
    link
  }) {
    const title = this.currentEditor ? this.currentEditor.getTitle() : '';
    const decoratedBlocks = CodeblocksModel.decorateCodeblocks(blocks, link, title); // will by default insert at last cursor position

    this.currentEditor && this.currentEditor.insertText(decoratedBlocks, {
      select: true
    });
    metrics.record('ksg_snippet', 'selected'); // we close the KSG widget on the completion of this action

    this.hide();
  }

  dispose() {
    this.hide();
    this.subscriptions && this.subscriptions.dispose();
    this.element && this.element.dispose();
    this.search && this.search.dispose();
    this.codeblocks && this.codeblocks.dispose();
    delete this.element;
    delete this.subscriptions;
    delete this.search;
    delete this.codeblocks;
  }

  get needsRefresh() {
    return this._needsRefresh;
  }

  static shouldStopPropagation(event) {
    if (event instanceof KeyboardEvent) {
      if (event.code === 'Enter' || event.code === 'ArrowUp' || event.code === 'ArrowDown' || event.code === 'Tab') {
        return true;
      }
    }

    return false;
  }

  shouldHideForTarget(target) {
    if (this.element.contains(target)) {
      return false;
    }

    while (target) {
      if (target instanceof KSGDefaultSearchResult || target instanceof KSGSearchResult) {
        return false;
      }

      if (target && target.classList && (target.classList.contains('ksg-code-block-toggle') || target.classList.contains('ksg-shortcut'))) {
        return false;
      }

      target = target.parentNode;
    }

    return true;
  }

  show(editor) {
    this._visible = true; // if we attempt to show, and there's another ksg panel in another editor
    // we hide that other panel (we keep ksg as a singleton for now)

    if (this.currentEditor && this.currentEditor.id !== editor.id) {
      this.hide();
    } // do nothing if already showing in current editor


    if (this.currentEditor && this.currentEditor.id === editor.id) {
      return;
    }

    this.currentEditor = editor;

    if (this.needsRefresh) {
      this.init();
    } // prevent UI events from propagating too far
    // prevent keystrokes and wheel events from going to the text editor


    this.subscriptions.add(new DisposableEvent(this.element, 'keydown wheel', e => {
      if (KSG.shouldStopPropagation(e)) {
        e.stopPropagation();
      }
    })); // hide on clicks outside the element

    this.subscriptions.add(new DisposableEvent(document, 'click', e => {
      // our search result clicking logic disappears those elements from the DOM before this handler's run
      if (this.shouldHideForTarget(e.target)) {
        this.hide();
      }
    })); // prevent mouse-scroll events from default behavior if outside KSG

    this.subscriptions.add(new DisposableEvent(this.currentEditor.element, 'wheel', e => {
      e.preventDefault();
    }));
    const cursor = this.currentEditor.getCursorScreenPosition();
    this.marker = this.currentEditor.markScreenPosition({
      row: cursor.row,
      column: 0
    });
    this.decoration = this.currentEditor.decorateMarker(this.marker, {
      type: 'overlay',
      item: this.element
    });
  }

  hide() {
    if (this.element && this.element.parentNode) {
      this.element.parentNode.removeChild(this.element);
    }

    this.marker && this.marker.destroy();
    this.marker = null;
    this.decoration = null; // we need to explicitly refocus the editor

    this.currentEditor && this.currentEditor.element.focus();
    this.currentEditor = null;
    this.subscriptions && this.subscriptions.dispose();
    this._visible = false;
    this._needsRefresh = true;
  }

  get visible() {
    return this._visible;
  }

  getElement() {
    return this.element;
  }

};

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  CompositeDisposable,
  Emitter
} = __webpack_require__(2);

const {
  KSGCodeBlocks
} = __webpack_require__(205);

const {
  KSGSearch
} = __webpack_require__(207);

const {
  DisposableEvent
} = __webpack_require__(5);

const {
  CODEBLOCKS_EVENT,
  CODEBLOCKS_SELECTION_EVENT,
  DEFAULT_CODEBLOCKS_SELECTION_EVENT,
  SEARCH_EVENT,
  SEARCH_QUERY_EVENT,
  SEARCH_QUERY_SELECTION_EVENT,
  DEFAULT_QUERY_SELECTION_EVENT,
  KSG_NAV_UP_EVENT,
  KSG_NAV_DOWN_EVENT,
  KSG_SELECTION_EVENT
} = __webpack_require__(206);
/**
 * will need to have nest custom elements...
 * how to do that?
 */


class KSG extends HTMLElement {
  constructor() {
    super();
    this.subscriptions = new CompositeDisposable();
    this.emitter = new Emitter();
    this.addWrapper();
  }

  addWrapper() {
    this.wrapper = document.createElement('div');
    this.wrapper.setAttribute('class', 'kite-ksg-inner');
    this.appendChild(this.wrapper);
  }

  connectedCallback() {
    if (!this.emitter) {
      this.emitter = new Emitter();
    }

    if (!this.subscriptions) {
      this.subscriptions = new CompositeDisposable();
    }

    if (!this.wrapper) {
      this.addWrapper();
    }

    this._disposed = false;
    this.setAttribute('tabindex', -1);
    this.codeBlocksElem = new KSGCodeBlocks(this);
    this.searchElem = new KSGSearch(this);
    this.subscriptions.add(this.codeBlocksElem.onCodeblocksSelected(payload => {
      payload.type = CODEBLOCKS_SELECTION_EVENT;
      this.emitter.emit(CODEBLOCKS_EVENT, payload);
    }));
    this.subscriptions.add(this.codeBlocksElem.onDefaultCodeblockSelection(payload => {
      payload.type = DEFAULT_CODEBLOCKS_SELECTION_EVENT;
      this.emitter.emit(CODEBLOCKS_EVENT, payload);
    }));
    this.subscriptions.add(this.searchElem.onSearchQueryEvent(payload => {
      payload.type = SEARCH_QUERY_EVENT;
      this.emitter.emit(SEARCH_EVENT, payload); // close codeblocks elem

      this.codeBlocksElem.clearGroups();
    }));
    this.subscriptions.add(this.searchElem.onSearchQuerySelection(payload => {
      this.searchElem.blurSearchBar();
      payload.type = SEARCH_QUERY_SELECTION_EVENT;
      this.emitter.emit(CODEBLOCKS_EVENT, payload);
    }));
    this.subscriptions.add(this.searchElem.onDefaultQuerySelection(payload => {
      this.searchElem.blurSearchBar();
      payload.type = DEFAULT_QUERY_SELECTION_EVENT;
      this.emitter.emit(SEARCH_EVENT, payload);
    }));
    this.subscriptions.add(new DisposableEvent(this, 'keydown', e => {
      switch (e.code) {
        case 'ArrowDown':
          this.emitter.emit(KSG_NAV_DOWN_EVENT);
          break;

        case 'ArrowUp':
          this.emitter.emit(KSG_NAV_UP_EVENT);
          break;

        case 'Enter':
          this.emitter.emit(KSG_SELECTION_EVENT);
          break;
      }
    }));
    this.wrapper.appendChild(this.searchElem);
    this.wrapper.appendChild(this.codeBlocksElem);
  }

  disconnectedCallback() {
    this.dispose();
  }

  onCodeBlocksEvent(callback) {
    return this.emitter.on(CODEBLOCKS_EVENT, callback);
  }

  onSearchEvent(callback) {
    return this.emitter.on(SEARCH_EVENT, callback);
  }

  onNavUpEvent(callback) {
    return this.emitter.on(KSG_NAV_UP_EVENT, callback);
  }

  onNavDownEvent(callback) {
    return this.emitter.on(KSG_NAV_DOWN_EVENT, callback);
  }

  onSelectionEvent(callback) {
    return this.emitter.on(KSG_SELECTION_EVENT, callback);
  }

  updateSearch(payload) {
    this.searchElem && this.searchElem.updateView(payload);
  }

  updateCodeBlocks(payload) {
    this.codeBlocksElem && this.codeBlocksElem.updateView(payload);
  }

  toggleCodeBlocksLoading() {
    this.codeBlocksElem && this.codeBlocksElem.toggleLoading();
  }

  toggleSearchLoading() {
    this.searchElem && this.searchElem.toggleLoading();
  }

  toggleErrorMessage(shouldDisplay) {
    if (!this.errorMsg) {
      this.errorMsg = document.createElement('div');
      this.errorMsg.className = 'ksg-search-error';
      this.errorMsg.innerHTML = 'An error occurred! Please make sure that Kite is running and that you have an Internet connection.';
    }

    if (shouldDisplay) {
      this.wrapper && !(this.wrapper.lastElementChild.className === 'ksg-search-error') && this.wrapper.appendChild(this.errorMsg);
    } else {
      this.errorMsg.parentNode && this.wrapper && this.wrapper.removeChild(this.errorMsg);
    }
  }

  dispose() {
    this.codeBlocksElem && this.wrapper.removeChild(this.codeBlocksElem);
    this.searchElem && this.wrapper.removeChild(this.searchElem);
    this.errorMsg && this.errorMsg.parentNode && this.wrapper && this.wrapper.removeChild(this.errorMsg);
    this.wrapper && this.wrapper.parentNode && this.wrapper.parentNode.removeChild(this.wrapper);
    this.wrapper = null;
    this.subscriptions && this.subscriptions.dispose();
    this.emitter && this.emitter.dispose();
    delete this.emitter;
    delete this.subscriptions;
    this.codeBlocksElem = null;
    this.searchElem = null;
  }

}

customElements.define('kite-ksg', KSG);
module.exports = KSG;

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  CompositeDisposable,
  Emitter
} = __webpack_require__(2);

const {
  DisposableEvent
} = __webpack_require__(5);

const {
  CODEBLOCKS_ADD,
  CODEBLOCK_CLICKED,
  CODEBLOCKS_SELECTED,
  CODEBLOCKS_DEFAULT_SELECTED,
  CODEBLOCK_LINE_LIMIT,
  CODEBLOCKS_NAV_DOWN,
  CODEBLOCKS_NAV_UP
} = __webpack_require__(206);

class KSGCodeBlocks extends HTMLElement {
  constructor(parentElement) {
    super();
    this.parent = parentElement;
    this.emitter = new Emitter();
    this.subscriptions = new CompositeDisposable();
    this.groups = [];
    this.tabIndex = -1;
    this.instantiated = false;
    this.highlightedGroupIdx = null;
    this.loading = false;
    this.addWrapper();
  }

  connectedCallback() {
    !this.instantiated && this.instantiate();
  }

  addWrapper() {
    this.wrapper = document.createElement('div');
    this.wrapper.setAttribute('class', 'kite-ksg-code-blocks-wrapper');
    this.appendChild(this.wrapper);
  }

  disconnectedCallback() {
    this.dispose();
  }

  dispose() {
    this.clearGroups();
    this.instantiated = false;
    this.emitter && this.emitter.dispose();
    this.subscriptions && this.subscriptions.dispose();
    this.wrapper && this.wrapper.parentNode && this.wrapper.parentNode.removeChild(this.wrapper);
    this.wrapper = null;
    delete this.emitter;
    delete this.subscriptions;
  }

  instantiate() {
    if (!this.subscriptions) {
      this.subscriptions = new CompositeDisposable();
    }

    if (!this.emitter) {
      this.emitter = new Emitter();
    }

    if (!this.wrapper) {
      this.addWrapper();
    }

    this.instantiated = true;
  }

  makeSelection() {
    if (this.groups && this.groups.length && this.highlightedGroupIdx !== null) {
      this.groups[this.highlightedGroupIdx].selectHighlighted();
      this.highlightedGroupIdx = null;
    }
  }

  moveSelection(direction) {
    if (this.groups && this.groups.length) {
      switch (direction) {
        case CODEBLOCKS_NAV_DOWN:
          if (this.highlightedGroupIdx === null) {
            this.highlightedGroupIdx = 0; // we assume that a group has at least some codeblock to highlight

            this.groups[this.highlightedGroupIdx].highlightFirst();
          } else if (this.highlightedGroupIdx < this.groups.length) {
            if (!this.groups[this.highlightedGroupIdx].highlightNext()) {
              if (this.highlightedGroupIdx < this.groups.length - 1) {
                // unhighlight current group
                this.groups[this.highlightedGroupIdx].unhighlight();
                this.highlightedGroupIdx++; // we assume that a group has at least some codeblock to highlight

                this.groups[this.highlightedGroupIdx].highlightFirst();
              }
            }
          }

          break;

        case CODEBLOCKS_NAV_UP:
          if (this.highlightedGroupIdx !== null) {
            if (!this.groups[this.highlightedGroupIdx].highlightPrev()) {
              this.groups[this.highlightedGroupIdx].unhighlight();

              if (this.highlightedGroupIdx === 0) {
                this.highlightedGroupIdx = null;
              } else {
                this.highlightedGroupIdx--;
                this.groups[this.highlightedGroupIdx].highlightLast();
              }
            }
          }

          break;
      }
    }
  }

  clearGroups() {
    // we assume that subscriptions is only holding codeblock related stuff
    if (this.groups && this.groups.length > 0) {
      this.subscriptions && this.subscriptions.dispose();
      delete this.subscriptions;
      this.instantiate();
      this.groups.forEach(group => {
        this.wrapper && this.wrapper.removeChild(group);
        group.dispose && group.dispose();
      });
      this.groups = [];
    }
  }

  onCodeblocksSelected(callback) {
    return this.emitter && this.emitter.on(CODEBLOCKS_SELECTED, callback);
  }

  onDefaultCodeblockSelection(callback) {
    return this.emitter && this.emitter.on(CODEBLOCKS_DEFAULT_SELECTED, callback);
  }

  toggleLoading() {
    if (!this.loading) {
      const loadingEl = new KSGLoadingBlock();
      this.groups.push(loadingEl);
      this.wrapper.appendChild(loadingEl);
      this.focus();
    } else {
      this.groups = this.groups.filter(group => !(group instanceof KSGLoadingBlock));
    }

    this.loading = !this.loading;
  }

  updateView({
    payload,
    data
  }) {
    this.clearGroups();

    if (payload === 'error') {
      this.parent.toggleErrorMessage(true);
      this.parent.searchElem && this.parent.searchElem.setFocus();
      return;
    }

    this.parent.toggleErrorMessage(false);
    this.loading = false; // add default group logic here...

    let idx = 0;

    if (data && data.answers && data.answers.length > 0) {
      // fragment strategy for appending
      const groupFragment = document.createDocumentFragment();
      data.answers.forEach(answer => {
        const groupEl = new KSGCodeBlockGroup(data.query, idx, this, answer); // we assume that subscriptions is only holding codeblock related Disposables

        this.subscriptions.add(groupEl.onAddAll(payload => {
          this.emitter.emit(CODEBLOCKS_SELECTED, payload);
        }));
        groupFragment.appendChild(groupEl);
        this.groups.push(groupEl);
        idx++;
      });
      this.wrapper.appendChild(groupFragment);
    }

    if (data && data.query) {
      const defaultGroupEl = new KSGCodeBlockGroup(data.origQuery, idx, this, {}, true);
      this.subscriptions.add(defaultGroupEl.onAddAll(payload => {
        this.emitter.emit(CODEBLOCKS_DEFAULT_SELECTED, payload);
      }));
      this.groups.push(defaultGroupEl);
      this.wrapper.appendChild(defaultGroupEl); // Subscribe callbacks to parent up, down, selection events after view is updated.

      this.subscriptions.add(this.parent.onNavDownEvent(() => this.moveSelection(CODEBLOCKS_NAV_DOWN)), this.parent.onNavUpEvent(() => this.moveSelection(CODEBLOCKS_NAV_UP)), this.parent.onSelectionEvent(() => this.makeSelection()));
      this.moveSelection(CODEBLOCKS_NAV_DOWN);
      this.parent.searchElem && this.parent.searchElem.setFocus();
    }
  }

}

class KSGLoadingBlock extends HTMLElement {
  constructor() {
    super();
    const loadingWrapper = document.createElement('div');
    loadingWrapper.classList.add('loading-spinner-wrapper');
    const loadingSpinner = document.createElement('div');
    loadingSpinner.classList.add('loading-spinner');
    loadingWrapper.appendChild(loadingSpinner);
    this.appendChild(loadingWrapper);
  }

}

class KSGCodeBlockGroup extends HTMLElement {
  constructor(query, position, parent, answer = {}, isDefaultGroup = false) {
    super();
    this.position = position;
    this.parent = parent;
    this.setAttribute('class', this.position % 2 === 0 ? 'even' : 'odd');
    this.isDefaultGroup = isDefaultGroup;
    this.highlightedIdx = null;
    this.subscriptions = new CompositeDisposable();
    this.emitter = new Emitter();
    this.query = query;
    this.blocks = [];

    if (this.isDefaultGroup) {
      const defaultBlock = new KSGDefaultCodeBlock(query, this);
      defaultBlock.id = this.blocks.length;
      this.subscriptions.add(defaultBlock.onClicked(({
        query
      }) => {
        this.emitter.emit(CODEBLOCKS_ADD, {
          query
        });
      }));
      this.blocks.push(defaultBlock);
      this.appendChild(defaultBlock);
    } else {
      const {
        question_title,
        votes,
        is_accepted,
        code_blocks,
        answer_id
      } = answer;

      if (code_blocks && code_blocks.length > 0) {
        const fragment = document.createDocumentFragment();
        code_blocks.forEach((block, idx) => {
          const blockEl = idx == 0 ? new KSGCodeBlock(block, this, question_title, answer_id, votes, is_accepted) : new KSGCodeBlock(block, this);
          blockEl.id = this.blocks.length;
          this.subscriptions.add(blockEl.onClicked(({
            block
          }) => {
            this.emitter.emit(CODEBLOCKS_ADD, {
              blocks: [block],
              link: blockEl.link
            });
          }));
          fragment.appendChild(blockEl);
          this.blocks.push(blockEl);
        });
        this.appendChild(fragment);
      }
    }
  }

  selectHighlighted() {
    if (this.highlightedIdx !== null && this.blocks && this.blocks.length) {
      this.blocks[this.highlightedIdx].makeSelection();
      this.highlightedIdx = null;
    }
  }

  unhighlight() {
    if (this.highlightedIdx !== null && this.blocks && this.blocks.length) {
      this.blocks[this.highlightedIdx].unhighlight();
      this.highlightedIdx = null;
    }
  } // the highlighting methods assume only one block can be highlighted at a time


  highlightFirst() {
    if (this.highlightedIdx !== null) {
      this.unhighlight();
    }

    if (this.blocks && this.blocks.length) {
      this.highlightedIdx = 0;
      this.blocks[this.highlightedIdx].highlight();
      this.blocks[this.highlightedIdx].scrollIntoView({
        block: 'center',
        inline: 'nearest'
      });
    }
  }

  highlightLast() {
    if (this.highlightedIdx !== null) {
      this.unhighlight();
    }

    if (this.blocks && this.blocks.length) {
      this.highlightedIdx = this.blocks.length - 1;
      this.blocks[this.highlightedIdx].highlight();
      this.blocks[this.highlightedIdx].scrollIntoView({
        block: 'center',
        inline: 'nearest'
      });
    }
  }

  highlightNext() {
    if (this.highlightedIdx === null) {
      this.highlightFirst();
      return true;
    } else if (this.blocks && this.blocks.length && this.highlightedIdx < this.blocks.length - 1) {
      this.blocks[this.highlightedIdx].unhighlight();
      this.highlightedIdx++;
      this.blocks[this.highlightedIdx].highlight();
      this.blocks[this.highlightedIdx].scrollIntoView({
        block: 'center',
        inline: 'nearest'
      });
      return true;
    }

    return false;
  }

  highlightPrev() {
    if (this.highlightedIdx === null) {
      this.highlightLast();
      return true;
    } else if (this.blocks && this.blocks.length && this.highlightedIdx > 0) {
      this.blocks[this.highlightedIdx].unhighlight();
      this.highlightedIdx--;
      this.blocks[this.highlightedIdx].highlight();
      this.blocks[this.highlightedIdx].scrollIntoView({
        block: 'center',
        inline: 'nearest'
      });
      return true;
    }

    return false;
  }

  onAddAll(callback) {
    return this.emitter && this.emitter.on(CODEBLOCKS_ADD, callback);
  }

  disconnectedCallback() {
    this.dispose();
  }

  dispose() {
    this.blocks = [];
    this.subscriptions && this.subscriptions.dispose();
    this.emitter && this.emitter.dispose();
  }

}

class KSGCodeBlock extends HTMLElement {
  static truncateCode(codeblock) {
    let lineCount = 0;
    let idx = 0;

    for (const c of codeblock) {
      if (c === '\n') {
        lineCount++;
      }

      if (lineCount === CODEBLOCK_LINE_LIMIT) {
        break;
      }

      idx++;
    }

    return codeblock.substring(0, idx);
  }

  static createToggleEl(arrowText = '↧') {
    const toggleSizeEl = document.createElement('div'); // factor out below into static method

    toggleSizeEl.classList.add('ksg-code-block-toggle');
    const ellipsis = document.createElement('span');
    ellipsis.classList.add('ellipsis');
    ellipsis.appendChild(document.createTextNode('…'));
    toggleSizeEl.appendChild(ellipsis);
    const arrow = document.createElement('span');
    arrow.classList.add('arrow');
    arrow.appendChild(document.createTextNode(arrowText));
    toggleSizeEl.appendChild(arrow);
    return toggleSizeEl;
  }

  constructor(codeblock, group, title = null, answerId = null, votes = null, accepted = null) {
    super();
    this.subscriptions = new CompositeDisposable();
    this.emitter = new Emitter();
    this._code = codeblock;
    this.group = group;
    this.wrapper = document.createElement('div');
    this.wrapper.classList.add('ksg-code-block-wrapper');

    if (title !== null) {
      const topEl = document.createElement('div');
      const metaInfoEl = document.createElement('div');
      const titleEl = document.createElement('span');
      const voteEl = document.createElement('span');
      topEl.setAttribute('class', 'ksg-codeblock-group-top');
      metaInfoEl.setAttribute('class', 'ksg-codeblock-group-meta');
      titleEl.setAttribute('class', 'ksg-codeblock-group-title');
      voteEl.setAttribute('class', 'ksg-codeblock-group-vote');

      if (accepted) {
        metaInfoEl.classList.add('accepted');
      }

      const titleLink = document.createElement('a');
      const titleLinkIcon = document.createElement('span');
      titleLinkIcon.setAttribute('class', 'ksg-codeblocks-title-link-icon');
      titleLinkIcon.textContent = ' ⇗';
      this.link = `https://stackoverflow.com/a/${answerId}`;
      titleLink.href = this.link;
      titleLink.appendChild(document.createTextNode(title));

      titleLink.onclick = () => {
        const metrics = __webpack_require__(180);

        metrics.record('ksg_so', 'opened');
      };

      titleEl.appendChild(titleLink);
      titleEl.appendChild(titleLinkIcon);
      typeof votes === 'number' && voteEl.appendChild(document.createTextNode(`${votes} votes ${accepted ? '✓' : ''}`));
      metaInfoEl.appendChild(titleEl);
      metaInfoEl.appendChild(voteEl);
      topEl.appendChild(metaInfoEl);
      this.wrapper.appendChild(topEl);
    }

    this.codeblockEl = document.createElement('div');
    this.codeblockEl.classList.add('ksg-code-block-code');
    this._displayCode = KSGCodeBlock.truncateCode(codeblock);
    this.truncatedCode = this._displayCode;
    this.codeblockEl.appendChild(document.createTextNode(this.displayCode));
    this.subscriptions.add(new DisposableEvent(this.codeblockEl, 'click', e => {
      this.emitter.emit(CODEBLOCK_CLICKED, {
        block: this.code
      });
    }));
    this.wrapper.appendChild(this.codeblockEl);

    if (this.isTruncated) {
      this.toggleSizeEl = KSGCodeBlock.createToggleEl();
      this.instantiateToggleEl();
      this.wrapper.appendChild(this.toggleSizeEl);
    }

    this.onmouseover = () => {
      const groupParent = this.group.parent;
      const highlightedGroupIdx = groupParent.highlightedGroupIdx;

      if (highlightedGroupIdx !== null) {
        // Unhighlight currently higlighted code block
        groupParent.groups[highlightedGroupIdx].unhighlight();
      } // Updated codeBlockGroup's highlightedIdx


      this.group.highlightedIdx = this.id; // Update codeBlockGroup parent highlightedGroupIdx with codeBlockGroup position

      groupParent.highlightedGroupIdx = this.group.position;
      this.highlight();
    };

    this.appendChild(this.wrapper);
  }

  instantiateToggleEl() {
    if (this.toggleDisposableEvent) {
      this.toggleDisposableEvent.dispose();
      this.toggleDisposableEvent = null;
    }

    this.toggleDisposableEvent = new DisposableEvent(this.toggleSizeEl, 'click', e => {
      let arrowText;

      if (this.isTruncated) {
        arrowText = '↥';
        this._displayCode = this._code;
      } else {
        arrowText = '↧';
        this._displayCode = this.truncatedCode;
      }

      this.codeblockEl.textContent = this.displayCode;
      this.toggleSizeEl.parentNode && this.toggleSizeEl.parentNode.removeChild(this.toggleSizeEl);
      this.toggleSizeEl = KSGCodeBlock.createToggleEl(arrowText);
      this.instantiateToggleEl();
      this.wrapper.appendChild(this.toggleSizeEl);
    });
  }

  get isTruncated() {
    return this._code.length > this._displayCode.length;
  }

  get displayCode() {
    return this._displayCode;
  }

  get code() {
    return this._code;
  }

  makeSelection() {
    this.emitter.emit(CODEBLOCK_CLICKED, {
      block: this.code
    });
  }

  highlight() {
    this.classList.add('highlighted');
  }

  unhighlight() {
    this.classList.remove('highlighted');
  }

  onClicked(callback) {
    return this.emitter && this.emitter.on(CODEBLOCK_CLICKED, callback);
  }

  dispose() {
    this.subscriptions && this.subscriptions.dispose();
    this.emitter && this.emitter.dispose();
    this.codeblockEl && this.codeblockEl.parentNode && this.codeblockEl.parentNode.removeChild(this.codeblockEl);
    this.toggleSizeEl && this.toggleSizeEl.parentNode && this.toggleSizeEl.parentNode.removeChild(this.toggleSizeEl);
    this.wrapper && this.wrapper.parentNode && this.wrapper.parentNode.removeChild(this.wrapper);
    this.wrapper = null;
    this.codeblockEl = null;
    this.toggleSizeEl = null;
  }

  disconnectedCallback() {
    this.dispose();
  }

}

class KSGDefaultCodeBlock extends HTMLElement {
  constructor(query, group) {
    super();
    this.emitter = new Emitter();
    this.subscriptions = new CompositeDisposable();
    this.query = query;
    this.group = group;
    const fragment = document.createDocumentFragment();
    const cantFindSpan = document.createElement('span');
    cantFindSpan.textContent = "Can't find what you're looking for? ";
    fragment.appendChild(cantFindSpan);
    const searchForSpan = document.createElement('span');
    searchForSpan.textContent = 'Search for ';
    fragment.appendChild(searchForSpan);
    const queryEl = document.createElement('span');
    queryEl.textContent = this.query;
    queryEl.classList.add('query');
    fragment.appendChild(queryEl);
    const onGoogleSpan = document.createElement('span');
    onGoogleSpan.textContent = ' on Google ⇗';
    fragment.appendChild(onGoogleSpan);
    this.appendChild(fragment);

    this.onmouseover = () => {
      const groupParent = this.group.parent;
      const highlightedGroupIdx = groupParent.highlightedGroupIdx;

      if (highlightedGroupIdx) {
        // Unhighlight currently higlighted code block
        groupParent.groups[highlightedGroupIdx].unhighlight();
      } // Updated codeBlockGroup's highlightedIdx


      this.group.highlightedIdx = this.id; // Update codeBlockGroup parent highlightedGroupIdx with codeBlockGroup position

      groupParent.highlightedGroupIdx = this.group.position;
      this.highlight();
    };

    this.subscriptions.add(new DisposableEvent(this, 'click', this.clickHandler));
    this.query = query;
  } // what methods of KSGCodeblock does this need to implement?


  clickHandler(e) {
    const query = !this.query.toLowerCase().includes('python') ? `python ${this.query}` : this.query;
    this.emitter.emit(CODEBLOCK_CLICKED, {
      query: query
    });
  }

  onClicked(callback) {
    return this.emitter && this.emitter.on(CODEBLOCK_CLICKED, callback);
  }

  unhighlight() {
    this.classList.remove('highlighted');
  }

  highlight() {
    this.classList.add('highlighted');
  }

  makeSelection() {
    this.emitter.emit(CODEBLOCK_CLICKED, {
      query: this.query
    });
  }

  dispose() {
    this.emitter && this.emitter.dispose();
    this.subscriptions && this.subscriptions.dispose();
  }

}

customElements.define('kite-ksg-loading-block', KSGLoadingBlock);
customElements.define('kite-ksg-code-block', KSGCodeBlock);
customElements.define('kite-ksg-default-code-block', KSGDefaultCodeBlock);
customElements.define('kite-ksg-code-block-group', KSGCodeBlockGroup);
customElements.define('kite-ksg-code-blocks', KSGCodeBlocks);
module.exports = {
  KSGCodeBlocks,
  KSGCodeBlockGroup,
  KSGCodeBlock
};

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const CODEBLOCKS_ADD = 'did-codeblocks-add-all';
const CODEBLOCK_CLICKED = 'did-codeblock-get-clicked';
const CODEBLOCKS_SELECTED = 'did-codeblocks-get-selected';
const CODEBLOCKS_DEFAULT_SELECTED = 'did-codeblocks-default-get-selected';
const CODEBLOCKS_SELECTION_EVENT = 'did-codeblocks-selection-event';
const DEFAULT_CODEBLOCKS_SELECTION_EVENT = 'did-default-codeblocks-selection-event';
const CODEBLOCKS_LOADING = 'did-codeblocks-loading';
const CODEBLOCK_LINE_LIMIT = 10;
const SEARCH_QUERY_EVENT = 'did-search-query-event';
const SEARCH_LOADING = 'did-search-loading';
const SEARCH_QUERY_SELECTION_EVENT = 'did-search-query-selected-event';
const DEFAULT_QUERY_SELECTION_EVENT = 'did-default-search-query-selection-event';
const CODEBLOCKS_EVENT = 'did-codeblocks-event';
const SEARCH_EVENT = 'did-search-event';
const CODEBLOCKS_MODEL_UPDATE = 'did-codeblocks-model-update';
const SEARCH_MODEL_UPDATE = 'did-search-model-update';
const SEARCH_DEBOUNCE = 200; //ms

const SEARCH_NAV_UP = -1;
const SEARCH_NAV_DOWN = 1;
const CODEBLOCKS_NAV_UP = -1;
const CODEBLOCKS_NAV_DOWN = 1;
const KSG_NAV_UP_EVENT = 'did-nav-up-event';
const KSG_NAV_DOWN_EVENT = 'did-nav-down-event';
const KSG_SELECTION_EVENT = 'did-select-event';
module.exports = {
  CODEBLOCKS_ADD,
  CODEBLOCK_CLICKED,
  CODEBLOCKS_SELECTED,
  CODEBLOCKS_DEFAULT_SELECTED,
  CODEBLOCKS_SELECTION_EVENT,
  CODEBLOCKS_LOADING,
  CODEBLOCK_LINE_LIMIT,
  SEARCH_QUERY_EVENT,
  SEARCH_LOADING,
  SEARCH_QUERY_SELECTION_EVENT,
  DEFAULT_QUERY_SELECTION_EVENT,
  DEFAULT_CODEBLOCKS_SELECTION_EVENT,
  CODEBLOCKS_EVENT,
  SEARCH_EVENT,
  CODEBLOCKS_MODEL_UPDATE,
  SEARCH_MODEL_UPDATE,
  SEARCH_DEBOUNCE,
  SEARCH_NAV_DOWN,
  SEARCH_NAV_UP,
  CODEBLOCKS_NAV_UP,
  CODEBLOCKS_NAV_DOWN,
  KSG_NAV_UP_EVENT,
  KSG_NAV_DOWN_EVENT,
  KSG_SELECTION_EVENT
};

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  TextEditor,
  CompositeDisposable,
  Emitter
} = __webpack_require__(2);

const debounce = __webpack_require__(208);

const {
  DisposableEvent
} = __webpack_require__(5);

const {
  SEARCH_DEBOUNCE,
  SEARCH_QUERY_EVENT,
  SEARCH_QUERY_SELECTION_EVENT,
  DEFAULT_QUERY_SELECTION_EVENT,
  SEARCH_NAV_DOWN,
  SEARCH_NAV_UP
} = __webpack_require__(206);

class KSGSearch extends HTMLElement {
  constructor(parentElement) {
    super();
    this.parent = parentElement;
    this.searchInput = new TextEditor({
      placeholderText: 'How do I...',
      mini: true
    });
    this.searchInputView = this.searchInput.getElement();
    this.appendLogo();
    this.cursorPos = [0, 0];
    this.instantiate();
  }

  appendLogo() {
    const logoSpan = document.createElement('span');
    logoSpan.className = 'ksg-kite-logo';
    this.searchInputView.appendChild(logoSpan);
  }

  instantiate() {
    if (!this.emitter) {
      this.emitter = new Emitter();
    }

    if (!this.subscriptions) {
      this.subscriptions = new CompositeDisposable();
    }

    if (!this.wrapper) {
      this.wrapper = document.createElement('div');
      this.wrapper.setAttribute('class', 'kite-ksg-search-wrapper');
    }

    this.loading = false;
    this.shouldCancelChangeQuery = false;
    const debouncedSearchHandler = debounce(e => {
      if (!this.shouldCancelChangeQuery) {
        this.emitter && this.emitter.emit(SEARCH_QUERY_EVENT, {
          query: this.searchInput.getText()
        });
      } else {
        this.shouldCancelChangeQuery = false;
      }
    }, SEARCH_DEBOUNCE, {
      leading: true
    });
    this.subscriptions.add(this.searchInput.onDidChange(debouncedSearchHandler));
    this.subscriptions.add(this.searchInput.onWillInsertText(() => {
      // Record when new query is started (first char inserted)
      if (this.searchInput.getText().length === 0) {
        const metrics = __webpack_require__(180);

        metrics.record('ksg_query', 'started');
      }
    }));
    this.subscriptions.add(new DisposableEvent(this, 'keydown', e => {
      switch (e.code) {
        case 'ArrowDown':
          this.searchResults && this.searchResults.moveSelection(SEARCH_NAV_DOWN);
          break;

        case 'ArrowUp':
          this.searchResults && this.searchResults.moveSelection(SEARCH_NAV_UP);
          break;

        case 'Enter':
          if (this.searchResults && this.searchResults.hasSelected()) {
            // make selected query logic
            const defaultSelected = this.searchResults.isDefaultSelected();
            this.shouldCancelChangeQuery = true;
            this.searchInput.setText(this.searchResults.selectedQuery);
            this.clearSearchResults();

            if (defaultSelected) {
              this.emitter.emit(DEFAULT_QUERY_SELECTION_EVENT, {
                query: this.searchInput.getText()
              });
            } else {
              this.emitter.emit(SEARCH_QUERY_SELECTION_EVENT, {
                query: this.searchInput.getText()
              });
            }
          } else {
            // send current input
            if (this.searchInput.getText() && this.searchResults) {
              const onlyDefault = this.searchResults.onlyResultIsDefault();
              this.clearSearchResults();

              if (onlyDefault) {
                this.emitter.emit(DEFAULT_QUERY_SELECTION_EVENT, {
                  query: this.searchInput.getText()
                });
              } else {
                this.emitter.emit(SEARCH_QUERY_SELECTION_EVENT, {
                  query: this.searchInput.getText()
                });
              }
            }
          }

      }
    }));
    this.wrapper.appendChild(this.searchInputView);
    this.appendChild(this.wrapper);
    this.instantiated = true;
  }

  blurSearchBar() {
    this.blur();
    this.searchInputView && this.searchInputView.blur();
  }

  connectedCallback() {
    !this.instantiated && this.instantiate();
    this.setFocus();
  }

  disconnectedCallback() {
    this.dispose();
  }

  dispose() {
    this.clearSearchResults();
    this.instantiated = false;
    this.searchInput && this.searchInput.setText('');
    this.searchResults && this.searchResults.dispose();
    this.searchResults = null;
    this.wrapper && this.wrapper.parentNode && this.wrapper.parentNode.removeChild(this.wrapper); // this.loadingSpinnerEl &&
    //   this.loadingSpinnerEl.parentNode &&
    //   this.searchInputView.removeChild(this.loadingSpinnerEl);

    this.wrapper && this.searchInputView && this.wrapper.removeChild(this.searchInputView);
    this.wrapper = null;
    this.subscriptions && this.subscriptions.dispose();
    this.emitter && this.emitter.dispose();
    delete this.subscriptions;
    delete this.emitter;
  }

  onSearchQueryEvent(callback) {
    return this.emitter.on(SEARCH_QUERY_EVENT, callback);
  }

  onSearchQuerySelection(callback) {
    return this.emitter.on(SEARCH_QUERY_SELECTION_EVENT, callback);
  }

  onDefaultQuerySelection(callback) {
    return this.emitter.on(DEFAULT_QUERY_SELECTION_EVENT, callback);
  }

  clearSearchResults() {
    this.searchResults && this.searchResults.clear();
  }

  toggleLoading() {// if (!this.loading) {
    //   if (!this.loadingSpinnerEl) {
    //     this.loadingSpinnerEl = document.createElement('div');
    //     this.loadingSpinnerEl.classList.add('loading-spinner-wrapper');
    //     const spinner = document.createElement('div');
    //     spinner.classList.add('loading-spinner');
    //     this.loadingSpinnerEl.appendChild(spinner);
    //   }
    //   this.searchInputView.appendChild(this.loadingSpinnerEl);
    // } else {
    //   this.loadingSpinnerEl.parentNode && this.searchInputView.removeChild(this.loadingSpinnerEl);
    // }
    // this.loading = !this.loading;
  }

  updateView({
    payload,
    data
  }) {
    this.toggleLoading();

    if (!this.searchResults) {
      this.searchResults = new KSGSearchResults();
      this.wrapper.appendChild(this.searchResults);
      this.subscriptions.add(this.searchResults.onResultPropagation(({
        resultText,
        type
      }) => {
        this.shouldCancelChangeQuery = true;
        this.searchResults.clear();

        switch (type) {
          case SEARCH_QUERY_SELECTION_EVENT:
            this.searchInput.setText(resultText);
            this.emitter.emit(SEARCH_QUERY_SELECTION_EVENT, {
              query: this.searchInput.getText()
            });
            break;

          default:
            this.emitter.emit(DEFAULT_QUERY_SELECTION_EVENT, {
              query: resultText
            });
            break;
        }
      }));
    } // If code blocks are loading, ignore update requests to search results list.


    if (this.parent && this.parent.codeBlocksElem && this.parent.codeBlocksElem.loading) {
      return;
    }

    this.clearSearchResults();

    if (payload === 'error') {
      this.parent.toggleErrorMessage(true);
      return;
    }

    this.parent.toggleErrorMessage(false);

    if (data && data.completions && data.completions.length > 0) {
      this.searchResults.appendResults(data.completions, data.query);
    }

    if (data && data.query && !data.completions) {
      this.searchResults.appendResults([data.query], data.query);
    }

    const query = this.searchInput.getText();

    if (query) {
      this.focus();
      this.searchResults.appendDefault(this.searchInput.getText());
    }
  }

  setFocus() {
    this.searchInputView.focus();
    this.searchInput.moveToBottom();
  }

}

class KSGSearchResults extends HTMLElement {
  constructor() {
    super();
    this.selectedIdx = null;
    this.results = [];
    this.emitter = new Emitter();
    this.subscriptions = new CompositeDisposable();
  }

  dispose() {
    this.clear();
    this.emitter && this.emitter.dispose();
    this.subscriptions && this.subscriptions.dispose();
  }

  onlyResultIsDefault() {
    if (this.results.length === 1) {
      return this.results[0] instanceof KSGDefaultSearchResult;
    }

    return false;
  }

  appendResults(results, query) {
    // to batch the DOM changes
    const fragment = document.createDocumentFragment();
    results.forEach(result => {
      const el = new KSGSearchResult(result, query, this);
      el.initialize();
      el.id = this.results.length;
      fragment.appendChild(el);
      this.results.push(el);
      this.subscriptions.add(el.onResultClick(resultText => {
        this.emitter.emit('did-search-result-propagate', {
          resultText,
          type: SEARCH_QUERY_SELECTION_EVENT
        });
      }));
    });
    this.appendChild(fragment);
    this.classList.add('bordered');
  }

  appendDefault(query) {
    const searchResult = new KSGDefaultSearchResult(query, this);
    searchResult.initialize();
    searchResult.id = this.results.length;
    this.subscriptions.add(searchResult.onResultClick(resultText => {
      this.emitter.emit('did-search-result-propagate', {
        resultText,
        type: DEFAULT_QUERY_SELECTION_EVENT
      });
    }));
    this.results.push(searchResult);
    this.appendChild(searchResult);
    this.classList.add('bordered');
  }

  onResultPropagation(callback) {
    return this.emitter.on('did-search-result-propagate', callback);
  }

  moveSelection(direction) {
    if (this.results && this.results.length) {
      switch (direction) {
        case SEARCH_NAV_DOWN:
          if (this.selectedIdx === null) {
            this.selectedIdx = 0;
            this.results[this.selectedIdx].toggleHighlight();
          } else if (this.selectedIdx < this.results.length - 1) {
            this.results[this.selectedIdx].toggleHighlight();
            this.selectedIdx++;
            this.results[this.selectedIdx].toggleHighlight();
          }

          break;

        case SEARCH_NAV_UP:
          if (this.selectedIdx !== null) {
            this.results[this.selectedIdx].toggleHighlight();

            if (this.selectedIdx === 0) {
              this.selectedIdx = null;
            } else {
              this.selectedIdx--;
              this.results[this.selectedIdx].toggleHighlight();
            }
          }

          break;
      }
    }
  }

  get selectedQuery() {
    if (this.selectedIdx !== null) {
      const result = this.results[this.selectedIdx];

      if (result instanceof KSGDefaultSearchResult) {
        return result.query;
      }

      return result.resultText;
    }

    return null;
  }

  isDefaultSelected() {
    if (this.selectedIdx !== null) {
      return this.results[this.selectedIdx] instanceof KSGDefaultSearchResult;
    }

    return false;
  }

  hasSelected() {
    return this.selectedIdx !== null;
  }

  clearHighlight() {
    if (this.selectedIdx !== null) {
      this.results[this.selectedIdx].toggleHighlight();
      this.selectedIdx = null;
    }
  }

  clear() {
    while (this.lastChild) {
      this.lastChild.dispose && this.lastChild.dispose();
      this.removeChild(this.lastChild);
    }

    this.selectedIdx = null;
    this.results = [];
    this.classList.remove('bordered');
  }

}

class KSGSearchResult extends HTMLElement {
  constructor(resultText, query, parent) {
    super();
    this.parent = parent;
    this.emitter = new Emitter();
    this.subscriptions = new CompositeDisposable();
    this.resultText = resultText;
    this.query = query;
    this.isHighlighted = false;
  }

  initialize() {
    this.subscriptions.add(new DisposableEvent(this, 'click', this.clickHandler));
    const div = this.resultContent;

    div.onmouseover = () => {
      this.parent.clearHighlight();
      this.parent.selectedIdx = this.id;
      this.toggleHighlight();
    };

    this.appendChild(div);
  }

  get resultContent() {
    const div = document.createElement('div');
    const remainder = document.createElement('span');
    remainder.classList.add('ksg-search-result-remainder'); // Only concatenate query with resultText if resultText starts with query.
    // Otherwise, we may execute a query that doesn't match with the selection text.

    if (this.resultText.startsWith(this.query)) {
      div.appendChild(document.createTextNode(this.query));
      remainder.textContent = this.resultText.substring(this.query.length);
    } else {
      remainder.textContent = this.resultText;
    }

    div.appendChild(remainder);
    return div;
  }

  clickHandler(e) {
    this.emitter.emit('search-result-clicked', this.resultText);
  }

  dispose() {
    this.emitter && this.emitter.dispose();
    this.subscriptions && this.subscriptions.dispose();
  }

  onResultClick(callback) {
    return this.emitter.on('search-result-clicked', callback);
  }

  toggleHighlight() {
    if (this.isHighlighted) {
      this.classList.remove('highlight-result');
    } else {
      this.classList.add('highlight-result');
    }

    this.isHighlighted = !this.isHighlighted;
  }

}

class KSGDefaultSearchResult extends KSGSearchResult {
  constructor(query, parent) {
    super(null, query, parent);
  }

  get resultContent() {
    const div = document.createElement('div');
    const searchForSpan = document.createElement('span');
    searchForSpan.classList.add('plain-text');
    searchForSpan.textContent = 'Search for ';
    div.appendChild(searchForSpan);
    const queryEl = document.createTextNode(this.query);
    div.appendChild(queryEl);
    const onGoogleSpan = document.createElement('span');
    onGoogleSpan.classList.add('plain-text');
    onGoogleSpan.textContent = ' on Google ⇗';
    div.appendChild(onGoogleSpan);
    return div;
  }

  clickHandler(e) {
    this.emitter.emit('default-result-clicked', this.query);
  }

  onResultClick(callback) {
    return this.emitter.on('default-result-clicked', callback);
  }

}

customElements.define('kite-ksg-search-results', KSGSearchResults);
customElements.define('kite-ksg-search-result', KSGSearchResult);
customElements.define('kite-ksg-default-search-result', KSGDefaultSearchResult);
customElements.define('kite-ksg-search', KSGSearch);
module.exports = {
  KSGSearch,
  KSGDefaultSearchResult,
  KSGSearchResult,
  KSGSearchResults
};

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(209),
    now = __webpack_require__(210),
    toNumber = __webpack_require__(213);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

module.exports = debounce;


/***/ }),
/* 209 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(211);

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

module.exports = now;


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__(212);

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),
/* 212 */
/***/ (function(module, exports) {

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(209),
    isSymbol = __webpack_require__(214);

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(215),
    isObjectLike = __webpack_require__(219);

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(216),
    getRawTag = __webpack_require__(217),
    objectToString = __webpack_require__(218);

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(211);

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(216);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

>>>>>>> Patch autocomplete-plus/snippets insert(...) to not insert indentation for Kite completions.
/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),
/* 218 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),
/* 219 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  Emitter
} = __webpack_require__(2);

const {
  SEARCH_MODEL_UPDATE,
  SEARCH_LOADING
} = __webpack_require__(206);

const {
  getKSGCompletions
} = __webpack_require__(183);

module.exports = class Search {
  static scrubPrependedPython(term) {
    return term.substring(term.toLowerCase().indexOf('python ') + 'python '.length);
  }

  constructor() {
    this.emitter = new Emitter();
  }

  dispose() {
    this.emitter && this.emitter.dispose();
  }

  onDidUpdate(callback) {
    return this.emitter.on(SEARCH_MODEL_UPDATE, callback);
  }

  onDidLoading(callback) {
    return this.emitter.on(SEARCH_LOADING, callback);
  }

  executeQuery({
    query
  }) {
    if (!query || query.length === 0) {
      this.emitter.emit(SEARCH_MODEL_UPDATE, {});
      return;
    } // make sure results include only python related stuff


    let newQuery = query;

    if (!query.includes('python')) {
      newQuery = `python ${query}`;
    }

    this.emitter.emit(SEARCH_LOADING);
    getKSGCompletions(newQuery).then(data => {
      if (!data) {
        this.emitter.emit(SEARCH_MODEL_UPDATE, {
          payload: 'error'
        });
        return;
      } // scrub preceding pythons from the data


      data.query = query;

      if (data.completions) {
        data.completions = data.completions.map(completion => {
          if (completion.toLowerCase().startsWith('python ')) {
            return Search.scrubPrependedPython(completion);
          }

          return completion;
        });
      }

      this.emitter.emit(SEARCH_MODEL_UPDATE, {
        payload: 'search model update',
        data
      });
    });
  }

};

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  Emitter
} = __webpack_require__(2);

const {
  CODEBLOCKS_MODEL_UPDATE,
  CODEBLOCKS_LOADING
} = __webpack_require__(206);

const {
  getKSGCodeBlocks
} = __webpack_require__(183);

module.exports = class Codeblocks {
  static decorateCodeblocks(blocks, link, title) {
    return `>>>>>>> HEAD: ${title}
=======
# This code was inserted by Kite.
# You may need to alter it for it to work properly.

# Source: ${link}
${blocks.join('\n# BLOCK\n')}
>>>>>>> end of Kite Snippet
`;
  }

  constructor() {
    this.emitter = new Emitter();
  }

  dispose() {
    this.emitter && this.emitter.dispose();
  }

  onDidUpdate(callback) {
    return this.emitter.on(CODEBLOCKS_MODEL_UPDATE, callback);
  }

  onDidLoading(callback) {
    return this.emitter.on(CODEBLOCKS_LOADING, callback);
  }

  executeQuery({
    query
  }) {
    const origQuery = query; // make sure results include only python related stuff

    if (!query.toLowerCase().includes('python')) {
      query = `python ${query}`;
    }

    this.emitter.emit(CODEBLOCKS_LOADING);
    getKSGCodeBlocks(query).then(data => {
      if (!data) {
        this.emitter.emit(CODEBLOCKS_MODEL_UPDATE, {
          payload: 'error'
        });
        return;
      } // we want more votes appearing first


      if (data && data.answers) {
        data.answers = data.answers.filter(answer => {
          if (answer.votes <= 0) {
            return false;
          }

          if (!answer.code_blocks || answer.code_blocks.length === 0) {
            return false;
          }

          return true;
        });
        data.answers.sort((a, b) => b.votes - a.votes);
      }

      data.origQuery = origQuery;
      this.emitter.emit(CODEBLOCKS_MODEL_UPDATE, {
        payload: 'codeblocks model update',
        data
      });
    });
  }

};

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  CompositeDisposable
} = __webpack_require__(2);

__webpack_require__(223);

module.exports = class KSGShortcut {
  constructor() {
    this.element = document.createElement('div');
    this.element.className = 'ksg-shortcut';
    this.element.innerHTML = '<so-logo class="badge"></so-logo>';
    this.element.classList.add('inline-block');
  }

  init(Kite) {
    this.subscriptions = new CompositeDisposable();
    this.subscriptions.add(atom.tooltips.add(this.element, {
      title: () => 'Kite: Search Stack Overflow'
    }));
    this.subscriptions.add(atom.workspace.onDidChangeActiveTextEditor(() => this.toggleVisibility()));

    this.clickListener = () => Kite.toggleKSG();

    this.element.addEventListener('click', this.clickListener);
    this.toggleVisibility();
  }

  toggleVisibility() {
    const editor = atom.workspace.getActiveTextEditor();

    if (!editor || editor.getGrammar().name !== 'Python') {
      this.element.classList.add('hidden');
    } else {
      this.element.classList.remove('hidden');
    }
  }

  dispose() {
    this.subscriptions && this.subscriptions.dispose();
    delete this.subscriptions;
    this.element.removeEventListener('click', this.clickListener);
  }

  getElement() {
    return this.element;
  }

};

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const path = __webpack_require__(27);

const ASSETS_PATH =  true ? path.resolve(__dirname, '..', 'assets') : undefined;
const logoPath = path.join(ASSETS_PATH, 'so.png');

class SOLogo extends HTMLElement {
  static initClass() {
    customElements.define('so-logo', this);
    return this;
  }

  constructor() {
    super();
    this.innerHTML = `<img src=${logoPath}></img>`;
  }

}

module.exports = SOLogo.initClass();

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

const {
  CompositeDisposable
} = __webpack_require__(2);

const _ = __webpack_require__(225);

const BracketPairs = ['()', '[]', '{}', '""', "''", '``', '“”', '‘’', '«»', '‹›'];
const ClosingBrackets = new Set(BracketPairs.map(x => x[1]));
module.exports = class BracketMarker {
  init() {
    this.bracketMarkersByEditorID = {};
    const observe = atom.workspace.observeTextEditors(editor => {
      if (!this.bracketMarkersByEditorID[editor.id]) {
        this.bracketMarkersByEditorID[editor.id] = [];
        editor.onDidDestroy(() => {
          delete this.bracketMarkersByEditorID[editor.id];
        });
        editor.onWillInsertText(event => {
          this.checkShouldSkipClosingBracket(event, editor);
        });
      }
    });
    this.subscriptions = new CompositeDisposable();
    this.subscriptions.add(observe);
  }

  processTextForWriteThrough(text, editor, cursorPosBeforeInsert) {
    /* Marks the brackets as 'write-through-able' after an insertion. */
    const bracketMarkers = this.bracketMarkersByEditorID[editor.id]; // Uninitialized edtior won't check to skip closing brackets; pointless to mark.

    if (!bracketMarkers) return;

    for (let i = 1; i < text.length; i++) {
      if (this.isClosingBracket(text.charAt(i))) {
        const range = [cursorPosBeforeInsert.traverse([0, i - 1]), cursorPosBeforeInsert.traverse([0, i])];
        const marker = editor.markBufferRange(range);
        marker.onDidDestroy(() => _.remove(bracketMarkers, marker));
        bracketMarkers.push(marker);
      }
    }
  }

  checkShouldSkipClosingBracket(event, editor) {
    /* Based off https://github.com/atom/bracket-matcher/blob/master/lib/bracket-matcher.js#L83 */
    const text = event.text;
    const bracketMarkers = this.bracketMarkersByEditorID[editor.id];
    if (!bracketMarkers || bracketMarkers.length === 0) return;
    const cursorBufferPosition = editor.getCursorBufferPosition();
    const previousCharacters = editor.getTextInBufferRange([[cursorBufferPosition.row, 0], cursorBufferPosition]);
    const nextCharacter = editor.getTextInBufferRange([cursorBufferPosition, cursorBufferPosition.traverse([0, 1])]);
    const hasEscapeCharacterBeforeCursor = endsWithEscapeCharacter(previousCharacters);

    if (this.isClosingBracket(text) && nextCharacter === text && !hasEscapeCharacterBeforeCursor) {
      let bracketMarker = bracketMarkers.find(marker => marker.isValid() && marker.getBufferRange().end.isEqual(cursorBufferPosition));

      if (bracketMarker) {
        bracketMarker.destroy();
        editor.moveRight();
        event.cancel();
      }
    }
  }

  isClosingBracket(string) {
    return ClosingBrackets.has(string);
  }

  dispose() {
    delete this.bracketMarkersByEditorID;
    this.subscriptions && this.subscriptions.dispose();
  }

};
const BACKSLASHES_REGEX = /(\\+)$/; // odd number of backslashes

function endsWithEscapeCharacter(string) {
  const backslashesMatch = string.match(BACKSLASHES_REGEX);
  return backslashesMatch && backslashesMatch[1].length % 2 === 1;
}

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
<<<<<<< HEAD
 */(function(){var r="Expected a function",o="__lodash_placeholder__",s=[["ary",128],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",32],["partialRight",64],["rearg",256]],a="[object Arguments]",c="[object Array]",u="[object Boolean]",l="[object Date]",p="[object Error]",d="[object Function]",h="[object GeneratorFunction]",f="[object Map]",m="[object Number]",g="[object Object]",v="[object RegExp]",x="[object Set]",b="[object String]",y="[object Symbol]",w="[object WeakMap]",k="[object ArrayBuffer]",E="[object DataView]",_="[object Float32Array]",S="[object Float64Array]",I="[object Int8Array]",P="[object Int16Array]",T="[object Int32Array]",C="[object Uint8Array]",A="[object Uint16Array]",O="[object Uint32Array]",D=/\b__p \+= '';/g,L=/\b(__p \+=) '' \+/g,R=/(__e\(.*?\)|\b__t\)) \+\n'';/g,N=/&(?:amp|lt|gt|quot|#39);/g,K=/[&<>"']/g,j=RegExp(N.source),q=RegExp(K.source),F=/<%-([\s\S]+?)%>/g,M=/<%([\s\S]+?)%>/g,U=/<%=([\s\S]+?)%>/g,B=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,H=/^\w*$/,$=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,z=/[\\^$.*+?()[\]{}|]/g,W=RegExp(z.source),G=/^\s+|\s+$/g,V=/^\s+/,J=/\s+$/,Y=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,X=/\{\n\/\* \[wrapped with (.+)\] \*/,Z=/,? & /,Q=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,ee=/\\(\\)?/g,te=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,ne=/\w*$/,ie=/^[-+]0x[0-9a-f]+$/i,re=/^0b[01]+$/i,oe=/^\[object .+?Constructor\]$/,se=/^0o[0-7]+$/i,ae=/^(?:0|[1-9]\d*)$/,ce=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,ue=/($^)/,le=/['\n\r\u2028\u2029\\]/g,pe="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",de="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",he="[\\ud800-\\udfff]",fe="["+de+"]",me="["+pe+"]",ge="\\d+",ve="[\\u2700-\\u27bf]",xe="[a-z\\xdf-\\xf6\\xf8-\\xff]",be="[^\\ud800-\\udfff"+de+ge+"\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",ye="\\ud83c[\\udffb-\\udfff]",we="[^\\ud800-\\udfff]",ke="(?:\\ud83c[\\udde6-\\uddff]){2}",Ee="[\\ud800-\\udbff][\\udc00-\\udfff]",_e="[A-Z\\xc0-\\xd6\\xd8-\\xde]",Se="(?:"+xe+"|"+be+")",Ie="(?:"+_e+"|"+be+")",Pe="(?:"+me+"|"+ye+")"+"?",Te="[\\ufe0e\\ufe0f]?"+Pe+("(?:\\u200d(?:"+[we,ke,Ee].join("|")+")[\\ufe0e\\ufe0f]?"+Pe+")*"),Ce="(?:"+[ve,ke,Ee].join("|")+")"+Te,Ae="(?:"+[we+me+"?",me,ke,Ee,he].join("|")+")",Oe=RegExp("['’]","g"),De=RegExp(me,"g"),Le=RegExp(ye+"(?="+ye+")|"+Ae+Te,"g"),Re=RegExp([_e+"?"+xe+"+(?:['’](?:d|ll|m|re|s|t|ve))?(?="+[fe,_e,"$"].join("|")+")",Ie+"+(?:['’](?:D|LL|M|RE|S|T|VE))?(?="+[fe,_e+Se,"$"].join("|")+")",_e+"?"+Se+"+(?:['’](?:d|ll|m|re|s|t|ve))?",_e+"+(?:['’](?:D|LL|M|RE|S|T|VE))?","\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",ge,Ce].join("|"),"g"),Ne=RegExp("[\\u200d\\ud800-\\udfff"+pe+"\\ufe0e\\ufe0f]"),Ke=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,je=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],qe=-1,Fe={};Fe[_]=Fe[S]=Fe[I]=Fe[P]=Fe[T]=Fe[C]=Fe["[object Uint8ClampedArray]"]=Fe[A]=Fe[O]=!0,Fe[a]=Fe[c]=Fe[k]=Fe[u]=Fe[E]=Fe[l]=Fe[p]=Fe[d]=Fe[f]=Fe[m]=Fe[g]=Fe[v]=Fe[x]=Fe[b]=Fe[w]=!1;var Me={};Me[a]=Me[c]=Me[k]=Me[E]=Me[u]=Me[l]=Me[_]=Me[S]=Me[I]=Me[P]=Me[T]=Me[f]=Me[m]=Me[g]=Me[v]=Me[x]=Me[b]=Me[y]=Me[C]=Me["[object Uint8ClampedArray]"]=Me[A]=Me[O]=!0,Me[p]=Me[d]=Me[w]=!1;var Ue={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Be=parseFloat,He=parseInt,$e="object"==typeof global&&global&&global.Object===Object&&global,ze="object"==typeof self&&self&&self.Object===Object&&self,We=$e||ze||Function("return this")(),Ge=t&&!t.nodeType&&t,Ve=Ge&&"object"==typeof e&&e&&!e.nodeType&&e,Je=Ve&&Ve.exports===Ge,Ye=Je&&$e.process,Xe=function(){try{var e=Ve&&Ve.require&&Ve.require("util").types;return e||Ye&&Ye.binding&&Ye.binding("util")}catch(e){}}(),Ze=Xe&&Xe.isArrayBuffer,Qe=Xe&&Xe.isDate,et=Xe&&Xe.isMap,tt=Xe&&Xe.isRegExp,nt=Xe&&Xe.isSet,it=Xe&&Xe.isTypedArray;function rt(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}function ot(e,t,n,i){for(var r=-1,o=null==e?0:e.length;++r<o;){var s=e[r];t(i,s,n(s),e)}return i}function st(e,t){for(var n=-1,i=null==e?0:e.length;++n<i&&!1!==t(e[n],n,e););return e}function at(e,t){for(var n=null==e?0:e.length;n--&&!1!==t(e[n],n,e););return e}function ct(e,t){for(var n=-1,i=null==e?0:e.length;++n<i;)if(!t(e[n],n,e))return!1;return!0}function ut(e,t){for(var n=-1,i=null==e?0:e.length,r=0,o=[];++n<i;){var s=e[n];t(s,n,e)&&(o[r++]=s)}return o}function lt(e,t){return!!(null==e?0:e.length)&&yt(e,t,0)>-1}function pt(e,t,n){for(var i=-1,r=null==e?0:e.length;++i<r;)if(n(t,e[i]))return!0;return!1}function dt(e,t){for(var n=-1,i=null==e?0:e.length,r=Array(i);++n<i;)r[n]=t(e[n],n,e);return r}function ht(e,t){for(var n=-1,i=t.length,r=e.length;++n<i;)e[r+n]=t[n];return e}function ft(e,t,n,i){var r=-1,o=null==e?0:e.length;for(i&&o&&(n=e[++r]);++r<o;)n=t(n,e[r],r,e);return n}function mt(e,t,n,i){var r=null==e?0:e.length;for(i&&r&&(n=e[--r]);r--;)n=t(n,e[r],r,e);return n}function gt(e,t){for(var n=-1,i=null==e?0:e.length;++n<i;)if(t(e[n],n,e))return!0;return!1}var vt=_t("length");function xt(e,t,n){var i;return n(e,(function(e,n,r){if(t(e,n,r))return i=n,!1})),i}function bt(e,t,n,i){for(var r=e.length,o=n+(i?1:-1);i?o--:++o<r;)if(t(e[o],o,e))return o;return-1}function yt(e,t,n){return t==t?function(e,t,n){var i=n-1,r=e.length;for(;++i<r;)if(e[i]===t)return i;return-1}(e,t,n):bt(e,kt,n)}function wt(e,t,n,i){for(var r=n-1,o=e.length;++r<o;)if(i(e[r],t))return r;return-1}function kt(e){return e!=e}function Et(e,t){var n=null==e?0:e.length;return n?Pt(e,t)/n:NaN}function _t(e){return function(t){return null==t?void 0:t[e]}}function St(e){return function(t){return null==e?void 0:e[t]}}function It(e,t,n,i,r){return r(e,(function(e,r,o){n=i?(i=!1,e):t(n,e,r,o)})),n}function Pt(e,t){for(var n,i=-1,r=e.length;++i<r;){var o=t(e[i]);void 0!==o&&(n=void 0===n?o:n+o)}return n}function Tt(e,t){for(var n=-1,i=Array(e);++n<e;)i[n]=t(n);return i}function Ct(e){return function(t){return e(t)}}function At(e,t){return dt(t,(function(t){return e[t]}))}function Ot(e,t){return e.has(t)}function Dt(e,t){for(var n=-1,i=e.length;++n<i&&yt(t,e[n],0)>-1;);return n}function Lt(e,t){for(var n=e.length;n--&&yt(t,e[n],0)>-1;);return n}function Rt(e,t){for(var n=e.length,i=0;n--;)e[n]===t&&++i;return i}var Nt=St({"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"}),Kt=St({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function jt(e){return"\\"+Ue[e]}function qt(e){return Ne.test(e)}function Ft(e){var t=-1,n=Array(e.size);return e.forEach((function(e,i){n[++t]=[i,e]})),n}function Mt(e,t){return function(n){return e(t(n))}}function Ut(e,t){for(var n=-1,i=e.length,r=0,s=[];++n<i;){var a=e[n];a!==t&&a!==o||(e[n]=o,s[r++]=n)}return s}function Bt(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}function Ht(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=[e,e]})),n}function $t(e){return qt(e)?function(e){var t=Le.lastIndex=0;for(;Le.test(e);)++t;return t}(e):vt(e)}function zt(e){return qt(e)?function(e){return e.match(Le)||[]}(e):function(e){return e.split("")}(e)}var Wt=St({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"});var Gt=function e(t){var n,i=(t=null==t?We:Gt.defaults(We.Object(),t,Gt.pick(We,je))).Array,pe=t.Date,de=t.Error,he=t.Function,fe=t.Math,me=t.Object,ge=t.RegExp,ve=t.String,xe=t.TypeError,be=i.prototype,ye=he.prototype,we=me.prototype,ke=t["__core-js_shared__"],Ee=ye.toString,_e=we.hasOwnProperty,Se=0,Ie=(n=/[^.]+$/.exec(ke&&ke.keys&&ke.keys.IE_PROTO||""))?"Symbol(src)_1."+n:"",Pe=we.toString,Te=Ee.call(me),Ce=We._,Ae=ge("^"+Ee.call(_e).replace(z,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Le=Je?t.Buffer:void 0,Ne=t.Symbol,Ue=t.Uint8Array,$e=Le?Le.allocUnsafe:void 0,ze=Mt(me.getPrototypeOf,me),Ge=me.create,Ve=we.propertyIsEnumerable,Ye=be.splice,Xe=Ne?Ne.isConcatSpreadable:void 0,vt=Ne?Ne.iterator:void 0,St=Ne?Ne.toStringTag:void 0,Vt=function(){try{var e=Qr(me,"defineProperty");return e({},"",{}),e}catch(e){}}(),Jt=t.clearTimeout!==We.clearTimeout&&t.clearTimeout,Yt=pe&&pe.now!==We.Date.now&&pe.now,Xt=t.setTimeout!==We.setTimeout&&t.setTimeout,Zt=fe.ceil,Qt=fe.floor,en=me.getOwnPropertySymbols,tn=Le?Le.isBuffer:void 0,nn=t.isFinite,rn=be.join,on=Mt(me.keys,me),sn=fe.max,an=fe.min,cn=pe.now,un=t.parseInt,ln=fe.random,pn=be.reverse,dn=Qr(t,"DataView"),hn=Qr(t,"Map"),fn=Qr(t,"Promise"),mn=Qr(t,"Set"),gn=Qr(t,"WeakMap"),vn=Qr(me,"create"),xn=gn&&new gn,bn={},yn=Po(dn),wn=Po(hn),kn=Po(fn),En=Po(mn),_n=Po(gn),Sn=Ne?Ne.prototype:void 0,In=Sn?Sn.valueOf:void 0,Pn=Sn?Sn.toString:void 0;function Tn(e){if($s(e)&&!Ls(e)&&!(e instanceof Dn)){if(e instanceof On)return e;if(_e.call(e,"__wrapped__"))return To(e)}return new On(e)}var Cn=function(){function e(){}return function(t){if(!Hs(t))return{};if(Ge)return Ge(t);e.prototype=t;var n=new e;return e.prototype=void 0,n}}();function An(){}function On(e,t){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=void 0}function Dn(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=4294967295,this.__views__=[]}function Ln(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function Rn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function Nn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function Kn(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new Nn;++t<n;)this.add(e[t])}function jn(e){var t=this.__data__=new Rn(e);this.size=t.size}function qn(e,t){var n=Ls(e),i=!n&&Ds(e),r=!n&&!i&&js(e),o=!n&&!i&&!r&&Zs(e),s=n||i||r||o,a=s?Tt(e.length,ve):[],c=a.length;for(var u in e)!t&&!_e.call(e,u)||s&&("length"==u||r&&("offset"==u||"parent"==u)||o&&("buffer"==u||"byteLength"==u||"byteOffset"==u)||so(u,c))||a.push(u);return a}function Fn(e){var t=e.length;return t?e[Ki(0,t-1)]:void 0}function Mn(e,t){return _o(vr(e),Jn(t,0,e.length))}function Un(e){return _o(vr(e))}function Bn(e,t,n){(void 0!==n&&!Cs(e[t],n)||void 0===n&&!(t in e))&&Gn(e,t,n)}function Hn(e,t,n){var i=e[t];_e.call(e,t)&&Cs(i,n)&&(void 0!==n||t in e)||Gn(e,t,n)}function $n(e,t){for(var n=e.length;n--;)if(Cs(e[n][0],t))return n;return-1}function zn(e,t,n,i){return ei(e,(function(e,r,o){t(i,e,n(e),o)})),i}function Wn(e,t){return e&&xr(t,ya(t),e)}function Gn(e,t,n){"__proto__"==t&&Vt?Vt(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}function Vn(e,t){for(var n=-1,r=t.length,o=i(r),s=null==e;++n<r;)o[n]=s?void 0:ma(e,t[n]);return o}function Jn(e,t,n){return e==e&&(void 0!==n&&(e=e<=n?e:n),void 0!==t&&(e=e>=t?e:t)),e}function Yn(e,t,n,i,r,o){var s,c=1&t,p=2&t,w=4&t;if(n&&(s=r?n(e,i,r,o):n(e)),void 0!==s)return s;if(!Hs(e))return e;var D=Ls(e);if(D){if(s=function(e){var t=e.length,n=new e.constructor(t);t&&"string"==typeof e[0]&&_e.call(e,"index")&&(n.index=e.index,n.input=e.input);return n}(e),!c)return vr(e,s)}else{var L=no(e),R=L==d||L==h;if(js(e))return pr(e,c);if(L==g||L==a||R&&!r){if(s=p||R?{}:ro(e),!c)return p?function(e,t){return xr(e,to(e),t)}(e,function(e,t){return e&&xr(t,wa(t),e)}(s,e)):function(e,t){return xr(e,eo(e),t)}(e,Wn(s,e))}else{if(!Me[L])return r?e:{};s=function(e,t,n){var i=e.constructor;switch(t){case k:return dr(e);case u:case l:return new i(+e);case E:return function(e,t){var n=t?dr(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}(e,n);case _:case S:case I:case P:case T:case C:case"[object Uint8ClampedArray]":case A:case O:return hr(e,n);case f:return new i;case m:case b:return new i(e);case v:return function(e){var t=new e.constructor(e.source,ne.exec(e));return t.lastIndex=e.lastIndex,t}(e);case x:return new i;case y:return r=e,In?me(In.call(r)):{}}var r}(e,L,c)}}o||(o=new jn);var N=o.get(e);if(N)return N;o.set(e,s),Js(e)?e.forEach((function(i){s.add(Yn(i,t,n,i,e,o))})):zs(e)&&e.forEach((function(i,r){s.set(r,Yn(i,t,n,r,e,o))}));var K=D?void 0:(w?p?Wr:zr:p?wa:ya)(e);return st(K||e,(function(i,r){K&&(i=e[r=i]),Hn(s,r,Yn(i,t,n,r,e,o))})),s}function Xn(e,t,n){var i=n.length;if(null==e)return!i;for(e=me(e);i--;){var r=n[i],o=t[r],s=e[r];if(void 0===s&&!(r in e)||!o(s))return!1}return!0}function Zn(e,t,n){if("function"!=typeof e)throw new xe(r);return yo((function(){e.apply(void 0,n)}),t)}function Qn(e,t,n,i){var r=-1,o=lt,s=!0,a=e.length,c=[],u=t.length;if(!a)return c;n&&(t=dt(t,Ct(n))),i?(o=pt,s=!1):t.length>=200&&(o=Ot,s=!1,t=new Kn(t));e:for(;++r<a;){var l=e[r],p=null==n?l:n(l);if(l=i||0!==l?l:0,s&&p==p){for(var d=u;d--;)if(t[d]===p)continue e;c.push(l)}else o(t,p,i)||c.push(l)}return c}Tn.templateSettings={escape:F,evaluate:M,interpolate:U,variable:"",imports:{_:Tn}},Tn.prototype=An.prototype,Tn.prototype.constructor=Tn,On.prototype=Cn(An.prototype),On.prototype.constructor=On,Dn.prototype=Cn(An.prototype),Dn.prototype.constructor=Dn,Ln.prototype.clear=function(){this.__data__=vn?vn(null):{},this.size=0},Ln.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},Ln.prototype.get=function(e){var t=this.__data__;if(vn){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return _e.call(t,e)?t[e]:void 0},Ln.prototype.has=function(e){var t=this.__data__;return vn?void 0!==t[e]:_e.call(t,e)},Ln.prototype.set=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=vn&&void 0===t?"__lodash_hash_undefined__":t,this},Rn.prototype.clear=function(){this.__data__=[],this.size=0},Rn.prototype.delete=function(e){var t=this.__data__,n=$n(t,e);return!(n<0)&&(n==t.length-1?t.pop():Ye.call(t,n,1),--this.size,!0)},Rn.prototype.get=function(e){var t=this.__data__,n=$n(t,e);return n<0?void 0:t[n][1]},Rn.prototype.has=function(e){return $n(this.__data__,e)>-1},Rn.prototype.set=function(e,t){var n=this.__data__,i=$n(n,e);return i<0?(++this.size,n.push([e,t])):n[i][1]=t,this},Nn.prototype.clear=function(){this.size=0,this.__data__={hash:new Ln,map:new(hn||Rn),string:new Ln}},Nn.prototype.delete=function(e){var t=Xr(this,e).delete(e);return this.size-=t?1:0,t},Nn.prototype.get=function(e){return Xr(this,e).get(e)},Nn.prototype.has=function(e){return Xr(this,e).has(e)},Nn.prototype.set=function(e,t){var n=Xr(this,e),i=n.size;return n.set(e,t),this.size+=n.size==i?0:1,this},Kn.prototype.add=Kn.prototype.push=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this},Kn.prototype.has=function(e){return this.__data__.has(e)},jn.prototype.clear=function(){this.__data__=new Rn,this.size=0},jn.prototype.delete=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n},jn.prototype.get=function(e){return this.__data__.get(e)},jn.prototype.has=function(e){return this.__data__.has(e)},jn.prototype.set=function(e,t){var n=this.__data__;if(n instanceof Rn){var i=n.__data__;if(!hn||i.length<199)return i.push([e,t]),this.size=++n.size,this;n=this.__data__=new Nn(i)}return n.set(e,t),this.size=n.size,this};var ei=wr(ci),ti=wr(ui,!0);function ni(e,t){var n=!0;return ei(e,(function(e,i,r){return n=!!t(e,i,r)})),n}function ii(e,t,n){for(var i=-1,r=e.length;++i<r;){var o=e[i],s=t(o);if(null!=s&&(void 0===a?s==s&&!Xs(s):n(s,a)))var a=s,c=o}return c}function ri(e,t){var n=[];return ei(e,(function(e,i,r){t(e,i,r)&&n.push(e)})),n}function oi(e,t,n,i,r){var o=-1,s=e.length;for(n||(n=oo),r||(r=[]);++o<s;){var a=e[o];t>0&&n(a)?t>1?oi(a,t-1,n,i,r):ht(r,a):i||(r[r.length]=a)}return r}var si=kr(),ai=kr(!0);function ci(e,t){return e&&si(e,t,ya)}function ui(e,t){return e&&ai(e,t,ya)}function li(e,t){return ut(t,(function(t){return Ms(e[t])}))}function pi(e,t){for(var n=0,i=(t=ar(t,e)).length;null!=e&&n<i;)e=e[Io(t[n++])];return n&&n==i?e:void 0}function di(e,t,n){var i=t(e);return Ls(e)?i:ht(i,n(e))}function hi(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":St&&St in me(e)?function(e){var t=_e.call(e,St),n=e[St];try{e[St]=void 0;var i=!0}catch(e){}var r=Pe.call(e);i&&(t?e[St]=n:delete e[St]);return r}(e):function(e){return Pe.call(e)}(e)}function fi(e,t){return e>t}function mi(e,t){return null!=e&&_e.call(e,t)}function gi(e,t){return null!=e&&t in me(e)}function vi(e,t,n){for(var r=n?pt:lt,o=e[0].length,s=e.length,a=s,c=i(s),u=1/0,l=[];a--;){var p=e[a];a&&t&&(p=dt(p,Ct(t))),u=an(p.length,u),c[a]=!n&&(t||o>=120&&p.length>=120)?new Kn(a&&p):void 0}p=e[0];var d=-1,h=c[0];e:for(;++d<o&&l.length<u;){var f=p[d],m=t?t(f):f;if(f=n||0!==f?f:0,!(h?Ot(h,m):r(l,m,n))){for(a=s;--a;){var g=c[a];if(!(g?Ot(g,m):r(e[a],m,n)))continue e}h&&h.push(m),l.push(f)}}return l}function xi(e,t,n){var i=null==(e=go(e,t=ar(t,e)))?e:e[Io(Fo(t))];return null==i?void 0:rt(i,e,n)}function bi(e){return $s(e)&&hi(e)==a}function yi(e,t,n,i,r){return e===t||(null==e||null==t||!$s(e)&&!$s(t)?e!=e&&t!=t:function(e,t,n,i,r,o){var s=Ls(e),d=Ls(t),h=s?c:no(e),w=d?c:no(t),_=(h=h==a?g:h)==g,S=(w=w==a?g:w)==g,I=h==w;if(I&&js(e)){if(!js(t))return!1;s=!0,_=!1}if(I&&!_)return o||(o=new jn),s||Zs(e)?Hr(e,t,n,i,r,o):function(e,t,n,i,r,o,s){switch(n){case E:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case k:return!(e.byteLength!=t.byteLength||!o(new Ue(e),new Ue(t)));case u:case l:case m:return Cs(+e,+t);case p:return e.name==t.name&&e.message==t.message;case v:case b:return e==t+"";case f:var a=Ft;case x:var c=1&i;if(a||(a=Bt),e.size!=t.size&&!c)return!1;var d=s.get(e);if(d)return d==t;i|=2,s.set(e,t);var h=Hr(a(e),a(t),i,r,o,s);return s.delete(e),h;case y:if(In)return In.call(e)==In.call(t)}return!1}(e,t,h,n,i,r,o);if(!(1&n)){var P=_&&_e.call(e,"__wrapped__"),T=S&&_e.call(t,"__wrapped__");if(P||T){var C=P?e.value():e,A=T?t.value():t;return o||(o=new jn),r(C,A,n,i,o)}}if(!I)return!1;return o||(o=new jn),function(e,t,n,i,r,o){var s=1&n,a=zr(e),c=a.length,u=zr(t).length;if(c!=u&&!s)return!1;var l=c;for(;l--;){var p=a[l];if(!(s?p in t:_e.call(t,p)))return!1}var d=o.get(e);if(d&&o.get(t))return d==t;var h=!0;o.set(e,t),o.set(t,e);var f=s;for(;++l<c;){p=a[l];var m=e[p],g=t[p];if(i)var v=s?i(g,m,p,t,e,o):i(m,g,p,e,t,o);if(!(void 0===v?m===g||r(m,g,n,i,o):v)){h=!1;break}f||(f="constructor"==p)}if(h&&!f){var x=e.constructor,b=t.constructor;x==b||!("constructor"in e)||!("constructor"in t)||"function"==typeof x&&x instanceof x&&"function"==typeof b&&b instanceof b||(h=!1)}return o.delete(e),o.delete(t),h}(e,t,n,i,r,o)}(e,t,n,i,yi,r))}function wi(e,t,n,i){var r=n.length,o=r,s=!i;if(null==e)return!o;for(e=me(e);r--;){var a=n[r];if(s&&a[2]?a[1]!==e[a[0]]:!(a[0]in e))return!1}for(;++r<o;){var c=(a=n[r])[0],u=e[c],l=a[1];if(s&&a[2]){if(void 0===u&&!(c in e))return!1}else{var p=new jn;if(i)var d=i(u,l,c,e,t,p);if(!(void 0===d?yi(l,u,3,i,p):d))return!1}}return!0}function ki(e){return!(!Hs(e)||(t=e,Ie&&Ie in t))&&(Ms(e)?Ae:oe).test(Po(e));var t}function Ei(e){return"function"==typeof e?e:null==e?Wa:"object"==typeof e?Ls(e)?Ci(e[0],e[1]):Ti(e):tc(e)}function _i(e){if(!po(e))return on(e);var t=[];for(var n in me(e))_e.call(e,n)&&"constructor"!=n&&t.push(n);return t}function Si(e){if(!Hs(e))return function(e){var t=[];if(null!=e)for(var n in me(e))t.push(n);return t}(e);var t=po(e),n=[];for(var i in e)("constructor"!=i||!t&&_e.call(e,i))&&n.push(i);return n}function Ii(e,t){return e<t}function Pi(e,t){var n=-1,r=Ns(e)?i(e.length):[];return ei(e,(function(e,i,o){r[++n]=t(e,i,o)})),r}function Ti(e){var t=Zr(e);return 1==t.length&&t[0][2]?fo(t[0][0],t[0][1]):function(n){return n===e||wi(n,e,t)}}function Ci(e,t){return co(e)&&ho(t)?fo(Io(e),t):function(n){var i=ma(n,e);return void 0===i&&i===t?ga(n,e):yi(t,i,3)}}function Ai(e,t,n,i,r){e!==t&&si(t,(function(o,s){if(r||(r=new jn),Hs(o))!function(e,t,n,i,r,o,s){var a=xo(e,n),c=xo(t,n),u=s.get(c);if(u)return void Bn(e,n,u);var l=o?o(a,c,n+"",e,t,s):void 0,p=void 0===l;if(p){var d=Ls(c),h=!d&&js(c),f=!d&&!h&&Zs(c);l=c,d||h||f?Ls(a)?l=a:Ks(a)?l=vr(a):h?(p=!1,l=pr(c,!0)):f?(p=!1,l=hr(c,!0)):l=[]:Gs(c)||Ds(c)?(l=a,Ds(a)?l=sa(a):Hs(a)&&!Ms(a)||(l=ro(c))):p=!1}p&&(s.set(c,l),r(l,c,i,o,s),s.delete(c));Bn(e,n,l)}(e,t,s,n,Ai,i,r);else{var a=i?i(xo(e,s),o,s+"",e,t,r):void 0;void 0===a&&(a=o),Bn(e,s,a)}}),wa)}function Oi(e,t){var n=e.length;if(n)return so(t+=t<0?n:0,n)?e[t]:void 0}function Di(e,t,n){var i=-1;return t=dt(t.length?t:[Wa],Ct(Yr())),function(e,t){var n=e.length;for(e.sort(t);n--;)e[n]=e[n].value;return e}(Pi(e,(function(e,n,r){return{criteria:dt(t,(function(t){return t(e)})),index:++i,value:e}})),(function(e,t){return function(e,t,n){var i=-1,r=e.criteria,o=t.criteria,s=r.length,a=n.length;for(;++i<s;){var c=fr(r[i],o[i]);if(c){if(i>=a)return c;var u=n[i];return c*("desc"==u?-1:1)}}return e.index-t.index}(e,t,n)}))}function Li(e,t,n){for(var i=-1,r=t.length,o={};++i<r;){var s=t[i],a=pi(e,s);n(a,s)&&Ui(o,ar(s,e),a)}return o}function Ri(e,t,n,i){var r=i?wt:yt,o=-1,s=t.length,a=e;for(e===t&&(t=vr(t)),n&&(a=dt(e,Ct(n)));++o<s;)for(var c=0,u=t[o],l=n?n(u):u;(c=r(a,l,c,i))>-1;)a!==e&&Ye.call(a,c,1),Ye.call(e,c,1);return e}function Ni(e,t){for(var n=e?t.length:0,i=n-1;n--;){var r=t[n];if(n==i||r!==o){var o=r;so(r)?Ye.call(e,r,1):Qi(e,r)}}return e}function Ki(e,t){return e+Qt(ln()*(t-e+1))}function ji(e,t){var n="";if(!e||t<1||t>9007199254740991)return n;do{t%2&&(n+=e),(t=Qt(t/2))&&(e+=e)}while(t);return n}function qi(e,t){return wo(mo(e,t,Wa),e+"")}function Fi(e){return Fn(Ca(e))}function Mi(e,t){var n=Ca(e);return _o(n,Jn(t,0,n.length))}function Ui(e,t,n,i){if(!Hs(e))return e;for(var r=-1,o=(t=ar(t,e)).length,s=o-1,a=e;null!=a&&++r<o;){var c=Io(t[r]),u=n;if(r!=s){var l=a[c];void 0===(u=i?i(l,c,a):void 0)&&(u=Hs(l)?l:so(t[r+1])?[]:{})}Hn(a,c,u),a=a[c]}return e}var Bi=xn?function(e,t){return xn.set(e,t),e}:Wa,Hi=Vt?function(e,t){return Vt(e,"toString",{configurable:!0,enumerable:!1,value:Ha(t),writable:!0})}:Wa;function $i(e){return _o(Ca(e))}function zi(e,t,n){var r=-1,o=e.length;t<0&&(t=-t>o?0:o+t),(n=n>o?o:n)<0&&(n+=o),o=t>n?0:n-t>>>0,t>>>=0;for(var s=i(o);++r<o;)s[r]=e[r+t];return s}function Wi(e,t){var n;return ei(e,(function(e,i,r){return!(n=t(e,i,r))})),!!n}function Gi(e,t,n){var i=0,r=null==e?i:e.length;if("number"==typeof t&&t==t&&r<=2147483647){for(;i<r;){var o=i+r>>>1,s=e[o];null!==s&&!Xs(s)&&(n?s<=t:s<t)?i=o+1:r=o}return r}return Vi(e,t,Wa,n)}function Vi(e,t,n,i){t=n(t);for(var r=0,o=null==e?0:e.length,s=t!=t,a=null===t,c=Xs(t),u=void 0===t;r<o;){var l=Qt((r+o)/2),p=n(e[l]),d=void 0!==p,h=null===p,f=p==p,m=Xs(p);if(s)var g=i||f;else g=u?f&&(i||d):a?f&&d&&(i||!h):c?f&&d&&!h&&(i||!m):!h&&!m&&(i?p<=t:p<t);g?r=l+1:o=l}return an(o,4294967294)}function Ji(e,t){for(var n=-1,i=e.length,r=0,o=[];++n<i;){var s=e[n],a=t?t(s):s;if(!n||!Cs(a,c)){var c=a;o[r++]=0===s?0:s}}return o}function Yi(e){return"number"==typeof e?e:Xs(e)?NaN:+e}function Xi(e){if("string"==typeof e)return e;if(Ls(e))return dt(e,Xi)+"";if(Xs(e))return Pn?Pn.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function Zi(e,t,n){var i=-1,r=lt,o=e.length,s=!0,a=[],c=a;if(n)s=!1,r=pt;else if(o>=200){var u=t?null:jr(e);if(u)return Bt(u);s=!1,r=Ot,c=new Kn}else c=t?[]:a;e:for(;++i<o;){var l=e[i],p=t?t(l):l;if(l=n||0!==l?l:0,s&&p==p){for(var d=c.length;d--;)if(c[d]===p)continue e;t&&c.push(p),a.push(l)}else r(c,p,n)||(c!==a&&c.push(p),a.push(l))}return a}function Qi(e,t){return null==(e=go(e,t=ar(t,e)))||delete e[Io(Fo(t))]}function er(e,t,n,i){return Ui(e,t,n(pi(e,t)),i)}function tr(e,t,n,i){for(var r=e.length,o=i?r:-1;(i?o--:++o<r)&&t(e[o],o,e););return n?zi(e,i?0:o,i?o+1:r):zi(e,i?o+1:0,i?r:o)}function nr(e,t){var n=e;return n instanceof Dn&&(n=n.value()),ft(t,(function(e,t){return t.func.apply(t.thisArg,ht([e],t.args))}),n)}function ir(e,t,n){var r=e.length;if(r<2)return r?Zi(e[0]):[];for(var o=-1,s=i(r);++o<r;)for(var a=e[o],c=-1;++c<r;)c!=o&&(s[o]=Qn(s[o]||a,e[c],t,n));return Zi(oi(s,1),t,n)}function rr(e,t,n){for(var i=-1,r=e.length,o=t.length,s={};++i<r;){var a=i<o?t[i]:void 0;n(s,e[i],a)}return s}function or(e){return Ks(e)?e:[]}function sr(e){return"function"==typeof e?e:Wa}function ar(e,t){return Ls(e)?e:co(e,t)?[e]:So(aa(e))}var cr=qi;function ur(e,t,n){var i=e.length;return n=void 0===n?i:n,!t&&n>=i?e:zi(e,t,n)}var lr=Jt||function(e){return We.clearTimeout(e)};function pr(e,t){if(t)return e.slice();var n=e.length,i=$e?$e(n):new e.constructor(n);return e.copy(i),i}function dr(e){var t=new e.constructor(e.byteLength);return new Ue(t).set(new Ue(e)),t}function hr(e,t){var n=t?dr(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}function fr(e,t){if(e!==t){var n=void 0!==e,i=null===e,r=e==e,o=Xs(e),s=void 0!==t,a=null===t,c=t==t,u=Xs(t);if(!a&&!u&&!o&&e>t||o&&s&&c&&!a&&!u||i&&s&&c||!n&&c||!r)return 1;if(!i&&!o&&!u&&e<t||u&&n&&r&&!i&&!o||a&&n&&r||!s&&r||!c)return-1}return 0}function mr(e,t,n,r){for(var o=-1,s=e.length,a=n.length,c=-1,u=t.length,l=sn(s-a,0),p=i(u+l),d=!r;++c<u;)p[c]=t[c];for(;++o<a;)(d||o<s)&&(p[n[o]]=e[o]);for(;l--;)p[c++]=e[o++];return p}function gr(e,t,n,r){for(var o=-1,s=e.length,a=-1,c=n.length,u=-1,l=t.length,p=sn(s-c,0),d=i(p+l),h=!r;++o<p;)d[o]=e[o];for(var f=o;++u<l;)d[f+u]=t[u];for(;++a<c;)(h||o<s)&&(d[f+n[a]]=e[o++]);return d}function vr(e,t){var n=-1,r=e.length;for(t||(t=i(r));++n<r;)t[n]=e[n];return t}function xr(e,t,n,i){var r=!n;n||(n={});for(var o=-1,s=t.length;++o<s;){var a=t[o],c=i?i(n[a],e[a],a,n,e):void 0;void 0===c&&(c=e[a]),r?Gn(n,a,c):Hn(n,a,c)}return n}function br(e,t){return function(n,i){var r=Ls(n)?ot:zn,o=t?t():{};return r(n,e,Yr(i,2),o)}}function yr(e){return qi((function(t,n){var i=-1,r=n.length,o=r>1?n[r-1]:void 0,s=r>2?n[2]:void 0;for(o=e.length>3&&"function"==typeof o?(r--,o):void 0,s&&ao(n[0],n[1],s)&&(o=r<3?void 0:o,r=1),t=me(t);++i<r;){var a=n[i];a&&e(t,a,i,o)}return t}))}function wr(e,t){return function(n,i){if(null==n)return n;if(!Ns(n))return e(n,i);for(var r=n.length,o=t?r:-1,s=me(n);(t?o--:++o<r)&&!1!==i(s[o],o,s););return n}}function kr(e){return function(t,n,i){for(var r=-1,o=me(t),s=i(t),a=s.length;a--;){var c=s[e?a:++r];if(!1===n(o[c],c,o))break}return t}}function Er(e){return function(t){var n=qt(t=aa(t))?zt(t):void 0,i=n?n[0]:t.charAt(0),r=n?ur(n,1).join(""):t.slice(1);return i[e]()+r}}function _r(e){return function(t){return ft(Ma(Da(t).replace(Oe,"")),e,"")}}function Sr(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var n=Cn(e.prototype),i=e.apply(n,t);return Hs(i)?i:n}}function Ir(e){return function(t,n,i){var r=me(t);if(!Ns(t)){var o=Yr(n,3);t=ya(t),n=function(e){return o(r[e],e,r)}}var s=e(t,n,i);return s>-1?r[o?t[s]:s]:void 0}}function Pr(e){return $r((function(t){var n=t.length,i=n,o=On.prototype.thru;for(e&&t.reverse();i--;){var s=t[i];if("function"!=typeof s)throw new xe(r);if(o&&!a&&"wrapper"==Vr(s))var a=new On([],!0)}for(i=a?i:n;++i<n;){var c=Vr(s=t[i]),u="wrapper"==c?Gr(s):void 0;a=u&&uo(u[0])&&424==u[1]&&!u[4].length&&1==u[9]?a[Vr(u[0])].apply(a,u[3]):1==s.length&&uo(s)?a[c]():a.thru(s)}return function(){var e=arguments,i=e[0];if(a&&1==e.length&&Ls(i))return a.plant(i).value();for(var r=0,o=n?t[r].apply(this,e):i;++r<n;)o=t[r].call(this,o);return o}}))}function Tr(e,t,n,r,o,s,a,c,u,l){var p=128&t,d=1&t,h=2&t,f=24&t,m=512&t,g=h?void 0:Sr(e);return function v(){for(var x=arguments.length,b=i(x),y=x;y--;)b[y]=arguments[y];if(f)var w=Jr(v),k=Rt(b,w);if(r&&(b=mr(b,r,o,f)),s&&(b=gr(b,s,a,f)),x-=k,f&&x<l){var E=Ut(b,w);return Nr(e,t,Tr,v.placeholder,n,b,E,c,u,l-x)}var _=d?n:this,S=h?_[e]:e;return x=b.length,c?b=vo(b,c):m&&x>1&&b.reverse(),p&&u<x&&(b.length=u),this&&this!==We&&this instanceof v&&(S=g||Sr(S)),S.apply(_,b)}}function Cr(e,t){return function(n,i){return function(e,t,n,i){return ci(e,(function(e,r,o){t(i,n(e),r,o)})),i}(n,e,t(i),{})}}function Ar(e,t){return function(n,i){var r;if(void 0===n&&void 0===i)return t;if(void 0!==n&&(r=n),void 0!==i){if(void 0===r)return i;"string"==typeof n||"string"==typeof i?(n=Xi(n),i=Xi(i)):(n=Yi(n),i=Yi(i)),r=e(n,i)}return r}}function Or(e){return $r((function(t){return t=dt(t,Ct(Yr())),qi((function(n){var i=this;return e(t,(function(e){return rt(e,i,n)}))}))}))}function Dr(e,t){var n=(t=void 0===t?" ":Xi(t)).length;if(n<2)return n?ji(t,e):t;var i=ji(t,Zt(e/$t(t)));return qt(t)?ur(zt(i),0,e).join(""):i.slice(0,e)}function Lr(e){return function(t,n,r){return r&&"number"!=typeof r&&ao(t,n,r)&&(n=r=void 0),t=na(t),void 0===n?(n=t,t=0):n=na(n),function(e,t,n,r){for(var o=-1,s=sn(Zt((t-e)/(n||1)),0),a=i(s);s--;)a[r?s:++o]=e,e+=n;return a}(t,n,r=void 0===r?t<n?1:-1:na(r),e)}}function Rr(e){return function(t,n){return"string"==typeof t&&"string"==typeof n||(t=oa(t),n=oa(n)),e(t,n)}}function Nr(e,t,n,i,r,o,s,a,c,u){var l=8&t;t|=l?32:64,4&(t&=~(l?64:32))||(t&=-4);var p=[e,t,r,l?o:void 0,l?s:void 0,l?void 0:o,l?void 0:s,a,c,u],d=n.apply(void 0,p);return uo(e)&&bo(d,p),d.placeholder=i,ko(d,e,t)}function Kr(e){var t=fe[e];return function(e,n){if(e=oa(e),(n=null==n?0:an(ia(n),292))&&nn(e)){var i=(aa(e)+"e").split("e");return+((i=(aa(t(i[0]+"e"+(+i[1]+n)))+"e").split("e"))[0]+"e"+(+i[1]-n))}return t(e)}}var jr=mn&&1/Bt(new mn([,-0]))[1]==1/0?function(e){return new mn(e)}:Xa;function qr(e){return function(t){var n=no(t);return n==f?Ft(t):n==x?Ht(t):function(e,t){return dt(t,(function(t){return[t,e[t]]}))}(t,e(t))}}function Fr(e,t,n,s,a,c,u,l){var p=2&t;if(!p&&"function"!=typeof e)throw new xe(r);var d=s?s.length:0;if(d||(t&=-97,s=a=void 0),u=void 0===u?u:sn(ia(u),0),l=void 0===l?l:ia(l),d-=a?a.length:0,64&t){var h=s,f=a;s=a=void 0}var m=p?void 0:Gr(e),g=[e,t,n,s,a,h,f,c,u,l];if(m&&function(e,t){var n=e[1],i=t[1],r=n|i,s=r<131,a=128==i&&8==n||128==i&&256==n&&e[7].length<=t[8]||384==i&&t[7].length<=t[8]&&8==n;if(!s&&!a)return e;1&i&&(e[2]=t[2],r|=1&n?0:4);var c=t[3];if(c){var u=e[3];e[3]=u?mr(u,c,t[4]):c,e[4]=u?Ut(e[3],o):t[4]}(c=t[5])&&(u=e[5],e[5]=u?gr(u,c,t[6]):c,e[6]=u?Ut(e[5],o):t[6]);(c=t[7])&&(e[7]=c);128&i&&(e[8]=null==e[8]?t[8]:an(e[8],t[8]));null==e[9]&&(e[9]=t[9]);e[0]=t[0],e[1]=r}(g,m),e=g[0],t=g[1],n=g[2],s=g[3],a=g[4],!(l=g[9]=void 0===g[9]?p?0:e.length:sn(g[9]-d,0))&&24&t&&(t&=-25),t&&1!=t)v=8==t||16==t?function(e,t,n){var r=Sr(e);return function o(){for(var s=arguments.length,a=i(s),c=s,u=Jr(o);c--;)a[c]=arguments[c];var l=s<3&&a[0]!==u&&a[s-1]!==u?[]:Ut(a,u);if((s-=l.length)<n)return Nr(e,t,Tr,o.placeholder,void 0,a,l,void 0,void 0,n-s);var p=this&&this!==We&&this instanceof o?r:e;return rt(p,this,a)}}(e,t,l):32!=t&&33!=t||a.length?Tr.apply(void 0,g):function(e,t,n,r){var o=1&t,s=Sr(e);return function t(){for(var a=-1,c=arguments.length,u=-1,l=r.length,p=i(l+c),d=this&&this!==We&&this instanceof t?s:e;++u<l;)p[u]=r[u];for(;c--;)p[u++]=arguments[++a];return rt(d,o?n:this,p)}}(e,t,n,s);else var v=function(e,t,n){var i=1&t,r=Sr(e);return function t(){var o=this&&this!==We&&this instanceof t?r:e;return o.apply(i?n:this,arguments)}}(e,t,n);return ko((m?Bi:bo)(v,g),e,t)}function Mr(e,t,n,i){return void 0===e||Cs(e,we[n])&&!_e.call(i,n)?t:e}function Ur(e,t,n,i,r,o){return Hs(e)&&Hs(t)&&(o.set(t,e),Ai(e,t,void 0,Ur,o),o.delete(t)),e}function Br(e){return Gs(e)?void 0:e}function Hr(e,t,n,i,r,o){var s=1&n,a=e.length,c=t.length;if(a!=c&&!(s&&c>a))return!1;var u=o.get(e);if(u&&o.get(t))return u==t;var l=-1,p=!0,d=2&n?new Kn:void 0;for(o.set(e,t),o.set(t,e);++l<a;){var h=e[l],f=t[l];if(i)var m=s?i(f,h,l,t,e,o):i(h,f,l,e,t,o);if(void 0!==m){if(m)continue;p=!1;break}if(d){if(!gt(t,(function(e,t){if(!Ot(d,t)&&(h===e||r(h,e,n,i,o)))return d.push(t)}))){p=!1;break}}else if(h!==f&&!r(h,f,n,i,o)){p=!1;break}}return o.delete(e),o.delete(t),p}function $r(e){return wo(mo(e,void 0,Ro),e+"")}function zr(e){return di(e,ya,eo)}function Wr(e){return di(e,wa,to)}var Gr=xn?function(e){return xn.get(e)}:Xa;function Vr(e){for(var t=e.name+"",n=bn[t],i=_e.call(bn,t)?n.length:0;i--;){var r=n[i],o=r.func;if(null==o||o==e)return r.name}return t}function Jr(e){return(_e.call(Tn,"placeholder")?Tn:e).placeholder}function Yr(){var e=Tn.iteratee||Ga;return e=e===Ga?Ei:e,arguments.length?e(arguments[0],arguments[1]):e}function Xr(e,t){var n,i,r=e.__data__;return("string"==(i=typeof(n=t))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==n:null===n)?r["string"==typeof t?"string":"hash"]:r.map}function Zr(e){for(var t=ya(e),n=t.length;n--;){var i=t[n],r=e[i];t[n]=[i,r,ho(r)]}return t}function Qr(e,t){var n=function(e,t){return null==e?void 0:e[t]}(e,t);return ki(n)?n:void 0}var eo=en?function(e){return null==e?[]:(e=me(e),ut(en(e),(function(t){return Ve.call(e,t)})))}:rc,to=en?function(e){for(var t=[];e;)ht(t,eo(e)),e=ze(e);return t}:rc,no=hi;function io(e,t,n){for(var i=-1,r=(t=ar(t,e)).length,o=!1;++i<r;){var s=Io(t[i]);if(!(o=null!=e&&n(e,s)))break;e=e[s]}return o||++i!=r?o:!!(r=null==e?0:e.length)&&Bs(r)&&so(s,r)&&(Ls(e)||Ds(e))}function ro(e){return"function"!=typeof e.constructor||po(e)?{}:Cn(ze(e))}function oo(e){return Ls(e)||Ds(e)||!!(Xe&&e&&e[Xe])}function so(e,t){var n=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==n||"symbol"!=n&&ae.test(e))&&e>-1&&e%1==0&&e<t}function ao(e,t,n){if(!Hs(n))return!1;var i=typeof t;return!!("number"==i?Ns(n)&&so(t,n.length):"string"==i&&t in n)&&Cs(n[t],e)}function co(e,t){if(Ls(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!Xs(e))||(H.test(e)||!B.test(e)||null!=t&&e in me(t))}function uo(e){var t=Vr(e),n=Tn[t];if("function"!=typeof n||!(t in Dn.prototype))return!1;if(e===n)return!0;var i=Gr(n);return!!i&&e===i[0]}(dn&&no(new dn(new ArrayBuffer(1)))!=E||hn&&no(new hn)!=f||fn&&"[object Promise]"!=no(fn.resolve())||mn&&no(new mn)!=x||gn&&no(new gn)!=w)&&(no=function(e){var t=hi(e),n=t==g?e.constructor:void 0,i=n?Po(n):"";if(i)switch(i){case yn:return E;case wn:return f;case kn:return"[object Promise]";case En:return x;case _n:return w}return t});var lo=ke?Ms:oc;function po(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||we)}function ho(e){return e==e&&!Hs(e)}function fo(e,t){return function(n){return null!=n&&(n[e]===t&&(void 0!==t||e in me(n)))}}function mo(e,t,n){return t=sn(void 0===t?e.length-1:t,0),function(){for(var r=arguments,o=-1,s=sn(r.length-t,0),a=i(s);++o<s;)a[o]=r[t+o];o=-1;for(var c=i(t+1);++o<t;)c[o]=r[o];return c[t]=n(a),rt(e,this,c)}}function go(e,t){return t.length<2?e:pi(e,zi(t,0,-1))}function vo(e,t){for(var n=e.length,i=an(t.length,n),r=vr(e);i--;){var o=t[i];e[i]=so(o,n)?r[o]:void 0}return e}function xo(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}var bo=Eo(Bi),yo=Xt||function(e,t){return We.setTimeout(e,t)},wo=Eo(Hi);function ko(e,t,n){var i=t+"";return wo(e,function(e,t){var n=t.length;if(!n)return e;var i=n-1;return t[i]=(n>1?"& ":"")+t[i],t=t.join(n>2?", ":" "),e.replace(Y,"{\n/* [wrapped with "+t+"] */\n")}(i,function(e,t){return st(s,(function(n){var i="_."+n[0];t&n[1]&&!lt(e,i)&&e.push(i)})),e.sort()}(function(e){var t=e.match(X);return t?t[1].split(Z):[]}(i),n)))}function Eo(e){var t=0,n=0;return function(){var i=cn(),r=16-(i-n);if(n=i,r>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}function _o(e,t){var n=-1,i=e.length,r=i-1;for(t=void 0===t?i:t;++n<t;){var o=Ki(n,r),s=e[o];e[o]=e[n],e[n]=s}return e.length=t,e}var So=function(e){var t=Es(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace($,(function(e,n,i,r){t.push(i?r.replace(ee,"$1"):n||e)})),t}));function Io(e){if("string"==typeof e||Xs(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function Po(e){if(null!=e){try{return Ee.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function To(e){if(e instanceof Dn)return e.clone();var t=new On(e.__wrapped__,e.__chain__);return t.__actions__=vr(e.__actions__),t.__index__=e.__index__,t.__values__=e.__values__,t}var Co=qi((function(e,t){return Ks(e)?Qn(e,oi(t,1,Ks,!0)):[]})),Ao=qi((function(e,t){var n=Fo(t);return Ks(n)&&(n=void 0),Ks(e)?Qn(e,oi(t,1,Ks,!0),Yr(n,2)):[]})),Oo=qi((function(e,t){var n=Fo(t);return Ks(n)&&(n=void 0),Ks(e)?Qn(e,oi(t,1,Ks,!0),void 0,n):[]}));function Do(e,t,n){var i=null==e?0:e.length;if(!i)return-1;var r=null==n?0:ia(n);return r<0&&(r=sn(i+r,0)),bt(e,Yr(t,3),r)}function Lo(e,t,n){var i=null==e?0:e.length;if(!i)return-1;var r=i-1;return void 0!==n&&(r=ia(n),r=n<0?sn(i+r,0):an(r,i-1)),bt(e,Yr(t,3),r,!0)}function Ro(e){return(null==e?0:e.length)?oi(e,1):[]}function No(e){return e&&e.length?e[0]:void 0}var Ko=qi((function(e){var t=dt(e,or);return t.length&&t[0]===e[0]?vi(t):[]})),jo=qi((function(e){var t=Fo(e),n=dt(e,or);return t===Fo(n)?t=void 0:n.pop(),n.length&&n[0]===e[0]?vi(n,Yr(t,2)):[]})),qo=qi((function(e){var t=Fo(e),n=dt(e,or);return(t="function"==typeof t?t:void 0)&&n.pop(),n.length&&n[0]===e[0]?vi(n,void 0,t):[]}));function Fo(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}var Mo=qi(Uo);function Uo(e,t){return e&&e.length&&t&&t.length?Ri(e,t):e}var Bo=$r((function(e,t){var n=null==e?0:e.length,i=Vn(e,t);return Ni(e,dt(t,(function(e){return so(e,n)?+e:e})).sort(fr)),i}));function Ho(e){return null==e?e:pn.call(e)}var $o=qi((function(e){return Zi(oi(e,1,Ks,!0))})),zo=qi((function(e){var t=Fo(e);return Ks(t)&&(t=void 0),Zi(oi(e,1,Ks,!0),Yr(t,2))})),Wo=qi((function(e){var t=Fo(e);return t="function"==typeof t?t:void 0,Zi(oi(e,1,Ks,!0),void 0,t)}));function Go(e){if(!e||!e.length)return[];var t=0;return e=ut(e,(function(e){if(Ks(e))return t=sn(e.length,t),!0})),Tt(t,(function(t){return dt(e,_t(t))}))}function Vo(e,t){if(!e||!e.length)return[];var n=Go(e);return null==t?n:dt(n,(function(e){return rt(t,void 0,e)}))}var Jo=qi((function(e,t){return Ks(e)?Qn(e,t):[]})),Yo=qi((function(e){return ir(ut(e,Ks))})),Xo=qi((function(e){var t=Fo(e);return Ks(t)&&(t=void 0),ir(ut(e,Ks),Yr(t,2))})),Zo=qi((function(e){var t=Fo(e);return t="function"==typeof t?t:void 0,ir(ut(e,Ks),void 0,t)})),Qo=qi(Go);var es=qi((function(e){var t=e.length,n=t>1?e[t-1]:void 0;return n="function"==typeof n?(e.pop(),n):void 0,Vo(e,n)}));function ts(e){var t=Tn(e);return t.__chain__=!0,t}function ns(e,t){return t(e)}var is=$r((function(e){var t=e.length,n=t?e[0]:0,i=this.__wrapped__,r=function(t){return Vn(t,e)};return!(t>1||this.__actions__.length)&&i instanceof Dn&&so(n)?((i=i.slice(n,+n+(t?1:0))).__actions__.push({func:ns,args:[r],thisArg:void 0}),new On(i,this.__chain__).thru((function(e){return t&&!e.length&&e.push(void 0),e}))):this.thru(r)}));var rs=br((function(e,t,n){_e.call(e,n)?++e[n]:Gn(e,n,1)}));var os=Ir(Do),ss=Ir(Lo);function as(e,t){return(Ls(e)?st:ei)(e,Yr(t,3))}function cs(e,t){return(Ls(e)?at:ti)(e,Yr(t,3))}var us=br((function(e,t,n){_e.call(e,n)?e[n].push(t):Gn(e,n,[t])}));var ls=qi((function(e,t,n){var r=-1,o="function"==typeof t,s=Ns(e)?i(e.length):[];return ei(e,(function(e){s[++r]=o?rt(t,e,n):xi(e,t,n)})),s})),ps=br((function(e,t,n){Gn(e,n,t)}));function ds(e,t){return(Ls(e)?dt:Pi)(e,Yr(t,3))}var hs=br((function(e,t,n){e[n?0:1].push(t)}),(function(){return[[],[]]}));var fs=qi((function(e,t){if(null==e)return[];var n=t.length;return n>1&&ao(e,t[0],t[1])?t=[]:n>2&&ao(t[0],t[1],t[2])&&(t=[t[0]]),Di(e,oi(t,1),[])})),ms=Yt||function(){return We.Date.now()};function gs(e,t,n){return t=n?void 0:t,Fr(e,128,void 0,void 0,void 0,void 0,t=e&&null==t?e.length:t)}function vs(e,t){var n;if("function"!=typeof t)throw new xe(r);return e=ia(e),function(){return--e>0&&(n=t.apply(this,arguments)),e<=1&&(t=void 0),n}}var xs=qi((function(e,t,n){var i=1;if(n.length){var r=Ut(n,Jr(xs));i|=32}return Fr(e,i,t,n,r)})),bs=qi((function(e,t,n){var i=3;if(n.length){var r=Ut(n,Jr(bs));i|=32}return Fr(t,i,e,n,r)}));function ys(e,t,n){var i,o,s,a,c,u,l=0,p=!1,d=!1,h=!0;if("function"!=typeof e)throw new xe(r);function f(t){var n=i,r=o;return i=o=void 0,l=t,a=e.apply(r,n)}function m(e){return l=e,c=yo(v,t),p?f(e):a}function g(e){var n=e-u;return void 0===u||n>=t||n<0||d&&e-l>=s}function v(){var e=ms();if(g(e))return x(e);c=yo(v,function(e){var n=t-(e-u);return d?an(n,s-(e-l)):n}(e))}function x(e){return c=void 0,h&&i?f(e):(i=o=void 0,a)}function b(){var e=ms(),n=g(e);if(i=arguments,o=this,u=e,n){if(void 0===c)return m(u);if(d)return lr(c),c=yo(v,t),f(u)}return void 0===c&&(c=yo(v,t)),a}return t=oa(t)||0,Hs(n)&&(p=!!n.leading,s=(d="maxWait"in n)?sn(oa(n.maxWait)||0,t):s,h="trailing"in n?!!n.trailing:h),b.cancel=function(){void 0!==c&&lr(c),l=0,i=u=o=c=void 0},b.flush=function(){return void 0===c?a:x(ms())},b}var ws=qi((function(e,t){return Zn(e,1,t)})),ks=qi((function(e,t,n){return Zn(e,oa(t)||0,n)}));function Es(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new xe(r);var n=function(){var i=arguments,r=t?t.apply(this,i):i[0],o=n.cache;if(o.has(r))return o.get(r);var s=e.apply(this,i);return n.cache=o.set(r,s)||o,s};return n.cache=new(Es.Cache||Nn),n}function _s(e){if("function"!=typeof e)throw new xe(r);return function(){var t=arguments;switch(t.length){case 0:return!e.call(this);case 1:return!e.call(this,t[0]);case 2:return!e.call(this,t[0],t[1]);case 3:return!e.call(this,t[0],t[1],t[2])}return!e.apply(this,t)}}Es.Cache=Nn;var Ss=cr((function(e,t){var n=(t=1==t.length&&Ls(t[0])?dt(t[0],Ct(Yr())):dt(oi(t,1),Ct(Yr()))).length;return qi((function(i){for(var r=-1,o=an(i.length,n);++r<o;)i[r]=t[r].call(this,i[r]);return rt(e,this,i)}))})),Is=qi((function(e,t){return Fr(e,32,void 0,t,Ut(t,Jr(Is)))})),Ps=qi((function(e,t){return Fr(e,64,void 0,t,Ut(t,Jr(Ps)))})),Ts=$r((function(e,t){return Fr(e,256,void 0,void 0,void 0,t)}));function Cs(e,t){return e===t||e!=e&&t!=t}var As=Rr(fi),Os=Rr((function(e,t){return e>=t})),Ds=bi(function(){return arguments}())?bi:function(e){return $s(e)&&_e.call(e,"callee")&&!Ve.call(e,"callee")},Ls=i.isArray,Rs=Ze?Ct(Ze):function(e){return $s(e)&&hi(e)==k};function Ns(e){return null!=e&&Bs(e.length)&&!Ms(e)}function Ks(e){return $s(e)&&Ns(e)}var js=tn||oc,qs=Qe?Ct(Qe):function(e){return $s(e)&&hi(e)==l};function Fs(e){if(!$s(e))return!1;var t=hi(e);return t==p||"[object DOMException]"==t||"string"==typeof e.message&&"string"==typeof e.name&&!Gs(e)}function Ms(e){if(!Hs(e))return!1;var t=hi(e);return t==d||t==h||"[object AsyncFunction]"==t||"[object Proxy]"==t}function Us(e){return"number"==typeof e&&e==ia(e)}function Bs(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}function Hs(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}function $s(e){return null!=e&&"object"==typeof e}var zs=et?Ct(et):function(e){return $s(e)&&no(e)==f};function Ws(e){return"number"==typeof e||$s(e)&&hi(e)==m}function Gs(e){if(!$s(e)||hi(e)!=g)return!1;var t=ze(e);if(null===t)return!0;var n=_e.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&Ee.call(n)==Te}var Vs=tt?Ct(tt):function(e){return $s(e)&&hi(e)==v};var Js=nt?Ct(nt):function(e){return $s(e)&&no(e)==x};function Ys(e){return"string"==typeof e||!Ls(e)&&$s(e)&&hi(e)==b}function Xs(e){return"symbol"==typeof e||$s(e)&&hi(e)==y}var Zs=it?Ct(it):function(e){return $s(e)&&Bs(e.length)&&!!Fe[hi(e)]};var Qs=Rr(Ii),ea=Rr((function(e,t){return e<=t}));function ta(e){if(!e)return[];if(Ns(e))return Ys(e)?zt(e):vr(e);if(vt&&e[vt])return function(e){for(var t,n=[];!(t=e.next()).done;)n.push(t.value);return n}(e[vt]());var t=no(e);return(t==f?Ft:t==x?Bt:Ca)(e)}function na(e){return e?(e=oa(e))===1/0||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}function ia(e){var t=na(e),n=t%1;return t==t?n?t-n:t:0}function ra(e){return e?Jn(ia(e),0,4294967295):0}function oa(e){if("number"==typeof e)return e;if(Xs(e))return NaN;if(Hs(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=Hs(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(G,"");var n=re.test(e);return n||se.test(e)?He(e.slice(2),n?2:8):ie.test(e)?NaN:+e}function sa(e){return xr(e,wa(e))}function aa(e){return null==e?"":Xi(e)}var ca=yr((function(e,t){if(po(t)||Ns(t))xr(t,ya(t),e);else for(var n in t)_e.call(t,n)&&Hn(e,n,t[n])})),ua=yr((function(e,t){xr(t,wa(t),e)})),la=yr((function(e,t,n,i){xr(t,wa(t),e,i)})),pa=yr((function(e,t,n,i){xr(t,ya(t),e,i)})),da=$r(Vn);var ha=qi((function(e,t){e=me(e);var n=-1,i=t.length,r=i>2?t[2]:void 0;for(r&&ao(t[0],t[1],r)&&(i=1);++n<i;)for(var o=t[n],s=wa(o),a=-1,c=s.length;++a<c;){var u=s[a],l=e[u];(void 0===l||Cs(l,we[u])&&!_e.call(e,u))&&(e[u]=o[u])}return e})),fa=qi((function(e){return e.push(void 0,Ur),rt(Ea,void 0,e)}));function ma(e,t,n){var i=null==e?void 0:pi(e,t);return void 0===i?n:i}function ga(e,t){return null!=e&&io(e,t,gi)}var va=Cr((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=Pe.call(t)),e[t]=n}),Ha(Wa)),xa=Cr((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=Pe.call(t)),_e.call(e,t)?e[t].push(n):e[t]=[n]}),Yr),ba=qi(xi);function ya(e){return Ns(e)?qn(e):_i(e)}function wa(e){return Ns(e)?qn(e,!0):Si(e)}var ka=yr((function(e,t,n){Ai(e,t,n)})),Ea=yr((function(e,t,n,i){Ai(e,t,n,i)})),_a=$r((function(e,t){var n={};if(null==e)return n;var i=!1;t=dt(t,(function(t){return t=ar(t,e),i||(i=t.length>1),t})),xr(e,Wr(e),n),i&&(n=Yn(n,7,Br));for(var r=t.length;r--;)Qi(n,t[r]);return n}));var Sa=$r((function(e,t){return null==e?{}:function(e,t){return Li(e,t,(function(t,n){return ga(e,n)}))}(e,t)}));function Ia(e,t){if(null==e)return{};var n=dt(Wr(e),(function(e){return[e]}));return t=Yr(t),Li(e,n,(function(e,n){return t(e,n[0])}))}var Pa=qr(ya),Ta=qr(wa);function Ca(e){return null==e?[]:At(e,ya(e))}var Aa=_r((function(e,t,n){return t=t.toLowerCase(),e+(n?Oa(t):t)}));function Oa(e){return Fa(aa(e).toLowerCase())}function Da(e){return(e=aa(e))&&e.replace(ce,Nt).replace(De,"")}var La=_r((function(e,t,n){return e+(n?"-":"")+t.toLowerCase()})),Ra=_r((function(e,t,n){return e+(n?" ":"")+t.toLowerCase()})),Na=Er("toLowerCase");var Ka=_r((function(e,t,n){return e+(n?"_":"")+t.toLowerCase()}));var ja=_r((function(e,t,n){return e+(n?" ":"")+Fa(t)}));var qa=_r((function(e,t,n){return e+(n?" ":"")+t.toUpperCase()})),Fa=Er("toUpperCase");function Ma(e,t,n){return e=aa(e),void 0===(t=n?void 0:t)?function(e){return Ke.test(e)}(e)?function(e){return e.match(Re)||[]}(e):function(e){return e.match(Q)||[]}(e):e.match(t)||[]}var Ua=qi((function(e,t){try{return rt(e,void 0,t)}catch(e){return Fs(e)?e:new de(e)}})),Ba=$r((function(e,t){return st(t,(function(t){t=Io(t),Gn(e,t,xs(e[t],e))})),e}));function Ha(e){return function(){return e}}var $a=Pr(),za=Pr(!0);function Wa(e){return e}function Ga(e){return Ei("function"==typeof e?e:Yn(e,1))}var Va=qi((function(e,t){return function(n){return xi(n,e,t)}})),Ja=qi((function(e,t){return function(n){return xi(e,n,t)}}));function Ya(e,t,n){var i=ya(t),r=li(t,i);null!=n||Hs(t)&&(r.length||!i.length)||(n=t,t=e,e=this,r=li(t,ya(t)));var o=!(Hs(n)&&"chain"in n&&!n.chain),s=Ms(e);return st(r,(function(n){var i=t[n];e[n]=i,s&&(e.prototype[n]=function(){var t=this.__chain__;if(o||t){var n=e(this.__wrapped__),r=n.__actions__=vr(this.__actions__);return r.push({func:i,args:arguments,thisArg:e}),n.__chain__=t,n}return i.apply(e,ht([this.value()],arguments))})})),e}function Xa(){}var Za=Or(dt),Qa=Or(ct),ec=Or(gt);function tc(e){return co(e)?_t(Io(e)):function(e){return function(t){return pi(t,e)}}(e)}var nc=Lr(),ic=Lr(!0);function rc(){return[]}function oc(){return!1}var sc=Ar((function(e,t){return e+t}),0),ac=Kr("ceil"),cc=Ar((function(e,t){return e/t}),1),uc=Kr("floor");var lc,pc=Ar((function(e,t){return e*t}),1),dc=Kr("round"),hc=Ar((function(e,t){return e-t}),0);return Tn.after=function(e,t){if("function"!=typeof t)throw new xe(r);return e=ia(e),function(){if(--e<1)return t.apply(this,arguments)}},Tn.ary=gs,Tn.assign=ca,Tn.assignIn=ua,Tn.assignInWith=la,Tn.assignWith=pa,Tn.at=da,Tn.before=vs,Tn.bind=xs,Tn.bindAll=Ba,Tn.bindKey=bs,Tn.castArray=function(){if(!arguments.length)return[];var e=arguments[0];return Ls(e)?e:[e]},Tn.chain=ts,Tn.chunk=function(e,t,n){t=(n?ao(e,t,n):void 0===t)?1:sn(ia(t),0);var r=null==e?0:e.length;if(!r||t<1)return[];for(var o=0,s=0,a=i(Zt(r/t));o<r;)a[s++]=zi(e,o,o+=t);return a},Tn.compact=function(e){for(var t=-1,n=null==e?0:e.length,i=0,r=[];++t<n;){var o=e[t];o&&(r[i++]=o)}return r},Tn.concat=function(){var e=arguments.length;if(!e)return[];for(var t=i(e-1),n=arguments[0],r=e;r--;)t[r-1]=arguments[r];return ht(Ls(n)?vr(n):[n],oi(t,1))},Tn.cond=function(e){var t=null==e?0:e.length,n=Yr();return e=t?dt(e,(function(e){if("function"!=typeof e[1])throw new xe(r);return[n(e[0]),e[1]]})):[],qi((function(n){for(var i=-1;++i<t;){var r=e[i];if(rt(r[0],this,n))return rt(r[1],this,n)}}))},Tn.conforms=function(e){return function(e){var t=ya(e);return function(n){return Xn(n,e,t)}}(Yn(e,1))},Tn.constant=Ha,Tn.countBy=rs,Tn.create=function(e,t){var n=Cn(e);return null==t?n:Wn(n,t)},Tn.curry=function e(t,n,i){var r=Fr(t,8,void 0,void 0,void 0,void 0,void 0,n=i?void 0:n);return r.placeholder=e.placeholder,r},Tn.curryRight=function e(t,n,i){var r=Fr(t,16,void 0,void 0,void 0,void 0,void 0,n=i?void 0:n);return r.placeholder=e.placeholder,r},Tn.debounce=ys,Tn.defaults=ha,Tn.defaultsDeep=fa,Tn.defer=ws,Tn.delay=ks,Tn.difference=Co,Tn.differenceBy=Ao,Tn.differenceWith=Oo,Tn.drop=function(e,t,n){var i=null==e?0:e.length;return i?zi(e,(t=n||void 0===t?1:ia(t))<0?0:t,i):[]},Tn.dropRight=function(e,t,n){var i=null==e?0:e.length;return i?zi(e,0,(t=i-(t=n||void 0===t?1:ia(t)))<0?0:t):[]},Tn.dropRightWhile=function(e,t){return e&&e.length?tr(e,Yr(t,3),!0,!0):[]},Tn.dropWhile=function(e,t){return e&&e.length?tr(e,Yr(t,3),!0):[]},Tn.fill=function(e,t,n,i){var r=null==e?0:e.length;return r?(n&&"number"!=typeof n&&ao(e,t,n)&&(n=0,i=r),function(e,t,n,i){var r=e.length;for((n=ia(n))<0&&(n=-n>r?0:r+n),(i=void 0===i||i>r?r:ia(i))<0&&(i+=r),i=n>i?0:ra(i);n<i;)e[n++]=t;return e}(e,t,n,i)):[]},Tn.filter=function(e,t){return(Ls(e)?ut:ri)(e,Yr(t,3))},Tn.flatMap=function(e,t){return oi(ds(e,t),1)},Tn.flatMapDeep=function(e,t){return oi(ds(e,t),1/0)},Tn.flatMapDepth=function(e,t,n){return n=void 0===n?1:ia(n),oi(ds(e,t),n)},Tn.flatten=Ro,Tn.flattenDeep=function(e){return(null==e?0:e.length)?oi(e,1/0):[]},Tn.flattenDepth=function(e,t){return(null==e?0:e.length)?oi(e,t=void 0===t?1:ia(t)):[]},Tn.flip=function(e){return Fr(e,512)},Tn.flow=$a,Tn.flowRight=za,Tn.fromPairs=function(e){for(var t=-1,n=null==e?0:e.length,i={};++t<n;){var r=e[t];i[r[0]]=r[1]}return i},Tn.functions=function(e){return null==e?[]:li(e,ya(e))},Tn.functionsIn=function(e){return null==e?[]:li(e,wa(e))},Tn.groupBy=us,Tn.initial=function(e){return(null==e?0:e.length)?zi(e,0,-1):[]},Tn.intersection=Ko,Tn.intersectionBy=jo,Tn.intersectionWith=qo,Tn.invert=va,Tn.invertBy=xa,Tn.invokeMap=ls,Tn.iteratee=Ga,Tn.keyBy=ps,Tn.keys=ya,Tn.keysIn=wa,Tn.map=ds,Tn.mapKeys=function(e,t){var n={};return t=Yr(t,3),ci(e,(function(e,i,r){Gn(n,t(e,i,r),e)})),n},Tn.mapValues=function(e,t){var n={};return t=Yr(t,3),ci(e,(function(e,i,r){Gn(n,i,t(e,i,r))})),n},Tn.matches=function(e){return Ti(Yn(e,1))},Tn.matchesProperty=function(e,t){return Ci(e,Yn(t,1))},Tn.memoize=Es,Tn.merge=ka,Tn.mergeWith=Ea,Tn.method=Va,Tn.methodOf=Ja,Tn.mixin=Ya,Tn.negate=_s,Tn.nthArg=function(e){return e=ia(e),qi((function(t){return Oi(t,e)}))},Tn.omit=_a,Tn.omitBy=function(e,t){return Ia(e,_s(Yr(t)))},Tn.once=function(e){return vs(2,e)},Tn.orderBy=function(e,t,n,i){return null==e?[]:(Ls(t)||(t=null==t?[]:[t]),Ls(n=i?void 0:n)||(n=null==n?[]:[n]),Di(e,t,n))},Tn.over=Za,Tn.overArgs=Ss,Tn.overEvery=Qa,Tn.overSome=ec,Tn.partial=Is,Tn.partialRight=Ps,Tn.partition=hs,Tn.pick=Sa,Tn.pickBy=Ia,Tn.property=tc,Tn.propertyOf=function(e){return function(t){return null==e?void 0:pi(e,t)}},Tn.pull=Mo,Tn.pullAll=Uo,Tn.pullAllBy=function(e,t,n){return e&&e.length&&t&&t.length?Ri(e,t,Yr(n,2)):e},Tn.pullAllWith=function(e,t,n){return e&&e.length&&t&&t.length?Ri(e,t,void 0,n):e},Tn.pullAt=Bo,Tn.range=nc,Tn.rangeRight=ic,Tn.rearg=Ts,Tn.reject=function(e,t){return(Ls(e)?ut:ri)(e,_s(Yr(t,3)))},Tn.remove=function(e,t){var n=[];if(!e||!e.length)return n;var i=-1,r=[],o=e.length;for(t=Yr(t,3);++i<o;){var s=e[i];t(s,i,e)&&(n.push(s),r.push(i))}return Ni(e,r),n},Tn.rest=function(e,t){if("function"!=typeof e)throw new xe(r);return qi(e,t=void 0===t?t:ia(t))},Tn.reverse=Ho,Tn.sampleSize=function(e,t,n){return t=(n?ao(e,t,n):void 0===t)?1:ia(t),(Ls(e)?Mn:Mi)(e,t)},Tn.set=function(e,t,n){return null==e?e:Ui(e,t,n)},Tn.setWith=function(e,t,n,i){return i="function"==typeof i?i:void 0,null==e?e:Ui(e,t,n,i)},Tn.shuffle=function(e){return(Ls(e)?Un:$i)(e)},Tn.slice=function(e,t,n){var i=null==e?0:e.length;return i?(n&&"number"!=typeof n&&ao(e,t,n)?(t=0,n=i):(t=null==t?0:ia(t),n=void 0===n?i:ia(n)),zi(e,t,n)):[]},Tn.sortBy=fs,Tn.sortedUniq=function(e){return e&&e.length?Ji(e):[]},Tn.sortedUniqBy=function(e,t){return e&&e.length?Ji(e,Yr(t,2)):[]},Tn.split=function(e,t,n){return n&&"number"!=typeof n&&ao(e,t,n)&&(t=n=void 0),(n=void 0===n?4294967295:n>>>0)?(e=aa(e))&&("string"==typeof t||null!=t&&!Vs(t))&&!(t=Xi(t))&&qt(e)?ur(zt(e),0,n):e.split(t,n):[]},Tn.spread=function(e,t){if("function"!=typeof e)throw new xe(r);return t=null==t?0:sn(ia(t),0),qi((function(n){var i=n[t],r=ur(n,0,t);return i&&ht(r,i),rt(e,this,r)}))},Tn.tail=function(e){var t=null==e?0:e.length;return t?zi(e,1,t):[]},Tn.take=function(e,t,n){return e&&e.length?zi(e,0,(t=n||void 0===t?1:ia(t))<0?0:t):[]},Tn.takeRight=function(e,t,n){var i=null==e?0:e.length;return i?zi(e,(t=i-(t=n||void 0===t?1:ia(t)))<0?0:t,i):[]},Tn.takeRightWhile=function(e,t){return e&&e.length?tr(e,Yr(t,3),!1,!0):[]},Tn.takeWhile=function(e,t){return e&&e.length?tr(e,Yr(t,3)):[]},Tn.tap=function(e,t){return t(e),e},Tn.throttle=function(e,t,n){var i=!0,o=!0;if("function"!=typeof e)throw new xe(r);return Hs(n)&&(i="leading"in n?!!n.leading:i,o="trailing"in n?!!n.trailing:o),ys(e,t,{leading:i,maxWait:t,trailing:o})},Tn.thru=ns,Tn.toArray=ta,Tn.toPairs=Pa,Tn.toPairsIn=Ta,Tn.toPath=function(e){return Ls(e)?dt(e,Io):Xs(e)?[e]:vr(So(aa(e)))},Tn.toPlainObject=sa,Tn.transform=function(e,t,n){var i=Ls(e),r=i||js(e)||Zs(e);if(t=Yr(t,4),null==n){var o=e&&e.constructor;n=r?i?new o:[]:Hs(e)&&Ms(o)?Cn(ze(e)):{}}return(r?st:ci)(e,(function(e,i,r){return t(n,e,i,r)})),n},Tn.unary=function(e){return gs(e,1)},Tn.union=$o,Tn.unionBy=zo,Tn.unionWith=Wo,Tn.uniq=function(e){return e&&e.length?Zi(e):[]},Tn.uniqBy=function(e,t){return e&&e.length?Zi(e,Yr(t,2)):[]},Tn.uniqWith=function(e,t){return t="function"==typeof t?t:void 0,e&&e.length?Zi(e,void 0,t):[]},Tn.unset=function(e,t){return null==e||Qi(e,t)},Tn.unzip=Go,Tn.unzipWith=Vo,Tn.update=function(e,t,n){return null==e?e:er(e,t,sr(n))},Tn.updateWith=function(e,t,n,i){return i="function"==typeof i?i:void 0,null==e?e:er(e,t,sr(n),i)},Tn.values=Ca,Tn.valuesIn=function(e){return null==e?[]:At(e,wa(e))},Tn.without=Jo,Tn.words=Ma,Tn.wrap=function(e,t){return Is(sr(t),e)},Tn.xor=Yo,Tn.xorBy=Xo,Tn.xorWith=Zo,Tn.zip=Qo,Tn.zipObject=function(e,t){return rr(e||[],t||[],Hn)},Tn.zipObjectDeep=function(e,t){return rr(e||[],t||[],Ui)},Tn.zipWith=es,Tn.entries=Pa,Tn.entriesIn=Ta,Tn.extend=ua,Tn.extendWith=la,Ya(Tn,Tn),Tn.add=sc,Tn.attempt=Ua,Tn.camelCase=Aa,Tn.capitalize=Oa,Tn.ceil=ac,Tn.clamp=function(e,t,n){return void 0===n&&(n=t,t=void 0),void 0!==n&&(n=(n=oa(n))==n?n:0),void 0!==t&&(t=(t=oa(t))==t?t:0),Jn(oa(e),t,n)},Tn.clone=function(e){return Yn(e,4)},Tn.cloneDeep=function(e){return Yn(e,5)},Tn.cloneDeepWith=function(e,t){return Yn(e,5,t="function"==typeof t?t:void 0)},Tn.cloneWith=function(e,t){return Yn(e,4,t="function"==typeof t?t:void 0)},Tn.conformsTo=function(e,t){return null==t||Xn(e,t,ya(t))},Tn.deburr=Da,Tn.defaultTo=function(e,t){return null==e||e!=e?t:e},Tn.divide=cc,Tn.endsWith=function(e,t,n){e=aa(e),t=Xi(t);var i=e.length,r=n=void 0===n?i:Jn(ia(n),0,i);return(n-=t.length)>=0&&e.slice(n,r)==t},Tn.eq=Cs,Tn.escape=function(e){return(e=aa(e))&&q.test(e)?e.replace(K,Kt):e},Tn.escapeRegExp=function(e){return(e=aa(e))&&W.test(e)?e.replace(z,"\\$&"):e},Tn.every=function(e,t,n){var i=Ls(e)?ct:ni;return n&&ao(e,t,n)&&(t=void 0),i(e,Yr(t,3))},Tn.find=os,Tn.findIndex=Do,Tn.findKey=function(e,t){return xt(e,Yr(t,3),ci)},Tn.findLast=ss,Tn.findLastIndex=Lo,Tn.findLastKey=function(e,t){return xt(e,Yr(t,3),ui)},Tn.floor=uc,Tn.forEach=as,Tn.forEachRight=cs,Tn.forIn=function(e,t){return null==e?e:si(e,Yr(t,3),wa)},Tn.forInRight=function(e,t){return null==e?e:ai(e,Yr(t,3),wa)},Tn.forOwn=function(e,t){return e&&ci(e,Yr(t,3))},Tn.forOwnRight=function(e,t){return e&&ui(e,Yr(t,3))},Tn.get=ma,Tn.gt=As,Tn.gte=Os,Tn.has=function(e,t){return null!=e&&io(e,t,mi)},Tn.hasIn=ga,Tn.head=No,Tn.identity=Wa,Tn.includes=function(e,t,n,i){e=Ns(e)?e:Ca(e),n=n&&!i?ia(n):0;var r=e.length;return n<0&&(n=sn(r+n,0)),Ys(e)?n<=r&&e.indexOf(t,n)>-1:!!r&&yt(e,t,n)>-1},Tn.indexOf=function(e,t,n){var i=null==e?0:e.length;if(!i)return-1;var r=null==n?0:ia(n);return r<0&&(r=sn(i+r,0)),yt(e,t,r)},Tn.inRange=function(e,t,n){return t=na(t),void 0===n?(n=t,t=0):n=na(n),function(e,t,n){return e>=an(t,n)&&e<sn(t,n)}(e=oa(e),t,n)},Tn.invoke=ba,Tn.isArguments=Ds,Tn.isArray=Ls,Tn.isArrayBuffer=Rs,Tn.isArrayLike=Ns,Tn.isArrayLikeObject=Ks,Tn.isBoolean=function(e){return!0===e||!1===e||$s(e)&&hi(e)==u},Tn.isBuffer=js,Tn.isDate=qs,Tn.isElement=function(e){return $s(e)&&1===e.nodeType&&!Gs(e)},Tn.isEmpty=function(e){if(null==e)return!0;if(Ns(e)&&(Ls(e)||"string"==typeof e||"function"==typeof e.splice||js(e)||Zs(e)||Ds(e)))return!e.length;var t=no(e);if(t==f||t==x)return!e.size;if(po(e))return!_i(e).length;for(var n in e)if(_e.call(e,n))return!1;return!0},Tn.isEqual=function(e,t){return yi(e,t)},Tn.isEqualWith=function(e,t,n){var i=(n="function"==typeof n?n:void 0)?n(e,t):void 0;return void 0===i?yi(e,t,void 0,n):!!i},Tn.isError=Fs,Tn.isFinite=function(e){return"number"==typeof e&&nn(e)},Tn.isFunction=Ms,Tn.isInteger=Us,Tn.isLength=Bs,Tn.isMap=zs,Tn.isMatch=function(e,t){return e===t||wi(e,t,Zr(t))},Tn.isMatchWith=function(e,t,n){return n="function"==typeof n?n:void 0,wi(e,t,Zr(t),n)},Tn.isNaN=function(e){return Ws(e)&&e!=+e},Tn.isNative=function(e){if(lo(e))throw new de("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return ki(e)},Tn.isNil=function(e){return null==e},Tn.isNull=function(e){return null===e},Tn.isNumber=Ws,Tn.isObject=Hs,Tn.isObjectLike=$s,Tn.isPlainObject=Gs,Tn.isRegExp=Vs,Tn.isSafeInteger=function(e){return Us(e)&&e>=-9007199254740991&&e<=9007199254740991},Tn.isSet=Js,Tn.isString=Ys,Tn.isSymbol=Xs,Tn.isTypedArray=Zs,Tn.isUndefined=function(e){return void 0===e},Tn.isWeakMap=function(e){return $s(e)&&no(e)==w},Tn.isWeakSet=function(e){return $s(e)&&"[object WeakSet]"==hi(e)},Tn.join=function(e,t){return null==e?"":rn.call(e,t)},Tn.kebabCase=La,Tn.last=Fo,Tn.lastIndexOf=function(e,t,n){var i=null==e?0:e.length;if(!i)return-1;var r=i;return void 0!==n&&(r=(r=ia(n))<0?sn(i+r,0):an(r,i-1)),t==t?function(e,t,n){for(var i=n+1;i--;)if(e[i]===t)return i;return i}(e,t,r):bt(e,kt,r,!0)},Tn.lowerCase=Ra,Tn.lowerFirst=Na,Tn.lt=Qs,Tn.lte=ea,Tn.max=function(e){return e&&e.length?ii(e,Wa,fi):void 0},Tn.maxBy=function(e,t){return e&&e.length?ii(e,Yr(t,2),fi):void 0},Tn.mean=function(e){return Et(e,Wa)},Tn.meanBy=function(e,t){return Et(e,Yr(t,2))},Tn.min=function(e){return e&&e.length?ii(e,Wa,Ii):void 0},Tn.minBy=function(e,t){return e&&e.length?ii(e,Yr(t,2),Ii):void 0},Tn.stubArray=rc,Tn.stubFalse=oc,Tn.stubObject=function(){return{}},Tn.stubString=function(){return""},Tn.stubTrue=function(){return!0},Tn.multiply=pc,Tn.nth=function(e,t){return e&&e.length?Oi(e,ia(t)):void 0},Tn.noConflict=function(){return We._===this&&(We._=Ce),this},Tn.noop=Xa,Tn.now=ms,Tn.pad=function(e,t,n){e=aa(e);var i=(t=ia(t))?$t(e):0;if(!t||i>=t)return e;var r=(t-i)/2;return Dr(Qt(r),n)+e+Dr(Zt(r),n)},Tn.padEnd=function(e,t,n){e=aa(e);var i=(t=ia(t))?$t(e):0;return t&&i<t?e+Dr(t-i,n):e},Tn.padStart=function(e,t,n){e=aa(e);var i=(t=ia(t))?$t(e):0;return t&&i<t?Dr(t-i,n)+e:e},Tn.parseInt=function(e,t,n){return n||null==t?t=0:t&&(t=+t),un(aa(e).replace(V,""),t||0)},Tn.random=function(e,t,n){if(n&&"boolean"!=typeof n&&ao(e,t,n)&&(t=n=void 0),void 0===n&&("boolean"==typeof t?(n=t,t=void 0):"boolean"==typeof e&&(n=e,e=void 0)),void 0===e&&void 0===t?(e=0,t=1):(e=na(e),void 0===t?(t=e,e=0):t=na(t)),e>t){var i=e;e=t,t=i}if(n||e%1||t%1){var r=ln();return an(e+r*(t-e+Be("1e-"+((r+"").length-1))),t)}return Ki(e,t)},Tn.reduce=function(e,t,n){var i=Ls(e)?ft:It,r=arguments.length<3;return i(e,Yr(t,4),n,r,ei)},Tn.reduceRight=function(e,t,n){var i=Ls(e)?mt:It,r=arguments.length<3;return i(e,Yr(t,4),n,r,ti)},Tn.repeat=function(e,t,n){return t=(n?ao(e,t,n):void 0===t)?1:ia(t),ji(aa(e),t)},Tn.replace=function(){var e=arguments,t=aa(e[0]);return e.length<3?t:t.replace(e[1],e[2])},Tn.result=function(e,t,n){var i=-1,r=(t=ar(t,e)).length;for(r||(r=1,e=void 0);++i<r;){var o=null==e?void 0:e[Io(t[i])];void 0===o&&(i=r,o=n),e=Ms(o)?o.call(e):o}return e},Tn.round=dc,Tn.runInContext=e,Tn.sample=function(e){return(Ls(e)?Fn:Fi)(e)},Tn.size=function(e){if(null==e)return 0;if(Ns(e))return Ys(e)?$t(e):e.length;var t=no(e);return t==f||t==x?e.size:_i(e).length},Tn.snakeCase=Ka,Tn.some=function(e,t,n){var i=Ls(e)?gt:Wi;return n&&ao(e,t,n)&&(t=void 0),i(e,Yr(t,3))},Tn.sortedIndex=function(e,t){return Gi(e,t)},Tn.sortedIndexBy=function(e,t,n){return Vi(e,t,Yr(n,2))},Tn.sortedIndexOf=function(e,t){var n=null==e?0:e.length;if(n){var i=Gi(e,t);if(i<n&&Cs(e[i],t))return i}return-1},Tn.sortedLastIndex=function(e,t){return Gi(e,t,!0)},Tn.sortedLastIndexBy=function(e,t,n){return Vi(e,t,Yr(n,2),!0)},Tn.sortedLastIndexOf=function(e,t){if(null==e?0:e.length){var n=Gi(e,t,!0)-1;if(Cs(e[n],t))return n}return-1},Tn.startCase=ja,Tn.startsWith=function(e,t,n){return e=aa(e),n=null==n?0:Jn(ia(n),0,e.length),t=Xi(t),e.slice(n,n+t.length)==t},Tn.subtract=hc,Tn.sum=function(e){return e&&e.length?Pt(e,Wa):0},Tn.sumBy=function(e,t){return e&&e.length?Pt(e,Yr(t,2)):0},Tn.template=function(e,t,n){var i=Tn.templateSettings;n&&ao(e,t,n)&&(t=void 0),e=aa(e),t=la({},t,i,Mr);var r,o,s=la({},t.imports,i.imports,Mr),a=ya(s),c=At(s,a),u=0,l=t.interpolate||ue,p="__p += '",d=ge((t.escape||ue).source+"|"+l.source+"|"+(l===U?te:ue).source+"|"+(t.evaluate||ue).source+"|$","g"),h="//# sourceURL="+(_e.call(t,"sourceURL")?(t.sourceURL+"").replace(/[\r\n]/g," "):"lodash.templateSources["+ ++qe+"]")+"\n";e.replace(d,(function(t,n,i,s,a,c){return i||(i=s),p+=e.slice(u,c).replace(le,jt),n&&(r=!0,p+="' +\n__e("+n+") +\n'"),a&&(o=!0,p+="';\n"+a+";\n__p += '"),i&&(p+="' +\n((__t = ("+i+")) == null ? '' : __t) +\n'"),u=c+t.length,t})),p+="';\n";var f=_e.call(t,"variable")&&t.variable;f||(p="with (obj) {\n"+p+"\n}\n"),p=(o?p.replace(D,""):p).replace(L,"$1").replace(R,"$1;"),p="function("+(f||"obj")+") {\n"+(f?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(r?", __e = _.escape":"")+(o?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+p+"return __p\n}";var m=Ua((function(){return he(a,h+"return "+p).apply(void 0,c)}));if(m.source=p,Fs(m))throw m;return m},Tn.times=function(e,t){if((e=ia(e))<1||e>9007199254740991)return[];var n=4294967295,i=an(e,4294967295);e-=4294967295;for(var r=Tt(i,t=Yr(t));++n<e;)t(n);return r},Tn.toFinite=na,Tn.toInteger=ia,Tn.toLength=ra,Tn.toLower=function(e){return aa(e).toLowerCase()},Tn.toNumber=oa,Tn.toSafeInteger=function(e){return e?Jn(ia(e),-9007199254740991,9007199254740991):0===e?e:0},Tn.toString=aa,Tn.toUpper=function(e){return aa(e).toUpperCase()},Tn.trim=function(e,t,n){if((e=aa(e))&&(n||void 0===t))return e.replace(G,"");if(!e||!(t=Xi(t)))return e;var i=zt(e),r=zt(t);return ur(i,Dt(i,r),Lt(i,r)+1).join("")},Tn.trimEnd=function(e,t,n){if((e=aa(e))&&(n||void 0===t))return e.replace(J,"");if(!e||!(t=Xi(t)))return e;var i=zt(e);return ur(i,0,Lt(i,zt(t))+1).join("")},Tn.trimStart=function(e,t,n){if((e=aa(e))&&(n||void 0===t))return e.replace(V,"");if(!e||!(t=Xi(t)))return e;var i=zt(e);return ur(i,Dt(i,zt(t))).join("")},Tn.truncate=function(e,t){var n=30,i="...";if(Hs(t)){var r="separator"in t?t.separator:r;n="length"in t?ia(t.length):n,i="omission"in t?Xi(t.omission):i}var o=(e=aa(e)).length;if(qt(e)){var s=zt(e);o=s.length}if(n>=o)return e;var a=n-$t(i);if(a<1)return i;var c=s?ur(s,0,a).join(""):e.slice(0,a);if(void 0===r)return c+i;if(s&&(a+=c.length-a),Vs(r)){if(e.slice(a).search(r)){var u,l=c;for(r.global||(r=ge(r.source,aa(ne.exec(r))+"g")),r.lastIndex=0;u=r.exec(l);)var p=u.index;c=c.slice(0,void 0===p?a:p)}}else if(e.indexOf(Xi(r),a)!=a){var d=c.lastIndexOf(r);d>-1&&(c=c.slice(0,d))}return c+i},Tn.unescape=function(e){return(e=aa(e))&&j.test(e)?e.replace(N,Wt):e},Tn.uniqueId=function(e){var t=++Se;return aa(e)+t},Tn.upperCase=qa,Tn.upperFirst=Fa,Tn.each=as,Tn.eachRight=cs,Tn.first=No,Ya(Tn,(lc={},ci(Tn,(function(e,t){_e.call(Tn.prototype,t)||(lc[t]=e)})),lc),{chain:!1}),Tn.VERSION="4.17.15",st(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(e){Tn[e].placeholder=Tn})),st(["drop","take"],(function(e,t){Dn.prototype[e]=function(n){n=void 0===n?1:sn(ia(n),0);var i=this.__filtered__&&!t?new Dn(this):this.clone();return i.__filtered__?i.__takeCount__=an(n,i.__takeCount__):i.__views__.push({size:an(n,4294967295),type:e+(i.__dir__<0?"Right":"")}),i},Dn.prototype[e+"Right"]=function(t){return this.reverse()[e](t).reverse()}})),st(["filter","map","takeWhile"],(function(e,t){var n=t+1,i=1==n||3==n;Dn.prototype[e]=function(e){var t=this.clone();return t.__iteratees__.push({iteratee:Yr(e,3),type:n}),t.__filtered__=t.__filtered__||i,t}})),st(["head","last"],(function(e,t){var n="take"+(t?"Right":"");Dn.prototype[e]=function(){return this[n](1).value()[0]}})),st(["initial","tail"],(function(e,t){var n="drop"+(t?"":"Right");Dn.prototype[e]=function(){return this.__filtered__?new Dn(this):this[n](1)}})),Dn.prototype.compact=function(){return this.filter(Wa)},Dn.prototype.find=function(e){return this.filter(e).head()},Dn.prototype.findLast=function(e){return this.reverse().find(e)},Dn.prototype.invokeMap=qi((function(e,t){return"function"==typeof e?new Dn(this):this.map((function(n){return xi(n,e,t)}))})),Dn.prototype.reject=function(e){return this.filter(_s(Yr(e)))},Dn.prototype.slice=function(e,t){e=ia(e);var n=this;return n.__filtered__&&(e>0||t<0)?new Dn(n):(e<0?n=n.takeRight(-e):e&&(n=n.drop(e)),void 0!==t&&(n=(t=ia(t))<0?n.dropRight(-t):n.take(t-e)),n)},Dn.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},Dn.prototype.toArray=function(){return this.take(4294967295)},ci(Dn.prototype,(function(e,t){var n=/^(?:filter|find|map|reject)|While$/.test(t),i=/^(?:head|last)$/.test(t),r=Tn[i?"take"+("last"==t?"Right":""):t],o=i||/^find/.test(t);r&&(Tn.prototype[t]=function(){var t=this.__wrapped__,s=i?[1]:arguments,a=t instanceof Dn,c=s[0],u=a||Ls(t),l=function(e){var t=r.apply(Tn,ht([e],s));return i&&p?t[0]:t};u&&n&&"function"==typeof c&&1!=c.length&&(a=u=!1);var p=this.__chain__,d=!!this.__actions__.length,h=o&&!p,f=a&&!d;if(!o&&u){t=f?t:new Dn(this);var m=e.apply(t,s);return m.__actions__.push({func:ns,args:[l],thisArg:void 0}),new On(m,p)}return h&&f?e.apply(this,s):(m=this.thru(l),h?i?m.value()[0]:m.value():m)})})),st(["pop","push","shift","sort","splice","unshift"],(function(e){var t=be[e],n=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",i=/^(?:pop|shift)$/.test(e);Tn.prototype[e]=function(){var e=arguments;if(i&&!this.__chain__){var r=this.value();return t.apply(Ls(r)?r:[],e)}return this[n]((function(n){return t.apply(Ls(n)?n:[],e)}))}})),ci(Dn.prototype,(function(e,t){var n=Tn[t];if(n){var i=n.name+"";_e.call(bn,i)||(bn[i]=[]),bn[i].push({name:t,func:n})}})),bn[Tr(void 0,2).name]=[{name:"wrapper",func:void 0}],Dn.prototype.clone=function(){var e=new Dn(this.__wrapped__);return e.__actions__=vr(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=vr(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=vr(this.__views__),e},Dn.prototype.reverse=function(){if(this.__filtered__){var e=new Dn(this);e.__dir__=-1,e.__filtered__=!0}else(e=this.clone()).__dir__*=-1;return e},Dn.prototype.value=function(){var e=this.__wrapped__.value(),t=this.__dir__,n=Ls(e),i=t<0,r=n?e.length:0,o=function(e,t,n){var i=-1,r=n.length;for(;++i<r;){var o=n[i],s=o.size;switch(o.type){case"drop":e+=s;break;case"dropRight":t-=s;break;case"take":t=an(t,e+s);break;case"takeRight":e=sn(e,t-s)}}return{start:e,end:t}}(0,r,this.__views__),s=o.start,a=o.end,c=a-s,u=i?a:s-1,l=this.__iteratees__,p=l.length,d=0,h=an(c,this.__takeCount__);if(!n||!i&&r==c&&h==c)return nr(e,this.__actions__);var f=[];e:for(;c--&&d<h;){for(var m=-1,g=e[u+=t];++m<p;){var v=l[m],x=v.iteratee,b=v.type,y=x(g);if(2==b)g=y;else if(!y){if(1==b)continue e;break e}}f[d++]=g}return f},Tn.prototype.at=is,Tn.prototype.chain=function(){return ts(this)},Tn.prototype.commit=function(){return new On(this.value(),this.__chain__)},Tn.prototype.next=function(){void 0===this.__values__&&(this.__values__=ta(this.value()));var e=this.__index__>=this.__values__.length;return{done:e,value:e?void 0:this.__values__[this.__index__++]}},Tn.prototype.plant=function(e){for(var t,n=this;n instanceof An;){var i=To(n);i.__index__=0,i.__values__=void 0,t?r.__wrapped__=i:t=i;var r=i;n=n.__wrapped__}return r.__wrapped__=e,t},Tn.prototype.reverse=function(){var e=this.__wrapped__;if(e instanceof Dn){var t=e;return this.__actions__.length&&(t=new Dn(this)),(t=t.reverse()).__actions__.push({func:ns,args:[Ho],thisArg:void 0}),new On(t,this.__chain__)}return this.thru(Ho)},Tn.prototype.toJSON=Tn.prototype.valueOf=Tn.prototype.value=function(){return nr(this.__wrapped__,this.__actions__)},Tn.prototype.first=Tn.prototype.head,vt&&(Tn.prototype[vt]=function(){return this}),Tn}();We._=Gt,void 0===(i=function(){return Gt}.call(t,n,t,e))||(e.exports=i)}).call(this)}).call(this,n(223)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){"use strict";n(85);const{CompositeDisposable:i,TextEditor:r}=n(0),{DisposableEvent:o,addDelegatedEventListener:s,parent:a,delayPromise:c}=n(2),u=n(13),{retryPromise:l}=n(77),p=n(53),d=n(16),{MAX_FILE_SIZE:h}=n(37),{STATES:f}=u,m='<span class="dot">•</span>';class g extends HTMLElement{static initClass(){return customElements.define("kite-status-panel",this),this}setApp(e){this.app=e}hide(){this.parentNode&&(this.parentNode.removeChild(this),this.subscriptions.dispose())}pendingStatus(e){const t=this.querySelector(".status");t&&(t.innerHTML=`\n      ${e}\n      <span class='loading loading-spinner-small inline-block'></span>\n      `)}show(e){return this.renderCurrent().then(()=>{document.body.appendChild(this),this.setPosition(e),this.scheme=new p("kite-atom-internal",this),this.subscriptions=new i;const t=this.querySelector("kite-links");if(t){const e=t.onDidClickActionLink(()=>{this.hide()});e&&this.subscriptions.disposed&&this.subscriptions.add(e)}this.subscriptions.add(this.scheme),this.subscriptions.add(this.scheme.onDidClickLink(e=>this.handleAction(e))),this.subscriptions.add(atom.workspace.onDidChangeActivePaneItem(t=>{t instanceof r&&this.renderCurrent().then(()=>this.setPosition(e))})),this.subscriptions.add(s(this,"click",'.kite-warning-box [data-method="post"]',e=>{const t=e.target,n=a(t,".kite-warning-box");t.innerHTML="<span class='loading loading-spinner-tiny inline-block'></span>",t.style.pointerEvents="none",u.request({path:"/api/account/resendVerification",method:t.getAttribute("data-method")}).then(e=>{n.classList.remove("kite-warning-box"),n.classList.add("kite-info-box"),n.textContent=t.getAttribute("data-confirmation")}).catch(e=>{n.innerHTML=t.getAttribute("data-failure")})})),this.subscriptions.add(new o(window,"resize",t=>{this.setPosition(e)})),this.subscriptions.add(new o(document.body,"click",e=>{const{top:t,left:n,right:i,bottom:r}=this.getBoundingClientRect(),{pageX:o,pageY:s}=e;this.starting||this.installing||!(o<n||o>i||s<t||s>r)||this.hide()}))})}pauseNotifications(){this.app.kite&&this.app.kite.notifications.pauseNotifications()}resumeNotifications(){this.app.kite&&this.app.kite.notifications.resumeNotifications()}handleAction({url:e}){let t;switch(this.pauseNotifications(),e.host){case"open-account-web":atom.applicationDelegate.openExternal("http://localhost:46624/clientapi/desktoplogin?d=/settings/account"),this.hide();break;case"open-copilot-settings":this.app.copilotSettings(),this.hide();break;case"open-copilot-permissions":atom.applicationDelegate.openExternal("kite://settings/permissions"+(e.path||""));break;case"install":this.pendingStatus("Installing Kite..."),this.installing=!0,this.app.installFlow().then(()=>{this.installing=!1}).catch(()=>{this.installing=!1}).then(()=>{this.renderCurrent()});break;case"start":this.pendingStatus("Launching Kite"),this.starting=!0,t=this.app.start().then(()=>l(()=>u.isUserAuthenticated(),10,500)).then(()=>{this.starting=!1}).catch(()=>{this.starting=!1}).then(()=>this.renderCurrent());break;case"start-enterprise":this.pendingStatus("Launching Kite"),this.starting=!0,t=this.app.startEnterprise().then(()=>c(()=>Promise.resolve(),3e3)).then(()=>{this.starting=!1}).catch(()=>{this.starting=!1}).then(()=>this.renderCurrent());break;case"login":this.app.login(),this.hide()}t?t.then(()=>this.renderCurrent()).then(()=>this.resumeNotifications()).catch(e=>console.error(e)):this.resumeNotifications()}setPosition(e){if(!e)return;const t=e.getBoundingClientRect();this.style.cssText=`\n    top: ${Math.round(t.top-20)}px;\n    left: ${Math.round(t.right)}px;\n    `}renderCurrent(){if(this.installing||this.starting)return Promise.resolve();const e=atom.workspace.getActiveTextEditor(),t=[u.checkHealth().then(e=>Promise.all([u.isKiteInstalled().then(()=>!0,()=>!1),u.isKiteEnterpriseInstalled().then(()=>!0,()=>!1)]).then(([t,n])=>({state:e,kiteInstalled:t,kiteEnterpriseInstalled:n}))),d.getUserAccountInfo().catch(()=>{}),d.getStatus(e),d.isUserAuthenticated().catch(()=>{})];return Promise.all(t).then(e=>{this.render(...e)})}render(e,t,n,i){this.innerHTML=`\n      ${this.renderSubscription(e)}\n      ${this.renderLinks(t)}\n      ${this.renderStatus(e,n,i)}\n    `}renderLinks(e){return`\n    <kite-links emit-action="true">\n    <ul class="links ${e?"has-account":"no-account"}">\n      <li><a class="icon icon-search" href="kite-atom-internal://open-search-docs">Search Python Docs</a></li>\n      <li><a class="icon icon-question" href="kite-atom-internal://open-kite-plugin-help">Help</a></li>\n    </ul>\n    <ul class="links ${e?"has-account":"no-account"}">\n      <li><a class="icon icon-settings" href="kite-atom-internal://open-settings">Atom Plugin Settings</a></li>\n      <li><a class="icon icon-settings"\n             href="kite-atom-internal://open-copilot-settings">Kite Engine Settings</a></li>\n    </ul>\n    </kite-links>\n    `}renderStatus(e,t,n){let i="";switch(e.state){case f.UNSUPPORTED:i=`<div class="text-danger">Kite engine is not available on your system ${m}</div>`;break;case f.UNINSTALLED:i=`<div class="text-danger">Kite engine is not installed ${m}</div>`,this.installing||(i+='<a href="kite-atom-internal://install" class="btn btn-error">Install now</a>');break;case f.INSTALLED:i=u.hasManyKiteInstallation()||u.hasManyKiteEnterpriseInstallation()?`<div class="text-danger">Kite engine is not running ${m}<br/>\n          You have multiple versions of Kite installed. Please launch your desired one.</div>`:e.kiteInstalled&&e.kiteEnterpriseInstalled?`\n          <div class="text-danger">Kite engine is not running ${m}<br/>\n          Which version of kite do you want to launch?</div>\n          <a href="kite-atom-internal://start-enterprise"\n             class="btn btn-purple">Launch Kite Enterprise</a><br/>\n          <a href="kite-atom-internal://start" class="btn btn-info">Launch Kite cloud</a>`:e.kiteInstalled?`<div class="text-danger">Kite engine is not running ${m}</div>\n          <a href="kite-atom-internal://start" class="btn btn-error">Launch now</a>`:`<div class="text-danger">Kite engine is not running ${m}</div>\n          <a href="kite-atom-internal://start-enterprise" class="btn btn-error">Launch now</a>`;break;case f.RUNNING:i='\n          <div class="text-danger">Kite engine is not reachable</div>\n        ';break;case f.READY:const r=atom.workspace.getActiveTextEditor();if(r)if(this.app.kite.getModule("editors").isGrammarSupported(r))if(r&&r.getText().length>=h)i=`\n            <div class="text-warning">The current file is too large for Kite to handle ${m}</div>`;else switch(t.status){case"":case"ready":i=`<div class="ready">Kite engine is ready and working ${m}</div>`;break;case"indexing":i=`<div class="ready">Kite engine is indexing your code ${m}</div>`;break;case"noIndex":i=`<div class="ready">Kite engine is ready, but no index available ${m}</div>`;break;case"syncing":i=`<div class="ready">Kite engine is syncing your code ${m}</div>`}else i=`<div>Open a supported file to see Kite's status ${m}</div>`;else i=`<div>Open a supported file to see Kite's status ${m}</div>`;n||(i='\n          <div>\n            Kite engine is not logged in\n            <a href="kite-atom-internal://open-copilot-settings" class="btn">Login now</a>\n          </div>\n          '+i)}return`<div class="status">${i}</div>`}renderSubscription(e){return`<div class="split-line subscription">\n      <div class="left"><kite-logo small></kite-logo></div>\n      <div class="right">${e.state>=f.READY?'<a href="kite-atom-internal://open-account-web">Account</a>':""}</div>\n    </div>`}}e.exports=g.initClass()},function(e,t,n){"use strict";const i=n(16),r=n(226),{delayPromise:o}=n(2);let s;const a={selector:".source, .text",disableForSelector:[".source .comment",".text .comment"].join(", "),inclusionPriority:5,suggestionPriority:5,excludeLowerPriority:!1,getSuggestions(e){return s||(s=n(25)),s.getModule("editors").isGrammarSupported(e.editor)?o(()=>{let t=Promise.resolve();const n=e.editor.getCursorBufferPosition();return this.isInsideFunctionCall(e.editor,n)||this.isInsideFunctionCallBrackets(e.editor,n)||this.isSignaturePanelVisible()?t=t.then(()=>this.loadSignature(e)):this.clearSignature(),atom.config.get("kite.enableCompletions",!1)?t.then(()=>i.getCompletions(e.editor,atom.config.get("kite.enableSnippets"))).then(t=>" "===e.prefix?t.map(e=>(e.replacementPrefix="",e)):t).then(t=>(t.forEach(t=>{t.replacementPrefix||e.prefix!==t.text||(t.replacementPrefix=t.text)}),t)):t.then(()=>[])},0):Promise.resolve()},isInsideFunctionCall(e,t){const n=e.scopeDescriptorForBufferPosition(t);return parseFloat(atom.getVersion())<=1.23?n.scopes.some(e=>/(function|method)-call|arguments/.test(e)):n.scopes.some(e=>/(function|method)-call\.arguments/.test(e))},isOnFunctionCallBrackets:(e,t)=>e.scopeDescriptorForBufferPosition(t).scopes.some(e=>/arguments(.*)\.bracket/.test(e)),isInsideFunctionCallBrackets(e,t){const n=e.getTextInBufferRange([[t.row,t.column-1],[t.row,t.column]]),i=e.getTextInBufferRange([[t.row,t.column],[t.row,t.column+1]]);return this.isOnFunctionCallBrackets(e,t)&&(/\(/.test(n)||/\)/.test(i))},loadSignature({editor:e,position:t}){return i.getSignaturesAtPosition(e,t||e.getCursorBufferPosition()).then(e=>{if(e){const t=this.getSuggestionsListElement();t.maxVisibleSuggestions=atom.config.get("kite.maxVisibleSuggestionsAlongSignature");const n=null==this.signaturePanel;this.signaturePanel=this.signaturePanel||new r,this.signaturePanel.setListElement(t),this.signaturePanel.setData(e,!1);const i=t.element?t.element:t;(n||this.sigPanelNeedsReinsertion(i))&&(i.style.width=null,i.appendChild(this.signaturePanel))}else this.clearSignature();return null!=e}).catch(e=>(this.clearSignature(),!1))},sigPanelNeedsReinsertion:e=>!e.querySelector("kite-signature"),clearSignature(){this.isSignaturePanelVisible()&&this.signaturePanel.parentNode.removeChild(this.signaturePanel)},isSignaturePanelVisible(){const e=this.getSuggestionsListElement(),t=e.element||e;return t&&t.querySelector("kite-signature")},getSuggestionsListElement(){if(!atom.packages.getAvailablePackageNames().includes("autocomplete-plus"))return null;if(this.suggestionListElement)return this.suggestionListElement;const e=atom.packages.getActivePackage("autocomplete-plus").mainModule;if(!e||!e.autocompleteManager||!e.autocompleteManager.suggestionList)return null;const t=e.autocompleteManager.suggestionList;return this.suggestionListElement=t.suggestionListElement?t.suggestionListElement:atom.views.getView(e.autocompleteManager.suggestionList),this.suggestionListElement.ol||this.suggestionListElement.renderList(),this.suggestionListElement}};e.exports=a},function(e,t,n){"use strict";const{CompositeDisposable:i}=n(0),{head:r,DisposableEvent:o,detailLang:s,detailGet:a,getFunctionDetails:c,idToDottedPath:u}=n(2),{valueLabel:l,valueName:p,callSignature:d,returnTypes:h}=n(36),{highlightCode:f,wrapAfterParenthesis:m,debugData:g,renderParameter:v}=n(84);class x extends HTMLElement{static initClass(){return customElements.define("kite-signature",this),this}setListElement(e){this.listElement=e}disconnectedCallback(){this.subscriptions&&this.subscriptions.dispose(),this.listElement.maxVisibleSuggestions=atom.config.get("autocomplete-plus.maxVisibleSuggestions"),this.resizeObserver.disconnect(),this.style.maxWidth="",this.parentNode&&this.parentNode.removeChild(this)}connectedCallback(){this.listElement.maxVisibleSuggestions=this.compact?atom.config.get("autocomplete-plus.maxVisibleSuggestions"):atom.config.get("kite.maxVisibleSuggestionsAlongSignature");const e=this.parentNode;let t;this.resizeObserver=new ResizeObserver(([{contentRect:n}])=>{t||(t=!0,requestAnimationFrame(()=>{const n=e.querySelector("ol:not(:empty)");if(n){const e=n.getBoundingClientRect();e.width>=this.offsetWidth?this.style.maxWidth=e.width+"px":this.style.maxWidth=""}t=!1}))}),e instanceof Element&&this.resizeObserver.observe(e),requestAnimationFrame(()=>this.checkWidth())}setData(e,t=!1){const n=r(e.calls),x=n.func_name||p(n.callee),b=c(n.callee);let y="";this.removeAttribute("compact");let w="";"python"===s(b)&&a(b,"kwarg_parameters")&&(w=`<section class="kwargs ${atom.config.get("kite.signatureKwargsVisible")?"visible":""}">\n      <h4><span class="title">**${a(b,"kwarg").name}<span class="kwargs-toggle">&#8613;</span></span></h4>\n      <kite-links metric="Signature">\n      <dl>\n      ${a(b,"kwarg_parameters").map((e,t)=>v(e,"",a(n,"in_kwargs")&&n.arg_index===t)).join("")}\n      </dl></kite-links>\n      </section>`);{let e="";const t=atom.config.get("kite.signaturePopularPatternsVisible");n.signatures&&n.signatures.length&&(e=`\n          <section class="patterns ${t?"visible":""}">\n          <h4><span class="title">How others used this<span class="popular-patterns-toggle">&#8613;</span></span></h4>\n          ${f(m(n.signatures.map(e=>d(e)).map(e=>`${x}(${e})`).join("\n")))}\n          </section>`);const i=[`<a class="kite-link docs" href="kite-atom-internal://open-search-docs/${u(n.callee.id)}">Docs<span class="kite-link-icon">&#8663;</span></a>`];t||i.unshift('<a class="kite-link patterns" href="#">Examples<span class="kite-link-icon">&#8615;</span></a>'),y=`\n      ${w}\n      ${e}\n      <kite-links class="one-line footer-links" metric="Signature">\n        ${i.join(" ")}\n        <div class="flex-separator"></div>\n        <kite-logo small title="Powered by Kite" class="badge"></kite-logo>\n      </kite-links>\n      `}const k=h(n.callee);this.innerHTML=`\n    <div class="kite-signature-wrapper">\n      <div class="name"><pre>${l(n.callee,a(n,"in_kwargs")?-1:n.arg_index)}${k?" &#8614; "+k:""}</pre></div>\n      ${y}\n    </div>\n    ${g(e)}\n    `,this.subscriptions&&this.subscriptions.dispose(),this.compact=!0,this.currentIndex=n.arg_index,this.subscriptions=new i;const E=this.querySelector("section.kwargs kite-links"),_=this.querySelector("kite-links.footer-links");let S=this.querySelector("kite-links.footer-links a.kite-link.patterns");S||(S=document.createElement("a"),S.className="kite-link patterns",S.setAttribute("href","#"),S.innerHTML='Examples<span class="kite-link-icon">&#8615;</span>');const I=this.querySelector("kite-links.footer-links a.kite-link.docs"),P=this.querySelector("a.kwargs"),T=this.querySelector("section.kwargs"),C=atom.workspace.getActiveTextEditor(),A=atom.views.getView(C),O=this.querySelector("section.kwargs h4 span.title"),D=this.querySelector("span.popular-patterns-toggle"),L=this.querySelector("section.patterns h4 span.title"),R=this.querySelector("section.patterns");this.subscriptions.add(new o(this,"click",e=>{A&&A.focus()})),R&&D&&L&&_&&this.subscriptions.add(new o(L,"click",e=>{_.insertBefore(S,I),R.classList.toggle("visible"),atom.config.set("kite.signaturePopularPatternsVisible",!atom.config.get("kite.signaturePopularPatternsVisible"))})),S&&R&&_&&this.subscriptions.add(new o(S,"click",e=>{_.removeChild(S),R.classList.toggle("visible"),atom.config.set("kite.signaturePopularPatternsVisible",!atom.config.get("kite.signaturePopularPatternsVisible"))})),T&&O&&this.subscriptions.add(new o(O,"click",e=>{T.classList.toggle("visible"),atom.config.set("kite.signatureKwargsVisible",!atom.config.get("kite.signatureKwargsVisible"))})),P&&T&&(this.subscriptions.add(new o(P,"click",e=>{T.classList.toggle("visible"),atom.config.set("kite.signatureKwargsVisible",!atom.config.get("kite.signatureKwargsVisible"))})),a(n,"in_kwargs")&&setTimeout(()=>{const e=T.querySelector("dl"),t=T.querySelector("dt.highlight");t&&(e.scrollTop=t.offsetTop-t.offsetHeight)},100)),E&&this.subscriptions.add(E.onDidClickMoreLink(()=>{this.listElement.model.hide()}))}checkWidth(){const e=this.querySelector(".name");if(e&&e.scrollWidth>e.offsetWidth){const i=e.scrollWidth-e.offsetWidth,r=e.querySelector(".signature"),o=[].slice.call(e.querySelectorAll(".parameter")),s=e.scrollWidth,a=o[this.currentIndex],c=a?a.offsetLeft-a.offsetWidth/2:s+1,u=[];let l=0;const p=this.currentIndex;if(!r)return;function t(){const e=document.createElement("span");e.className="parameter ellipsis",e.textContent="…0 more, ",r.insertBefore(e,r.firstElementChild);for(let t=0;t<p;t++){const n=o[t];if(u.push(n),l+=n.offsetWidth,l-e.offsetWidth>=i)return l-=e.offsetWidth,u.forEach(e=>e.remove()),e.textContent=`…${u.length} more, `,void(u.length=0)}u.length?(l-=e.offsetWidth,u.forEach(e=>e.remove()),e.textContent=`…${u.length} more, `,u.length=0):e.remove()}function n(){const e=document.createElement("span");e.className="parameter ellipsis",e.textContent="0 more…",r.appendChild(e);for(let t=o.length-1;t>p;t--){const n=o[t];if(u.push(n),l+=n.offsetWidth,l-e.offsetWidth>=i)return l-=e.offsetWidth,u.forEach(e=>e.remove()),e.textContent=u.length+" more…",void(u.length=0)}u.length?(l-=e.offsetWidth,u.forEach(e=>e.remove()),e.textContent=u.length+" more…",u.length=0):e.remove()}c>s?(t(),l<i&&n()):(n(),l<i&&t())}}}e.exports=x.initClass()},function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return hn})),n.d(t,"VERSION",(function(){return b})),n.d(t,"iteratee",(function(){return k})),n.d(t,"restArguments",(function(){return _})),n.d(t,"each",(function(){return D})),n.d(t,"forEach",(function(){return D})),n.d(t,"map",(function(){return L})),n.d(t,"collect",(function(){return L})),n.d(t,"reduce",(function(){return N})),n.d(t,"foldl",(function(){return N})),n.d(t,"inject",(function(){return N})),n.d(t,"reduceRight",(function(){return K})),n.d(t,"foldr",(function(){return K})),n.d(t,"find",(function(){return j})),n.d(t,"detect",(function(){return j})),n.d(t,"filter",(function(){return q})),n.d(t,"select",(function(){return q})),n.d(t,"reject",(function(){return F})),n.d(t,"every",(function(){return M})),n.d(t,"all",(function(){return M})),n.d(t,"some",(function(){return U})),n.d(t,"any",(function(){return U})),n.d(t,"contains",(function(){return B})),n.d(t,"includes",(function(){return B})),n.d(t,"include",(function(){return B})),n.d(t,"invoke",(function(){return H})),n.d(t,"pluck",(function(){return $})),n.d(t,"where",(function(){return z})),n.d(t,"findWhere",(function(){return W})),n.d(t,"max",(function(){return G})),n.d(t,"min",(function(){return V})),n.d(t,"shuffle",(function(){return J})),n.d(t,"sample",(function(){return Y})),n.d(t,"sortBy",(function(){return X})),n.d(t,"groupBy",(function(){return Q})),n.d(t,"indexBy",(function(){return ee})),n.d(t,"countBy",(function(){return te})),n.d(t,"toArray",(function(){return ie})),n.d(t,"size",(function(){return re})),n.d(t,"partition",(function(){return oe})),n.d(t,"first",(function(){return se})),n.d(t,"head",(function(){return se})),n.d(t,"take",(function(){return se})),n.d(t,"initial",(function(){return ae})),n.d(t,"last",(function(){return ce})),n.d(t,"rest",(function(){return ue})),n.d(t,"tail",(function(){return ue})),n.d(t,"drop",(function(){return ue})),n.d(t,"compact",(function(){return le})),n.d(t,"flatten",(function(){return de})),n.d(t,"without",(function(){return he})),n.d(t,"uniq",(function(){return fe})),n.d(t,"unique",(function(){return fe})),n.d(t,"union",(function(){return me})),n.d(t,"intersection",(function(){return ge})),n.d(t,"difference",(function(){return ve})),n.d(t,"unzip",(function(){return xe})),n.d(t,"zip",(function(){return be})),n.d(t,"object",(function(){return ye})),n.d(t,"findIndex",(function(){return ke})),n.d(t,"findLastIndex",(function(){return Ee})),n.d(t,"sortedIndex",(function(){return _e})),n.d(t,"indexOf",(function(){return Ie})),n.d(t,"lastIndexOf",(function(){return Pe})),n.d(t,"range",(function(){return Te})),n.d(t,"chunk",(function(){return Ce})),n.d(t,"bind",(function(){return Oe})),n.d(t,"partial",(function(){return De})),n.d(t,"bindAll",(function(){return Le})),n.d(t,"memoize",(function(){return Re})),n.d(t,"delay",(function(){return Ne})),n.d(t,"defer",(function(){return Ke})),n.d(t,"throttle",(function(){return je})),n.d(t,"debounce",(function(){return qe})),n.d(t,"wrap",(function(){return Fe})),n.d(t,"negate",(function(){return Me})),n.d(t,"compose",(function(){return Ue})),n.d(t,"after",(function(){return Be})),n.d(t,"before",(function(){return He})),n.d(t,"once",(function(){return $e})),n.d(t,"keys",(function(){return Ve})),n.d(t,"allKeys",(function(){return Je})),n.d(t,"values",(function(){return Ye})),n.d(t,"mapObject",(function(){return Xe})),n.d(t,"pairs",(function(){return Ze})),n.d(t,"invert",(function(){return Qe})),n.d(t,"functions",(function(){return et})),n.d(t,"methods",(function(){return et})),n.d(t,"extend",(function(){return nt})),n.d(t,"extendOwn",(function(){return it})),n.d(t,"assign",(function(){return it})),n.d(t,"findKey",(function(){return rt})),n.d(t,"pick",(function(){return st})),n.d(t,"omit",(function(){return at})),n.d(t,"defaults",(function(){return ct})),n.d(t,"create",(function(){return ut})),n.d(t,"clone",(function(){return lt})),n.d(t,"tap",(function(){return pt})),n.d(t,"isMatch",(function(){return dt})),n.d(t,"isEqual",(function(){return ft})),n.d(t,"isEmpty",(function(){return mt})),n.d(t,"isElement",(function(){return gt})),n.d(t,"isArray",(function(){return xt})),n.d(t,"isObject",(function(){return bt})),n.d(t,"isArguments",(function(){return yt})),n.d(t,"isFunction",(function(){return wt})),n.d(t,"isString",(function(){return kt})),n.d(t,"isNumber",(function(){return Et})),n.d(t,"isDate",(function(){return _t})),n.d(t,"isRegExp",(function(){return St})),n.d(t,"isError",(function(){return It})),n.d(t,"isSymbol",(function(){return Pt})),n.d(t,"isMap",(function(){return Tt})),n.d(t,"isWeakMap",(function(){return Ct})),n.d(t,"isSet",(function(){return At})),n.d(t,"isWeakSet",(function(){return Ot})),n.d(t,"isFinite",(function(){return Lt})),n.d(t,"isNaN",(function(){return Rt})),n.d(t,"isBoolean",(function(){return Nt})),n.d(t,"isNull",(function(){return Kt})),n.d(t,"isUndefined",(function(){return jt})),n.d(t,"has",(function(){return qt})),n.d(t,"identity",(function(){return Ft})),n.d(t,"constant",(function(){return Mt})),n.d(t,"noop",(function(){return Ut})),n.d(t,"property",(function(){return Bt})),n.d(t,"propertyOf",(function(){return Ht})),n.d(t,"matcher",(function(){return $t})),n.d(t,"matches",(function(){return $t})),n.d(t,"times",(function(){return zt})),n.d(t,"random",(function(){return Wt})),n.d(t,"now",(function(){return Gt})),n.d(t,"escape",(function(){return Xt})),n.d(t,"unescape",(function(){return Zt})),n.d(t,"result",(function(){return Qt})),n.d(t,"uniqueId",(function(){return tn})),n.d(t,"templateSettings",(function(){return nn})),n.d(t,"template",(function(){return cn})),n.d(t,"chain",(function(){return un})),n.d(t,"mixin",(function(){return pn}));var i={};n.r(i),n.d(i,"default",(function(){return x})),n.d(i,"VERSION",(function(){return b})),n.d(i,"iteratee",(function(){return k})),n.d(i,"restArguments",(function(){return _})),n.d(i,"each",(function(){return D})),n.d(i,"forEach",(function(){return D})),n.d(i,"map",(function(){return L})),n.d(i,"collect",(function(){return L})),n.d(i,"reduce",(function(){return N})),n.d(i,"foldl",(function(){return N})),n.d(i,"inject",(function(){return N})),n.d(i,"reduceRight",(function(){return K})),n.d(i,"foldr",(function(){return K})),n.d(i,"find",(function(){return j})),n.d(i,"detect",(function(){return j})),n.d(i,"filter",(function(){return q})),n.d(i,"select",(function(){return q})),n.d(i,"reject",(function(){return F})),n.d(i,"every",(function(){return M})),n.d(i,"all",(function(){return M})),n.d(i,"some",(function(){return U})),n.d(i,"any",(function(){return U})),n.d(i,"contains",(function(){return B})),n.d(i,"includes",(function(){return B})),n.d(i,"include",(function(){return B})),n.d(i,"invoke",(function(){return H})),n.d(i,"pluck",(function(){return $})),n.d(i,"where",(function(){return z})),n.d(i,"findWhere",(function(){return W})),n.d(i,"max",(function(){return G})),n.d(i,"min",(function(){return V})),n.d(i,"shuffle",(function(){return J})),n.d(i,"sample",(function(){return Y})),n.d(i,"sortBy",(function(){return X})),n.d(i,"groupBy",(function(){return Q})),n.d(i,"indexBy",(function(){return ee})),n.d(i,"countBy",(function(){return te})),n.d(i,"toArray",(function(){return ie})),n.d(i,"size",(function(){return re})),n.d(i,"partition",(function(){return oe})),n.d(i,"first",(function(){return se})),n.d(i,"head",(function(){return se})),n.d(i,"take",(function(){return se})),n.d(i,"initial",(function(){return ae})),n.d(i,"last",(function(){return ce})),n.d(i,"rest",(function(){return ue})),n.d(i,"tail",(function(){return ue})),n.d(i,"drop",(function(){return ue})),n.d(i,"compact",(function(){return le})),n.d(i,"flatten",(function(){return de})),n.d(i,"without",(function(){return he})),n.d(i,"uniq",(function(){return fe})),n.d(i,"unique",(function(){return fe})),n.d(i,"union",(function(){return me})),n.d(i,"intersection",(function(){return ge})),n.d(i,"difference",(function(){return ve})),n.d(i,"unzip",(function(){return xe})),n.d(i,"zip",(function(){return be})),n.d(i,"object",(function(){return ye})),n.d(i,"findIndex",(function(){return ke})),n.d(i,"findLastIndex",(function(){return Ee})),n.d(i,"sortedIndex",(function(){return _e})),n.d(i,"indexOf",(function(){return Ie})),n.d(i,"lastIndexOf",(function(){return Pe})),n.d(i,"range",(function(){return Te})),n.d(i,"chunk",(function(){return Ce})),n.d(i,"bind",(function(){return Oe})),n.d(i,"partial",(function(){return De})),n.d(i,"bindAll",(function(){return Le})),n.d(i,"memoize",(function(){return Re})),n.d(i,"delay",(function(){return Ne})),n.d(i,"defer",(function(){return Ke})),n.d(i,"throttle",(function(){return je})),n.d(i,"debounce",(function(){return qe})),n.d(i,"wrap",(function(){return Fe})),n.d(i,"negate",(function(){return Me})),n.d(i,"compose",(function(){return Ue})),n.d(i,"after",(function(){return Be})),n.d(i,"before",(function(){return He})),n.d(i,"once",(function(){return $e})),n.d(i,"keys",(function(){return Ve})),n.d(i,"allKeys",(function(){return Je})),n.d(i,"values",(function(){return Ye})),n.d(i,"mapObject",(function(){return Xe})),n.d(i,"pairs",(function(){return Ze})),n.d(i,"invert",(function(){return Qe})),n.d(i,"functions",(function(){return et})),n.d(i,"methods",(function(){return et})),n.d(i,"extend",(function(){return nt})),n.d(i,"extendOwn",(function(){return it})),n.d(i,"assign",(function(){return it})),n.d(i,"findKey",(function(){return rt})),n.d(i,"pick",(function(){return st})),n.d(i,"omit",(function(){return at})),n.d(i,"defaults",(function(){return ct})),n.d(i,"create",(function(){return ut})),n.d(i,"clone",(function(){return lt})),n.d(i,"tap",(function(){return pt})),n.d(i,"isMatch",(function(){return dt})),n.d(i,"isEqual",(function(){return ft})),n.d(i,"isEmpty",(function(){return mt})),n.d(i,"isElement",(function(){return gt})),n.d(i,"isArray",(function(){return xt})),n.d(i,"isObject",(function(){return bt})),n.d(i,"isArguments",(function(){return yt})),n.d(i,"isFunction",(function(){return wt})),n.d(i,"isString",(function(){return kt})),n.d(i,"isNumber",(function(){return Et})),n.d(i,"isDate",(function(){return _t})),n.d(i,"isRegExp",(function(){return St})),n.d(i,"isError",(function(){return It})),n.d(i,"isSymbol",(function(){return Pt})),n.d(i,"isMap",(function(){return Tt})),n.d(i,"isWeakMap",(function(){return Ct})),n.d(i,"isSet",(function(){return At})),n.d(i,"isWeakSet",(function(){return Ot})),n.d(i,"isFinite",(function(){return Lt})),n.d(i,"isNaN",(function(){return Rt})),n.d(i,"isBoolean",(function(){return Nt})),n.d(i,"isNull",(function(){return Kt})),n.d(i,"isUndefined",(function(){return jt})),n.d(i,"has",(function(){return qt})),n.d(i,"identity",(function(){return Ft})),n.d(i,"constant",(function(){return Mt})),n.d(i,"noop",(function(){return Ut})),n.d(i,"property",(function(){return Bt})),n.d(i,"propertyOf",(function(){return Ht})),n.d(i,"matcher",(function(){return $t})),n.d(i,"matches",(function(){return $t})),n.d(i,"times",(function(){return zt})),n.d(i,"random",(function(){return Wt})),n.d(i,"now",(function(){return Gt})),n.d(i,"escape",(function(){return Xt})),n.d(i,"unescape",(function(){return Zt})),n.d(i,"result",(function(){return Qt})),n.d(i,"uniqueId",(function(){return tn})),n.d(i,"templateSettings",(function(){return nn})),n.d(i,"template",(function(){return cn})),n.d(i,"chain",(function(){return un})),n.d(i,"mixin",(function(){return pn}));var r="object"==typeof self&&self.self===self&&self||"object"==typeof global&&global.global===global&&global||Function("return this")()||{},o=Array.prototype,s=Object.prototype,a="undefined"!=typeof Symbol?Symbol.prototype:null,c=o.push,u=o.slice,l=s.toString,p=s.hasOwnProperty,d=Array.isArray,h=Object.keys,f=Object.create,m=r.isNaN,g=r.isFinite,v=function(){};function x(e){return e instanceof x?e:this instanceof x?void(this._wrapped=e):new x(e)}var b=x.VERSION="1.10.2";function y(e,t,n){if(void 0===t)return e;switch(null==n?3:n){case 1:return function(n){return e.call(t,n)};case 3:return function(n,i,r){return e.call(t,n,i,r)};case 4:return function(n,i,r,o){return e.call(t,n,i,r,o)}}return function(){return e.apply(t,arguments)}}function w(e,t,n){return null==e?Ft:wt(e)?y(e,t,n):bt(e)&&!xt(e)?$t(e):Bt(e)}function k(e,t){return w(e,t,1/0)}function E(e,t,n){return x.iteratee!==k?x.iteratee(e,t):w(e,t,n)}function _(e,t){return t=null==t?e.length-1:+t,function(){for(var n=Math.max(arguments.length-t,0),i=Array(n),r=0;r<n;r++)i[r]=arguments[r+t];switch(t){case 0:return e.call(this,i);case 1:return e.call(this,arguments[0],i);case 2:return e.call(this,arguments[0],arguments[1],i)}var o=Array(t+1);for(r=0;r<t;r++)o[r]=arguments[r];return o[t]=i,e.apply(this,o)}}function S(e){if(!bt(e))return{};if(f)return f(e);v.prototype=e;var t=new v;return v.prototype=null,t}function I(e){return function(t){return null==t?void 0:t[e]}}function P(e,t){return null!=e&&p.call(e,t)}function T(e,t){for(var n=t.length,i=0;i<n;i++){if(null==e)return;e=e[t[i]]}return n?e:void 0}x.iteratee=k;var C=Math.pow(2,53)-1,A=I("length");function O(e){var t=A(e);return"number"==typeof t&&t>=0&&t<=C}function D(e,t,n){var i,r;if(t=y(t,n),O(e))for(i=0,r=e.length;i<r;i++)t(e[i],i,e);else{var o=Ve(e);for(i=0,r=o.length;i<r;i++)t(e[o[i]],o[i],e)}return e}function L(e,t,n){t=E(t,n);for(var i=!O(e)&&Ve(e),r=(i||e).length,o=Array(r),s=0;s<r;s++){var a=i?i[s]:s;o[s]=t(e[a],a,e)}return o}function R(e){var t=function(t,n,i,r){var o=!O(t)&&Ve(t),s=(o||t).length,a=e>0?0:s-1;for(r||(i=t[o?o[a]:a],a+=e);a>=0&&a<s;a+=e){var c=o?o[a]:a;i=n(i,t[c],c,t)}return i};return function(e,n,i,r){var o=arguments.length>=3;return t(e,y(n,r,4),i,o)}}var N=R(1),K=R(-1);function j(e,t,n){var i=(O(e)?ke:rt)(e,t,n);if(void 0!==i&&-1!==i)return e[i]}function q(e,t,n){var i=[];return t=E(t,n),D(e,(function(e,n,r){t(e,n,r)&&i.push(e)})),i}function F(e,t,n){return q(e,Me(E(t)),n)}function M(e,t,n){t=E(t,n);for(var i=!O(e)&&Ve(e),r=(i||e).length,o=0;o<r;o++){var s=i?i[o]:o;if(!t(e[s],s,e))return!1}return!0}function U(e,t,n){t=E(t,n);for(var i=!O(e)&&Ve(e),r=(i||e).length,o=0;o<r;o++){var s=i?i[o]:o;if(t(e[s],s,e))return!0}return!1}function B(e,t,n,i){return O(e)||(e=Ye(e)),("number"!=typeof n||i)&&(n=0),Ie(e,t,n)>=0}var H=_((function(e,t,n){var i,r;return wt(t)?r=t:xt(t)&&(i=t.slice(0,-1),t=t[t.length-1]),L(e,(function(e){var o=r;if(!o){if(i&&i.length&&(e=T(e,i)),null==e)return;o=e[t]}return null==o?o:o.apply(e,n)}))}));function $(e,t){return L(e,Bt(t))}function z(e,t){return q(e,$t(t))}function W(e,t){return j(e,$t(t))}function G(e,t,n){var i,r,o=-1/0,s=-1/0;if(null==t||"number"==typeof t&&"object"!=typeof e[0]&&null!=e)for(var a=0,c=(e=O(e)?e:Ye(e)).length;a<c;a++)null!=(i=e[a])&&i>o&&(o=i);else t=E(t,n),D(e,(function(e,n,i){((r=t(e,n,i))>s||r===-1/0&&o===-1/0)&&(o=e,s=r)}));return o}function V(e,t,n){var i,r,o=1/0,s=1/0;if(null==t||"number"==typeof t&&"object"!=typeof e[0]&&null!=e)for(var a=0,c=(e=O(e)?e:Ye(e)).length;a<c;a++)null!=(i=e[a])&&i<o&&(o=i);else t=E(t,n),D(e,(function(e,n,i){((r=t(e,n,i))<s||r===1/0&&o===1/0)&&(o=e,s=r)}));return o}function J(e){return Y(e,1/0)}function Y(e,t,n){if(null==t||n)return O(e)||(e=Ye(e)),e[Wt(e.length-1)];var i=O(e)?lt(e):Ye(e),r=A(i);t=Math.max(Math.min(t,r),0);for(var o=r-1,s=0;s<t;s++){var a=Wt(s,o),c=i[s];i[s]=i[a],i[a]=c}return i.slice(0,t)}function X(e,t,n){var i=0;return t=E(t,n),$(L(e,(function(e,n,r){return{value:e,index:i++,criteria:t(e,n,r)}})).sort((function(e,t){var n=e.criteria,i=t.criteria;if(n!==i){if(n>i||void 0===n)return 1;if(n<i||void 0===i)return-1}return e.index-t.index})),"value")}function Z(e,t){return function(n,i,r){var o=t?[[],[]]:{};return i=E(i,r),D(n,(function(t,r){var s=i(t,r,n);e(o,t,s)})),o}}var Q=Z((function(e,t,n){P(e,n)?e[n].push(t):e[n]=[t]})),ee=Z((function(e,t,n){e[n]=t})),te=Z((function(e,t,n){P(e,n)?e[n]++:e[n]=1})),ne=/[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;function ie(e){return e?xt(e)?u.call(e):kt(e)?e.match(ne):O(e)?L(e,Ft):Ye(e):[]}function re(e){return null==e?0:O(e)?e.length:Ve(e).length}var oe=Z((function(e,t,n){e[n?0:1].push(t)}),!0);function se(e,t,n){return null==e||e.length<1?null==t?void 0:[]:null==t||n?e[0]:ae(e,e.length-t)}function ae(e,t,n){return u.call(e,0,Math.max(0,e.length-(null==t||n?1:t)))}function ce(e,t,n){return null==e||e.length<1?null==t?void 0:[]:null==t||n?e[e.length-1]:ue(e,Math.max(0,e.length-t))}function ue(e,t,n){return u.call(e,null==t||n?1:t)}function le(e){return q(e,Boolean)}function pe(e,t,n,i){for(var r=(i=i||[]).length,o=0,s=A(e);o<s;o++){var a=e[o];if(O(a)&&(xt(a)||yt(a)))if(t)for(var c=0,u=a.length;c<u;)i[r++]=a[c++];else pe(a,t,n,i),r=i.length;else n||(i[r++]=a)}return i}function de(e,t){return pe(e,t,!1)}var he=_((function(e,t){return ve(e,t)}));function fe(e,t,n,i){Nt(t)||(i=n,n=t,t=!1),null!=n&&(n=E(n,i));for(var r=[],o=[],s=0,a=A(e);s<a;s++){var c=e[s],u=n?n(c,s,e):c;t&&!n?(s&&o===u||r.push(c),o=u):n?B(o,u)||(o.push(u),r.push(c)):B(r,c)||r.push(c)}return r}var me=_((function(e){return fe(pe(e,!0,!0))}));function ge(e){for(var t=[],n=arguments.length,i=0,r=A(e);i<r;i++){var o=e[i];if(!B(t,o)){var s;for(s=1;s<n&&B(arguments[s],o);s++);s===n&&t.push(o)}}return t}var ve=_((function(e,t){return t=pe(t,!0,!0),q(e,(function(e){return!B(t,e)}))}));function xe(e){for(var t=e&&G(e,A).length||0,n=Array(t),i=0;i<t;i++)n[i]=$(e,i);return n}var be=_(xe);function ye(e,t){for(var n={},i=0,r=A(e);i<r;i++)t?n[e[i]]=t[i]:n[e[i][0]]=e[i][1];return n}function we(e){return function(t,n,i){n=E(n,i);for(var r=A(t),o=e>0?0:r-1;o>=0&&o<r;o+=e)if(n(t[o],o,t))return o;return-1}}var ke=we(1),Ee=we(-1);function _e(e,t,n,i){for(var r=(n=E(n,i,1))(t),o=0,s=A(e);o<s;){var a=Math.floor((o+s)/2);n(e[a])<r?o=a+1:s=a}return o}function Se(e,t,n){return function(i,r,o){var s=0,a=A(i);if("number"==typeof o)e>0?s=o>=0?o:Math.max(o+a,s):a=o>=0?Math.min(o+1,a):o+a+1;else if(n&&o&&a)return i[o=n(i,r)]===r?o:-1;if(r!=r)return(o=t(u.call(i,s,a),Rt))>=0?o+s:-1;for(o=e>0?s:a-1;o>=0&&o<a;o+=e)if(i[o]===r)return o;return-1}}var Ie=Se(1,ke,_e),Pe=Se(-1,Ee);function Te(e,t,n){null==t&&(t=e||0,e=0),n||(n=t<e?-1:1);for(var i=Math.max(Math.ceil((t-e)/n),0),r=Array(i),o=0;o<i;o++,e+=n)r[o]=e;return r}function Ce(e,t){if(null==t||t<1)return[];for(var n=[],i=0,r=e.length;i<r;)n.push(u.call(e,i,i+=t));return n}function Ae(e,t,n,i,r){if(!(i instanceof t))return e.apply(n,r);var o=S(e.prototype),s=e.apply(o,r);return bt(s)?s:o}var Oe=_((function(e,t,n){if(!wt(e))throw new TypeError("Bind must be called on a function");var i=_((function(r){return Ae(e,i,t,this,n.concat(r))}));return i})),De=_((function(e,t){var n=De.placeholder,i=function(){for(var r=0,o=t.length,s=Array(o),a=0;a<o;a++)s[a]=t[a]===n?arguments[r++]:t[a];for(;r<arguments.length;)s.push(arguments[r++]);return Ae(e,i,this,this,s)};return i}));De.placeholder=x;var Le=_((function(e,t){var n=(t=pe(t,!1,!1)).length;if(n<1)throw new Error("bindAll must be passed function names");for(;n--;){var i=t[n];e[i]=Oe(e[i],e)}}));function Re(e,t){var n=function(i){var r=n.cache,o=""+(t?t.apply(this,arguments):i);return P(r,o)||(r[o]=e.apply(this,arguments)),r[o]};return n.cache={},n}var Ne=_((function(e,t,n){return setTimeout((function(){return e.apply(null,n)}),t)})),Ke=De(Ne,x,1);function je(e,t,n){var i,r,o,s,a=0;n||(n={});var c=function(){a=!1===n.leading?0:Gt(),i=null,s=e.apply(r,o),i||(r=o=null)},u=function(){var u=Gt();a||!1!==n.leading||(a=u);var l=t-(u-a);return r=this,o=arguments,l<=0||l>t?(i&&(clearTimeout(i),i=null),a=u,s=e.apply(r,o),i||(r=o=null)):i||!1===n.trailing||(i=setTimeout(c,l)),s};return u.cancel=function(){clearTimeout(i),a=0,i=r=o=null},u}function qe(e,t,n){var i,r,o=function(t,n){i=null,n&&(r=e.apply(t,n))},s=_((function(s){if(i&&clearTimeout(i),n){var a=!i;i=setTimeout(o,t),a&&(r=e.apply(this,s))}else i=Ne(o,t,this,s);return r}));return s.cancel=function(){clearTimeout(i),i=null},s}function Fe(e,t){return De(t,e)}function Me(e){return function(){return!e.apply(this,arguments)}}function Ue(){var e=arguments,t=e.length-1;return function(){for(var n=t,i=e[t].apply(this,arguments);n--;)i=e[n].call(this,i);return i}}function Be(e,t){return function(){if(--e<1)return t.apply(this,arguments)}}function He(e,t){var n;return function(){return--e>0&&(n=t.apply(this,arguments)),e<=1&&(t=null),n}}var $e=De(He,2),ze=!{toString:null}.propertyIsEnumerable("toString"),We=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"];function Ge(e,t){var n=We.length,i=e.constructor,r=wt(i)&&i.prototype||s,o="constructor";for(P(e,o)&&!B(t,o)&&t.push(o);n--;)(o=We[n])in e&&e[o]!==r[o]&&!B(t,o)&&t.push(o)}function Ve(e){if(!bt(e))return[];if(h)return h(e);var t=[];for(var n in e)P(e,n)&&t.push(n);return ze&&Ge(e,t),t}function Je(e){if(!bt(e))return[];var t=[];for(var n in e)t.push(n);return ze&&Ge(e,t),t}function Ye(e){for(var t=Ve(e),n=t.length,i=Array(n),r=0;r<n;r++)i[r]=e[t[r]];return i}function Xe(e,t,n){t=E(t,n);for(var i=Ve(e),r=i.length,o={},s=0;s<r;s++){var a=i[s];o[a]=t(e[a],a,e)}return o}function Ze(e){for(var t=Ve(e),n=t.length,i=Array(n),r=0;r<n;r++)i[r]=[t[r],e[t[r]]];return i}function Qe(e){for(var t={},n=Ve(e),i=0,r=n.length;i<r;i++)t[e[n[i]]]=n[i];return t}function et(e){var t=[];for(var n in e)wt(e[n])&&t.push(n);return t.sort()}function tt(e,t){return function(n){var i=arguments.length;if(t&&(n=Object(n)),i<2||null==n)return n;for(var r=1;r<i;r++)for(var o=arguments[r],s=e(o),a=s.length,c=0;c<a;c++){var u=s[c];t&&void 0!==n[u]||(n[u]=o[u])}return n}}var nt=tt(Je),it=tt(Ve);function rt(e,t,n){t=E(t,n);for(var i,r=Ve(e),o=0,s=r.length;o<s;o++)if(t(e[i=r[o]],i,e))return i}function ot(e,t,n){return t in n}var st=_((function(e,t){var n={},i=t[0];if(null==e)return n;wt(i)?(t.length>1&&(i=y(i,t[1])),t=Je(e)):(i=ot,t=pe(t,!1,!1),e=Object(e));for(var r=0,o=t.length;r<o;r++){var s=t[r],a=e[s];i(a,s,e)&&(n[s]=a)}return n})),at=_((function(e,t){var n,i=t[0];return wt(i)?(i=Me(i),t.length>1&&(n=t[1])):(t=L(pe(t,!1,!1),String),i=function(e,n){return!B(t,n)}),st(e,i,n)})),ct=tt(Je,!0);function ut(e,t){var n=S(e);return t&&it(n,t),n}function lt(e){return bt(e)?xt(e)?e.slice():nt({},e):e}function pt(e,t){return t(e),e}function dt(e,t){var n=Ve(t),i=n.length;if(null==e)return!i;for(var r=Object(e),o=0;o<i;o++){var s=n[o];if(t[s]!==r[s]||!(s in r))return!1}return!0}function ht(e,t,n,i){if(e===t)return 0!==e||1/e==1/t;if(null==e||null==t)return!1;if(e!=e)return t!=t;var r=typeof e;return("function"===r||"object"===r||"object"==typeof t)&&function(e,t,n,i){e instanceof x&&(e=e._wrapped);t instanceof x&&(t=t._wrapped);var r=l.call(e);if(r!==l.call(t))return!1;switch(r){case"[object RegExp]":case"[object String]":return""+e==""+t;case"[object Number]":return+e!=+e?+t!=+t:0==+e?1/+e==1/t:+e==+t;case"[object Date]":case"[object Boolean]":return+e==+t;case"[object Symbol]":return a.valueOf.call(e)===a.valueOf.call(t)}var o="[object Array]"===r;if(!o){if("object"!=typeof e||"object"!=typeof t)return!1;var s=e.constructor,c=t.constructor;if(s!==c&&!(wt(s)&&s instanceof s&&wt(c)&&c instanceof c)&&"constructor"in e&&"constructor"in t)return!1}i=i||[];var u=(n=n||[]).length;for(;u--;)if(n[u]===e)return i[u]===t;if(n.push(e),i.push(t),o){if((u=e.length)!==t.length)return!1;for(;u--;)if(!ht(e[u],t[u],n,i))return!1}else{var p,d=Ve(e);if(u=d.length,Ve(t).length!==u)return!1;for(;u--;)if(p=d[u],!P(t,p)||!ht(e[p],t[p],n,i))return!1}return n.pop(),i.pop(),!0}(e,t,n,i)}function ft(e,t){return ht(e,t)}function mt(e){return null==e||(O(e)&&(xt(e)||kt(e)||yt(e))?0===e.length:0===Ve(e).length)}function gt(e){return!(!e||1!==e.nodeType)}function vt(e){return function(t){return l.call(t)==="[object "+e+"]"}}var xt=d||vt("Array");function bt(e){var t=typeof e;return"function"===t||"object"===t&&!!e}var yt=vt("Arguments"),wt=vt("Function"),kt=vt("String"),Et=vt("Number"),_t=vt("Date"),St=vt("RegExp"),It=vt("Error"),Pt=vt("Symbol"),Tt=vt("Map"),Ct=vt("WeakMap"),At=vt("Set"),Ot=vt("WeakSet");!function(){yt(arguments)||(yt=function(e){return P(e,"callee")})}();var Dt=r.document&&r.document.childNodes;function Lt(e){return!Pt(e)&&g(e)&&!m(parseFloat(e))}function Rt(e){return Et(e)&&m(e)}function Nt(e){return!0===e||!1===e||"[object Boolean]"===l.call(e)}function Kt(e){return null===e}function jt(e){return void 0===e}function qt(e,t){if(!xt(t))return P(e,t);for(var n=t.length,i=0;i<n;i++){var r=t[i];if(null==e||!p.call(e,r))return!1;e=e[r]}return!!n}function Ft(e){return e}function Mt(e){return function(){return e}}function Ut(){}function Bt(e){return xt(e)?function(t){return T(t,e)}:I(e)}function Ht(e){return null==e?function(){}:function(t){return xt(t)?T(e,t):e[t]}}function $t(e){return e=it({},e),function(t){return dt(t,e)}}function zt(e,t,n){var i=Array(Math.max(0,e));t=y(t,n,1);for(var r=0;r<e;r++)i[r]=t(r);return i}function Wt(e,t){return null==t&&(t=e,e=0),e+Math.floor(Math.random()*(t-e+1))}"object"!=typeof Int8Array&&"function"!=typeof Dt&&(wt=function(e){return"function"==typeof e||!1});var Gt=Date.now||function(){return(new Date).getTime()},Vt={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},Jt=Qe(Vt);function Yt(e){var t=function(t){return e[t]},n="(?:"+Ve(e).join("|")+")",i=RegExp(n),r=RegExp(n,"g");return function(e){return e=null==e?"":""+e,i.test(e)?e.replace(r,t):e}}var Xt=Yt(Vt),Zt=Yt(Jt);function Qt(e,t,n){xt(t)||(t=[t]);var i=t.length;if(!i)return wt(n)?n.call(e):n;for(var r=0;r<i;r++){var o=null==e?void 0:e[t[r]];void 0===o&&(o=n,r=i),e=wt(o)?o.call(e):o}return e}var en=0;function tn(e){var t=++en+"";return e?e+t:t}var nn=x.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g},rn=/(.)^/,on={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},sn=/\\|'|\r|\n|\u2028|\u2029/g,an=function(e){return"\\"+on[e]};function cn(e,t,n){!t&&n&&(t=n),t=ct({},t,x.templateSettings);var i,r=RegExp([(t.escape||rn).source,(t.interpolate||rn).source,(t.evaluate||rn).source].join("|")+"|$","g"),o=0,s="__p+='";e.replace(r,(function(t,n,i,r,a){return s+=e.slice(o,a).replace(sn,an),o=a+t.length,n?s+="'+\n((__t=("+n+"))==null?'':_.escape(__t))+\n'":i?s+="'+\n((__t=("+i+"))==null?'':__t)+\n'":r&&(s+="';\n"+r+"\n__p+='"),t})),s+="';\n",t.variable||(s="with(obj||{}){\n"+s+"}\n"),s="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+s+"return __p;\n";try{i=new Function(t.variable||"obj","_",s)}catch(e){throw e.source=s,e}var a=function(e){return i.call(this,e,x)},c=t.variable||"obj";return a.source="function("+c+"){\n"+s+"}",a}function un(e){var t=x(e);return t._chain=!0,t}function ln(e,t){return e._chain?x(t).chain():t}function pn(e){return D(et(e),(function(t){var n=x[t]=e[t];x.prototype[t]=function(){var e=[this._wrapped];return c.apply(e,arguments),ln(this,n.apply(x,e))}})),x}D(["pop","push","reverse","shift","sort","splice","unshift"],(function(e){var t=o[e];x.prototype[e]=function(){var n=this._wrapped;return t.apply(n,arguments),"shift"!==e&&"splice"!==e||0!==n.length||delete n[0],ln(this,n)}})),D(["concat","join","slice"],(function(e){var t=o[e];x.prototype[e]=function(){return ln(this,t.apply(this._wrapped,arguments))}})),x.prototype.value=function(){return this._wrapped},x.prototype.valueOf=x.prototype.toJSON=x.prototype.value,x.prototype.toString=function(){return String(this._wrapped)};var dn=pn(i);dn._=dn;var hn=dn}]);
=======
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.15';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports =  true && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack);
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision && nativeIsFinite(number)) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function safeGet(object, key) {
      if (key === 'constructor' && typeof object[key] === 'function') {
        return;
      }

      if (key == '__proto__') {
        return;
      }

      return object[key];
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      // The sourceURL gets injected into the source that's eval-ed, so be careful
      // with lookup (in case of e.g. prototype pollution), and strip newlines if any.
      // A newline wouldn't be a valid sourceURL anyway, and it'd enable code injection.
      var sourceURL = '//# sourceURL=' +
        (hasOwnProperty.call(options, 'sourceURL')
          ? (options.sourceURL + '').replace(/[\r\n]/g, ' ')
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      // Like with sourceURL, we take care to not check the option's prototype,
      // as this configuration is a code injection vector.
      var variable = hasOwnProperty.call(options, 'variable') && options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '';
        if (!hasOwnProperty.call(realNames, key)) {
          realNames[key] = [];
        }
        realNames[key].push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return _;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else {}
}.call(this));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(226)(module)))

/***/ }),
/* 226 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

/* 
 * Used to patch snippet.insert to not add additional whitespace in front of multiline completions.
 * Taken from atom/snippets at https://github.com/atom/snippets
 */
module.exports = {
  Snippet: __webpack_require__(228),
  SnippetExpansion: __webpack_require__(232)
};

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

const {
  Range
} = __webpack_require__(2);

const TabStopList = __webpack_require__(229);

module.exports = class Snippet {
  constructor({
    name,
    prefix,
    bodyText,
    description,
    descriptionMoreURL,
    rightLabelHTML,
    leftLabel,
    leftLabelHTML,
    bodyTree
  }) {
    this.name = name;
    this.prefix = prefix;
    this.bodyText = bodyText;
    this.description = description;
    this.descriptionMoreURL = descriptionMoreURL;
    this.rightLabelHTML = rightLabelHTML;
    this.leftLabel = leftLabel;
    this.leftLabelHTML = leftLabelHTML;
    this.tabStopList = new TabStopList(this);
    this.body = this.extractTabStops(bodyTree);
  }

  extractTabStops(bodyTree) {
    const bodyText = [];
    let row = 0;
    let column = 0; // recursive helper function; mutates vars above

    let extractTabStops = bodyTree => {
      for (const segment of bodyTree) {
        if (segment.index != null) {
          let {
            index,
            content,
            substitution
          } = segment;

          if (index === 0) {
            index = Infinity;
          }

          const start = [row, column];
          extractTabStops(content);
          const range = new Range(start, [row, column]);
          const tabStop = this.tabStopList.findOrCreate({
            index,
            snippet: this
          });
          tabStop.addInsertion({
            range,
            substitution
          });
        } else if (typeof segment === 'string') {
          bodyText.push(segment);
          var segmentLines = segment.split('\n');
          column += segmentLines.shift().length;
          let nextLine;

          while ((nextLine = segmentLines.shift()) != null) {
            row += 1;
            column = nextLine.length;
          }
        }
      }
    };

    extractTabStops(bodyTree);
    this.lineCount = row + 1;
    this.insertions = this.tabStopList.getInsertions();
    return bodyText.join('');
  }

};

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

const TabStop = __webpack_require__(230);

class TabStopList {
  constructor(snippet) {
    this.snippet = snippet;
    this.list = {};
  }

  get length() {
    return Object.keys(this.list).length;
  }

  get hasEndStop() {
    return !!this.list[Infinity];
  }

  findOrCreate({
    index,
    snippet
  }) {
    if (!this.list[index]) {
      this.list[index] = new TabStop({
        index,
        snippet
      });
    }

    return this.list[index];
  }

  forEachIndex(iterator) {
    let indices = Object.keys(this.list).sort((a1, a2) => a1 - a2);
    indices.forEach(iterator);
  }

  getInsertions() {
    let results = [];
    this.forEachIndex(index => {
      results.push(...this.list[index].insertions);
    });
    return results;
  }

  toArray() {
    let results = [];
    this.forEachIndex(index => {
      let tabStop = this.list[index];
      if (!tabStop.isValid()) return;
      results.push(tabStop);
    });
    return results;
  }

}

module.exports = TabStopList;

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

const {
  Range
} = __webpack_require__(2);

const Insertion = __webpack_require__(231); // A tab stop:
// * belongs to a snippet
// * has an index (one tab stop per index)
// * has multiple Insertions


class TabStop {
  constructor({
    snippet,
    index,
    insertions
  }) {
    this.insertions = insertions || [];
    Object.assign(this, {
      snippet,
      index
    });
  }

  isValid() {
    let any = this.insertions.some(insertion => insertion.isTransformation());
    if (!any) return true;
    let all = this.insertions.every(insertion => insertion.isTransformation()); // If there are any transforming insertions, there must be at least one
    // non-transforming insertion to act as the primary.

    return !all;
  }

  addInsertion({
    range,
    substitution
  }) {
    let insertion = new Insertion({
      range,
      substitution
    });
    let insertions = this.insertions;
    insertions.push(insertion);
    insertions = insertions.sort((i1, i2) => {
      return i1.range.start.compare(i2.range.start);
    });
    let initial = insertions.find(insertion => !insertion.isTransformation());

    if (initial) {
      insertions.splice(insertions.indexOf(initial), 1);
      insertions.unshift(initial);
    }

    this.insertions = insertions;
  }

  copyWithIndent(indent) {
    let {
      snippet,
      index,
      insertions
    } = this;
    let newInsertions = insertions.map(insertion => {
      let {
        range,
        substitution
      } = insertion;
      let newRange = Range.fromObject(range, true);

      if (newRange.start.row) {
        newRange.start.column += indent.length;
        newRange.end.column += indent.length;
      }

      return new Insertion({
        range: newRange,
        substitution
      });
    });
    return new TabStop({
      snippet,
      index,
      insertions: newInsertions
    });
  }

}

module.exports = TabStop;

/***/ }),
/* 231 */
/***/ (function(module, exports) {

const ESCAPES = {
  u: flags => {
    flags.lowercaseNext = false;
    flags.uppercaseNext = true;
  },
  l: flags => {
    flags.uppercaseNext = false;
    flags.lowercaseNext = true;
  },
  U: flags => {
    flags.lowercaseAll = false;
    flags.uppercaseAll = true;
  },
  L: flags => {
    flags.uppercaseAll = false;
    flags.lowercaseAll = true;
  },
  E: flags => {
    flags.uppercaseAll = false;
    flags.lowercaseAll = false;
  },
  r: (flags, result) => {
    result.push('\\r');
  },
  n: (flags, result) => {
    result.push('\\n');
  },
  $: (flags, result) => {
    result.push('$');
  }
};

function transformText(str, flags) {
  if (flags.uppercaseAll) {
    return str.toUpperCase();
  } else if (flags.lowercaseAll) {
    return str.toLowerCase();
  } else if (flags.uppercaseNext) {
    flags.uppercaseNext = false;
    return str.replace(/^./, s => s.toUpperCase());
  } else if (flags.lowercaseNext) {
    return str.replace(/^./, s => s.toLowerCase());
  }

  return str;
}

class Insertion {
  constructor({
    range,
    substitution
  }) {
    this.range = range;
    this.substitution = substitution;

    if (substitution) {
      if (substitution.replace === undefined) {
        substitution.replace = '';
      }

      this.replacer = this.makeReplacer(substitution.replace);
    }
  }

  isTransformation() {
    return !!this.substitution;
  }

  makeReplacer(replace) {
    return function replacer(...match) {
      let flags = {
        uppercaseAll: false,
        lowercaseAll: false,
        uppercaseNext: false,
        lowercaseNext: false
      };
      replace = [...replace];
      let result = [];
      replace.forEach(token => {
        if (typeof token === 'string') {
          result.push(transformText(token, flags));
        } else if (token.escape) {
          ESCAPES[token.escape](flags, result);
        } else if (token.backreference) {
          let transformed = transformText(match[token.backreference], flags);
          result.push(transformed);
        }
      });
      return result.join('');
    };
  }

  transform(input) {
    let {
      substitution
    } = this;

    if (!substitution) {
      return input;
    }

    return input.replace(substitution.find, this.replacer);
  }

}

module.exports = Insertion;

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

const {
  CompositeDisposable,
  Range,
  Point
} = __webpack_require__(2);

module.exports = class SnippetExpansion {
  constructor(snippet, editor, cursor, snippets, shouldNotIndent) {
    this.settingTabStop = false;
    this.isIgnoringBufferChanges = false;
    this.onUndoOrRedo = this.onUndoOrRedo.bind(this);
    this.snippet = snippet;
    this.editor = editor;
    this.cursor = cursor;
    this.snippets = snippets;
    this.subscriptions = new CompositeDisposable();
    this.tabStopMarkers = [];
    this.selections = [this.cursor.selection];
    const startPosition = this.cursor.selection.getBufferRange().start;
    let {
      body,
      tabStopList
    } = this.snippet;
    let tabStops = tabStopList.toArray(); // Don't regress older behavior

    if (!shouldNotIndent) {
      let indent = this.editor.lineTextForBufferRow(startPosition.row).match(/^\s*/)[0];

      if (this.snippet.lineCount > 1 && indent) {
        // Add proper leading indentation to the snippet
        body = body.replace(/\n/g, `\n${indent}`);
        tabStops = tabStops.map(tabStop => tabStop.copyWithIndent(indent));
      }
    }

    this.editor.transact(() => {
      this.ignoringBufferChanges(() => {
        this.editor.transact(() => {
          const newRange = this.cursor.selection.insertText(body, {
            autoIndent: false
          });

          if (this.snippet.tabStopList.length > 0) {
            this.subscriptions.add(this.cursor.onDidChangePosition(event => this.cursorMoved(event)));
            this.subscriptions.add(this.cursor.onDidDestroy(() => this.cursorDestroyed()));
            this.placeTabStopMarkers(startPosition, tabStops);
            this.snippets.addExpansion(this.editor, this);
            this.editor.normalizeTabsInBufferRange(newRange);
          }
        });
      });
    });
  } // Set a flag on undo or redo so that we know not to re-apply transforms.
  // They're already accounted for in the history.


  onUndoOrRedo(isUndo) {
    this.isUndoingOrRedoing = true;
  }

  cursorMoved({
    oldBufferPosition,
    newBufferPosition,
    textChanged
  }) {
    if (this.settingTabStop || textChanged) {
      return;
    }

    const itemWithCursor = this.tabStopMarkers[this.tabStopIndex].find(item => item.marker.getBufferRange().containsPoint(newBufferPosition));

    if (itemWithCursor && !itemWithCursor.insertion.isTransformation()) {
      return;
    }

    this.destroy();
  }

  cursorDestroyed() {
    if (!this.settingTabStop) {
      this.destroy();
    }
  }

  textChanged(event) {
    if (this.isIgnoringBufferChanges) {
      return;
    } // Don't try to alter the buffer if all we're doing is restoring a
    // snapshot from history.


    if (this.isUndoingOrRedoing) {
      this.isUndoingOrRedoing = false;
      return;
    }

    this.applyTransformations(this.tabStopIndex);
  }

  ignoringBufferChanges(callback) {
    const wasIgnoringBufferChanges = this.isIgnoringBufferChanges;
    this.isIgnoringBufferChanges = true;
    callback();
    this.isIgnoringBufferChanges = wasIgnoringBufferChanges;
  }

  applyAllTransformations() {
    this.editor.transact(() => {
      this.tabStopMarkers.forEach((item, index) => this.applyTransformations(index, true));
    });
  }

  applyTransformations(tabStop, initial = false) {
    const items = [...this.tabStopMarkers[tabStop]];

    if (items.length === 0) {
      return;
    }

    const primary = items.shift();
    const primaryRange = primary.marker.getBufferRange();
    const inputText = this.editor.getTextInBufferRange(primaryRange);
    this.ignoringBufferChanges(() => {
      for (const item of items) {
        const {
          marker,
          insertion
        } = item;
        var range = marker.getBufferRange(); // Don't transform mirrored tab stops. They have their own cursors, so
        // mirroring happens automatically.

        if (!insertion.isTransformation()) {
          continue;
        }

        var outputText = insertion.transform(inputText);
        this.editor.transact(() => this.editor.setTextInBufferRange(range, outputText));
        const newRange = new Range(range.start, range.start.traverse(new Point(0, outputText.length)));
        marker.setBufferRange(newRange);
      }
    });
  }

  placeTabStopMarkers(startPosition, tabStops) {
    for (const tabStop of tabStops) {
      const {
        insertions
      } = tabStop;
      const markers = [];

      if (!tabStop.isValid()) {
        continue;
      }

      for (const insertion of insertions) {
        const {
          range
        } = insertion;
        const {
          start,
          end
        } = range;
        const marker = this.getMarkerLayer(this.editor).markBufferRange([startPosition.traverse(start), startPosition.traverse(end)]);
        markers.push({
          index: markers.length,
          marker,
          insertion
        });
      }

      this.tabStopMarkers.push(markers);
    }

    this.setTabStopIndex(0);
    this.applyAllTransformations();
  }

  goToNextTabStop() {
    const nextIndex = this.tabStopIndex + 1;

    if (nextIndex < this.tabStopMarkers.length) {
      if (this.setTabStopIndex(nextIndex)) {
        return true;
      } else {
        return this.goToNextTabStop();
      }
    } else {
      // The user has tabbed past the last tab stop. If the last tab stop is a
      // $0, we shouldn't move the cursor any further.
      if (this.snippet.tabStopList.hasEndStop) {
        this.destroy();
        return false;
      } else {
        const succeeded = this.goToEndOfLastTabStop();
        this.destroy();
        return succeeded;
      }
    }
  }

  goToPreviousTabStop() {
    if (this.tabStopIndex > 0) {
      this.setTabStopIndex(this.tabStopIndex - 1);
    }
  }

  setTabStopIndex(tabStopIndex) {
    this.tabStopIndex = tabStopIndex;
    this.settingTabStop = true;
    let markerSelected = false;
    const items = this.tabStopMarkers[this.tabStopIndex];

    if (items.length === 0) {
      return false;
    }

    const ranges = [];
    this.hasTransforms = false;

    for (const item of items) {
      const {
        marker,
        insertion
      } = item;

      if (marker.isDestroyed()) {
        continue;
      }

      if (!marker.isValid()) {
        continue;
      }

      if (insertion.isTransformation()) {
        this.hasTransforms = true;
        continue;
      }

      ranges.push(marker.getBufferRange());
    }

    if (ranges.length > 0) {
      for (const selection of this.selections.slice(ranges.length)) {
        selection.destroy();
      }

      this.selections = this.selections.slice(0, ranges.length);

      for (let i = 0; i < ranges.length; i++) {
        const range = ranges[i];

        if (this.selections[i]) {
          this.selections[i].setBufferRange(range);
        } else {
          const newSelection = this.editor.addSelectionForBufferRange(range);
          this.subscriptions.add(newSelection.cursor.onDidChangePosition(event => this.cursorMoved(event)));
          this.subscriptions.add(newSelection.cursor.onDidDestroy(() => this.cursorDestroyed()));
          this.selections.push(newSelection);
        }
      }

      markerSelected = true;
    }

    this.settingTabStop = false; // If this snippet has at least one transform, we need to observe changes
    // made to the editor so that we can update the transformed tab stops.

    if (this.hasTransforms) {
      this.snippets.observeEditor(this.editor);
    }

    return markerSelected;
  }

  goToEndOfLastTabStop() {
    if (this.tabStopMarkers.length === 0) {
      return;
    }

    const items = this.tabStopMarkers[this.tabStopMarkers.length - 1];

    if (items.length === 0) {
      return;
    }

    const {
      marker: lastMarker
    } = items[items.length - 1];

    if (lastMarker.isDestroyed()) {
      return false;
    } else {
      this.editor.setCursorBufferPosition(lastMarker.getEndBufferPosition());
      return true;
    }
  }

  destroy() {
    this.subscriptions.dispose();
    this.getMarkerLayer(this.editor).clear();
    this.tabStopMarkers = [];
    this.snippets.stopObservingEditor(this.editor);
    this.snippets.clearExpansions(this.editor);
  }

  getMarkerLayer() {
    return this.snippets.findOrCreateMarkerLayer(this.editor);
  }

  restore(editor) {
    this.editor = editor;
    this.snippets.addExpansion(this.editor, this);
  }

};

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(202);

const {
  CompositeDisposable,
  TextEditor
} = __webpack_require__(2);

const {
  DisposableEvent,
  addDelegatedEventListener,
  parent,
  delayPromise
} = __webpack_require__(5);

const KiteAPI = __webpack_require__(138);

const {
  retryPromise
} = __webpack_require__(154);

const LinkScheme = __webpack_require__(3);

const DataLoader = __webpack_require__(183);

const {
  MAX_FILE_SIZE
} = __webpack_require__(190);

const {
  STATES
} = KiteAPI;
const dot = '<span class="dot">•</span>';

class KiteStatusPanel extends HTMLElement {
  static initClass() {
    customElements.define('kite-status-panel', this);
    return this;
  }

  setApp(app) {
    this.app = app;
  }

  hide() {
    if (this.parentNode) {
      this.parentNode.removeChild(this);
      this.subscriptions.dispose();
    }
  }

  pendingStatus(label) {
    const status = this.querySelector('.status');

    if (status) {
      status.innerHTML = `
      ${label}
      <span class='loading loading-spinner-small inline-block'></span>
      `;
    }
  }

  show(target) {
    return this.renderCurrent().then(() => {
      document.body.appendChild(this);
      this.setPosition(target);
      this.scheme = new LinkScheme('kite-atom-internal', this);
      this.subscriptions = new CompositeDisposable();
      const links = this.querySelector('kite-links');

      if (links) {
        const linksCb = links.onDidClickActionLink(() => {
          this.hide();
        });
        linksCb && this.subscriptions.disposed && this.subscriptions.add(linksCb);
      }

      this.subscriptions.add(this.scheme);
      this.subscriptions.add(this.scheme.onDidClickLink(opts => this.handleAction(opts)));
      this.subscriptions.add(atom.workspace.onDidChangeActivePaneItem(item => {
        if (item instanceof TextEditor) {
          this.renderCurrent().then(() => this.setPosition(target));
        }
      }));
      this.subscriptions.add(addDelegatedEventListener(this, 'click', '.kite-warning-box [data-method="post"]', e => {
        const link = e.target;
        const box = parent(link, '.kite-warning-box');
        link.innerHTML = "<span class='loading loading-spinner-tiny inline-block'></span>";
        link.style.pointerEvents = 'none';
        KiteAPI.request({
          path: '/api/account/resendVerification',
          method: link.getAttribute('data-method')
        }).then(resp => {
          box.classList.remove('kite-warning-box');
          box.classList.add('kite-info-box');
          box.textContent = link.getAttribute('data-confirmation');
        })["catch"](err => {
          box.innerHTML = link.getAttribute('data-failure');
        });
      }));
      this.subscriptions.add(new DisposableEvent(window, 'resize', e => {
        this.setPosition(target);
      }));
      this.subscriptions.add(new DisposableEvent(document.body, 'click', e => {
        const {
          top,
          left,
          right,
          bottom
        } = this.getBoundingClientRect();
        const {
          pageX,
          pageY
        } = e;

        if (!this.starting && !this.installing && (pageX < left || pageX > right || pageY < top || pageY > bottom)) {
          this.hide();
        }
      }));
    });
  }

  pauseNotifications() {
    this.app.kite && this.app.kite.notifications.pauseNotifications();
  }

  resumeNotifications() {
    this.app.kite && this.app.kite.notifications.resumeNotifications();
  }

  handleAction({
    url
  }) {
    this.pauseNotifications();
    let promise;

    switch (url.host) {
      case 'open-account-web':
        atom.applicationDelegate.openExternal('http://localhost:46624/clientapi/desktoplogin?d=/settings/account');
        this.hide();
        break;

      case 'open-copilot-settings':
        this.app.copilotSettings();
        this.hide();
        break;

      case 'open-copilot-permissions':
        atom.applicationDelegate.openExternal(`kite://settings/permissions${url.path || ''}`);
        break;

      case 'install':
        this.pendingStatus('Installing Kite...');
        this.installing = true;
        this.app.installFlow().then(() => {
          this.installing = false;
        })["catch"](() => {
          this.installing = false;
        }).then(() => {
          this.renderCurrent();
        });
        break;

      case 'start':
        this.pendingStatus('Launching Kite');
        this.starting = true;
        promise = this.app.start().then(() => retryPromise(() => KiteAPI.isUserAuthenticated(), 10, 500)).then(() => {
          this.starting = false;
        })["catch"](() => {
          this.starting = false;
        }).then(() => this.renderCurrent());
        break;

      case 'start-enterprise':
        this.pendingStatus('Launching Kite');
        this.starting = true;
        promise = this.app.startEnterprise().then(() => delayPromise(() => Promise.resolve(), 3000)).then(() => {
          this.starting = false;
        })["catch"](() => {
          this.starting = false;
        }).then(() => this.renderCurrent());
        break;

      case 'login':
        this.app.login();
        this.hide();
        break;
    }

    if (promise) {
      promise.then(() => this.renderCurrent()).then(() => this.resumeNotifications())["catch"](err => console.error(err));
    } else {
      this.resumeNotifications();
    }
  }

  setPosition(target) {
    if (!target) {
      return;
    }

    const box = target.getBoundingClientRect();
    this.style.cssText = `
    top: ${Math.round(box.top - 20)}px;
    left: ${Math.round(box.right)}px;
    `;
  }

  renderCurrent() {
    if (this.installing || this.starting) {
      return Promise.resolve();
    }

    const editor = atom.workspace.getActiveTextEditor();
    const promises = [KiteAPI.checkHealth().then(state => {
      return Promise.all([KiteAPI.isKiteInstalled().then(() => true, () => false), KiteAPI.isKiteEnterpriseInstalled().then(() => true, () => false)]).then(([kiteInstalled, kiteEnterpriseInstalled]) => {
        return {
          state,
          kiteInstalled,
          kiteEnterpriseInstalled
        };
      });
    }), DataLoader.getUserAccountInfo()["catch"](() => {}), DataLoader.getStatus(editor), DataLoader.isUserAuthenticated()["catch"](() => {})];
    return Promise.all(promises).then(data => {
      this.render(...data);
    });
  }

  render(status, account, syncStatus, isUserAuthenticated) {
    this.innerHTML = `
      ${this.renderSubscription(status)}
      ${this.renderLinks(account)}
      ${this.renderStatus(status, syncStatus, isUserAuthenticated)}
    `;
  }

  renderLinks(account) {
    return `
    <kite-links emit-action="true">
    <ul class="links ${account ? 'has-account' : 'no-account'}">
      <li><a class="icon icon-search" href="kite-atom-internal://open-search-docs">Search Python Docs</a></li>
      <li><a class="icon icon-question" href="kite-atom-internal://open-kite-plugin-help">Help</a></li>
    </ul>
    <ul class="links ${account ? 'has-account' : 'no-account'}">
      <li><a class="icon icon-settings" href="kite-atom-internal://open-settings">Atom Plugin Settings</a></li>
      <li><a class="icon icon-settings"
             href="kite-atom-internal://open-copilot-settings">Kite Engine Settings</a></li>
    </ul>
    </kite-links>
    `;
  }

  renderStatus(status, syncStatus, isUserAuthenticated) {
    let content = '';

    switch (status.state) {
      case STATES.UNSUPPORTED:
        content = `<div class="text-danger">Kite engine is not available on your system ${dot}</div>`;
        break;

      case STATES.UNINSTALLED:
        content = `<div class="text-danger">Kite engine is not installed ${dot}</div>`;
        if (!this.installing) content += '<a href="kite-atom-internal://install" class="btn btn-error">Install now</a>';
        break;

      case STATES.INSTALLED:
        {
          if (KiteAPI.hasManyKiteInstallation() || KiteAPI.hasManyKiteEnterpriseInstallation()) {
            content = `<div class="text-danger">Kite engine is not running ${dot}<br/>
          You have multiple versions of Kite installed. Please launch your desired one.</div>`;
          } else if (status.kiteInstalled && status.kiteEnterpriseInstalled) {
            content = `
          <div class="text-danger">Kite engine is not running ${dot}<br/>
          Which version of kite do you want to launch?</div>
          <a href="kite-atom-internal://start-enterprise"
             class="btn btn-purple">Launch Kite Enterprise</a><br/>
          <a href="kite-atom-internal://start" class="btn btn-info">Launch Kite cloud</a>`;
          } else if (status.kiteInstalled) {
            content = `<div class="text-danger">Kite engine is not running ${dot}</div>
          <a href="kite-atom-internal://start" class="btn btn-error">Launch now</a>`;
          } else {
            content = `<div class="text-danger">Kite engine is not running ${dot}</div>
          <a href="kite-atom-internal://start-enterprise" class="btn btn-error">Launch now</a>`;
          }

          break;
        }

      case STATES.RUNNING:
        content = `
          <div class="text-danger">Kite engine is not reachable</div>
        `;
        break;

      case STATES.READY:
        const editor = atom.workspace.getActiveTextEditor();

        if (!editor) {
          content = `<div>Open a supported file to see Kite's status ${dot}</div>`;
        } else if (!this.app.kite.getModule('editors').isGrammarSupported(editor)) {
          content = `<div>Open a supported file to see Kite's status ${dot}</div>`;
        } else {
          if (editor && editor.getText().length >= MAX_FILE_SIZE) {
            content = `
            <div class="text-warning">The current file is too large for Kite to handle ${dot}</div>`;
          } else {
            switch (syncStatus.status) {
              case '':
              case 'ready':
                content = `<div class="ready">Kite engine is ready and working ${dot}</div>`;
                break;

              case 'indexing':
                content = `<div class="ready">Kite engine is indexing your code ${dot}</div>`;
                break;

              case 'noIndex':
                content = `<div class="ready">Kite engine is ready, but no index available ${dot}</div>`;
                break;

              case 'syncing':
                content = `<div class="ready">Kite engine is syncing your code ${dot}</div>`;
                break;
            }
          }
        }

        if (!isUserAuthenticated) {
          content = `
          <div>
            Kite engine is not logged in
            <a href="kite-atom-internal://open-copilot-settings" class="btn">Login now</a>
          </div>
          ${content}`;
        }

        break;
    }

    return `<div class="status">${content}</div>`;
  }

  renderSubscription(status) {
    return `<div class="split-line subscription">
      <div class="left"><kite-logo small></kite-logo></div>
      <div class="right">${status.state >= STATES.READY ? '<a href="kite-atom-internal://open-account-web">Account</a>' : ''}</div>
    </div>`;
  }

}

module.exports = KiteStatusPanel.initClass();

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const DataLoader = __webpack_require__(183);

const KiteSignature = __webpack_require__(235);

const {
  delayPromise
} = __webpack_require__(5);

let Kite;
const KiteProvider = {
  selector: '.source, .text',
  disableForSelector: ['.source .comment', '.text .comment'].join(', '),
  inclusionPriority: 5,
  suggestionPriority: 5,
  excludeLowerPriority: false,

  // called to handle attribute completions
  getSuggestions(params) {
    if (!Kite) {
      Kite = __webpack_require__(0);
    }

    const editors = Kite.getModule('editors');
    return editors.isGrammarSupported(params.editor) ? delayPromise(() => {
      let promise = Promise.resolve();
      const position = params.editor.getCursorBufferPosition();

      if (this.isInsideFunctionCall(params.editor, position) || this.isInsideFunctionCallBrackets(params.editor, position)) {
        promise = promise.then(() => this.loadSignature(params));
      } else {
        // the signature panel is visible, it's either we've deleted the
        // open paren or got past the closing one. We do an extra request
        // to conform to the specs
        if (this.isSignaturePanelVisible()) {
          promise = promise.then(() => this.loadSignature(params));
        } else {
          this.clearSignature();
        }
      } // Return no completions


      if (!atom.config.get('kite.enableCompletions', false)) {
        return promise.then(() => []);
      } // Return regular completions


      return promise.then(() => DataLoader.getCompletions(params.editor, atom.config.get('kite.enableSnippets'))).then(suggestions => // For Atom < 1.23.3, a weird bug happen when we're completing after a space.
      // In that case we just remove the replacementPrefix that is by default set
      // to the provided prefix
      params.prefix === ' ' ? suggestions.map(s => {
        s.replacementPrefix = '';
        return s;
      }) : suggestions).then(suggestions => {
        suggestions.forEach(s => {
          // in the case the suggestion text matches the completion prefix
          // it seems atom will set an empty replacementPrefix, making the completed
          // text appear twice as the typed text is not removed.
          // FWIW most providers seems to not provide anything in the case the prefix
          // matches a single completion whose text equals the prefix
          if (!s.replacementPrefix && params.prefix === s.text) {
            s.replacementPrefix = s.text;
          }
        });
        return suggestions;
      });
    }, 0) : Promise.resolve();
  },

  isInsideFunctionCall(editor, position) {
    const scopeDescriptor = editor.scopeDescriptorForBufferPosition(position); // Prior to version 1.24 the arguments scope didn't had the function-call|method-call
    // prefix, so we need to keed the old check otherwise we're breaking the signature
    // panel in these versions

    return parseFloat(atom.getVersion()) <= 1.23 ? scopeDescriptor.scopes.some(s => /(function|method)-call|arguments/.test(s)) : scopeDescriptor.scopes.some(s => /(function|method)-call\.arguments/.test(s));
  },

  isOnFunctionCallBrackets(editor, position) {
    const scopeDescriptor = editor.scopeDescriptorForBufferPosition(position);
    return scopeDescriptor.scopes.some(s => /arguments(.*)\.bracket/.test(s));
  },

  isInsideFunctionCallBrackets(editor, position) {
    const prefixChar = editor.getTextInBufferRange([[position.row, position.column - 1], [position.row, position.column]]);
    const suffixChar = editor.getTextInBufferRange([[position.row, position.column], [position.row, position.column + 1]]);
    return this.isOnFunctionCallBrackets(editor, position) && (/\(/.test(prefixChar) || /\)/.test(suffixChar));
  },

  loadSignature({
    editor,
    position
  }) {
    const compact = false;
    return DataLoader.getSignaturesAtPosition(editor, position || editor.getCursorBufferPosition()).then(data => {
      if (data) {
        const listElement = this.getSuggestionsListElement();
        listElement.maxVisibleSuggestions = compact ? atom.config.get('autocomplete-plus.maxVisibleSuggestions') : atom.config.get('kite.maxVisibleSuggestionsAlongSignature');
        const isNewSigPanel = this.signaturePanel == null;
        this.signaturePanel = this.signaturePanel || new KiteSignature();
        this.signaturePanel.setListElement(listElement);
        this.signaturePanel.setData(data, compact);
        const element = listElement.element ? listElement.element : listElement;

        if (isNewSigPanel || this.sigPanelNeedsReinsertion(element)) {
          element.style.width = null;
          element.appendChild(this.signaturePanel);
        }
      } else {
        this.clearSignature();
      }

      return data != null;
    })["catch"](err => {
      this.clearSignature();
      return false;
    });
  },

  sigPanelNeedsReinsertion(element) {
    return !element.querySelector('kite-signature');
  },

  clearSignature() {
    if (this.isSignaturePanelVisible()) {
      this.signaturePanel.parentNode.removeChild(this.signaturePanel);
    }
  },

  isSignaturePanelVisible() {
    const listElement = this.getSuggestionsListElement();
    const element = listElement.element || listElement;
    return element && element.querySelector('kite-signature'); // return this.signaturePanel && this.signaturePanel.parentNode;
  },

  getSuggestionsListElement() {
    if (!atom.packages.getAvailablePackageNames().includes('autocomplete-plus')) {
      return null;
    }

    if (this.suggestionListElement) {
      return this.suggestionListElement;
    }

    const pkg = atom.packages.getActivePackage('autocomplete-plus').mainModule;

    if (!pkg || !pkg.autocompleteManager || !pkg.autocompleteManager.suggestionList) {
      return null;
    }

    const list = pkg.autocompleteManager.suggestionList;
    this.suggestionListElement = list.suggestionListElement ? list.suggestionListElement : atom.views.getView(pkg.autocompleteManager.suggestionList);

    if (!this.suggestionListElement.ol) {
      this.suggestionListElement.renderList();
    }

    return this.suggestionListElement;
  }

};
module.exports = KiteProvider;

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const {
  CompositeDisposable
} = __webpack_require__(2);

const {
  head,
  DisposableEvent,
  detailLang,
  detailGet,
  getFunctionDetails,
  idToDottedPath
} = __webpack_require__(5);

const {
  valueLabel,
  valueName,
  callSignature,
  returnTypes
} = __webpack_require__(189);

const {
  highlightCode,
  wrapAfterParenthesis,
  debugData,
  renderParameter
} = __webpack_require__(200);

class KiteSignature extends HTMLElement {
  static initClass() {
    customElements.define('kite-signature', this);
    return this;
  }

  setListElement(listElement) {
    this.listElement = listElement;
  }

  disconnectedCallback() {
    this.subscriptions && this.subscriptions.dispose();
    this.listElement.maxVisibleSuggestions = atom.config.get('autocomplete-plus.maxVisibleSuggestions');
    this.resizeObserver.disconnect();
    this.style.maxWidth = '';

    if (this.parentNode) {
      this.parentNode.removeChild(this);
    }
  }

  connectedCallback() {
    this.listElement.maxVisibleSuggestions = this.compact ? atom.config.get('autocomplete-plus.maxVisibleSuggestions') : atom.config.get('kite.maxVisibleSuggestionsAlongSignature');
    const element = this.parentNode;
    let frameRequested;
    this.resizeObserver = new ResizeObserver(([{
      contentRect
    }]) => {
      if (frameRequested) {
        return;
      }

      frameRequested = true;
      requestAnimationFrame(() => {
        const ol = element.querySelector('ol:not(:empty)');

        if (ol) {
          const bounds = ol.getBoundingClientRect();

          if (bounds.width >= this.offsetWidth) {
            this.style.maxWidth = bounds.width + 'px';
          } else {
            this.style.maxWidth = '';
          }
        }

        frameRequested = false;
      });
    }); // sometimes parentNode can be a Document

    if (element instanceof Element) {
      this.resizeObserver.observe(element);
    }

    requestAnimationFrame(() => this.checkWidth());
  }

  setData(data, compact = false) {
    const call = head(data.calls);
    const name = call.func_name || valueName(call.callee);
    const detail = getFunctionDetails(call.callee);
    let extendedContent = '';
    compact = false;
    compact ? this.setAttribute('compact', '') : this.removeAttribute('compact');
    let kwargs = '';
    const lang = detailLang(detail);

    if (lang === 'python' && detailGet(detail, 'kwarg_parameters')) {
      kwargs = `<section class="kwargs ${atom.config.get('kite.signatureKwargsVisible') ? 'visible' : ''}">
      <h4><span class="title">**${detailGet(detail, 'kwarg').name}<span class="kwargs-toggle">&#8613;</span></span></h4>
      <kite-links metric="Signature">
      <dl>
      ${detailGet(detail, 'kwarg_parameters').map((p, i) => renderParameter(p, '', detailGet(call, 'in_kwargs') && call.arg_index === i)).join('')}
      </dl></kite-links>
      </section>`;
    }

    if (!compact) {
      let patterns = '';
      const popularPatternsVisible = atom.config.get('kite.signaturePopularPatternsVisible');

      if (call.signatures && call.signatures.length) {
        patterns = `
          <section class="patterns ${popularPatternsVisible ? 'visible' : ''}">
          <h4><span class="title">How others used this<span class="popular-patterns-toggle">&#8613;</span></span></h4>
          ${highlightCode(wrapAfterParenthesis(call.signatures.map(s => callSignature(s)).map(s => `${name}(${s})`).join('\n')))}
          </section>`;
      }

      const actions = [`<a class="kite-link docs" href="kite-atom-internal://open-search-docs/${idToDottedPath(call.callee.id)}">Docs<span class="kite-link-icon">&#8663;</span></a>`];

      if (!popularPatternsVisible) {
        actions.unshift('<a class="kite-link patterns" href="#">Examples<span class="kite-link-icon">&#8615;</span></a>');
      }

      extendedContent = `
      ${kwargs}
      ${patterns}
      <kite-links class="one-line footer-links" metric="Signature">
        ${actions.join(' ')}
        <div class="flex-separator"></div>
        <kite-logo small title="Powered by Kite" class="badge"></kite-logo>
      </kite-links>
      `;
    } else {
      extendedContent = kwargs;
    }

    const retTypes = returnTypes(call.callee);
    this.innerHTML = `
    <div class="kite-signature-wrapper">
      <div class="name"><pre>${valueLabel(call.callee, detailGet(call, 'in_kwargs') ? -1 : call.arg_index)}${retTypes ? ` &#8614; ${retTypes}` : ''}</pre></div>
      ${extendedContent}
    </div>
    ${debugData(data)}
    `;

    if (this.subscriptions) {
      this.subscriptions.dispose();
    }

    this.compact = true; //compact;

    this.currentIndex = call.arg_index;
    this.subscriptions = new CompositeDisposable();
    const kwargLinks = this.querySelector('section.kwargs kite-links');
    const footerLinks = this.querySelector('kite-links.footer-links');
    let popularPatternsLink = this.querySelector('kite-links.footer-links a.kite-link.patterns');

    if (!popularPatternsLink) {
      popularPatternsLink = document.createElement('a');
      popularPatternsLink.className = 'kite-link patterns';
      popularPatternsLink.setAttribute('href', '#');
      popularPatternsLink.innerHTML = 'Examples<span class="kite-link-icon">&#8615;</span>';
    }

    const docsLink = this.querySelector('kite-links.footer-links a.kite-link.docs');
    const kwargLink = this.querySelector('a.kwargs');
    const kwargSection = this.querySelector('section.kwargs');
    const editor = atom.workspace.getActiveTextEditor();
    const editorElement = atom.views.getView(editor);
    const kwargsTitle = this.querySelector('section.kwargs h4 span.title');
    const popularPatternsToggle = this.querySelector('span.popular-patterns-toggle');
    const popularPatternsTitle = this.querySelector('section.patterns h4 span.title');
    const popularPatternsSection = this.querySelector('section.patterns');
    this.subscriptions.add(new DisposableEvent(this, 'click', e => {
      editorElement && editorElement.focus();
    }));

    if (popularPatternsSection && popularPatternsToggle && popularPatternsTitle && footerLinks) {
      this.subscriptions.add(new DisposableEvent(popularPatternsTitle, 'click', e => {
        footerLinks.insertBefore(popularPatternsLink, docsLink);
        popularPatternsSection.classList.toggle('visible');
        atom.config.set('kite.signaturePopularPatternsVisible', !atom.config.get('kite.signaturePopularPatternsVisible'));
      }));
    }

    if (popularPatternsLink && popularPatternsSection && footerLinks) {
      this.subscriptions.add(new DisposableEvent(popularPatternsLink, 'click', e => {
        footerLinks.removeChild(popularPatternsLink);
        popularPatternsSection.classList.toggle('visible');
        atom.config.set('kite.signaturePopularPatternsVisible', !atom.config.get('kite.signaturePopularPatternsVisible'));
      }));
    }

    if (kwargSection && kwargsTitle) {
      this.subscriptions.add(new DisposableEvent(kwargsTitle, 'click', e => {
        kwargSection.classList.toggle('visible');
        atom.config.set('kite.signatureKwargsVisible', !atom.config.get('kite.signatureKwargsVisible'));
      }));
    }

    if (kwargLink && kwargSection) {
      this.subscriptions.add(new DisposableEvent(kwargLink, 'click', e => {
        kwargSection.classList.toggle('visible');
        atom.config.set('kite.signatureKwargsVisible', !atom.config.get('kite.signatureKwargsVisible'));
      }));

      if (detailGet(call, 'in_kwargs')) {
        setTimeout(() => {
          const dl = kwargSection.querySelector('dl');
          const dt = kwargSection.querySelector('dt.highlight');

          if (dt) {
            dl.scrollTop = dt.offsetTop - dt.offsetHeight;
          }
        }, 100);
      }
    }

    if (kwargLinks) {
      this.subscriptions.add(kwargLinks.onDidClickMoreLink(() => {
        this.listElement.model.hide();
      }));
    } // if (this.parentNode) {
    //   this.checkWidth();
    // }

  }

  checkWidth() {
    const name = this.querySelector('.name');

    if (name && name.scrollWidth > name.offsetWidth) {
      const missingWidth = name.scrollWidth - name.offsetWidth;
      const signature = name.querySelector('.signature');
      const parameters = [].slice.call(name.querySelectorAll('.parameter'));
      const half = name.scrollWidth;
      const parameter = parameters[this.currentIndex];
      const middle = parameter ? parameter.offsetLeft - parameter.offsetWidth / 2 : half + 1;
      const removed = [];
      let gainedWidth = 0;
      const currentIndex = this.currentIndex;

      if (!signature) {
        return;
      }

      if (middle > half) {
        truncateLeft();

        if (gainedWidth < missingWidth) {
          truncateRight();
        }
      } else {
        truncateRight();

        if (gainedWidth < missingWidth) {
          truncateLeft();
        }
      }

      function truncateLeft() {
        const ellipsis = document.createElement('span');
        ellipsis.className = 'parameter ellipsis';
        ellipsis.textContent = '…0 more, ';
        signature.insertBefore(ellipsis, signature.firstElementChild);

        for (let i = 0; i < currentIndex; i++) {
          const parameter = parameters[i];
          removed.push(parameter);
          gainedWidth += parameter.offsetWidth;

          if (gainedWidth - ellipsis.offsetWidth >= missingWidth) {
            gainedWidth -= ellipsis.offsetWidth;
            removed.forEach(el => el.remove());
            ellipsis.textContent = `…${removed.length} more, `;
            removed.length = 0;
            return;
          }
        }

        if (removed.length) {
          gainedWidth -= ellipsis.offsetWidth;
          removed.forEach(el => el.remove());
          ellipsis.textContent = `…${removed.length} more, `;
          removed.length = 0;
        } else {
          ellipsis.remove();
        }
      }

      function truncateRight() {
        const ellipsis = document.createElement('span');
        ellipsis.className = 'parameter ellipsis';
        ellipsis.textContent = '0 more…';
        signature.appendChild(ellipsis);

        for (let i = parameters.length - 1; i > currentIndex; i--) {
          const parameter = parameters[i];
          removed.push(parameter);
          gainedWidth += parameter.offsetWidth;

          if (gainedWidth - ellipsis.offsetWidth >= missingWidth) {
            gainedWidth -= ellipsis.offsetWidth;
            removed.forEach(el => el.remove());
            ellipsis.textContent = `${removed.length} more…`;
            removed.length = 0;
            return;
          }
        }

        if (removed.length) {
          gainedWidth -= ellipsis.offsetWidth;
          removed.forEach(el => el.remove());
          ellipsis.textContent = `${removed.length} more…`;
          removed.length = 0;
        } else {
          ellipsis.remove();
        }
      }
    }
  }

}

module.exports = KiteSignature.initClass();

/***/ })
/******/ ]);
